{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/filebrowser/filebrowser.component.ts","./src/app/core/filebrowser/filebrowser.component.html","./src/app/core/keycodes.directive.ts","./src/app/core/login/login.component.ts","./src/app/core/login/login.component.html","./src/app/core/modal/about/about.modal.ts","./src/app/core/modal/about/about.modal.html","./src/app/core/modal/blankdraft/blankdraft.modal.ts","./src/app/core/modal/blankdraft/blankdraft.modal.html","./src/app/core/modal/examples/examples.component.ts","./src/app/core/modal/examples/examples.component.html","./src/app/core/modal/init/init.modal.ts","./src/app/core/modal/init/init.modal.html","./src/app/core/modal/loadfile/loadfile.component.ts","./src/app/core/modal/loadfile/loadfile.component.html","./src/app/core/modal/loom/loom.modal.ts","./src/app/core/modal/loom/loom.modal.html","./src/app/core/modal/material/material.modal.ts","./src/app/core/modal/material/material.modal.html","./src/app/core/model/cell.ts","./src/app/core/model/defaults.ts","./src/app/core/model/drafts.ts","./src/app/core/model/looms.ts","./src/app/core/model/material.ts","./src/app/core/model/operations.ts","./src/app/core/model/sequence.ts","./src/app/core/model/system.ts","./src/app/core/model/util.ts","./src/app/core/model/yarnsimulation.ts","./src/app/core/operations/applymaterialsandsystems/applymaterialsandsystems.ts","./src/app/core/operations/assignsystems/assignsystems.ts","./src/app/core/operations/atop/atop.ts","./src/app/core/operations/bindwarpfloats/bindwarpfloats.ts","./src/app/core/operations/bindweftfloats/bindweftfloats.ts","./src/app/core/operations/bwimagemap/bwimagemap.ts","./src/app/core/operations/chaos/chaos.ts","./src/app/core/operations/clear/clear.ts","./src/app/core/operations/combinatorics/combinatorics.ts","./src/app/core/operations/complex_twill/complex_twill.ts","./src/app/core/operations/crop/crop.ts","./src/app/core/operations/cutout/cutout.ts","./src/app/core/operations/deinterlace/deinterlace.ts","./src/app/core/operations/diff/diff.ts","./src/app/core/operations/directdrawdown/directdrawdown.ts","./src/app/core/operations/drawdown/drawdown.ts","./src/app/core/operations/erase_blank/erase_blank.ts","./src/app/core/operations/fill/fill.ts","./src/app/core/operations/flip/flip.ts","./src/app/core/operations/flipx/flipx.ts","./src/app/core/operations/flipy/flipy.ts","./src/app/core/operations/imagemap/imagemap.ts","./src/app/core/operations/interlace/interlace.ts","./src/app/core/operations/interlace_warps/interlace_warps.ts","./src/app/core/operations/invert/invert.ts","./src/app/core/operations/joinleft/joinleft.ts","./src/app/core/operations/jointop/jointop.ts","./src/app/core/operations/layer/layer.ts","./src/app/core/operations/layer_notation/layer_notation.ts","./src/app/core/operations/makedirectloom/makedirectloom.ts","./src/app/core/operations/makeloom/makeloom.ts","./src/app/core/operations/makesymmetric/makesymmetric.ts","./src/app/core/operations/margin/margin.ts","./src/app/core/operations/mask/mask.ts","./src/app/core/operations/overlay/overlay.ts","./src/app/core/operations/overlay_multiple/overlay_multiple.ts","./src/app/core/operations/random/random.ts","./src/app/core/operations/rect/rect.ts","./src/app/core/operations/resize/resize.ts","./src/app/core/operations/rotate/rotate.ts","./src/app/core/operations/samplelength/samplelength.ts","./src/app/core/operations/samplewidth/samplewidth.ts","./src/app/core/operations/satin/satin.ts","./src/app/core/operations/satinish/satinish.ts","./src/app/core/operations/sawtooth/sawtooth.ts","./src/app/core/operations/selvedge/selvedge.ts","./src/app/core/operations/set/set.ts","./src/app/core/operations/shaded_satin/shaded_satin.ts","./src/app/core/operations/shift/shift.ts","./src/app/core/operations/shiftx/shiftx.ts","./src/app/core/operations/shifty/shifty.ts","./src/app/core/operations/sinewave/sineweave.ts","./src/app/core/operations/slope/slope.ts","./src/app/core/operations/spliceinwarps/spliceinwarps.ts","./src/app/core/operations/spliceinwefts/spliceinwefts.ts","./src/app/core/operations/square_waffle/square_waffle.ts","./src/app/core/operations/stretch/stretch.ts","./src/app/core/operations/system_notation/system_notation.ts","./src/app/core/operations/tabby/tabby.ts","./src/app/core/operations/tile/tile.ts","./src/app/core/operations/trim/trim.ts","./src/app/core/operations/twill/twill.ts","./src/app/core/operations/undulatewarps/undulatewarps.ts","./src/app/core/operations/undulatewefts/undulatewefts.ts","./src/app/core/operations/undulating_twill/undulating_twill.ts","./src/app/core/operations/unset/unset.ts","./src/app/core/operations/waffleish/waffleish.ts","./src/app/core/operations/warp_profile/warp_profile.ts","./src/app/core/operations/weft_profile/weft_profile.ts","./src/app/core/profile/profile.component.ts","./src/app/core/profile/profile.component.html","./src/app/core/provider/auth.service.ts","./src/app/core/provider/designmodes.service.ts","./src/app/core/provider/exampleservice.service.ts","./src/app/core/provider/file.service.ts","./src/app/core/provider/filesystem.service.ts","./src/app/core/provider/image.service.ts","./src/app/core/provider/materials.service.ts","./src/app/core/provider/notes.service.ts","./src/app/core/provider/operation-descriptions.service.ts","./src/app/core/provider/operation.service.ts","./src/app/core/provider/patternfinder.service.ts","./src/app/core/provider/simulation.service.ts","./src/app/core/provider/state.service.ts","./src/app/core/provider/systems.service.ts","./src/app/core/provider/tree.service.ts","./src/app/core/provider/upload.service.ts","./src/app/core/provider/vae.service.ts","./src/app/core/provider/version.service.ts","./src/app/core/provider/workspace.service.ts","./src/app/core/signup/signup.component.ts","./src/app/core/signup/signup.component.html","./src/app/core/topbar/topbar.component.ts","./src/app/core/topbar/topbar.component.html","./src/app/core/uploads/upload-form/upload-form.component.ts","./src/app/core/uploads/upload-form/upload-form.component.html","./src/app/draftdetail/actions/actions.component.ts","./src/app/draftdetail/actions/actions.component.html","./src/app/draftdetail/crosssection/crosssection.component.ts","./src/app/draftdetail/crosssection/crosssection.component.html","./src/app/draftdetail/draftdetail.component.ts","./src/app/draftdetail/draftdetail.component.html","./src/app/draftdetail/draftdetail.module.ts","./src/app/draftdetail/draftviewer/draftviewer.component.ts","./src/app/draftdetail/draftviewer/draftviewer.component.html","./src/app/draftdetail/draftviewer/selection/selection.component.ts","./src/app/draftdetail/draftviewer/selection/selection.component.html","./src/app/draftdetail/provider/render.service.ts","./src/app/draftdetail/sidebar/sidebar.component.ts","./src/app/draftdetail/sidebar/sidebar.component.html","./src/app/draftdetail/simulation/simulation.component.ts","./src/app/draftdetail/simulation/simulation.component.html","./src/app/draftdetail/weaverview/weaverview.component.ts","./src/app/draftdetail/weaverview/weaverview.component.html","./src/app/mixer/design/design.component.ts","./src/app/mixer/design/design.component.html","./src/app/mixer/mixer.component.ts","./src/app/mixer/mixer.component.html","./src/app/mixer/mixer.module.ts","./src/app/mixer/mixerview/mixerview.component.ts","./src/app/mixer/mixerview/mixerview.component.html","./src/app/mixer/modal/ophelp/ophelp.modal.ts","./src/app/mixer/modal/ophelp/ophelp.modal.html","./src/app/mixer/modal/ops/ops.component.ts","./src/app/mixer/modal/ops/ops.component.html","./src/app/mixer/palette/connection/connection.component.ts","./src/app/mixer/palette/connection/connection.component.html","./src/app/mixer/palette/image/image.component.ts","./src/app/mixer/palette/image/image.component.html","./src/app/mixer/palette/marquee/marquee.component.ts","./src/app/mixer/palette/note/note.component.ts","./src/app/mixer/palette/note/note.component.html","./src/app/mixer/palette/operation/inlet/inlet.component.ts","./src/app/mixer/palette/operation/inlet/inlet.component.html","./src/app/mixer/palette/operation/operation.component.ts","./src/app/mixer/palette/operation/operation.component.html","./src/app/mixer/palette/operation/parameter/parameter.component.ts","./src/app/mixer/palette/operation/parameter/parameter.component.html","./src/app/mixer/palette/palette.component.ts","./src/app/mixer/palette/palette.component.html","./src/app/mixer/palette/snackbar/snackbar.component.ts","./src/app/mixer/palette/snackbar/snackbar.component.html","./src/app/mixer/palette/subdraft/subdraft.component.ts","./src/app/mixer/palette/subdraft/subdraft.component.html","./src/app/mixer/provider/ink.service.ts","./src/app/mixer/provider/layers.service.ts","./src/app/mixer/provider/multiselect.service.ts","./src/app/mixer/provider/viewport.service.ts","./src/app/mixer/provider/zoom.service.ts","./src/app/mixer/quickop/quickop.component.ts","./src/app/mixer/quickop/quickop.component.html","./src/environments/environment.ts","./src/main.ts","ignored|/Users/ld/Documents/dev/AdaCAD/node_modules/seedrandom|crypto"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MixerComponent } from './mixer/mixer.component';\n\n\nconst routes: Routes = [\n   {\n     path: '',\n     component: MixerComponent,\n     children: []\n   },\n  {\n    path: '**',\n    component: MixerComponent,\n    children: []\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\n\nexport class AppComponent {\n  title = 'app';\n\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n\n<router-outlet></router-outlet>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { getAnalytics, provideAnalytics } from '@angular/fire/analytics';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { enableIndexedDbPersistence } from '@angular/fire/firestore';\n\nimport { getAuth, provideAuth } from '@angular/fire/auth';\nimport { getDatabase, provideDatabase } from '@angular/fire/database';\nimport { getFirestore, provideFirestore } from '@angular/fire/firestore';\nimport { getFunctions, provideFunctions } from '@angular/fire/functions';\nimport { getMessaging, provideMessaging } from '@angular/fire/messaging';\nimport { getPerformance, providePerformance } from '@angular/fire/performance';\nimport { getRemoteConfig, provideRemoteConfig } from '@angular/fire/remote-config';\nimport { getStorage, provideStorage } from '@angular/fire/storage';\nimport { BrowserModule, HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { MixerModule } from './mixer/mixer.module';\nimport { DraftDetailModule } from './draftdetail/draftdetail.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n    ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    CoreModule,\n    DraftDetailModule,\n    MixerModule,\n    BrowserAnimationsModule,\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideFirestore(() => getFirestore()),\n    provideAnalytics(() => getAnalytics()),\n    provideAuth(() => getAuth()),\n    provideDatabase(() => getDatabase()),\n    provideFirestore(() => getFirestore()),\n    provideFunctions(() => getFunctions()),\n    provideMessaging(() => getMessaging()),\n    providePerformance(() => getPerformance()),\n    provideRemoteConfig(() => getRemoteConfig()),\n    provideStorage(() => getStorage())],\n    \n  providers: [{ \n    provide: HAMMER_GESTURE_CONFIG, \n    useClass: HammerGestureConfig, \n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n  \n}\n","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { LoginComponent } from './login/login.component';\nimport { AboutModal } from './modal/about/about.modal';\nimport { InitModal } from './modal/init/init.modal';\nimport { LoomModal } from './modal/loom/loom.modal';\nimport { MaterialModal } from './modal/material/material.modal';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AuthService } from './provider/auth.service';\nimport { FileService } from './provider/file.service';\nimport { PatternfinderService } from './provider/patternfinder.service';\nimport { VaeService } from './provider/vae.service';\nimport { SignupComponent } from './signup/signup.component';\nimport { TopbarComponent } from './topbar/topbar.component';\nimport { UploadFormComponent } from './uploads/upload-form/upload-form.component';\nimport { UploadService } from './provider/upload.service';\nimport { BlankdraftModal } from './modal/blankdraft/blankdraft.modal';\nimport { ExamplesComponent } from './modal/examples/examples.component';\nimport { LoadfileComponent } from './modal/loadfile/loadfile.component';\nimport { FilebrowserComponent } from './filebrowser/filebrowser.component';\nimport { KeycodesDirective } from './keycodes.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatSlideToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        ColorPickerModule,\n        MatChipsModule,\n        MatSnackBarModule,\n        ScrollingModule,\n        DragDropModule,\n        MatProgressBarModule,\n        MatBadgeModule\n    ],\n    declarations: [\n        UploadFormComponent,\n        TopbarComponent,\n        InitModal,\n        AboutModal,\n        MaterialModal,\n        LoomModal,\n        LoginComponent,\n        SignupComponent,\n        ProfileComponent,\n        BlankdraftModal,\n        ExamplesComponent,\n        LoadfileComponent,\n        FilebrowserComponent,\n        KeycodesDirective\n    ],\n    providers: [\n        UploadService,\n        FileService,\n        VaeService,\n        PatternfinderService,\n        AuthService\n        ],\n    exports: [\n        CommonModule,\n        FormsModule,\n        BrowserModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatSlideToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        ColorPickerModule,\n        MatProgressBarModule,\n        MatChipsModule,\n        MatSnackBarModule,\n        ScrollingModule,\n        MatBadgeModule,\n        DragDropModule,\n        UploadFormComponent,\n        TopbarComponent,\n        InitModal,\n        AboutModal,\n        MaterialModal,\n        LoomModal,\n        FilebrowserComponent,\n        ExamplesComponent,\n        KeycodesDirective\n        ]\n})\nexport class CoreModule { }\n","import { Component, EventEmitter, OnInit, Optional, Output,ViewEncapsulation } from '@angular/core';\nimport { AuthService } from '../provider/auth.service';\nimport { FilesystemService } from '../provider/filesystem.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoginComponent } from '../login/login.component';\nimport { WorkspaceService } from '../provider/workspace.service';\nimport { LoadfileComponent } from '../modal/loadfile/loadfile.component';\n\n@Component({\n  selector: 'app-filebrowser',\n  templateUrl: './filebrowser.component.html',\n  styleUrls: ['./filebrowser.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n\n})\nexport class FilebrowserComponent implements OnInit {\n\n  @Output() onLoadNewFile: any = new EventEmitter();\n  @Output() onClearScreen: any = new EventEmitter();\n  @Output() onCurrentFileDeleted: any = new EventEmitter();\n  @Output() onSave: any = new EventEmitter();\n  @Output() onLoadFromDB: any = new EventEmitter();\n\n  \n  isLoggedIn = false;\n  filelist = [];\n  rename_mode = false;\n  last_saved_time = '--';\n\n  constructor(\n    public files: FilesystemService, \n    public auth: AuthService,\n    public ws: WorkspaceService,\n    private dialog: MatDialog) { \n    \n  \n    this.filelist = this.files.file_tree;\n\n      this.files.file_tree_change$.subscribe(data => {\n        \n        this.updateFileData(data);\n      }\n    );\n\n    this.files.file_saved_change$.subscribe(data => {\n      this.last_saved_time =new Date(data).toUTCString();\n    });\n\n\n\n  \n   \n\n  }\n\n  ngOnInit(): void {\n    \n    \n    \n  }\n\n  updateFileData(data: Array<any>){\n    function compareFn(a, b) {\n      if (a.meta.timestamp > b.meta.timestamp) {\n        return -1;\n      }\n      if (a.meta.timestamp < b.meta.timestamp) {\n        return 1;\n      }\n      // a must be equal to b\n      return 0;\n    }\n\n    const timesorted = data.sort(compareFn);\n    // const favs = timesorted.filter(el => this.ws.isFavorite(el.id) || this.files.current_file_id == el.id);\n    // const other = timesorted.filter(el => !this.ws.isFavorite(el.id) && this.files.current_file_id !== el.id);\n\n    //this.filelist = favs.concat(other);\n    this.filelist = timesorted;\n\n  }\n\n\n  openFile(id: number){\n    this.onLoadFromDB.emit(id);\n  }\n\n  toggleFavorite(id: number){\n      this.ws.toggleFavorite(id);\n      this.updateFileData(this.filelist)\n  }\n\n  duplicate(){\n    \n  }\n\n\n\n  rename(){\n    if(this.rename_mode === true){\n      this.files.renameFile(this.files.current_file_id, this.files.current_file_name);\n      this.files.updateDescription(this.files.current_file_id, this.files.current_file_desc);\n      this.rename_mode = false;\n    }else{\n      this.rename_mode = true;\n    } \n\n  }\n\n  remove(fileid: number){\n    this.files.removeFile(fileid);\n    if(fileid === this.files.current_file_id){\n      this.onCurrentFileDeleted.emit();\n    }  \n\n\n\n  }\n\n\n  public saveAsBmp() {\n    var obj: any = {\n      type: \"bmp\"\n    }\n    console.log(obj);\n  \tthis.onSave.emit(obj);\n  }\n\n  public saveAsAda() {\n    var obj: any = {\n      type: \"ada\"\n    }\n    console.log(obj);\n    this.onSave.emit(obj);\n  }\n\n  public saveAsWif() {\n    var obj: any = {\n      type: \"wif\"\n    }\n    this.onSave.emit(obj);\n  }\n\n  public saveAsPrint() {\n    var obj: any = {\n      type: \"jpg\"\n    }\n    this.onSave.emit(obj);\n  }\n\n\n   //need to handle this and load the file somehow\n   openNewFileDialog() {\n\n\n    const dialogRef = this.dialog.open(LoadfileComponent, {\n      data: {\n        multiple: false,\n        accepts: '.ada',\n        type: 'ada',\n        title: 'Select an AdaCAD (.ada) file to Import'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(loadResponse => {\n      if(loadResponse !== undefined) this.onLoadNewFile.emit(loadResponse);\n\n   });\n  }\n\n\n\nopenLoginDialog() {\n    const dialogRef = this.dialog.open(LoginComponent, {\n      width: '600px',\n    });\n}\n\nonNewWorkspace(){\n  this.onClearScreen.emit();\n}\n\n\n\n\n  \n\n}\n","<div class=\"filebrowser\">\n\n\n\n      <!-- files-->\n\n          <button \n          mat-stroked-button color=\"primary\"  \n          (click)=\"onNewWorkspace()\">\n            <i class=\"fa-regular fa-plus\"></i>\n            <span *ngIf=\"auth.isLoggedIn\"> Create Blank Workspace</span>\n            <span *ngIf=\"!auth.isLoggedIn\"> Clear Workspace</span>\n          </button>\n      \n        <!-- <mat-menu #clearScreen mat-raised-button>\n          <a  (click)=\"onNewWorkspace()\" mat-menu-item> Opening a new workspace will clear the current workspace. Are you sure you want to do this?</a>\n        </mat-menu> -->\n\n          <button \n          mat-stroked-button color=\"primary\"  \n          (click)=\"openNewFileDialog()\"\n          ><i class=\"fa-regular fa-folder-open\"></i> Import .ada Workspace</button>\n\n    \n\n          <button\n          mat-stroked-button color=\"primary\"  \n          [matMenuTriggerFor]=\"downloadDropdown\"\n          ><i class=\"fa-solid fa-download\"></i> Download Workspace\n          </button>\n\n          <mat-menu #downloadDropdown mat-raised-button>\n            <a  (click)=\"saveAsAda()\" mat-menu-item> as AdaCAD workspace file</a>\n            <a  (click)=\"saveAsBmp()\" mat-menu-item> export all visible drafts as bitmaps</a>\n            <!-- <a  (click)=\"saveAsWif()\" mat-menu-item> export all visible drafts as .WIF files</a> -->\n          </mat-menu>\n        \n\n        <mat-divider></mat-divider>\n        <h2>Your Saved AdaCAD Files</h2>\n\n        <div *ngIf=\"!auth.isLoggedIn\">\n          <button mat-flat-button  color=\"primary\" matTooltip=\"login\" (click) = \"openLoginDialog()\"><i class=\"fa fa-sign-in\"></i> Log in</button> to load and save files online\n        </div>\n      \n\n\n      <ng-container *ngIf=\"!files.connected\">\n        Saved files cannot be accessed because you are offline.\n      </ng-container>\n\n        <ng-container *ngIf=\"filelist !== undefined && auth.isLoggedIn && files.connected\">\n\n        <div  *ngFor=\"let file of filelist\">\n          <ng-container *ngIf=\"file !== null && file.meta !== null\">\n\n\n            <div class=\"file-item-block\" [class.current]=\"file.id === this.files.current_file_id\">\n           \n              <div class=\"details\">\n\n    \n                <div  *ngIf=\"file.id == this.files.current_file_id && rename_mode\">\n                <mat-form-field class=\"example-full-width\" class=\"filename\">\n                  <mat-label>Rename File</mat-label>\n                  <div><input matInput color=\"accent\" [(ngModel)]=\"files.current_file_name\" placeholder=\"Filename\" (change)=\"rename()\"> </div>\n                </mat-form-field>\n\n                <mat-form-field class=\"example-full-width\" >\n                  <mat-label>Description</mat-label>\n                  <textarea matInput placeholder=\"Ex. this file creates...\"  [(ngModel)]=\"files.current_file_desc\"></textarea>\n                </mat-form-field>\n                <button \n                mat-raised-button\n                color=\"accent\"\n                (click) = \"rename()\">\n\n        \n                 Save\n               \n                </button>\n               \n              </div>\n\n              \n\n                <button *ngIf=\"(file.id == this.files.current_file_id && !rename_mode) || file.id !== this.files.current_file_id\" \n                mat-button \n                \n                [class.primary]=\"file.id == this.files.current_file_id\" \n                (click) = openFile(file.id)\n                class=\"file_name\">\n\n                 {{file.meta.name}}\n               \n                </button>\n\n                <div *ngIf=\"file.id != this.files.current_file_id\"  class=\"timestamp\">last viewed on: {{file.meta.date}} </div>\n\n\n                <div *ngIf=\"(file.id == this.files.current_file_id && !rename_mode)\"  class=\"timestamp\">last saved at: {{last_saved_time}} </div>\n\n\n              </div>\n\n              <div class=\"more\"> \n                <button *ngIf=\"file.id === this.files.current_file_id\"\n                mat-icon-button \n                matListItemIcon\n                matTooltip=\"Download the current AdaCAD file\"\n                [matMenuTriggerFor]=\"downloadDropdown\"\n                ><i class=\"fa-solid fa-download\"></i>\n                </button>\n\n                <button *ngIf=\"file.id === this.files.current_file_id\"\n                mat-icon-button \n                matListItemIcon\n                matTooltip=\"rename this file\"\n                (click)=\"rename()\"\n                ><i class=\"fas fa-edit\"></i>\n              </button>\n\n              \n \n                <!-- <button  \n                mat-icon-button \n                matListItemIcon\n                (click)=\"duplicate()\"\n                >            \n                <i class=\"fa-solid fa-copy\"></i>\n    \n                </button> -->\n \n            \n      \n           \n\n\n  \n\n\n       \n           \n             <button \n             mat-icon-button \n             [matMenuTriggerFor]=\"deleteConfirm\"\n             >\n             <i class=\"fa-solid fa-trash\"></i>\n              </button>\n\n              <mat-menu #deleteConfirm>\n                <button \n                mat-icon-button \n                matListItemIcon\n                (click) = \"remove(file.id)\"\n                >\n                 Are you sure?\n                 </button>\n              </mat-menu>\n            \n              \n              </div>\n       \n\n\n \n  \n               \n        \n              </div>\n       </ng-container>\n\n       \n      </div>\n    </ng-container>\n\n    <!-- <mat-divider></mat-divider> -->\n    <!-- <h2>Publicly Shared Files</h2> -->\n\n      \n     \n     \n\n      <!-- <div mat-line>filder name | <i class=\"fa-solid fa-folder\"></i><i class=\"fa-solid fa-folder\"></i></div> -->\n  \n\n    <!-- <mat-list-item *ngFor=\"let folder of folders\">\n      <mat-icon mat-list-icon>folder</mat-icon>\n      <div mat-line>{{folder.name}}</div>\n      <div mat-line> {{folder.updated | date}} </div>\n    </mat-list-item> -->\n\n\n\n</div>","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { RenderService } from '../draftdetail/provider/render.service';\nimport { ZoomService } from '../mixer/provider/zoom.service';\nimport { FileService } from './provider/file.service';\nimport { StateService } from './provider/state.service';\n\n@Directive({\n  selector: 'appKeycodes'\n})\nexport class KeycodesDirective {\n\n  mixer_has_focus = true;\n\n  @Output() onUndo: any = new EventEmitter();\n  @Output() onRedo: any = new EventEmitter();\n  @Output() updateMixerView: any = new EventEmitter();\n  @Output() updateDetailView: any = new EventEmitter();\n  @Output() onCopySelections: any = new EventEmitter();\n  @Output() onPasteSelections: any = new EventEmitter();\n\n\n  constructor( \n    private zs: ZoomService, \n    private fs: FileService,\n    private ss: StateService,\n    private render: RenderService) { \n    }\n\n\n\n    /**\n     * Set a listern to keep track of the location that the user last clicked\n     * @param event \n     */\n    @HostListener('window:mousedown', ['$event'])\n    onMouseDown(event: MouseEvent) { \n      if((<HTMLElement>event.target).id == 'scrollable-container') this.mixer_has_focus = true;\n      if((<HTMLElement>event.target).id == 'draft-container') this.mixer_has_focus = false;\n\n    }\n  \n\n\n  \n\n  @HostListener('window:keydown', ['$event'])\n  private keyEventDetected(e) {\n\n  /**\n   * ZOOM IN \n   */\n    if(e.key ==\"=\" && e.metaKey){\n\n      if(!this.mixer_has_focus){\n        console.log(\"ZOOM IN ON RENDER\", e,  e.target);\n        this.render.zoomIn();\n        this.updateDetailView.emit();\n        return false;\n      }else{\n        console.log(\"ZOOM IN on MIXER\", e,  e.target)\n        const old_zoom = this.zs.zoom;\n        this.zs.zoomIn();\n        this.updateMixerView.emit(old_zoom);\n        return false;\n\n      }\n\n     \n    }\n  /**\n   *  ZOOM OUT \n   */\n    if(e.key ==\"-\" && e.metaKey){\n\n      if(!this.mixer_has_focus){\n        console.log(\"ZOOM IN ON RENDER\", e,  e.target);\n        this.render.zoomOut();\n        this.updateDetailView.emit();\n        return false;\n      }else{\n        console.log(\"ZOOM IN on MIXER\", e,  e.target)\n        const old_zoom = this.zs.zoom;\n        this.zs.zoomOut();\n        this.updateMixerView.emit(old_zoom);\n        return false;\n\n      }\n    }\n\n    \n  /**\n   * SAVE\n   */\n    if(e.key ==\"s\" && e.metaKey){\n      console.log(\"KEYDOWN S\")\n    this.fs.saver.ada(\n      'mixer', \n      true,\n      this.zs.zoom)\n      .then(so => {\n        this.ss.addMixerHistoryState(so);\n      });\n      e.preventDefault();\n    }\n\n\n    /**\n     * UNDO\n     */\n    if(e.key ==\"z\" && e.metaKey){\n    this.onUndo.emit();\n    }\n\n    /**\n     * REDO\n     */\n    if(e.key ==\"y\" && e.metaKey){\n    this.onRedo.emit();\n    }\n\n\n    if(e.key ==\"c\" && e.metaKey){\n      this.onCopySelections.emit();\n      }\n  \n    if(e.key ==\"v\" && e.metaKey){\n      this.onPasteSelections.emit();\n      }\n    \n   \n\n  // /**\n  //  * Sets selected area to clear\n  //  * @extends WeaveComponent\n  //  * @param {Event} delete key pressed\n  //  * @returns {void}\n  //  */\n\n  // @HostListener('window:keydown.e', ['$event'])\n  // private keyEventErase(e) {\n\n  //   this.dm.selectDesignMode('down','draw_modes');\n  //   this.weaveRef.unsetSelection();\n  // }\n\n  // /**\n  //  * Sets brush to point on key control + d.\n  //  * @extends WeaveComponent\n  //  * @param {Event} e - Press Control + d\n  //  * @returns {void}\n  //  */\n  // @HostListener('window:keydown.d', ['$event'])\n  // private keyEventPoint(e) {\n  //   this.dm.selectDesignMode('up','draw_modes');\n  //   this.weaveRef.unsetSelection();\n\n  // }\n\n  // /**\n  //  * Sets brush to select on key control + s\n  //  * @extends WeaveComponent\n  //  * @param {Event} e - Press Control + s\n  //  * @returns {void}\n  //  */\n  // @HostListener('window:keydown.s', ['$event'])\n  // private keyEventSelect(e) {\n  //   this.dm.selectDesignMode('select','design_modes');\n  //   this.weaveRef.unsetSelection();\n\n  // }\n\n  // /**\n  //  * Sets key control to invert on control + x\n  //  * @extends WeaveComponent\n  //  * @param {Event} e - Press Control + x\n  //  * @returns {void}\n  //  */\n  // @HostListener('window:keydown.x', ['$event'])\n  // private keyEventInvert(e) {\n\n  //   this.dm.selectDesignMode('toggle','draw_modes');\n  //   this.weaveRef.unsetSelection();\n\n  // }\n\n  // /**\n  //  * Sets key to copy \n  //  * @extends WeaveComponent\n  //  * @param {Event} e - Press Control + x\n  //  * @returns {void}\n  //  */\n  // // @HostListener('window:keydown.c', ['$event'])\n  // // private keyEventCopy(e) {\n  // //   this.onCopy();  \n  // // }\n\n  //   /**\n  //  * Sets key to copy \n  //  * @extends WeaveComponent\n  //  * @param {Event} e - Press Control + x\n  //  * @returns {void}\n  //  */\n  // @HostListener('window:keydown.p', ['$event'])\n  // private keyEventPaste(e) {\n  //   this.weaveRef.onPaste({});\n  // }\n\n\n  // }\n\n\n\n}\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../provider/auth.service';\nimport {UntypedFormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: UntypedFormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  emailFormControl = new UntypedFormControl('', [Validators.required, Validators.email]);\n  passwordFormControl = new UntypedFormControl('', [Validators.required]);\n  matcher = new MyErrorStateMatcher();\n\n  useemail: boolean = false;\n  error: string =\"\";\n\n  constructor(private router: Router, private auth: AuthService, private dialogRef: MatDialogRef<LoginComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: any) { }\n\n  ngOnInit() {\n  }\n\n\n  onEmailLogin(){\n    console.log(\"sign in with \", this.emailFormControl.value, this.passwordFormControl.value);\n\n    this.auth.emailSignIn(this.emailFormControl.value, this.passwordFormControl.value).then(res => {\n      if(res === ''){\n        this.dialogRef.close('Created and Logged In New User!');\n      }else{\n        console.log(\"res\", res);\n        switch(res){\n          case \"auth/user-not-found\" :\n            this.error = \"there is no user at that email address, did you mean to hit sign up?\"\n          break;\n          case \"auth/wrong-password\":\n            this.error = \"wrong password\"\n          break;\n          default:\n            this.error = res;\n        }\n      }\n    })\n  }\n\n  onEmailSignUp(){\n    console.log(\"sign up with \", this.emailFormControl.value, this.passwordFormControl.value);\n\n    this.auth.emailSignUp(this.emailFormControl.value, this.passwordFormControl.value).then(res => {\n      if(res === ''){\n        this.dialogRef.close('Created and Logged In New User!');\n      }else{\n        console.log(\"res\", res);\n        switch(res){\n          case \"auth/weak-password\" :\n            this.error = \"please use a stronger password (with symbols or numbers)\"\n          break;\n          case \"auth/email-already-in-use\":\n            this.error = \"this email is already associated with an existing account\"\n          break;\n          default:\n            this.error = res;\n        }\n      }\n    });\n  }\n\n\n\n  // onEmailSubmit() {\n    \n  // }\n\n  loginGoogle() {\n\n\n    this.auth.login().then(logged_in => {\n      this.dialogRef.close('Log In Via Google Success!');\n    }, not_logged_in => {\n      console.log(Error)\n    });\n\n  }\n\n  openEmailLogin(){\n    this.router.navigateByUrl('/email-login');\n  }\n\n  createNewEmailUser(){\n    this.router.navigateByUrl('/signup');\n  }\n\n  \n\n}\n","<div class=\"dialog-header\">\n  <h2 mat-dialog-title>Login to Save your File</h2>\n \n</div>\n<mat-dialog-content>\n<p>Creating a user account allows us to save the state of your design so that if the system crashes or closes for any reason you can recover your file when you reload AdaCAD.</p>\n  <div class=\"form-container\">\n    <div class=\"left\">\n    <button mat-raised-button (click)=\"loginGoogle()\" class=\"google\">Login or Signup With Google</button>\n\n    </div>\n    <div class=\"right\">\n      <p><i>We currently only support logging in through google, more methods coming soon</i></p>\n\n      <!--<button *ngIf=\"useemail == false\" mat-raised-button (click)=\"useemail = true\" class=\"google\">Login or Signup With Email</button>-->\n\n      <div *ngIf=\"useemail\">\n        <mat-form-field appearance=\"fill\" class=\"example-full-width\">\n          <mat-label>Email</mat-label>\n          <input matInput  [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\" placeholder=\"email\" name=\"email\" class=\"input-txt\" required>\n          <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n            Please enter a valid email address\n          </mat-error>\n          <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n            Email is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" class=\"example-full-width\">\n          <mat-label>Password</mat-label>\n          <input matInput [formControl]=\"passwordFormControl\" placeholder=\"password\" name=\"password\" class=\"input-txt\" required>\n        </mat-form-field>\n\n        <div class=\"error\" *ngIf=\"error !== ''\">{{this.error}}</div>\n\n\n        <div class=\"email_input\">\n          <button mat-raised-button type=\"submit\"  class=\"auth-btn\" (click)=\"onEmailSignUp()\">Sign Up</button>\n          <button mat-raised-button color=\"primary\" type=\"submit\"  class=\"auth-btn\" (click)=\"onEmailLogin()\">Log in</button>\n      </div>\n    </div>\n    </div>\n    </div>\n\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"start\">\n    <button mat-button mat-dialog-close>Continue Without an Account</button>\n    <button mat-button mat-dialog-close>Close</button>\n  </mat-dialog-actions>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { VersionService } from '../../provider/version.service';\n\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.modal.html',\n  styleUrls: ['./about.modal.scss']\n})\nexport class AboutModal implements OnInit {\n\n  version: string;\n\n  constructor(private vs: VersionService, private dialogRef: MatDialogRef<AboutModal>,\n             @Inject(MAT_DIALOG_DATA) private data: any) { \n               this.version = vs.currentVersion();\n             }\n\n  ngOnInit() {\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","<h2 mat-dialog-title>About</h2>\n\n<mat-dialog-content>\n\n    <div class=\"is-fullwidth\">\n  \t  <p class =\"mat-body\">You are using AdaCAD version {{version}}</p>\n  \t  <p>---</p>\n\n\n      <p class =\"mat-body\">AdaCAD is <a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\" target=\"_blank\">Free Software</a> created by the <a href=\"https://unstable.design\" target=\"_blank\">Unstable Design Lab</a> with support from  National Science Foundation Grants <a href=\"https://www.nsf.gov/awardsearch/showAward?AWD_ID=1755587&HistoricalAwards=false\" target=\"_blank\">#1755587</a> and <a href=\"https://www.nsf.gov/awardsearch/showAward?AWD_ID=1943109\" target=\"_blank\">#1943109</a></p>\n\n      <h3 class=\"mat-h3\">Your Feedback is Important!</h3>\n      <p class =\"mat-body\">We are excited to build this in order to explore the intersections between open source, computational design, weaving. Your feedback can help us make it better.  <a href=\"https://forms.gle/wWpdnikW8Vj8JcoWA\" target=\"_blank\">Tell us about your experience here</a></p>\n\n      <h3 class=\"mat-h3\">How To</h3>\n      <p class =\"mat-body\"> We have prepared documents describing our software and features as well as how-to videos. You can find all available documentation at this link: <a href=\"https://unstabledesign.github.io\" target=\"_blank\">unstabledesign.github.io</a> or you can view our <a href=\"https://www.youtube.com/channel/UCRK7RAt8Z7Nw1u3aJ0FyPuQ\" target=\"_blank\">youtube channel</a></p>\n\n      <h3 class=\"mat-h3\">Contribute</h3>\n      <p class =\"mat-body\"> If you are a developer and would like to contribute to this project you can do so via <a href=\"https://github.com/UnstableDesign/AdaCAD-weaver\" target=\"_blank\">GitHub</a> </p>\n\n      <h3 class=\"mat-h3\">Request Features via Github</h3>\n      <p class =\"mat-body\"> If you would like to request features, you may do so by submitting an \"issue\" or feature request via <a href=\"https://github.com/UnstableDesign/AdaCAD-weaver\" target=\"_blank\">GitHub</a> or write to us directly via email at unstabledesignlab@gmail.com</p>\n\n\n\n    </div>\n\n\n    \n</mat-dialog-content>\n<mat-dialog-actions>\n  <button class=\"mat-raised-button mat-primary\"(click)=\"close()\">Close</button>\n</mat-dialog-actions>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { compositionDependencies } from 'mathjs';\nimport { DesignMode, Draft, Loom, LoomSettings } from '../../model/datatypes';\nimport { initDraft, initDraftWithParams } from '../../model/drafts';\nimport { DesignmodesService } from '../../provider/designmodes.service';\nimport { FileService } from '../../provider/file.service';\n\n@Component({\n  selector: 'app-blankdraft',\n  templateUrl: './blankdraft.modal.html',\n  styleUrls: ['./blankdraft.modal.scss']\n})\nexport class BlankdraftModal implements OnInit {\n\n  loom_types: Array<DesignMode>  = [];\n  units: Array<DesignMode>  = [];\n  selected_unit:\"in\" | \"cm\" = \"in\";\n  loomtype: string = 'jacquard';\n  epi: number = 30;\n  valid:boolean = false; \n  wefts: number;\n  warps: number;\n  frame_num: number = 8;\n  treadle_num: number = 10;\n  \n  \n  @Output() onNewDraftCreated = new EventEmitter <any>(); \n\n\n\n  constructor(\n    private fls: FileService,\n    private dm: DesignmodesService, \n    private dialogRef: MatDialogRef<BlankdraftModal>, \n    @Inject(MAT_DIALOG_DATA) private data: any) {\n     \n      this.loom_types = this.dm.getOptionSet('loom_types');\n      this.units = this.dm.getOptionSet('density_units');\n\n  }\n\n  ngOnInit() {\n  }\n\n  close(): void {\n    console.log(\"CLOSE\")\n\n     this.createDraftAndClose();\n  }\n\n \n  onNoClick(): void {\n    console.log(\"NO CLICK\")\n     this.createDraftAndClose();\n\n  }\n\n  createDraftAndClose(){\n    const draft: Draft = initDraftWithParams({wefts: this.wefts, warps: this.warps});\n    let loom: Loom = null;\n\n    if(this.loomtype !== 'jacquard'){\n      loom = {\n        threading: [],\n        treadling: [],\n        tieup: []\n      }\n    }\n \n\n    const loom_settings: LoomSettings = {\n      treadles: this.treadle_num,\n      frames: this.frame_num,\n      type: this.loomtype,\n      epi: this.epi,\n      units: this.selected_unit\n\n    } \n\n    console.log(\"CREATED\", draft, loom, loom_settings)\n    this.dialogRef.close({draft, loom, loom_settings});\n\n  }\n\n  /**\n * called when the init form is complete \n *  */\n\n   save(f) {\n\n    console.log(\"SAVE CALLED\")\n    //if the INIT form parent is listening, it gets the entire form\n    this.onNewDraftCreated.emit(f);\n\n    //Otherwise, the dialog ref will just return the new draft to add to the palette\n    this.createDraftAndClose();\n\n\n  }\n\n\n\n\n}\n","\n  <form #initForm=\"ngForm\">\n\n\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Which type of loom are you designing for?</mat-label>\n        <mat-select [(value)]=\"loomtype\" [(ngModel)]=\"loomtype\" name=\"loomtype\">\n        <mat-option *ngFor=\"let type of loom_types\" [value]=\"type.value\">\n          {{type.viewValue}}\n        </mat-option>\n      </mat-select>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Warps</mat-label>\n      <input matInput  type=\"number\" placeholder=\"Number of Warp Ends\" value=\"20\" name=\"warps\" min=\"2\" step=\"1\" [(ngModel)]=\"warps\">\n      </mat-form-field>\n     <mat-form-field appearance=\"fill\">\n      <mat-label>Wefts</mat-label>\n\n      <input matInput  type=\"number\" placeholder=\"Number of Weft Picks\" value =\"20\" name=\"wefts\" min=\"2\" step=\"1\" [(ngModel)]=\"wefts\" >\n      </mat-form-field>\n\n\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Density Units</mat-label>\n        <mat-select [(value)]=\"units\" [(ngModel)]=\"selected_unit\" name=\"units\">\n        <mat-option *ngFor=\"let unit of units\" [value]=\"unit.value\">\n          {{unit.viewValue}}\n        </mat-option>\n      </mat-select>\n      </mat-form-field>\n\n     <mat-form-field appearance=\"fill\">\n      <mat-label>Weave Density</mat-label>\n      <input matInput  type =\"number\" placeholder=\"Weave Density\" name=\"epi\" value=\"10\" [(ngModel)]=\"epi\">\n     </mat-form-field> \n\n\n\n\n    <ng-container *ngIf=\"(loomtype == 'frame') || (loomtype == 'direct')\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Frames</mat-label>\n       <input matInput  type=\"number\" placeholder=\"Number of Shafts\" name=\"frame_num\" min=\"2\" step=\"1\" value=\"8\" [(ngModel)]=\"frame_num\">\n      </mat-form-field>\n    </ng-container>\n\n    <ng-container *ngIf=\"(loomtype == 'frame') \">\n   <mat-form-field appearance=\"fill\">\n    <mat-label>Treadles</mat-label>\n    <input matInput  type =\"number\" placeholder=\"Number of Treadles\" name=\"treadle_num\" [(ngModel)]=\"treadle_num\" min=\"2\" step=\"1\" value=\"10\">\n   </mat-form-field> \n  </ng-container>\n\n \n    <mat-dialog-actions>\n        <button class=\"mat-raised-button mat-primary\" (click)=\"save(initForm)\">Load</button>\n    </mat-dialog-actions>\n\n\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { getAnalytics, logEvent } from \"@angular/fire/analytics\";\nimport { AuthService } from '../../provider/auth.service';\nimport { FileService } from '../../provider/file.service';\nimport { ExampleserviceService } from '../../provider/exampleservice.service';\n\n@Component({\n  selector: 'app-examples',\n  templateUrl: './examples.component.html',\n  styleUrls: ['./examples.component.scss']\n})\nexport class ExamplesComponent {\n  @Output() onLoadExample = new EventEmitter <any>(); \n  local_examples: any;\n\n  constructor(\n    private fls: FileService,\n    private auth: AuthService,\n    private http: HttpClient,\n    public examples: ExampleserviceService) {\n      \n      this.local_examples = examples.getExamples();\n  }\n\n  loadExample(filename: string){\n    \n    const analytics = getAnalytics();\n\n    logEvent(analytics, 'onloadexample', {\n      items: [{ uid: this.auth.uid, name: filename }]\n    });\n\n    this.http.get('assets/examples/'+filename+\".ada\", {observe: 'response'}).subscribe((res) => {\n\n    this.fls.loader.ada(filename, -1, '', res.body)\n        .then(res => {\n          this.onLoadExample.emit(res);\n          return;\n        }\n        )\n        .catch(e => {\n          console.log(\"CAUGHT ERROR IN FILE LOADER \");\n        });\n    }); \n  }\n\n\n}\n\n","    <div class=\"preloaded_files\">\n\n      <mat-card *ngFor=\"let example of local_examples\">\n        <mat-card-title>{{example.title}}\n\n        </mat-card-title>\n       <img mat-card-image src=\"/assets/example_img/{{example.id}}.{{example.ext}}\" alt=\"Screenshot of the File Contents\">\n          <mat-card-content >\n            <p>\n              {{example.desc}}\n            </p>\n          </mat-card-content>\n        <mat-card-actions>\n          <button (click)=\"loadExample(example.id)\" mat-raised-button color=\"primary\"> Open </button>\n        </mat-card-actions>\n      </mat-card>\n\n      </div>\n     \n\n","import { Component, OnInit, Input, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { DesignmodesService } from '../../provider/designmodes.service';\nimport { HttpClient } from '@angular/common/http';\nimport {AuthService} from '../../provider/auth.service'\nimport {FileService} from '../../provider/file.service'\nimport { getAnalytics, logEvent } from \"@angular/fire/analytics\";\nimport { BlankdraftModal } from '../blankdraft/blankdraft.modal';\n\ninterface StartOptions {\n  value: string;\n  viewValue: string;\n  mixeronly: boolean;\n}\n\n\n@Component({\n  selector: 'app-init',\n  templateUrl: './init.modal.html',\n  styleUrls: ['./init.modal.scss']\n})\n\n\n\n\nexport class InitModal implements OnInit {\n\n\n  @ViewChild(BlankdraftModal, {static: true}) blankdraft;\n\n\n  opts: StartOptions[] = [\n      {value: 'example', viewValue: 'Browse Examples', mixeronly: true},\n      {value: 'ada', viewValue: 'Open an AdaCAD (.ada) File from you Computer', mixeronly: true},\n     // {value: 'bmp', viewValue: 'Two Color Image (.bmp, .jpg, .png) File', mixeronly: false},\n      // {value: 'wif', viewValue: 'WIF (.wif) File', mixeronly: false},   \n      {value: 'blank', viewValue: 'Open an Empty Workspace', mixeronly: false},\n      {value: 'new', viewValue: 'Create a Blank Draft', mixeronly: false}\n    ];\n\n  import_opts: StartOptions[] = [];\n\n  //form: any = {};\n  selected:string = null;\n  valid:boolean = false; \n  mixer_envt: any; \n  source: string; \n  // result: LoadResponse;\n\n  new_draft: boolean = false;\n\n\n  constructor(\n    private fls: FileService,\n    private auth: AuthService,\n    private dm: DesignmodesService, \n    private http: HttpClient,\n    private dialogRef: MatDialogRef<InitModal>, \n    @Inject(MAT_DIALOG_DATA) private data: any) {\n      this.source = data.source;\n      this.import_opts = this.opts.filter(el => !el.mixeronly)\n\n  }\n\n  ngOnInit() {\n    if(this.data.source === \"newdraft\") this.new_draft = true;\n  }\n\n\n  selectionMade(selection: any){\n    if(selection === 'blank') this.dialogRef.close({\n      data: null,\n      status: -1\n    });\n  }\n\n\n\n \n\n  close(): void {\n    this.dialogRef.close(null);\n  }\n\n \n  onNoClick(): void {\n    this.dialogRef.close(null);\n  }\n\n  newDraftCreated(f) {\n\n    console.log(\"SAVE CALLED\", f)\n\n    return this.fls.loader.form(f)\n        .then(\n          res => this.dialogRef.close(res)\n        );\n  }\n\n\n\n\n}\n","\n<div class=\"toprow\">\n  <button mat-icon-button (click)=\"close()\"><i class=\"fas fa-times\"></i></button>\n  \n  <h2 *ngIf=\"!new_draft\" mat-dialog-title>Open a Workspace</h2>\n  <h2 *ngIf=\"new_draft\" mat-dialog-title>Create a Blank Draft</h2>\n\n</div>\n\n\n<mat-dialog-content>\n\n\n\n  <form #initForm=\"ngForm\">\n\n\n\n\n      <ng-container *ngIf=\"!new_draft\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Where would you like to begin?</mat-label>\n        <mat-select [(value)]=\"selected\" (selectionChange)=\"selectionMade(selected)\">\n    \n        \n          <mat-option *ngFor=\"let opt of opts\" [value]=\"opt.value\">\n            {{opt.viewValue}}\n          </mat-option>\n        </mat-select>\n        </mat-form-field>\n      </ng-container>\n\n      <ng-container *ngIf=\"(selected == 'new') || new_draft\">\n        <app-blankdraft\n        (onNewDraftCreated)='newDraftCreated($event)'\n        ></app-blankdraft>\n       </ng-container>\n    \n    \n      \n    \n    <ng-container *ngIf=\"(selected == 'ada' || selected == 'bmp' || selected == 'wif' || selected == 'jpg')\">\n      <app-loadfile></app-loadfile>  \n\n    </ng-container>\n\n  <ng-container *ngIf=\"(selected == 'example')\">\n          <app-examples></app-examples>  \n  </ng-container>\n\n\n\n\n</form>\n\n\n</mat-dialog-content>\n\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FileService } from '../../provider/file.service';\n\n@Component({\n  selector: 'app-loadfile',\n  templateUrl: './loadfile.component.html',\n  styleUrls: ['./loadfile.component.scss']\n})\nexport class LoadfileComponent {\n \n \n  multiple: boolean = false;\n  accepts: string = '';\n  type: string = ''; //'single_image', 'ada', or 'bitmap_collection'\n  title: string = 'Select Files'\n  errorstring: string = '';\n\n  constructor(\n    private fls: FileService,\n    private dialogRef: MatDialogRef<LoadfileComponent>, \n    @Inject(MAT_DIALOG_DATA) private data: any) {\n\n      this.multiple = data.multiple;\n      this.accepts = data.accepts;\n      this.type = data.type;\n      if(data.title !== undefined) this.title = data.title;\n      \n  }\n\n  handleError(e: any){\n      this.errorstring = e;\n  }\n\n  /**\n   * this is called on upload of a file from any location\n   * @param e \n   */\n   async handleFile(e: any) : Promise<any>{\n    this.errorstring = '';\n    switch(e.type){\n      // case 'image': \n      // return this.fls.loader.bmp(e.name, e.data).then(\n      //   res => this.dialogRef.close(res)\n      // );\n      // case 'wif': \n      //   return this.fls.loader.wif(e.name, e.data)\n      //   .then(\n      //     res => this.dialogRef.close(res)\n      //   );\n\n      case 'bitmap_collection':\n        this.dialogRef.close(e.drafts)\n        break;\n\n      \n      case 'ada': \n      \n        return this.fls.loader.ada(e.name,-1, '', e.data)\n        .then(\n          res => this.dialogRef.close(res)\n        );\n\n        \n\n    }\n  \n  }\n\n\n}\n","\n<h2 mat-dialog-title>{{title}}</h2>\n\n<mat-dialog-content>\n<upload-form type=\"init\" [multiple]=\"multiple\"  [type]=\"type\" [accepts]=\"accepts\" (onData)=\"handleFile($event)\" \n(onError)=\"handleError($event)\" class=\"button\"></upload-form>\n\n<div class='err'>{{errorstring}}</div>\n\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"true\">Close (and don't upload)</button>\n  </mat-dialog-actions>\n\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { DesignmodesService } from '../../provider/designmodes.service';\nimport { DesignMode, Draft, LoomSettings, DraftNode, LoomUtil } from '../../model/datatypes';\nimport { NgForm } from '@angular/forms';\nimport { WorkspaceService } from '../../provider/workspace.service';\nimport { deleteDrawdownCol, deleteDrawdownRow, deleteMappingCol, deleteMappingRow, flipDraft, insertDrawdownCol, insertDrawdownRow, insertMappingCol, insertMappingRow, warps, wefts } from '../../model/drafts';\nimport { flipLoom, generateDirectTieup, getLoomUtilByType, isFrame } from '../../model/looms';\nimport { TreeService } from '../../provider/tree.service';\nimport utilInstance from '../../model/util';\n\n\n@Component({\n  selector: 'app-loom-modal',\n  templateUrl: './loom.modal.html',\n  styleUrls: ['./loom.modal.scss']\n})\nexport class LoomModal implements OnInit {\n\n\n  @Output() localLoomNeedsRedraw: any = new EventEmitter();\n  @Output() onGlobalLoomChange: any = new EventEmitter();\n  \n\n  id: number;\n  // draft: Draft;\n  // loom:Loom;\n  // loom_settings:LoomSettings;\n  epi: number = 10;\n  warps:number  = 100;\n  wefts:number = 100;\n  units:string = 'cm';\n  frames:number =  8;\n  treadles:number = 10;\n  loomtype:string = \"frame\";\n  loomtypes:Array<DesignMode>  = [];\n  density_units:Array<DesignMode> = [];\n  warp_locked:boolean = false;\n  width:number = 0; \n  type: string = 'local';\n  origin_options: any = null;\n  selected_origin: number = 0;\n\n  constructor(\n             private ws: WorkspaceService,\n             private dm: DesignmodesService,\n             private tree: TreeService,\n             private dialogRef: MatDialogRef<LoomModal>,\n             @Inject(MAT_DIALOG_DATA) public data: any) {\n\n\n     this.type = data.type;\n      this.id = data.id;\n      this.selected_origin = this.ws.selected_origin_option;\n\n     if(this.type === 'local'){\n      const draft = this.tree.getDraft(this.id);\n      const loom_settings  = this.tree.getLoomSettings(this.id);\n      this.warps = warps(draft.drawdown);\n      this.wefts = wefts(draft.drawdown);\n      this.epi = loom_settings.epi;\n      this.units = loom_settings.units;\n      this.frames = loom_settings.frames;\n      this.treadles = loom_settings.treadles;\n      this.loomtype = loom_settings.type;\n     }else{\n      this.origin_options = this.ws.getOriginOptions();\n      this.epi = ws.epi;\n      this.units = ws.units;\n      this.frames = ws.min_frames;\n      this.treadles = ws.min_treadles;\n      this.loomtype = ws.type;\n     }\n    \n    \n\n     this.width = (this.units =='cm') ? this.warps / this.epi * 10 : this.warps / this.epi;\n\n     this.loomtypes = dm.getOptionSet('loom_types');\n     this.density_units = dm.getOptionSet('density_units');\n\n\n  }\n\n  ngOnInit() {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  close() {\n    this.dialogRef.close(null);\n  }\n\n\n\n\n  updateMinTreadles(f: NgForm){\n    //validate the input\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    const loom = this.tree.getLoom(this.id);\n\n    if(!f.value.treadles){\n      f.value.treadles = 2; \n      this.treadles = f.value.treadles;\n    } \n\n    f.value.treadles = Math.ceil(f.value.treadles);\n   \n    if(this.type == \"global\"){\n      this.ws.min_treadles= f.value.treadles;\n    } else{\n      loom_settings.treadles = f.value.treadles;\n\n      if(loom_settings.type == 'direct'){\n        this.frames = f.value.treadles;\n        this.treadles = f.value.treadles;\n        loom_settings.frames = this.frames;\n        loom_settings.treadles = this.treadles;\n        loom.tieup = generateDirectTieup(f.value.treadles);\n        this.tree.setLoom(this.id, loom);\n\n      }\n\n      this.tree.setLoomSettings(this.id, loom_settings);\n\n      this.localLoomNeedsRedraw.emit();\n    }\n\n  }\n\n  updateMinFrames(f: NgForm){\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    const loom = this.tree.getLoom(this.id);\n\n    if(!f.value.frames){\n      f.value.frames = 2; \n      this.frames = f.value.frames;\n\n    }\n     \n\n    f.value.frames = Math.ceil(f.value.frames);\n    \n    if(this.type == \"global\"){\n      this.ws.min_frames = f.value.frames;\n      this.dm.selectDesignMode(this.type, 'loom_settings');\n    }else{\n      loom_settings.frames = f.value.frames;\n\n      if(loom_settings.type == 'direct'){\n        this.frames = f.value.frames;\n        this.treadles = f.value.frames;\n        loom_settings.frames = this.frames;\n        loom_settings.treadles = this.treadles;\n        loom.tieup = generateDirectTieup(f.value.frames);\n        this.tree.setLoom(this.id, loom);\n      }\n\n      this.tree.setLoomSettings(this.id, loom_settings);      \n      this.localLoomNeedsRedraw.emit();\n\n    }   \n  }\n\n\n  /**\n   * when the origin changes, all drafts on the canavs should be modified to the new position\n   * origin changes can ONLY happen on globals\n   * @param e \n   */\n  originChange(e:any){\n\n\n    const flips = utilInstance.getFlips(this.ws.selected_origin_option, this.selected_origin);\n    this.ws.selected_origin_option = this.selected_origin;\n    \n    const dn: Array<DraftNode> = this.tree.getDraftNodes();\n    const data = dn.map(node => {\n      return {\n      draft: node.draft, \n      loom: node.loom, \n      horiz: flips.horiz,\n      vert: flips.vert}\n    });\n\n    // dn.forEach(node => {\n    //  if(node.loom !== null) console.log(node.loom.treadling)\n    // })\n\n    const draft_fns = data.map(el => flipDraft(el.draft, el.horiz, el.vert));\n\n    return Promise.all(draft_fns)\n    .then(res => {\n      for(let i = 0; i < dn.length; i++){\n        dn[i].draft = <Draft>{\n          id: res[i].id,\n          gen_name: res[i].gen_name,\n          ud_name: res[i].ud_name,\n          drawdown: res[i].drawdown,\n          rowShuttleMapping: res[i].rowShuttleMapping,\n          rowSystemMapping: res[i].rowSystemMapping,\n          colShuttleMapping: res[i].colShuttleMapping,\n          colSystemMapping: res[i].colSystemMapping\n        };\n      }\n      const loom_fns = data.map(el => flipLoom(el.loom, el.horiz, el.vert))\n      return Promise.all(loom_fns)\n    .then(res => {\n      for(let i = 0; i < dn.length; i++){\n        if(res[i] !== null){\n          dn[i].loom = {\n            threading: res[i].threading.slice(),\n            tieup: res[i].tieup.slice(),\n            treadling: res[i].treadling.slice()\n          }\n        }\n      }\n    })\n  .then(res => {\n    this.onGlobalLoomChange.emit();\n  })\n\n\n    })\n\n    \n\n\n  }\n\n\n  loomChange(e:any){\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n\n    let utils:LoomUtil = null;\n\n    if(this.type == 'global'){\n      this.ws.type = e.value.loomtype;\n      if(this.ws.type === 'jacquard') this.dm.selectDesignMode('drawdown', 'drawdown_editing_style')\n      else this.dm.selectDesignMode('loom', 'drawdown_editing_style')\n\n    } \n    else{\n\n      const new_settings:LoomSettings = {\n        type: e.value.loomtype,\n        epi: loom_settings.epi,\n        units: loom_settings.units,\n        frames: loom_settings.frames,\n        treadles: loom_settings.treadles\n      }\n\n      if(loom_settings.type == 'direct'){\n        new_settings.frames = Math.max(loom_settings.treadles, loom_settings.frames);\n        new_settings.treadles = Math.max(loom_settings.treadles, loom_settings.frames);\n        this.treadles = Math.max(loom_settings.treadles, loom_settings.frames);\n        this.frames = Math.max(loom_settings.treadles, loom_settings.frames);\n\n      }\n\n      //if we are changing from null or jacquard to a frame type loom \n      if((loom_settings.type === null || loom_settings.type === 'jacquard')){\n       //from jacquard to frame\n\n        utils = getLoomUtilByType(new_settings.type);\n        utils.computeLoomFromDrawdown(draft.drawdown, loom_settings, this.ws.selected_origin_option)\n        .then(loom => {\n          this.tree.setLoom(this.id, loom);\n          this.localLoomNeedsRedraw.emit();\n\n        });\n      }else if(isFrame(loom_settings) && new_settings.type == 'jacquard'){\n      //from a frame loom to jacquard\n\n       utils = getLoomUtilByType(new_settings.type);\n       utils.computeDrawdownFromLoom(loom,this.ws.selected_origin_option)\n        .then(drawdown => {\n          draft.drawdown = drawdown;\n          this.tree.setDraftOnly(this.id, draft);\n          this.localLoomNeedsRedraw.emit();\n\n        });\n      \n      }else if(isFrame(loom_settings) && isFrame(new_settings)){\n        console.log(\"swtching kinds of frame looms\")\n        //from one frame loom to another\n        const utils = getLoomUtilByType(new_settings.type);\n        if(this.dm.getSelectedDesignMode('drawdown_editing_style').value == 'drawdown'){\n          utils.computeLoomFromDrawdown(draft.drawdown, loom_settings, this.ws.selected_origin_option)\n          .then(loom => {\n            this.tree.setLoom(this.id, loom);\n            this.localLoomNeedsRedraw.emit();\n\n          })\n        }else{\n          utils.recomputeLoomFromThreadingAndDrawdown(loom,new_settings, draft.drawdown, this.ws.selected_origin_option)\n          .then(loom => {\n            this.tree.setLoom(this.id, loom);\n            this.localLoomNeedsRedraw.emit();\n          });\n\n        }\n\n\n      }else{\n        this.localLoomNeedsRedraw.emit();\n      }\n\n      \n      if (loom_settings.type === 'jacquard') this.dm.selectDesignMode('drawdown', 'drawdown_editing_style')\n      else this.dm.selectDesignMode('loom', 'drawdown_editing_style');\n\n      this.tree.setLoomSettings(this.id, new_settings);\n\n\n\n    } \n  }\n\n  unitChange(e:any){\n    \n    if(this.type == 'global'){\n      this.ws.units = e.value.units;\n    }else{\n      const loom_settings = this.tree.getLoomSettings(this.id);\n      loom_settings.units = e.value.units;\n      this.tree.setLoomSettings(this.id, loom_settings);\n      this.localLoomNeedsRedraw.emit();\n    } \n\n  }\n\n\n  /**\n   * recomputes warps and epi if the width of the loom is changed\n   * @param f \n   */\n  widthChange(f: NgForm) {\n    const loom_settings = this.tree.getLoomSettings(this.id);\n\n    if(!f.value.width){\n      f.value.width = 1;\n      this.width = f.value.width;\n    } \n\n    if(this.warp_locked){\n      var new_epi = (this.units == \"in\") ? f.value.warps / f.value.width : (10 * f.value.warps / f.value.width);   \n      loom_settings.epi = new_epi;\n      f.value.epi = new_epi;\n      this.epi = new_epi;\n      this.tree.setLoomSettings(this.id, loom_settings);\n      this.localLoomNeedsRedraw.emit();\n    }else{\n      var new_warps = (this.units === \"in\") \n      ? Math.ceil(f.value.width * f.value.epi) : \n      Math.ceil((10 * f.value.warps / f.value.width));\n\n      this.warpNumChange({warps: new_warps});\n    }\n  }\n\n  public warpNumChange(e:any) {\n\n    if(e.warps == \"\") return;\n\n    const draft = this.tree.getDraft(this.id);\n    let loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n\n\n    if(e.warps > warps(draft.drawdown)){\n      var diff = e.warps -  warps(draft.drawdown);\n      for(var i = 0; i < diff; i++){  \n\n        let ndx = warps(draft.drawdown);\n        const utils = getLoomUtilByType(loom_settings.type);\n        loom = utils.insertIntoThreading(loom, ndx, -1);\n\n        draft.drawdown = insertDrawdownCol(draft.drawdown,ndx, null);\n        draft.colShuttleMapping = insertMappingCol(draft.colShuttleMapping,ndx, 0);\n        draft.colSystemMapping = insertMappingCol(draft.colSystemMapping,ndx, 0);\n        \n      }\n    }else{\n\n      var diff = warps(draft.drawdown) - e.warps;\n      for(var i = 0; i < diff; i++){  \n        let ndx = warps(draft.drawdown)-1;\n\n        const utils = getLoomUtilByType(loom_settings.type);\n        loom = utils.deleteFromThreading(loom, ndx);\n        draft.drawdown = deleteDrawdownCol(draft.drawdown, ndx);\n        draft.colShuttleMapping = deleteMappingCol(draft.colShuttleMapping,ndx);\n        draft.colSystemMapping = deleteMappingCol(draft.colSystemMapping,ndx);\n\n      }\n\n    }\n\n    if(this.dm.getSelectedDesignMode('drawdown_editing_style').value == 'drawdown'){\n      this.tree.setDraftAndRecomputeLoom(this.id, draft, loom_settings)\n      .then(loom => {\n        this.localLoomNeedsRedraw.emit();\n      })\n\n    }else{\n      this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n      .then(draft => {\n        this.localLoomNeedsRedraw.emit();\n      })\n\n    }\n\n\n  }\n\n  \n  warpChange(f: NgForm) {\n\n    const loom_settings = this.tree.getLoomSettings(this.id);\n\n    if(!f.value.warps){\n     f.value.warps = 2;\n     this.warps = f.value.warps;\n    }\n    this.warpNumChange({warps: f.value.warps})\n    this.width = (this.units =='cm') ? f.value.warps / loom_settings.epi * 10 : f.value.warps / loom_settings.epi;\n    f.value.width = this.width;\n\n  }\n\n  weftChange(f: NgForm) {\n    if(!f.value.wefts){\n      f.value.wefts = 2;\n      this.wefts = 2;\n    } \n    this.weftNumChange({wefts: f.value.wefts})\n\n  }\n\n  public weftNumChange(e:any) {\n  \n    if(e.wefts === \"\" || e.wefts ==\"null\") return;\n\n\n    const draft = this.tree.getDraft(this.id);\n    let loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n\n\n    if(e.wefts > wefts(draft.drawdown)){\n      var diff = e.wefts - wefts(draft.drawdown);\n\n      for(var i = 0; i < diff; i++){  \n        let ndx = wefts(draft.drawdown);\n\n        draft.drawdown = insertDrawdownRow(draft.drawdown,ndx, null);\n        draft.rowShuttleMapping = insertMappingRow(draft.rowShuttleMapping,  ndx, 1)\n        draft.rowSystemMapping = insertMappingRow(draft.rowSystemMapping,  ndx, 0)\n        const utils = getLoomUtilByType(loom_settings.type);\n        loom = utils.insertIntoTreadling(loom, ndx, []);\n      }\n    }else{\n      var diff = wefts(draft.drawdown) - e.wefts;\n      for(var i = 0; i < diff; i++){  \n        let ndx = wefts(draft.drawdown)-1;\n        draft.drawdown = deleteDrawdownRow(draft.drawdown, ndx);\n        draft.rowShuttleMapping = deleteMappingRow(draft.rowShuttleMapping, ndx)\n        draft.rowSystemMapping = deleteMappingRow(draft.rowSystemMapping,  ndx)\n        const utils = getLoomUtilByType(loom_settings.type);\n        loom =  utils.deleteFromTreadling(loom, ndx);\n      }\n    }\n\n    if(this.dm.getSelectedDesignMode('drawdown_editing_style').value == 'drawdown'){\n\n      this.tree.setDraftAndRecomputeLoom(this.id, draft, loom_settings)\n      .then(loom => {\n        this.localLoomNeedsRedraw.emit();\n      })\n    }else{\n      this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n      .then(draft => {\n        this.localLoomNeedsRedraw.emit();\n      })\n    }\n   \n  }\n\n\n  epiChange(f: NgForm) {\n\n    const loom_settings = this.tree.getLoomSettings(this.id);\n\n    if(!f.value.epi){\n      f.value.epi = 1;\n      this.epi = f.value.epi;\n    } \n    \n    //this.loom.overloadEpi(f.value.epi);\n    this.ws.epi = f.value.epi;\n\n    if(this.type === \"local\"){\n      if(this.warp_locked){\n        //change the width\n        this.width = (this.units =='cm') ? f.value.warps / loom_settings.epi * 10 : f.value.warps / loom_settings.epi;\n        f.value.width = this.width;\n        \n      }else{\n        var new_warps = (this.units === \"in\") \n        ? Math.ceil(f.value.width * f.value.epi) : \n        Math.ceil((10 * f.value.warps / f.value.width));\n        f.value.warps = new_warps;\n        this.warps = new_warps;\n        this.warpNumChange({warps: new_warps});\n      }\n    }\n\n  }\n\n\n\n\n}\n","<div class=\"toprow\">\n  <button mat-icon-button (click)=\"close()\"><i class=\"fas fa-times\"></i></button>\n  \n  <p *ngIf=\"type=='global'\" mat-dialog-title\n    cdkDrag\n     cdkDragRootElement=\".cdk-overlay-pane\" \n     cdkDragHandle>Workspace Preferences</p>\n\n     <p *ngIf=\"type=='local'\" mat-dialog-title\n     cdkDrag\n      cdkDragRootElement=\".cdk-overlay-pane\" \n      cdkDragHandle>Draft Settings</p>\n</div>\n\n\n<mat-dialog-content>\n\n\n\n\n\n  <p *ngIf=\"type === 'global'\" class=\"description\">The workspace can show you information about your drafts based on the defaults you provide here. You can change these at any time</p>\n\n\n   <form #envt=\"ngForm\" novalidate>\n\n    <mat-form-field *ngIf=\"type==='global'\">\n      <mat-label>When viewing Draft Details, Place the (0,0) point at: </mat-label>\n      <mat-select (selectionChange) =\"originChange(envt)\" [(value)]=\"selected_origin\">\n        <mat-option *ngFor=\"let option of origin_options\" [value]=\"option.value\">\n          {{option.view}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    \n\n      <!-- <div class=\"toggle\" *ngIf=\"type === 'global'\">      \n        <mat-slide-toggle \n         matTooltip=\"select this if you want the drafts on the workspace to reflect the visual texture of the drafts. Don't select if you'd rather just focus on black and what structures\"\n        [(ngModel)]=\"global_loom.show_materials\">Use colors</mat-slide-toggle> \n      </div> -->\n\n      <!-- <div class=\"toggle\" *ngIf=\"type === 'global'\">      \n        <mat-slide-toggle \n         matTooltip=\"select if black cells correspond to a heddle up (weft under warp)\"\n        [(ngModel)]=\"global_loom.black_cells_up\">Black Cells are Heddle Up</mat-slide-toggle> \n      </div>\n\n      <div class=\"toggle\" *ngIf=\"type === 'global'\">      \n        <mat-slide-toggle \n         matTooltip=\"label threading patterns with numbers or just filled cells\"\n        [(ngModel)]=\"global_loom.number_threading\">Use Numbers for Threading</mat-slide-toggle> \n      </div> -->\n\n\n          <mat-form-field>\n            <mat-label *ngIf=\"type=='global'\">Default Loom Type</mat-label>\n            <mat-label *ngIf=\"type=='local'\">Loom Type</mat-label>\n            <mat-select (selectionChange) =\"loomChange(envt)\" [(value)]=\"loomtype\" [(ngModel)]=\"loomtype\" name=\"loomtype\">\n              <mat-option *ngFor=\"let loomtype of loomtypes\" [value]=\"loomtype.value\">\n                {{loomtype.viewValue}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n  \n  \n        <mat-form-field *ngIf=\"type === 'local'\">\n          <input matInput name=\"warps\" \n          [readonly]=\"warp_locked\" \n          [(ngModel)]=\"warps\" \n          type=\"number\" \n          min=\"2\" \n          placeholder=\"Warp Ends\" \n          (change)=\"warpChange(envt)\"\n          (blur)=\"warpChange(envt)\"> \n       \n        </mat-form-field>\n\n   <button *ngIf=\"type === 'local'\" mat-icon-button [class.hide]=\"collapsed\">    \n    <i *ngIf=\"type === 'local'\" aria-label=\"warp lock button\" class=\"fa\" [class.fa-lock]=\"warp_locked\" [class.fa-unlock]=\"!warp_locked\" (click)=\"warp_locked = !warp_locked\"></i></button>\n        <mat-form-field *ngIf=\"type === 'local'\">\n          <input matInput name=\"wefts\" \n          [(ngModel)]=\"wefts\" \n          type=\"number\" \n          min=\"2\" \n          placeholder=\"Weft Picks\" \n          (change)=\"weftChange(envt)\"\n          (blur)=\"weftChange(envt)\"> \n        </mat-form-field>\n  \n        <mat-form-field>\n          <mat-label *ngIf=\"type=='global'\">Default Density Units</mat-label>\n          <mat-label *ngIf=\"type=='local'\">Density Units</mat-label>            \n          <mat-select [(value)]=\"units\" [(ngModel)]=\"units\" name=\"units\" (selectionChange) =\"unitChange(envt)\">\n            <mat-option *ngFor=\"let unit of density_units\" [value]=\"unit.value\">\n              {{unit.viewValue}}\n            </mat-option>\n          </mat-select>\n          </mat-form-field>\n  \n        <mat-form-field>\n          <mat-label *ngIf=\"type=='global'\">Default Density</mat-label>\n          <mat-label *ngIf=\"type=='local'\">Density</mat-label>    \n          <input matInput  \n          name=\"epi\" \n          [(ngModel)]=\"epi\" \n          type=\"number\" \n          min= \"0\" \n          (change)=\"epiChange(envt)\"\n          (blur)=\"epiChange(envt)\">  \n  \n        </mat-form-field>\n\n        <ng-container *ngIf=\"units === 'cm'\">\n            <span matSuffix>ends / 10cm</span>\n          </ng-container>\n          <ng-container *ngIf=\"units == 'in'\">\n           <span matSuffix>epi</span> \n          </ng-container>\n  \n  \n  \n            <mat-form-field *ngIf=\"type === 'local'\">\n              <input matInput \n              name=\"width\" \n              [(ngModel)]=\"width\" \n              step=\"0.125\" \n              type=\"number\" \n              min= \"0.25\" \n              max =\"60\" \n              placeholder=\"Width\" \n              (change)=\"widthChange(envt)\"\n              (blur)=\"widthChange(envt)\"> \n            </mat-form-field>\n  \n          <ng-container *ngIf=\"type === 'local' && units === 'in'\">\n             <span matSuffix>inches</span> \n           </ng-container>\n  \n            <ng-container *ngIf=\"type === 'local' && units === 'cm'\">\n             <span matSuffix>cm</span> \n          </ng-container>\n  \n  \n        <ng-container *ngIf=\"(loomtype == 'frame' || loomtype == 'direct')\">\n  \n        <mat-form-field>\n          <mat-label *ngIf=\"type=='global'\">Default Number of Frames</mat-label>\n          <mat-label *ngIf=\"type=='local'\">Number of Frames</mat-label>    \n          <input matInput \n          name=\"frames\" \n          [(ngModel)]=\"frames\"  \n          step=\"1\" \n          type=\"number\" \n          min= \"2\" \n          max =\"1000\" \n          (change)=\"updateMinFrames(envt)\" \n          (blur)=\"updateMinFrames(envt)\"> \n           <span matSuffix>frames</span> \n         </mat-form-field>\n  \n  \n        <mat-form-field  *ngIf=\"(loomtype == 'frame' || loomtype == 'direct')\">\n          <mat-label *ngIf=\"type=='global'\">Default Number of Treadles</mat-label>\n          <mat-label *ngIf=\"type=='local'\">Number of Treadles</mat-label>      \n          <input matInput \n          name=\"treadles\" \n          [(ngModel)]=\"treadles\" \n          step=\"1\" \n          type=\"number\" \n          min= \"2\" \n          max =\"1000\" \n          (change)=\"updateMinTreadles(envt)\"\n          (blur)=\"updateMinTreadles(envt)\"\n          > \n           <span matSuffix>treadles</span> \n         </mat-form-field>\n\n         <!-- <mat-slide-toggle [(ngModel)] = 'global_loom.show_errors' name=\"show_errors\">Label Drafts that Require More Frames or Treadles</mat-slide-toggle> -->\n\n  \n        </ng-container>\n  \n  </form>\n  \n\n\n</mat-dialog-content>\n<!-- <mat-dialog-actions>\n  <button class=\"mat-raised-button\"(click)=\"close()\">Close</button>\n</mat-dialog-actions> -->\n","import { Component, OnInit, Inject, EventEmitter, Output, ViewChild, Input } from '@angular/core';\nimport { DesignmodesService } from '../../provider/designmodes.service';\nimport { MaterialMap, MaterialsService } from '../../provider/materials.service';\nimport { TreeService } from '../../../core/provider/tree.service';\nimport utilInstance from '../../model/util';\nimport { Draft,DraftNode, Material } from '../../model/datatypes';\nimport { createMaterial, setMaterialID } from '../../model/material';\n\n\n@Component({\n  selector: 'app-material-modal',\n  templateUrl: './material.modal.html',\n  styleUrls: ['./material.modal.scss']\n})\n\n\n\nexport class MaterialModal{\n\n  @Output() onMaterialChange: any = new EventEmitter();\n\n  replacements: Array<number> = [];\n  types: any;\n  newshuttle: Material = createMaterial();\n  addmaterial: boolean = false;\n\n  constructor(\n      private dm: DesignmodesService,\n      public ms: MaterialsService,\n      private tree: TreeService) {\n\n      ms.getShuttles().forEach((el, ndx) => {\n        this.replacements.push((ndx+1%this.ms.getShuttles().length));\n      });\n  \t  this.types = dm.material_types;\n\n  }\n\n\n\n  ngOnInit() {\n  }\n\n\n  /**emitted on any action that would change the current rendering */\n  change(){\n    this.onMaterialChange.emit();\n  }\n\n  addMaterial(){\n\n  }\n\n\n\n\n  /**\n   * handles user input of delete event and reads the \"replace\" value to reassign draft\n   * @param index  - the shuttle to delete\n   */\n  delete(index:number){\n\n    //never delete all of the shuttles\n    if(this.ms.getShuttles().length == 1) return;\n\n    const map: Array<MaterialMap> = this.ms.deleteShuttle(index);\n    const dn: Array<DraftNode> = this.tree.getDraftNodes();\n    \n    \n    dn.forEach(dn =>{\n      dn.draft.rowShuttleMapping = utilInstance.updateMaterialIds( dn.draft.rowShuttleMapping, map, this.replacements[index]);\n      dn.draft.colShuttleMapping = utilInstance.updateMaterialIds( dn.draft.colShuttleMapping, map, this.replacements[index]);\n\n    });\n\n    //remove this from replacements\n    this.replacements = this.replacements.filter((el, ndx) => ndx != index);\n    //map remaning replacement values to valid indices \n    this.replacements = this.replacements.map(el => (el%this.ms.getShuttles().length));\n\n    this.onMaterialChange.emit();\n  }\n\n  addNewShuttle(){\n    console.log(this.newshuttle);\n    setMaterialID(this.newshuttle,this.ms.getShuttles().length);\n    this.ms.addShuttle(this.newshuttle);\n    this.newshuttle = createMaterial();\n  }\n\n  // close() {\n  //   this.dialogRef.close(null);\n  // }\n\n  save() {\n  }\n\n}\n","  \n  <!-- <button mat-icon-button (click)=\"close()\"><i class=\"fas fa-times\"></i></button> -->\n  \n\n\n<mat-accordion>\n<ng-container *ngFor=\"let shuttle of ms.materials\">\n\n  <form #materialForm=\"ngForm\">\n    <mat-expansion-panel >\n\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <i [style.color]=\"shuttle.color\" class=\"fas fa-square\"></i> {{shuttle.name}}\n          </mat-panel-title>\n          <mat-panel-description>\n           \n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      \n   \n      <mat-form-field  class=\"is-fullwidth\">\n        \n      <input matInput \n      #colorpicker\n      (colorPickerChange) = 'change()' \n      placeholder=\"Color\" \n      class=\"colorpicker\" \n      [(colorPicker)]=\"shuttle.color\" \n      [style.background]=\"shuttle.color\" \n      name=\"color\" \n      [(ngModel)]=\"shuttle.color\"\n      cpDialogDisplay ='inline'\n      cpToggle=\"true\" \n\n      />\n\n      </mat-form-field>\n\n      \n\n      <mat-form-field  class=\"is-fullwidth\">\n      <input matInput placeholder=\"Material Name\" name=\"name\" [(ngModel)]=\"shuttle.name\">\n    </mat-form-field>\n\n     \n    <!-- <mat-form-field class=\"is-fullwidth\">\n      <mat-select placeholder=\"Yarn Type\" name=\"type\" [(ngModel)]=\"shuttle.type\">\n        <mat-option *ngFor=\"let type of types\" [value]=\"type.value\">\n          {{ type.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field> -->\n\n   <div class=\"is-fullwidth\">\n      <mat-form-field class=\"form-field\">\n        <input matInput  \n        type=\"number\" \n        placeholder=\"Yarn Diameter (in mm)\" \n        name=\"diameter\" \n        min=\"0\"\n        max=\"100\"\n        step=\".5\"\n        (change)=\"change()\"\n        [(ngModel)]=\"shuttle.diameter\"> \n        <span>&nbsp;&nbsp;mm</span>\n      </mat-form-field>\n\n     \n    </div>\n\n    <!-- <div class=\"is-fullwidth\">\n       Insert From Left\n       <mat-slide-toggle matInput (change)=\"change()\" [(ngModel)]=\"shuttle.insert\" name=\"insert\" required>\n       </mat-slide-toggle>\n       Insert From Right\n  </div> -->\n\n  <div class=\"is-fullwidth\">\n      <mat-form-field class=\"is-fullwidth\">\n      <mat-label>Add Notes</mat-label>\n      <textarea matInput [(ngModel)]=\"shuttle.notes\" [ngModelOptions]=\"{standalone: true}\">{{shuttle.notes}}</textarea>  \t\n    </mat-form-field>\n  </div>\n\n  <div class=\"is-fullwidth\" >\n    <!-- <button class=\"is-fullwidth\" mat-flat-button color=\"primary\" (click)=\"save(shuttle.id)\"> <i class=\"fa fa-save\" aria-hidden=\"true\"></i> Save</button> -->\n  </div>\n\n      <div class=\"is-fullwidth\" *ngIf=\"ms.materials.length > 1\">\n      <button class=\"is-fullwidth\" mat-flat-button color=\"grey\" (click)=\"delete(shuttle.id)\"> <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete and Reassign to:</button>\n      <mat-select lass=\"is-fullwidth\" placeholder=\"Replacement\" name=\"replacement\" [(ngModel)]=\"replacements[shuttle.id]\">\n        <mat-option *ngFor=\"let rep of ms.materials\" [value]=\"rep.id\">\n          {{ rep.name }}\n        </mat-option>\n      </mat-select>\n    </div>\n\n</mat-expansion-panel>\n\n  </form>\n\n\n</ng-container>\n\n<mat-expansion-panel>\n\n  <mat-expansion-panel-header>\n    <mat-panel-title>\n      <i class=\"fas fa-plus\" (click) = 'addmaterial = !addmaterial'></i> Add Material\n      </mat-panel-title>\n      <mat-panel-description>\n      \n    </mat-panel-description>\n  </mat-expansion-panel-header>\n\n  <mat-form-field  class=\"is-fullwidth\">\n        \n    <input matInput \n    #colorpicker\n    (colorPickerChange) = 'change()' \n    placeholder=\"Color\" \n    class=\"colorpicker\" \n    [(colorPicker)]=\"newshuttle.color\" \n    [style.background]=\"newshuttle.color\" \n    name=\"color\" \n    [(ngModel)]=\"newshuttle.color\"\n    cpDialogDisplay ='inline'\n    cpToggle=\"true\" \n\n    />\n\n    </mat-form-field>\n\n        <mat-form-field  class=\"is-fullwidth\">\n        <input matInput placeholder=\"Material Name\" name=\"name\" [(ngModel)]=\"newshuttle.name\">\n      </mat-form-field>\n\n      \n\n    <div class=\"is-fullwidth\">\n        <mat-form-field class=\"form-field\">\n          <input matInput  \n          type=\"number\" \n          placeholder=\"Yarn Diameter\" \n          name=\"diameter\" \n          min=\"0\"\n          max=\"100\"\n          step=\"10\"\n          (change)=\"change()\"\n          [(ngModel)]=\"newshuttle.diameter\"> \n          <span>&nbsp;&nbsp;%</span>\n        </mat-form-field>\n\n      \n      </div>\n\n\n    <div class=\"is-fullwidth\">\n      <mat-form-field class=\"is-fullwidth\">\n      <mat-label>Add Notes</mat-label>\n      <textarea matInput [(ngModel)]=\"newshuttle.notes\" [ngModelOptions]=\"{standalone: true}\">{{newshuttle.notes}}</textarea>  \t\n    </mat-form-field>\n\n    <button mat-flat-button color=\"primary\" (click)=\"addNewShuttle()\"> Add This Material</button>\n    </div>\n  \n\n</mat-expansion-panel>\n</mat-accordion>\n","import { create } from \"domain\";\nimport { Cell } from \"./datatypes\";\n\n\n\nexport const createCell = (setting: boolean) : Cell => {\n  \n  if(setting !== null && typeof setting !== 'boolean') console.error(\"CREATE CELL GOT NON BOOLEAN VALUE\", setting)\n\n\n  let c:Cell = {\n    is_set: false,\n    is_up: false\n  };\n\n  if(setting === null || setting === undefined){\n    c.is_set = false;\n    c.is_up = false;\n  } \n  else {\n    c.is_set = true;\n    c.is_up = setting;\n  }\n  return c;\n}\n\nexport const toggleHeddle = (c:Cell) : Cell => {\n  if(!c.is_set){\n    c.is_set = true;\n    c.is_up = true;\n  }else{\n    c.is_up = !c.is_up;\n  }\n  return c;\n}\n\n\nexport const createCellFromSequenceVal = (val: number) : Cell => {\n  \n\n  let c:Cell = {\n    is_set: false,\n    is_up: false\n  };\n\n  switch(val){\n    case 0:\n      c.is_set = true;\n      c.is_up = false;\n      break;\n\n    case 1: \n      c.is_set = true;\n      c.is_up = true;\n      break;\n\n    case 2: \n      c.is_set = false;\n      c.is_up = false;\n    break;\n  }\n  return c;\n}\n\n\n\nexport const setCellValue = (c: Cell, value:boolean) : Cell => {\n if(value === null){\n   c.is_up = false;\n   c.is_set = false;\n }else{\n   c.is_up = value;\n   c.is_set = true;\n }\n return c;\n}\n\nexport const getCellValue = (c: Cell) : boolean => {\n  if(c.is_set){\n    return c.is_up;\n   }\n   return null;\n }\n \n \n\n\n\n\n\n/**\n * Definition of Cell object.\n * @class Cell describes values assigned to one cell within a draft\n * @param poles describes the path of the yarn through this cell as a 4-bit number corresponding to NSEW. \n * @params is_up describes if the heddle at this location is up or down\n * @params is_set describes if a yarn will move over this heddle (used in inlay and shape weaving to draw boundaries) \n * @param mast_id describes the mask region for which this cell belongs (not currently used)\n */\n// export class Cell {\n//   is_up: boolean;\n//   is_set: boolean;\n  /**\n   * \n   * @param setting describes if the Cell should be set to heddle up or not. Null value leaves cell unset. \n   */\n  // constructor(setting: boolean) {\n\n  //   if(setting === null || setting === undefined){\n  //     this.is_set = false;\n  //     this.is_up = false;\n  //   } \n  //   else {\n  //     this.is_set = true;\n  //     this.is_up = setting;\n  //   }\n  // }\n\n  /**\n   * this is called from the reload file. it takes a cell in the form of a list of params and sets the variables that are present\n   * @param params \n   */\n  // reloadCell(params: any){\n\n  //   if(params.is_up !== undefined){\n  //     this.is_set = true;\n  //     this.is_up = params.is_up;\n\n  //   }else{\n  //     this.is_set = false;\n  //     this.is_up = false;\n  //   }\n\n  //   if(params.is_set !== undefined){\n  //     this.is_set = params.is_set;\n  //   }\n  // }\n\n\n  \n \n\n  // setHeddleUp(){\n  //   this.is_up = true;\n  //   this.is_set = true;\n  // }\n\n  // setHeddleDown(){\n  //    this.is_set = true;\n  //    this.is_up = false;\n  // }\n\n\n\n  // /**\n  //  * sets the value to true or false. If null, will unset the heddle\n  //  * @param value \n  //  */\n  // setHeddle(value:boolean){\n  //   if(value === null){\n  //     this.is_up = false;\n  //     this.is_set = false;\n  //   }else{\n  //     this.is_up = value;\n  //     this.is_set = true;\n  //   }\n  // }\n\n  //   /**\n  //  * sets the value to true or false. If null, will unset the heddle\n  //  * @param value \n  //  */\n  //   getHeddle():boolean{\n  //      if(this.is_set){\n  //       return this.is_up;\n  //      }\n  //      return null;\n  //   }\n\n\n\n\n  // unsetHeddle(){\n  //   this.is_up = false;\n  //   this.is_set = false;\n  // }\n\n\n\n  // isUp():boolean{\n  //   return this.is_up;\n  // }\n\n\n\n  \n  \n// }","export const defaults = {\n    draft_detail_cell_size: 15,\n    draft_detail_zoom: 1,\n    draft_name: 'drafty',\n    row_shuttle: 1,\n    row_system: 0, \n    col_shuttle: 0, \n    col_system: 0,\n    mixer_cell_size: 5,\n    mixer_canvas_width: 16380,\n    mixer_canvas_height: 16380,\n    inlet_button_width: 50,\n    weft_system_codes: ['a', 'b', 'c', 'd', 'e','f','g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n\n}","import { createCell, getCellValue, setCellValue } from \"./cell\";\nimport { Draft, Drawdown, YarnFloat, Cell } from \"./datatypes\";\nimport { defaults } from \"./defaults\";\nimport utilInstance from \"./util\";\n\n/**\n * generates an empty draft with a unique id\n * @returns \n */\n export const initDraft = () : Draft => {\n  const d: Draft = {\n    id: utilInstance.generateId(8),\n    gen_name: defaults.draft_name,\n    ud_name: \"\",\n    drawdown: [],\n    rowShuttleMapping: [],\n    rowSystemMapping: [],\n    colShuttleMapping: [],\n    colSystemMapping: []\n\n  };\n  return d;\n}\n\n\n/**\n * generates a deep copy of the input draft\n * @returns \n */\n export const copyDraft = (d: Draft) : Draft => {\n\n  const copy_draft = initDraftWithParams({\n    id: d.id,\n    ud_name: d.ud_name,\n    gen_name: d.gen_name,\n    warps: warps(d.drawdown),\n    wefts: wefts(d.drawdown),\n    drawdown: d.drawdown,\n    rowShuttleMapping: d.rowShuttleMapping,\n    rowSystemMapping: d.rowSystemMapping,\n    colShuttleMapping: d.colShuttleMapping,\n    colSystemMapping: d.colSystemMapping\n  });\n  return copy_draft;\n}\n\n/**\n * creates a draft based on the params provided.\n * @param params allowable params are id, weft, warp, drawdown, pattern, ud_name, gen_name, rowShuttleMapping, rowSystemMapping, colShuttleMapping, colSystemMapping.\n * @returns \n */\n export const initDraftWithParams = (params:any) : Draft => {\n  const d: Draft = {\n    id: utilInstance.generateId(8),\n    gen_name: defaults.draft_name,\n    ud_name: \"\",\n    drawdown: [],\n    rowShuttleMapping: [],\n    rowSystemMapping: [],\n    colShuttleMapping: [],\n    colSystemMapping: []\n\n  };\n\n\n  if(params.id !== undefined ) d.id = params.id;\n  if(params.gen_name !== undefined ) d.gen_name = params.gen_name;\n  if(params.ud_name !== undefined ) d.ud_name = params.ud_name;\n \n  //handle common error\n  if(params.pattern !== undefined) params.drawdown = params.pattern;\n  //start with empty draft \n\n  if(params.wefts === undefined ){\n    if(params.drawdown == undefined) params.wefts = 1;\n    else params.wefts = wefts(params.drawdown);\n  }\n\n  if(params.warps === undefined){\n    if(params.drawdown == undefined)  params.warps = 1;\n    else params.warps = warps(params.drawdown);\n  } \n \n  for(let i = 0; i < params.wefts; i++){\n    d.drawdown.push([]);\n    d.rowSystemMapping.push(defaults.row_system);\n    d.rowShuttleMapping.push(defaults.row_shuttle);\n    for(let j = 0; j < params.warps; j++){\n      d.drawdown[i][j] =  createCell(false);\n    }\n  }\n\n  for(let j = 0; j < params.warps; j++){\n    d.colSystemMapping.push(defaults.col_system);\n    d.colShuttleMapping.push(defaults.col_shuttle);\n  }\n\n  if(params.drawdown !== undefined){\n    d.drawdown.forEach((row, i) => {\n      row.forEach((cell, j) => {\n      cell = setCellValue(cell, getCellValue(params.drawdown[i%wefts(params.drawdown)][j%warps(params.drawdown)]));\n\n\n      })\n    })\n  }\n\n  if(params.rowShuttleMapping !== undefined){\n    for(let i = 0; i < wefts(d.drawdown); i++){\n      d.rowShuttleMapping[i] = params.rowShuttleMapping[i%params.rowShuttleMapping.length];\n    }\n  }\n\n  if(params.rowSystemMapping !== undefined){\n    for(let i = 0; i < wefts(d.drawdown); i++){\n      d.rowSystemMapping[i] = params.rowSystemMapping[i%params.rowSystemMapping.length];\n    }\n  }\n\n  if(params.colShuttleMapping !== undefined){\n    for(let i = 0; i < warps(d.drawdown); i++){\n      d.colShuttleMapping[i] = params.colShuttleMapping[i%params.colShuttleMapping.length];\n    }\n  }\n\n  if(params.colSystemMapping !== undefined){\n    for(let i = 0; i < warps(d.drawdown); i++){\n      d.colSystemMapping[i] = params.colSystemMapping[i%params.colSystemMapping.length];\n    }\n  }\n\n\n  return d;\n}\n\n/**\n * creates a draft using only information from a drawdown (no system or column information)\n * @returns \n */\nexport const initDraftFromDrawdown = (drawdown:Drawdown) : Draft => {\n  const d: Draft = {\n    id: utilInstance.generateId(8),\n    gen_name: defaults.draft_name,\n    ud_name: \"\",\n    drawdown: [],\n    rowShuttleMapping: [],\n    rowSystemMapping: [],\n    colShuttleMapping: [],\n    colSystemMapping: []\n  };\n\n \n    drawdown.forEach((row, i) => {\n      d.drawdown.push([]);\n      row.forEach((cell, j) => {\n      d.drawdown[i][j] = setCellValue(cell, getCellValue(drawdown[i][j]));\n      })\n    })\n\n    for(let i = 0; i < wefts(d.drawdown); i++){\n      d.rowShuttleMapping[i] = defaults.row_shuttle;\n      d.rowSystemMapping[i] = defaults.row_system;\n    }\n\n    for(let j = 0; j < warps(d.drawdown); j++){\n      d.colShuttleMapping[j] = defaults.col_shuttle;\n      d.colSystemMapping[j] = defaults.col_system;\n    }\n\n    \n  \n\n  return d;\n}\n\n\n/**\n * generates a new draft from the paramters specified.\n * @param pattern \n * @param gen_name \n * @param ud_name \n * @param rowShuttleMapping\n * @param rowSystemMapping\n * @param colShuttleMapping\n * @param colSystemMapping\n * @returns \n */\nexport const createDraft = (\n  pattern: Drawdown,\n  gen_name: string,\n  ud_name: string,\n  rowShuttleMapping: Array<any>,\n  rowSystemMapping: Array<any>,\n  colShuttleMapping: Array<any>,\n  colSystemMapping: Array<any>\n  ) : Draft => {\n\n    const d: Draft = {\n      id: utilInstance.generateId(8),\n      drawdown: pattern.slice(),\n      gen_name: gen_name,\n      ud_name: ud_name, \n      rowShuttleMapping: rowShuttleMapping.slice(),\n      rowSystemMapping: rowSystemMapping.slice(),\n      colShuttleMapping: colShuttleMapping.slice(),\n      colSystemMapping: colSystemMapping.slice(),\n    }\n\n    return d;\n\n  }\n\n  \n\n\n  /**\n   * sets up the draft from the information saved in a .ada file\n   * @param data \n   */\n  export const loadDraftFromFile = (data: any, flips: any, version: string) : Promise<Draft> => {\n\n    const draft: Draft = initDraft();\n    if(data.id !== undefined) draft.id = data.id;\n    draft.gen_name = (data.gen_name === undefined) ? 'draft' : data.gen_name;\n    draft.ud_name = (data.ud_name === undefined) ? '' : data.ud_name;\n    \n    if(version === undefined || version === null || !utilInstance.sameOrNewerVersion(version, '3.4.5')){\n      draft.drawdown = parseSavedDrawdown(data.pattern);\n    }else{\n      draft.drawdown = parseSavedDrawdown(data.drawdown);\n\n    }\n\n    draft.rowShuttleMapping = (data.rowShuttleMapping === undefined) ? [] : data.rowShuttleMapping;\n    draft.rowSystemMapping = (data.rowSystemMapping === undefined) ? [] : data.rowSystemMapping;\n    draft.colShuttleMapping = (data.colShuttleMapping === undefined) ? [] : data.colShuttleMapping;;\n    draft.colSystemMapping= (data.colSystemMapping === undefined) ? [] : data.colSystemMapping;;\n\n\n    return flipDraft(draft, flips.horiz, flips.vert)\n    .then(flipped => {\n      return flipped;\n    })\n    \n  }\n\n\n  /**\n   * converts the saved structure of a pattern into the format used in memory\n   * @param pattern the saved pattern\n   * @returns the pattern in the form of a drawdown.\n   */\n  const parseSavedPattern = (pattern: Array<Array<boolean>>) : Drawdown => {\n    const drawdown:Drawdown = [];\n    if(pattern === undefined) return [];\n\n    for(var i = 0; i < wefts(pattern); i++) {\n        drawdown.push([]);\n        for (var j = 0; j < warps(pattern); j++){\n          drawdown[i][j]= createCell(pattern[i][j]);\n        }\n    }\n\n    return drawdown;\n  }\n\n  const parseSavedDrawdown = (dd: Array<Array<Cell>>) : Drawdown => {\n\n    const drawdown:Drawdown = [];\n    if(dd === undefined) return [];\n\n    for(var i = 0; i < wefts(dd); i++) {\n        drawdown.push([]);\n        for (var j = 0; j < warps(dd); j++){\n          drawdown[i][j] = dd[i][j];\n        }\n    }\n\n    return drawdown;\n  }\n\n\n  /**\n   * calcualte the number of wefts (rows) in a pattern\n   * @param d a drawdown or any 2D array\n   * @returns the number of rows of 0 if undefined\n   */\n  export const wefts = (d: Drawdown | Array<Array<any>>) :  number => {\n    if(d === null || d == undefined) return 0;\n    return d.length;\n  }\n\n\n  /**\n   * calcualte the number of warps (cols) in a pattern\n   * @param d a drawdown or any 2D array\n   * @returns the number of cols of 0 if undefined\n   */\n  export const warps = (d: Drawdown | Array<Array<any>>) :  number => {\n    if(d === null || d == undefined) return 0;\n    if(d[0] === undefined) return 0;\n    return d[0].length;\n  }\n\n  /**\n   * check if the giver interlacement within the size of the draft\n   * @param i the selected weft\n   * @param j the selected warp\n   * @returns true/false\n   */\n  export const hasCell = (d: Drawdown, i:number, j:number) : boolean =>{\n    if(i < 0 || i >= wefts(d)) return false;\n    if(j < 0 || j >= warps(d)) return false;\n    return true;\n  }\n\n  /**\n   * checks if the cells in the provided drawdown is up\n   * @param d the drawdown\n   * @param i weft\n   * @param j warp\n   * @returns true if set and up, false if set and down or unset\n   */\n  export const isUp = (d: Drawdown, i:number, j:number) : boolean =>{\n    //console.log(\"is up\", i, j, wefts(d), warps(d), d[i][j]);\n    if ( i > -1 && i < wefts(d) && j > -1 && j < warps(d)) {\n      return d[i][j].is_set && d[i][j].is_up;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * checks if the cells in the provided drawdown is set or unset\n   * @param d the drawdown\n   * @param i weft\n   * @param j warp\n   * @returns true if set and up or down, false if unset\n   */  \n  export const isSet = (d: Drawdown, i:number, j:number) : boolean => {\n    if ( i > -1 && i < wefts(d) && j > -1 && j < warps(d)) {\n      return d[i][j].is_set;\n    } else {\n      return false;\n    }\n  }\n\n\n  /**\n   * sets the heddle at the specified location to the value provided\n   * @param d drawdown\n   * @param i weft\n   * @param j warp\n   * @param bool the value (true for up, false for down, null for unset)\n   * @returns \n   */\n  export const setHeddle = (d:Drawdown, i:number, j:number, bool:boolean) : Drawdown => {\n      d[i][j] = setCellValue( d[i][j], bool);\n      return d;\n  }\n\n  /**\n   * get the value of the heddle at a given location\n   * @param d the drawdown\n   * @param i the weft row\n   * @param j the warp col\n   * @returns the heddle value (true, false or null for unset)\n   */\n  export const getHeddle = (d: Drawdown, i: number, j: number) : boolean => {\n    if(i > wefts(d) || j > warps(d)) return null;\n    return getCellValue(d[i][j]);\n  }\n\n\n  /**\n   * pasts a second drawdown representing a pattern at the specified location and size\n   * @param drawdown \n   * @param fill_pattern \n   * @param start_i \n   * @param start_j \n   * @param width \n   * @param height \n   * @returns \n   */\n   export const pasteIntoDrawdown = (\n    drawdown: Drawdown, \n    fill_pattern: Drawdown,\n    start_i: number,\n    start_j: number,\n    width: number,\n    height: number \n\n  ) :  Drawdown =>  {\n\n\n    let rows = wefts(fill_pattern);\n    let cols = warps(fill_pattern);\n\n    //cycle through each visible row/column of the selection\n    for (var i = 0; i < height; i++ ) {\n      for (var j = 0; j < width; j++ ) {\n        try{\n          drawdown[start_i+i][start_j+j] = createCell(getCellValue(fill_pattern[i % rows][j % cols]));\n        }catch(e){\n          console.error(e);\n        }\n      }\n    }\n\n    return drawdown;\n\n   \n  }\n\n  /**\n   * creates an empty drawdown of a given size\n   * @param wefts \n   * @param warps \n   * @returns \n   */\n  export const createBlankDrawdown = (wefts: number, warps: number) : Drawdown => {\n    const drawdown: Drawdown = [];\n    for(let i = 0; i < wefts; i++){\n      drawdown.push([]);\n      for(let j = 0; j < warps; j++){\n        drawdown[i].push(createCell(false));\n      }\n    } \n    return drawdown;\n  }\n\n\n  /**\n   * applys a pattern only to regions where the input draft has true heddles\n   * @param mask the pattern to use as a mask\n   * @param pattern the pattern to fill with\n   * @returns the result\n   */\n  export const applyMask = (mask: Drawdown, pattern: Drawdown) : Drawdown =>  {\n    \n    const res = createBlankDrawdown(wefts(mask), warps(mask));\n    for(let i = 0; i < wefts(mask); i++){\n      for(let j = 0; j < warps(mask); j++){\n        if(getCellValue(mask[i][j])){\n          const set_to = getCellValue(pattern[i%wefts(pattern)][j%warps(pattern)]);\n          res[i][j] = createCell(set_to);\n        }\n        \n      }\n    } \n    return res;\n  }\n\n  /**\n   * inverts the drawdown (e.g. sets true cells to false and vice versa)\n   * @param drawdown the drawdown to invert\n   * @returns the inverted drawdown \n   */\n  export const invertDrawdown = (drawdown: Drawdown) : Drawdown =>  {\n    \n    const inverted = drawdown.slice();\n    for(let i = 0; i < wefts(drawdown); i++){\n      for(let j = 0; j < warps(drawdown); j++){\n        if(drawdown[i][j].is_set){\n          const set_to = !getCellValue(drawdown[i][j]);\n          inverted[i][j] = createCell(set_to);\n        }\n        \n      }\n    } \n    return inverted;\n  }\n\n  /**\n   * shifts the drawdown up or left by the amount specified.\n   * @param drawdown the drawdown to shift\n   * @param up shift up = true, left = false\n   * @param inc the amount to shift by\n   * @returns the shfited drawdown\n   */\n     export const shiftDrawdown = (drawdown: Drawdown, up: boolean, inc: number) : Drawdown =>  {\n\n      const shifted = createBlankDrawdown(wefts(drawdown), warps(drawdown));\n      for(let i = 0; i < wefts(drawdown); i++){\n        for(let j = 0; j < warps(drawdown); j++){\n            let set_to = false;\n            if(up)  set_to = getCellValue(drawdown[(i+inc)%wefts(drawdown)][j]);\n            else set_to = getCellValue(drawdown[i][(j+inc)%warps(drawdown)]);\n            shifted[i][j] = createCell(set_to);\n        }\n      } \n      return shifted;\n    }\n\n\n   /**\n   * flips the drawdown horizontally or vertically. This is different than flip draft because it only \n   * flippes teh drawdown, not any other associated information\n   * @param drawdown the drawdown to shift\n   * @param horiz true for horizontal flip, false for vertical\n   * @returns the flipped drawdown\n   */\n    export const flipDrawdown = (drawdown: Drawdown, horiz: boolean) : Drawdown =>  {\n\n    const flip = createBlankDrawdown(wefts(drawdown), warps(drawdown));\n    for(let i = 0; i < wefts(drawdown); i++){\n      for(let j = 0; j < warps(drawdown); j++){\n          let set_to = false;\n          if(horiz)  set_to = getCellValue(drawdown[i][warps(drawdown)-1-j]);\n          else set_to = getCellValue(drawdown[wefts(drawdown)-1 - i][j]);\n          flip[i][j] = createCell(set_to);\n      }\n    } \n    return flip;\n  }\n\n\n  /**\n   * generates a system or shuttle mapping from an input pattern based on the input draft\n   * @param drawdown the drawdown for which we are creating this mapping\n   * @param pattern the repeating pattern to use when creating the mapping\n   * @param type specify if this is a 'row'/weft or 'col'/warp mapping\n   * @returns the mapping to use\n   */\n  export const generateMappingFromPattern = (drawdown: Drawdown, pattern: Array<number>, type: string, origin: number) : Array<any> => {\n\n    const mapping: Array<number> = [];\n    if(type == 'row'){\n\n        if(origin == 1 || origin == 2) pattern = pattern.slice().reverse();\n\n        for(let i = 0; i < wefts(drawdown); i++){\n          mapping.push(pattern[i%pattern.length]);\n        }\n\n    }else{\n\n        if(origin == 0 || origin == 1) pattern = pattern.slice().reverse();\n\n        for(let j = 0; j < warps(drawdown); j++){\n          mapping.push(pattern[j%pattern.length]);\n        }\n      \n    }\n\n    return mapping.slice();\n  }\n\n\n  /**\n   * take the system and shuttle and \n   * @param to \n   * @param from \n   */\n  export const updateWeftSystemsAndShuttles = (to: Draft, from: Draft) : Draft => {\n\n    if(from == null || from == undefined) from = initDraftWithParams({wefts: 1, warps: 1, drawdown: [[createCell(false)]]});\n\n    to.rowShuttleMapping =  generateMappingFromPattern(to.drawdown, from.rowShuttleMapping,'row', 3);\n\n    to.rowSystemMapping =  generateMappingFromPattern(to.drawdown, from.rowSystemMapping,'row', 3);\n\n    return to;\n  }\n\n  \n  export const updateWarpSystemsAndShuttles = (to: Draft, from: Draft) : Draft => {\n\n    if(from == null || from == undefined) from = initDraftWithParams({wefts: 1, warps: 1, drawdown: [[createCell(false)]]});\n\n    to.colShuttleMapping =  generateMappingFromPattern(to.drawdown, from.colShuttleMapping,'col', 3);\n\n    to.colSystemMapping =  generateMappingFromPattern(to.drawdown, from.colSystemMapping,'col', 3);\n\n    return to;\n  }\n\n\n  \n\n\n\n  /**\n   * I DON\"T THINK THIS FUNCTION WORKS OR IS BEING USED\n   * removes any boundary rows from the input draft that are unset\n   * @return returns the resulting draft\n   */\n  // export const trimUnsetRows = (d: Drawdown) : Drawdown => {\n\n  //   const rowmap: Array<number> = [];\n  //   const to_delete: Array<number> = [];\n\n  //   //make a list of rows that contains the number of set cells\n  //   d.forEach(row => {\n  //     const active_cells: Array<Cell> = row.filter(cell => (cell.isSet()));\n  //     rowmap.push(active_cells.length);\n  //   });\n\n  //   let delete_top: number = 0;\n  //   let top_hasvalue: boolean = false;\n    \n  //   //scan from top and bottom to see how many rows we shoudl delete\n  //   for(let ndx = 0; ndx < rowmap.length; ndx++){\n  //       if(rowmap[ndx] == 0 && !top_hasvalue){\n  //         delete_top++;\n  //       }else{\n  //         top_hasvalue = true;\n  //       }\n  //   }\n\n  //   if(delete_top == rowmap.length) return []; //this is empty now\n   \n  //   let delete_bottom: number = 0;\n  //   let bottom_hasvalue:boolean = false;\n  //   for(let ndx = rowmap.length -1; ndx >= 0; ndx--){\n  //     if(rowmap[ndx] == 0 && !bottom_hasvalue){\n  //       delete_bottom++;\n  //     }else{\n  //       bottom_hasvalue = true;\n  //     }\n  //   }\n\n  //   return d;\n  // }\n\n  /**\n   * insert a row into the drawdown at a given location\n   * @param d the drawdown\n   * @param i the weft location \n   * @param row the row to insert, or null if row should be blank.\n   * @returns \n   */\n  export const insertDrawdownRow = (d: Drawdown, i: number, row: Array<Cell>) : Drawdown => {\n    i = i+1;\n\n    if(row === null){\n      row = [];\n      for (var j = 0; j < warps(d); j++) {\n        row.push(createCell(false));\n      }\n    }\n    if(row.length !== warps(d)) console.error(\"inserting row of incorrect length into drawdown\");\n   \n    try{\n      d.splice(i,0,row);\n    }catch(e){\n      console.error(e);\n    }\n    return d;\n  }\n\n  \n  /**\n   * inserts a new value into the row system/shuttle map\n   * @param m the map to modify\n   * @param i the place at which to add the row\n   * @param val the value to insert\n   * @returns \n   */\n  export const insertMappingRow = (m: Array<number>, i: number, val: number) : Array<number> => {\n    i = i+1;\n    try{\n      m.splice(i,0,val);\n    }catch(e){\n      console.error(e);\n    }\n    return m;\n  }\n\n\n  /**\n   * deletes a row from the drawdown at the specified weft location\n   * @param d drawdown\n   * @param i weft location\n   * @returns the modified drawdown\n   */\n  export const deleteDrawdownRow = (d:Drawdown, i: number) : Drawdown => {\n      try{\n        d.splice(i, 1);\n      }catch(e){\n        console.error(e);\n      }\n      return d;\n  }\n\n\n  /**\n   * deletes a row from a row system/shuttle mapping at the specified weft location\n   * @param m the mapping\n   * @param i the weft location\n   * @returns the modified \n   */\n  export const deleteMappingRow = (m:Array<number>, i: number) : Array<number> => {\n    try{\n      m.splice(i, 1);\n    }catch(e){\n      console.error(e);\n    }\n    return m;\n  }\n\n\n  /**\n   * inserts a column into the drawdown\n   * @param d the drawdown\n   * @param j the warp location at which to insert\n   * @param col - the column to insert or null if it should be a blank column\n   * @returns the modified drawdown\n   */\n  export const insertDrawdownCol = (d: Drawdown, j: number, col: Array<Cell>) : Drawdown => {\n    \n    const w = warps(d);\n\n    if(j === null) j =0;\n\n    if(col == null){\n      col = [];\n      for(let i = 0; i < wefts(d); i++){\n        col.push(createCell(false));\n      }\n    }\n    for (var ndx = 0; ndx < wefts(d); ndx++) {\n      d[ndx].splice(j, 0, createCell(getCellValue(col[ndx])));\n    }\n    return d;\n  }\n\n\n\n\n  /**\n   * inserts a value into the col system/shuttle mapping at a particular location\n   * @param m the map to modify\n   * @param j the location at which to add\n   * @param col the value to add\n   * @returns \n   */\n  export const insertMappingCol = (m: Array<number>, j: number, col: number) : Array<number> => {\n    m.splice(j,0, col);\n    return m;\n  }\n  \n  \n\n\n/**\n * delete a column from the drawdown at a given location\n * @param d the drawdown\n * @param j the warp location\n * @returns the modified drawdown\n */\n  export const deleteDrawdownCol = (d: Drawdown, j: number) : Drawdown => {\n\n    for(var ndx = 0; ndx < wefts(d); ndx++){\n      d[ndx].splice(j, 1);\n    }\n    return d;\n\n  }\n\n  /**\n * deletes a value into the col system/shuttle mapping at a particular location\n * @param m the mapping to modify\n * @param j the warp location\n * @returns the modified mapping\n */\n  export const deleteMappingCol = (m: Array<number>, j: number) : Array<number> => {\n    m.splice(j, 1);\n    return m;\n  }\n\n  export const getCol = (d: Drawdown, j: number) : Array<Cell> => {\n\n    const col = d.reduce((acc, val, i) =>{\n      const cell = createCell(getCellValue(d[i][j]));\n      acc.push(cell);\n      return acc;\n    }, []);\n\n    return col;\n\n  }\n\n\n  /**\n   * gets the name of the draft. If it has a user defined name, it returns that, otherwise, it returns the generated name\n   * @param draft \n   * @returns \n   */\n export const getDraftName = (draft: Draft) : string => {\n  if(draft === null || draft === undefined) return \"\"; \n  if(draft.ud_name == undefined){\n    if(draft.gen_name == undefined) return '';\n    else return draft.gen_name;\n  }  \n\n  if(draft.gen_name == undefined){\n    if(draft.ud_name == undefined) return '';\n    else return draft.ud_name;\n  }\n\n  return (draft.ud_name === \"\") ?  draft.gen_name : draft.ud_name; \n  }\n\n\n\n/**\n* takes a draft as input, and flips the order of the rows\n* used to ensure mixer calculations are oriented from bottom left\n* @param draft \n*/ \nexport const flipDraft = (d: Draft, horiz: boolean, vert: boolean) : Promise<Draft> => {\n\n  const draft = initDraftWithParams(\n    {id: d.id, \n    wefts: wefts(d.drawdown),\n    warps: warps(d.drawdown),\n    gen_name: d.gen_name,\n    ud_name: d.ud_name,\n    colShuttleMapping: d.colShuttleMapping,\n    colSystemMapping: d.colSystemMapping});\n    draft.drawdown = createBlankDrawdown(wefts(d.drawdown), warps(d.drawdown));\n\n  for(let i = 0; i < wefts(d.drawdown); i++){\n    let flipped_i = i;\n    if(vert) flipped_i = wefts(d.drawdown) -1 -i;\n    for(let j = 0; j < warps(d.drawdown); j++){\n      let flipped_j = j;\n      if(horiz) flipped_j = warps(d.drawdown) -1 -j;\n      draft.drawdown[i][j] = createCell(getCellValue(d.drawdown[flipped_i][flipped_j])); \n    }\n\n    draft.rowShuttleMapping[i] = d.rowShuttleMapping[flipped_i];\n    draft.rowSystemMapping[i] = d.rowSystemMapping[flipped_i];\n   }\n\n   if(horiz){\n    \n    for(let j = 0; j < warps(d.drawdown); j++){\n      let flipped_j = warps(d.drawdown) -1 -j;\n      draft.colShuttleMapping[j] = d.colShuttleMapping[flipped_j];\n      draft.colSystemMapping[j] = d.colSystemMapping[flipped_j];\n    }\n  }\n\n\n  return Promise.resolve(draft);\n}\n\n\n\n\n/**\n * this function generates a list of floats as well as a map of each cell in the draft to its associated float. This is used to compute layers within the draft \n * @param drawdown \n * @returns \n */\n// export const createWeftFloatMap = (drawdown: Drawdown) : {float_list: Array<{id: number, float: YarnFloat}>, float_map: Array<Array<number>>} => {\n\n//   const float_list: Array<{id: number, float: YarnFloat}> = [] ;\n//   const float_map:Array<Array<number>> = [];\n\n//   drawdown.forEach((row, i) => {\n\n//     let j = 0;\n//     while(j < warps(drawdown)){\n//       let f:YarnFloat = getFloatLength(row, j, getCellValue(row[j]));\n//       let f_id = float_list.length;\n//       float_list.push({id: f_id, float: f })\n//       for(let x = j; x < j+f.total_length; x++){\n//         float_map[i][x] = f_id;\n//       }\n//       j += f.total_length;\n//     }\n\n//   });\n\n//   return {float_list, float_map};\n// }\n\n\n\n","\nimport { getCellValue, setCellValue } from \"./cell\";\nimport { Draft, Drawdown, Interlacement, InterlacementVal, Loom, LoomSettings, LoomUtil } from \"./datatypes\";\nimport { createBlankDrawdown, warps, wefts } from \"./drafts\";\nimport utilInstance from \"./util\";\n\n\n/*********** GENERIC FUNCTIONS RELATING TO LOOMS AND LOOM UTILS ************/\n\nexport const copyLoom = (l:Loom) : Loom => {\n  if(l === undefined || l == null) return null;\n  const copy_loom  = {\n    threading: l.threading.slice(),\n    treadling: l.treadling.slice(),\n    tieup: l.tieup.slice(),\n  } \n  return copy_loom;\n}\n\nexport const copyLoomSettings = (ls:LoomSettings) : LoomSettings => {\n  const copy_loomsettings  = {\n      type: ls.type,\n      epi: ls.epi,\n      units: ls.units,\n      frames: ls.frames,\n      treadles: ls.treadles\n  };\n  return copy_loomsettings;\n}\n\n\nexport const convertEPItoMM = (ls: LoomSettings) : number => {\n\n  if(ls.units == 'cm'){\n    return ls.epi;\n  }else{\n    return (25.4/ls.epi);\n  }\n\n}\n\n\n\n/*********** ESTABLISH SPECIFIC TYPES OF LOOMS and A CORE SET OF FUNCTIONS FOR EACH ************/\n\nconst jacquard_utils: LoomUtil = {\n    type: 'jacquard', \n    displayname: 'jacquard loom',\n    dx: \"draft exclusively from drawdown, disregarding any frame and treadle information\",\n    computeLoomFromDrawdown: (d: Drawdown, loom_settings: LoomSettings, origin: number) : Promise<Loom>  => {\n     return Promise.resolve(null);\n    },\n    computeDrawdownFromLoom: (l: Loom) : Promise<Drawdown> => {\n      return Promise.resolve(null);\n    },\n    recomputeLoomFromThreadingAndDrawdown:(l:Loom, loom_settings: LoomSettings, d: Drawdown, origin: number): Promise<Loom> =>{\n      return Promise.resolve(null);\n    },\n    updateThreading: (loom: Loom, ndx:InterlacementVal) => {\n      return loom;\n    },\n    updateTieup: (loom: Loom,ndx:InterlacementVal) => {\n      return loom;\n    },\n    updateTreadling : (loom: Loom,ndx:InterlacementVal) => {\n      return loom;\n    },\n    insertIntoThreading: (loom: Loom, j: number, val: number) : Loom => {\n      return loom;\n    },\n    insertIntoTreadling: (loom: Loom, i: number, val: Array<number>) : Loom => {\n      return loom;\n    },\n    pasteThreading: (loom:Loom, drawdown: Drawdown,ndx: InterlacementVal, width: number, height: number) : Loom => {\n      return loom;\n    },\n    pasteTreadling: (loom:Loom, drawdown: Drawdown,ndx: InterlacementVal, width: number, height: number) : Loom => {\n      return loom;\n    },\n    pasteTieup: (loom:Loom, drawdown: Drawdown,ndx: InterlacementVal, width: number, height: number) : Loom => {\n      return loom;\n    },\n    deleteFromThreading: (loom: Loom, j: number) : Loom => {\n      return loom;\n    },\n    deleteFromTreadling: (loom: Loom, i: number) : Loom => {\n      return loom;\n    }\n\n  }\n\n  /**\n   * contains the set of functions to be used when working on a direct tieup or dobby loom\n   */\n  const direct_utils: LoomUtil = {\n    type: 'direct', \n    displayname: 'direct-tie or dobby loom',\n    dx: \"draft from drawdown or threading/tieup/treadling. Assumes you are using a direct tie and mutiple treadle assignments\",\n    computeLoomFromDrawdown: (d: Drawdown, loom_settings: LoomSettings, origin: number) : Promise<Loom>  => {\n        \n        const l: Loom = {\n            threading: [],\n            tieup: [],\n            treadling: []\n        }\n\n            //now calculate threading \n            return generateThreading(d)\n            .then(obj => {\n\n            l.threading = obj.threading.slice();\n\n            //add treadling\n            for(let i = 0; i < wefts(d); i++){\n              let active_ts = [];\n              let i_pattern = d[i].slice();\n              i_pattern.forEach((cell, j) => {\n                if(getCellValue(cell) == true){\n                  const frame_assignment = obj.threading[j];\n                  if(frame_assignment !== -1){\n                    active_ts.push(frame_assignment);\n                  }\n                }\n              });\n              l.treadling[i] = utilInstance.filterToUniqueValues(active_ts);\n            }\n\n            const num_frames = Math.max(numFrames(l), loom_settings.frames);\n            const num_treadles = Math.max(numTreadles(l), loom_settings.treadles);\n            const dim = Math.max(num_frames, num_treadles)\n\n\n            l.tieup = generateDirectTieup(dim);\n\n             return l;\n\n            });\n\n    },\n    computeDrawdownFromLoom: (l: Loom, origin: number) : Promise<Drawdown> => {\n      return computeDrawdown(l);\n    },\n    recomputeLoomFromThreadingAndDrawdown:(l:Loom, loom_settings: LoomSettings, d: Drawdown, origin: number): Promise<Loom> =>{\n      const new_loom: Loom = {\n        threading: l.threading.slice(),\n        tieup: [],\n        treadling: []\n    }\n\n  \n      //add treadling\n      for(let i = 0; i < wefts(d); i++){\n        let active_ts = [];\n        let i_pattern = d[i].slice();\n        i_pattern.forEach((cell, j) => {\n          if(getCellValue(cell) == true){\n            const frame_assignment = new_loom.threading[j];\n            if(frame_assignment !== -1){\n              active_ts.push(frame_assignment);\n            }\n          }\n        });\n        new_loom.treadling[i] = utilInstance.filterToUniqueValues(active_ts);\n      }\n\n      const num_frames = Math.max(numFrames(l), loom_settings.frames);\n      const num_treadles = Math.max(numTreadles(l), loom_settings.treadles);\n      const dim = Math.max(num_frames, num_treadles)\n\n\n      new_loom.tieup = generateDirectTieup(dim);\n      return Promise.resolve(new_loom)\n\n    },\n    updateThreading: (loom: Loom, ndx:InterlacementVal) => {\n        if(ndx.val) loom.threading[ndx.j] = ndx.i;\n        else loom.threading[ndx.j] = -1;\n        return loom;\n    },\n    updateTieup: (loom: Loom, ndx:InterlacementVal) => {\n      return loom;\n    },\n    updateTreadling : (loom: Loom, ndx:InterlacementVal) => {\n      if(ndx.val){\n          if(loom.treadling[ndx.i].find(el => el === ndx.j) === undefined) loom.treadling[ndx.i].push(ndx.j);\n      }else{\n          loom.treadling[ndx.i] = loom.treadling[ndx.i].filter(el => el !== ndx.j);\n      }\n    return loom;\n    },\n    insertIntoThreading: (loom: Loom, j: number, val: number) : Loom => {\n      loom.threading.splice(j,0, val);\n      return loom;\n    },\n    insertIntoTreadling: (loom: Loom, i: number, val: Array<number>) : Loom => {\n      loom.treadling.splice(i,0, val);\n      return loom;\n    },\n    pasteThreading: (loom:Loom, drawdown: Drawdown, ndx: InterlacementVal, width: number, height: number) : Loom => {\n     return pasteDirectAndFrameThreading(loom, drawdown, ndx, width, height);\n    },\n    pasteTreadling: (loom:Loom, drawdown: Drawdown, ndx: InterlacementVal, width: number, height: number) : Loom => {\n      return pasteDirectAndFrameTreadling(loom, drawdown, ndx, width, height);\n    },\n    pasteTieup: (loom:Loom, drawdown: Drawdown,  ndx: InterlacementVal, width: number, height: number) : Loom => {\n      return loom;\n    },\n    deleteFromThreading: (loom: Loom, j: number) : Loom => {\n      loom.threading.splice(j, 1);\n      return loom;\n    },\n    deleteFromTreadling: (loom: Loom, i: number) : Loom => {\n      loom.treadling.splice(i, 1);\n      return loom;\n    }\n  }\n\n  /**\n   * contains the set of functions to be used when working on a frame loom\n   */\n  const frame_utils: LoomUtil = {\n    type: 'frame', \n    displayname: 'shaft/treadle loom',\n    dx: \"draft from drawdown or threading/tieup/treadling. Assumes you are assigning treadles to specific frame via tieup\",\n    computeLoomFromDrawdown: (d: Drawdown, loom_settings: LoomSettings, origin: number) : Promise<Loom>  => {\n        const loom: Loom = {\n            threading: [],\n            tieup: [],\n            treadling: []\n        }\n         \n        return generateThreading(d)\n          .then(threading => {\n            loom.threading = threading.threading;\n            return generateTreadlingforFrameLoom(d)\n          })\n          .then(treadling => {\n            loom.treadling = treadling.treadling;\n        \n            loom.tieup = [];\n            const num_frames = Math.max(numFrames(loom), loom_settings.frames);\n            const num_treadles = Math.max(numTreadles(loom), loom_settings.treadles);\n\n            for(let frames = 0; frames < num_frames; frames++){\n              loom.tieup.push([]);\n              for(let treadles = 0; treadles < num_treadles; treadles++){\n                loom.tieup[frames].push(false);\n              }\n            }\n\n            for(let i = 0; i < loom.treadling.length; i++){\n              if(loom.treadling[i].length > 0){\n                const active_treadle_id = loom.treadling[i][0];\n                const row = d[i];\n                row.forEach((cell, j) => {\n                  if(getCellValue(cell) == true){\n                    const active_frame_id = loom.threading[j];\n                    loom.tieup[active_frame_id][active_treadle_id] = true;\n                  } \n                });\n              }\n            }\n\n            return loom;\n          })\n\n      \n    \n    },\n    \n    computeDrawdownFromLoom: (l: Loom, origin: number) : Promise<Drawdown> => {\n      return computeDrawdown(l);\n    },\n    recomputeLoomFromThreadingAndDrawdown:(l:Loom, loom_settings: LoomSettings, d: Drawdown, origin: number): Promise<Loom> =>{\n      const new_loom: Loom = {\n        threading: l.threading.slice(),\n        tieup: [],\n        treadling: []\n      }\n     \n      return  generateTreadlingforFrameLoom(d)\n      .then(treadling => {\n        new_loom.treadling = treadling.treadling;\n    \n        new_loom.tieup = [];\n        const num_frames = Math.max(numFrames(l), loom_settings.frames);\n        const num_treadles = Math.max(numTreadles(l), loom_settings.treadles);\n\n        for(let frames = 0; frames < num_frames; frames++){\n          new_loom.tieup.push([]);\n          for(let treadles = 0; treadles < num_treadles; treadles++){\n            new_loom.tieup[frames].push(false);\n          }\n        }\n\n        for(let i = 0; i < new_loom.treadling.length; i++){\n          if(new_loom.treadling[i].length > 0){\n            const active_treadle_id = new_loom.treadling[i][0];\n            const row = d[i];\n            row.forEach((cell, j) => {\n              if(getCellValue(cell) == true){\n                const active_frame_id = new_loom.threading[j];\n                new_loom.tieup[active_frame_id][active_treadle_id] = true;\n              } \n            });\n          }\n        }\n\n        return Promise.resolve(new_loom);\n      })\n    },\n    updateThreading: (loom:Loom, ndx: InterlacementVal) : Loom => {\n        if(ndx.val) loom.threading[ndx.j] = ndx.i;\n        else loom.threading[ndx.j] = -1;\n        return loom;\n    },\n    updateTieup: (loom:Loom, ndx: InterlacementVal) : Loom => {\n        loom.tieup[ndx.i][ndx.j] = ndx.val;\n        return loom;\n\n    },\n    updateTreadling: (loom:Loom, ndx: InterlacementVal) : Loom => {\n        if(ndx.val){\n            if(loom.treadling[ndx.i].length > 0) loom.treadling[ndx.i] = [];\n            loom.treadling[ndx.i].push(ndx.j);\n        }else{\n            loom.treadling[ndx.i] = loom.treadling[ndx.i].filter(el => el !== ndx.j);\n        }\n      return loom;\n    },\n    insertIntoThreading: (loom: Loom, j: number, val: number) : Loom => {\n      loom.threading.splice(j,0, val);\n      return loom;\n    },\n    insertIntoTreadling: (loom: Loom, i: number, val: Array<number>) : Loom => {\n      loom.treadling.splice(i,0, val);\n      return loom;\n    },\n    pasteThreading: (loom:Loom, drawdown: Drawdown, ndx: InterlacementVal, width: number, height: number) : Loom => {\n      return pasteDirectAndFrameThreading(loom, drawdown, ndx, width, height);\n    },\n    pasteTreadling: (loom:Loom,drawdown: Drawdown, ndx: InterlacementVal, width: number, height: number) : Loom => {\n      return pasteDirectAndFrameTreadling(loom, drawdown, ndx, width, height);\n    },\n    pasteTieup: (loom:Loom,drawdown: Drawdown, ndx: InterlacementVal, width: number, height: number) : Loom => {\n      return loom;\n    },\n    deleteFromThreading: (loom: Loom, j: number) : Loom => {\n      loom.threading.splice(j, 1);\n      return loom;\n    },\n    deleteFromTreadling: (loom: Loom, i: number) : Loom => {\n      loom.treadling.splice(i, 1);\n      return loom;\n    }\n\n  \n  }\n\n\n/*** SHARED FUNCTIONS USED WHEN COMPUTING LOOM STATESs ********/\n\n\nexport const pasteDirectAndFrameThreading = (loom:Loom, drawdown: Drawdown, ndx: InterlacementVal, width: number, height: number) : Loom => {\n    \n  for(let j = 0; j < width; j++){\n    const pattern_ndx = j % drawdown[0].length;\n    const column_vals = drawdown.map(row => row[pattern_ndx]);\n    const frame = column_vals.findIndex(cell => getCellValue(cell) == true);\n    if(frame < numFrames(loom)) loom.threading[ndx.j + j] = frame;\n  }\n\n  return loom;\n\n}\n\nexport const pasteDirectAndFrameTreadling= (loom:Loom, drawdown: Drawdown, ndx: InterlacementVal, width: number, height: number) : Loom => {\n    \n  for(let i = 0; i < height; i++){\n    const pattern_ndx = i % drawdown.length;\n    const treadle_list = [];\n    for(let j = 0; j < numTreadles(loom); j++){\n      if(getCellValue(drawdown[pattern_ndx][j]) == true) treadle_list.push(j);\n    }\n    loom.treadling[ndx.i + i] = treadle_list.slice();\n  }\n\n  return loom;\n\n}\n\n\n/**\n   * flips the loom according to the origin and then calls functions to recalculate drawdown\n   * @param l a loom to use when computing\n   * @returns the computed draft\n   */\n export const flipAndComputeDrawdown = (l: Loom, horiz: boolean, vert:boolean) : Promise<Drawdown> => {\n    \n  return flipLoom(l, horiz, vert).then(loom => {\n      return computeDrawdown(loom);\n    }).then(drawdown => {\n       return drawdown\n    });\n  }\n\n  \n  /**\n   * computes the drawdown based on a given loom configuration\n   * @param loom \n   * @returns the resulting drawdown\n   */\n  export const computeDrawdown = (loom: Loom) : Promise<Drawdown> => {\n\n    let pattern = createBlankDrawdown(loom.treadling.length, loom.threading.length);\n    for (var i = 0; i < loom.treadling.length;i++) {\n      const active_treadles: Array<number> = loom.treadling[i].slice();\n      if (active_treadles.length > 0) {\n        active_treadles.forEach((treadle) => {\n\n\n          for (var j = 0; j < loom.tieup.length; j++) {\n            if (loom.tieup[j][treadle]) {\n              for (var k = 0; k < loom.threading.length;k++) {\n                if (loom.threading[k] == j) {\n                  pattern[i][k] = setCellValue(pattern[i][k], true);\n                }\n              }\n            }\n          }\n        });\n      }\n    }\n\n    return Promise.resolve(pattern);\n  \n  }\n\n\n  /**\n  * generates a threading based on the provided drawdown\n   * @param drawdown the drawdown to use \n   * @returns an object containing the threading pattern and the number of frames used\n   */\n  export const generateThreading = (drawdown: Drawdown) : Promise<{threading: Array<number>, num: number}> => {\n    let frame = -1;\n    let threading = [];\n    //always assign the origin to one\n    //threading[] = -1;\n\n    //progressively add new frames in the order they appear\n    for(let j = 0; j < warps(drawdown); j++){\n      const blank = utilInstance.colIsBlank(j, drawdown);\n      if(blank) threading[j] = -1;\n      else{\n      const match = utilInstance.hasMatchingColumn(j, drawdown);\n        if(match === -1 || match > j){\n          frame++;\n          threading[j] = frame;\n        }else{\n          threading[j] = threading[match];\n        }\n      }\n    }\n\n    return Promise.resolve({threading:threading, num:frame});\n\n  }\n\n\n  /**\n   * This function sets the treadling based on a adjusted pattern (e.g. a pattern that has been flipped based on the users selected origin point)\n   * @param pattern the drawdown to use to generate the treadling\n   * @returns an object containing the treadling and the total number of treadles used\n   */\n   export const generateTreadlingforFrameLoom = (pattern: Drawdown) : Promise<{treadling:Array<Array<number>>, num:number}> =>{\n    let treadle = -1;\n    let treadling = [];\n    //always assign the origin to one\n\n    //progressively add new frames in the order they appear\n    for(let i = 0; i < pattern.length; i++){\n\n      const has_up = pattern[i].find(el => getCellValue(el) == true);\n      if(has_up === undefined) treadling[i] = [];\n      else{\n      const match = utilInstance.hasMatchingRow(i, pattern);\n        if(match === -1 || match > i){\n          treadle++;\n          treadling[i] = [treadle];\n        }else{\n          treadling[i] = treadling[match];\n        }\n      }\n    }\n    return Promise.resolve({treadling: treadling, num: treadle});\n\n  }\n\n\n  /**\n   * generates a direct tieup for the give size\n   * @param size the number of frames and treadles\n   * @returns a tieup pattern of the specified size\n   */\n  export const generateDirectTieup = (size:number) : Array<Array<boolean>> => {\n //add tieup\n    const tieup = [];\n    for(let i = 0; i < size; i++){\n      tieup.push([]);\n      for(let j = 0; j < size; j++){\n        if(i == j) tieup[i][j] = true;\n        else tieup[i][j] = false;\n      }\n    }\n    return tieup.slice();\n  }\n\n  /**\n   * flips the draft horizontally and/or vertically. Used to flip the draft so that (0,0) is in the top left, no matter which origin point is selected\n   * @param d the pattern to flip\n   * @param horiz do horizontal flip?\n   * @param vert do vertical flip?\n   * @returns the flipped pattern\n   */\n  export const flipPattern = (d: Drawdown, horiz: boolean, vert: boolean) : Promise<Drawdown> => {\n\n\n    const d_flip = d.slice();\n    // for(let i = 0; i < d.length; i++){\n    //   d_flip.push([]);\n    //   for(let j = 0; j < d[i].length; j++){\n    //     if(horiz && vert) d_flip[i][j] = new Cell(d[d.length -1 - i][d[i].length - 1 - j].getHeddle());\n    //     if(horiz && !vert) d_flip[i][j] = new Cell(d[i][(d[i].length - 1 - j)].getHeddle());\n    //     if(!horiz && vert) d_flip[i][j] = new Cell(d[d.length -1 - i][j].getHeddle());\n    //     if(!horiz && !vert) d_flip[i][j] = new Cell(d[i][j].getHeddle());\n    //   }\n    // }\n\n    return Promise.resolve(d_flip);\n\n  }\n\n  /**\n   * calls the series of functions required to flip the looms to common origin based of user selected origin.\n   * @param loom the original loom\n   * @returns the flipped loom\n   */\n  export const flipLoom = (loom:Loom, horiz: boolean, vert: boolean) : Promise<Loom> => {\n   \n\n    if(loom === null || loom == undefined) return Promise.resolve(null);\n\n    const refs = [];\n    let new_loom = {\n      threading: loom.threading.slice(), \n      tieup: loom.tieup.slice(),\n      treadling: loom.treadling.slice()\n    }\n\n\n    let fns = [];\n      if (vert){\n        refs.push('treadling')\n        fns.push(flipTreadling(loom.treadling));\n      }\n      if(horiz){\n        refs.push('threading')\n        fns.push(flipThreading(loom.threading))\n      }\n\n      return Promise.all(fns).then(res => {\n        for(let i = 0; i < refs.length; i++){\n          if(refs[i] === 'treadling') new_loom.treadling = res[i];\n          if(refs[i] === 'threading') new_loom.threading = res[i];\n        }\n\n        return Promise.resolve(new_loom);\n\n      });\n}\n\n\n  /**\n   * flips the threading order so that what was leftmost becomes rightmost\n   * @param threading \n   * @returns the flipped threading order\n   */\n  export const flipThreading = (threading: Array<number>) : Promise<Array<number>> => {\n\n\n    const t_flip = [];\n    for(let i = 0; i < threading.length; i++){\n      t_flip[i] = threading[threading.length -1 - i];\n    }\n    return Promise.resolve(t_flip);\n  }\n\n    /**\n   * flips the threading order so that what was leftmost becomes rightmost\n   * @param treadling \n   * @returns the flipped threading order\n   */\n  export const flipTreadling = (treadling: Array<Array<number>>) : Promise<Array<Array<number>>> =>{\n\n      const t_flip = [];\n      for(let i = 0; i < treadling.length; i++){\n        t_flip[i] = treadling[treadling.length -1 - i].slice();\n      }\n      return Promise.resolve(t_flip);\n  }\n\n  /**\n   * flips the threading order so that what was leftmost becomes rightmost\n   * @param treadling \n   * @returns the flipped threading order\n   */\n  export const flipTieUp = (tieup: Array<Array<boolean>>, horiz: boolean, vert: boolean) : Promise<Array<Array<boolean>>> => {\n\n    const t_flip:Array<Array<boolean>> = [];\n    for(let i = 0; i < tieup.length; i++){\n      t_flip.push([]);\n      for(let j = 0; j < tieup[i].length; j++){\n        if(horiz && vert) t_flip[i][j] = tieup[tieup.length -1 - i][tieup[i].length - 1 - j];\n        if(horiz && !vert) t_flip[i][j] = tieup[i][(tieup[i].length - 1 - j)];\n        if(!horiz && vert) t_flip[i][j] = tieup[tieup.length -1 - i][j];\n        if(!horiz && !vert) t_flip[i][j] = tieup[i][j];\n      }\n    }\n\n    return Promise.resolve(t_flip);\n}\n\n/**\n * returns the correct loom util object by string\n * @param type the type of loom you are using\n * @returns \n */\nexport const getLoomUtilByType = (type: 'frame' | 'direct' | 'jacquard' | string) : LoomUtil =>{\n\n    switch(type){\n        case 'frame': return frame_utils;\n        case 'direct': return direct_utils;\n        case 'jacquard': return jacquard_utils;\n    }\n\n}\n\n/**\n * calculates the total number of frames used in this loom\n * since its called frequently, keep an eye on this to make sure it isn't hanging page loading \n * and/or call it once per needed function (instead of multiple times in one function)\n * @param loom \n * @returns the highest number found in the array\n */\nexport const numFrames = (loom: Loom) : number => {\n\n  if(loom === null || loom === undefined) return 0;\n\n  let max = loom.threading.reduce((acc, el) => {\n    if(el > acc){\n      acc = el;\n    }\n    return acc;\n  }, 0);\n  return max+1;\n}\n\n/**\n * calculates the total number of frames used in this loom\n * since its called frequently, keep an eye on this to make sure it isn't hanging page loading \n * @param loom \n * @returns the highest number found in the array\n */\n export const numTreadles = (loom: Loom) : number => {\n\n  if(loom == null) return 0;\n\n  let max =  loom.treadling.reduce((acc, el) => {\n    \n    let max_in_list = el.reduce((sub_acc, sub_el) => {\n      if(sub_el > acc) sub_acc = sub_el;\n      return sub_acc;\n    }, 0) ;\n    \n    if(max_in_list > acc){\n      acc = max_in_list;\n    }\n    return acc;\n  }, 0);\n\n  return max+1;\n}\n\n/**\n * checks if a given interlacement is within the range of the threading\n * @param loom the loom to check with\n * @param ndx the interlacement to check\n * @returns true or false to determine if in or out of range\n */\nexport const isInThreadingRange = (loom: Loom, ndx: Interlacement) : boolean => {\n  if(ndx.i < 0) return false;\n  if(ndx.i > numFrames(loom)) return false;\n  if(ndx.j < 0) return false;\n  if(ndx.j >= loom.threading.length) return false;\n  return true;\n}\n\n\n/**\n * checks if a given interlacement is within the range of the threading specified by the user\n * @param loom the loom to check with\n * @param ndx the interlacement to check\n * @returns true or false to determine if in or out of range\n */\n export const isInUserThreadingRange = (loom: Loom, loom_settings: LoomSettings, ndx: Interlacement) : boolean => {\n  \n  const frames = Math.max(loom_settings.frames, numFrames(loom));\n  \n  if(ndx.i < 0) return false;\n  if(ndx.i > frames) return false;\n  if(ndx.j < 0) return false;\n  if(ndx.j >= loom.threading.length) return false;\n  return true;\n}\n\n\n\n/**\n * checks if a given interlacement is within the range of the threading\n * @param loom the loom to check with\n * @param ndx the interlacement to check\n * @returns true or false to determine if in or out of range\n */\n export const isInTreadlingRange = (loom: Loom, ndx: Interlacement) : boolean => {\n  if(ndx.j < 0) return false;\n  if(ndx.j > numTreadles(loom)) return false;\n  if(ndx.i < 0) return false;\n  if(ndx.i >= loom.treadling.length) return false;\n  return true;\n}\n\n/**\n * checks if a given interlacement is within the range of the threading\n * @param loom the loom to check with\n * @param ndx the interlacement to check\n * @returns true or false to determine if in or out of range\n */\n export const isInUserTreadlingRange = (loom: Loom, loom_settings: LoomSettings, ndx: Interlacement) : boolean => {\n  \n  const treadling = Math.max(loom_settings.treadles, numTreadles(loom));\n\n  if(ndx.j < 0) return false;\n  if(ndx.j > treadling) return false;\n  if(ndx.i < 0) return false;\n  if(ndx.i >= loom.treadling.length) return false;\n  return true;\n}\n\n\n\n/**\n * checks if a given interlacement is within the range of the threading\n * @param loom the loom to check with\n * @param ndx the interlacement to check\n * @returns true or false to determine if in or out of range\n */\n export const isInTieupRange = (loom: Loom, ndx: Interlacement) : boolean => {\n  if(ndx.i < 0) return false;\n  if(ndx.i > loom.tieup.length) return false;\n  if(ndx.i < 0) return false;\n  if(ndx.i >= loom.tieup[0].length) return false;\n  return true;\n}\n\n/**\n * checks if a given interlacement is within the range of the threading including the user defined settings\n * @param loom the loom to check with\n * @param ndx the interlacement to check\n * @returns true or false to determine if in or out of range\n */\n export const isInUserTieupRange = (loom: Loom, loom_settings: LoomSettings, ndx: Interlacement) : boolean => {\n  const frames = Math.max(loom_settings.frames, numFrames(loom));\n  const treadling = Math.max(loom_settings.treadles, numTreadles(loom));\n\n  if(ndx.i < 0) return false;\n  if(ndx.i >= frames) return false;\n  if(ndx.i < 0) return false;\n  if(ndx.i >= treadling) return false;\n  return true;\n}\n\n\n/** \n * returns true if this loom typically requires a view of threading and tieup\n */\n\nexport const isFrame = (loom_settings: LoomSettings) : boolean => {\n  if(loom_settings.type !== 'jacquard') return true;\n  return false;\n}\n\n\n   /**\n   * sets up the draft from the information saved in a .ada file\n   * @param data \n   */\n  export const loadLoomFromFile = (loom: any, flips: any, version: string) : Promise<Loom> => {\n\n    if(loom == null) return Promise.resolve(null);\n\n    if(!utilInstance.sameOrNewerVersion(version, '3.4.5')){\n      //tranfer the old treadling style on looms to the new style updated in 3.4.5\n       loom.treadling = loom.treadling.map(treadle_id => {\n        if(treadle_id == -1) return [];\n        else return [treadle_id];\n      });\n    \n    }else{\n      //handle case where firebase does not save empty treadles\n      //console.log(\"IN LOAD LOOM\", loom.treadling);\n      for(let i = 0; i < loom.treadling.length; i++){\n        if(loom.treadling[i].length == 1 && loom.treadling[i][0] == -1) loom.treadling[i] = [];\n      }\n    }\n    \n      return flipLoom(loom, flips.horiz, flips.vert)\n      .then(flipped => {\n        return flipped;\n      })\n      \n    }\n","import { Material } from \"./datatypes\";\n\n\n\nexport const createMaterial = (matDict = null) : Material => {\n\n  const m: Material = {\n    id: -1,\n    name:'',\n    insert: true,\n    visible: true, \n    color: \"#666666\",\n    thickness: 100,\n    diameter: 5, \n    type: 0, \n    notes: '' \n  }\n\n  if(matDict){\n    m.id = matDict.id;\n    m.name = matDict.name;\n    m.insert = matDict.insert;\n    m.visible = matDict.visible;\n    m.color = matDict.color;\n    m.thickness = matDict.thickness;\n    m.diameter = (matDict.diameter === undefined) ? 5 : matDict.diameter;\n    m.type = matDict.type;\n    if(matDict.type === undefined) m.type = 0;\n  // this.image = image;\n    // this.startLabel = startLabel;\n    // this.endLabel = endLabel;\n    m.notes = matDict.notes;\n  }\n\n  return m;\n\n}\n\nexport const setMaterialID = (m: Material, id: number) : Material => {\n  m.id = id;\n  if (!m.name) {\n    m.name = 'Shuttle ' + (id + 1);\n  }\n  return m;\n}\n\n  /**\n   * given a list of material mappings, returns a list where they are all the same size, \n   * @param systems the material mappings to compare\n   */\n  export const standardizeMaterialLists = (shuttles: Array<Array<number>>) : Array<Array<number>> => {\n   \n    if(shuttles.length === 0) return [];\n\n    const standard = shuttles.map(el => el.slice());\n\n     //standardize teh lengths of all the returned arrays \n     const max_length:number = standard.reduce((acc, el) => {\n      const len = el.length;\n      if(len > acc) return len;\n      else return acc;\n    }, 0);\n\n\n    standard.forEach((sys, ndx) => {\n      if(sys.length < max_length){\n        for(let i = sys.length; i < max_length; i++){\n          sys.push(sys[0]);\n        }\n      }\n    });\n\n    return standard;\n  }\n\n\n\n  ","import { Draft, OperationInlet, OpInput, OpParamVal } from \"./datatypes\";\nimport { generateMappingFromPattern, getDraftName, initDraftWithParams, warps, wefts } from \"./drafts\";\nimport { standardizeMaterialLists } from \"./material\";\nimport { makeWarpSystemsUnique, makeWeftSystemsUnique } from \"./system\";\n\n\nexport const operationHasInputs = (op_inputs : Array<OpInput>) : boolean => {\n    return op_inputs.length > 0; \n}\n\nexport const getInputDraft = (op_inputs : Array<OpInput>) : Draft => {\n    if(!operationHasInputs(op_inputs)) return null;\n    else return op_inputs[0].drafts[0];\n}\n\nexport const getAllDraftsAtInlet = (op_inputs : Array<OpInput>, inlet_id: number) : Array<Draft> => {\n  if(!operationHasInputs(op_inputs) || inlet_id < 0) return [];\n  else{\n\n    let req_inputs = op_inputs.filter(el => el.inlet_id == inlet_id);\n    let drafts:Array<Draft> = req_inputs.reduce((acc, el)=> {\n      return acc.concat(el.drafts);\n    }, []);\n\n    return drafts;\n  } \n}\n\n\n\n\nconst returnDefaultValue = ( p: OpParamVal) : any => {\n    switch(p.param.type){\n        case 'boolean': \n        return false;\n\n        case 'draft':\n            return null;\n\n        case 'file':\n            return null;\n        \n        case 'notation_toggle':\n            return false;\n        \n        case 'number':\n            return 0;\n        \n        case 'select':\n            return null;\n        \n        case 'string':\n            return '';\n    }\n}\n\nexport const reduceToStaticInputs = (inlets: Array<OperationInlet>, inlet_vals: Array<any>) : Array<any> => {\n\n  let static_inputs = inlets.filter(el => el.type === 'static');\n  inlet_vals = inlet_vals.slice(0,static_inputs.length);\n\n  return inlet_vals;\n\n}\n\n\n\n\nexport const getOpParamValById = (id: number, params: Array<OpParamVal>) : any => {\n    \n    if(params.length == 0) return null;\n\n    if(id < params.length){\n        return params[id].val;\n    }else{\n    console.error(\"PARAM ID \", id, \" NOT FOUND IN PARAMS \", params)\n     return returnDefaultValue(params[0]);\n    }\n}\n\nexport const getOpParamValByName = (name: string, params: Array<OpParamVal>) : any => {\n    if(params.length == 0) return null;\n\n    const item = params.find(el => el.param.name == 'name');\n    if(item == undefined){\n        console.error(\"CANNOT FIND OPERATION PARAMETER WITH NAME \", name);\n        return returnDefaultValue(params[0])\n    } \n    \n    return item;\n\n    \n}\n\n\nexport const parseDraftNames = (drafts: Array<Draft>) : string  => {\n    \n    if(drafts.length == 0) return '';\n\n\n\n    let flat_names = drafts.reduce((acc, el) => {\n        return acc+\"+\"+getDraftName(el);\n    }, '');\n\n    return flat_names.substring(1);\n    \n\n}\n\n\n\n  /**\n   * transfers data about systems and shuttles from input drafts to output drafts. \n   * @param d the output draft\n   * @param drafts the input drafts\n   * @param type how to handle the transfer (first - use the first input data, interlace, layer)\n   * @returns \n   */\n  export const transferSystemsAndShuttles = (d: Draft, drafts:Array<Draft>,params: any, type: string) => {\n    if(drafts.length === 0) return;\n\n    let rowSystems: Array<Array<number>> =[];\n    let colSystems: Array<Array<number>> =[];\n    let uniqueSystemRows: Array<Array<number>> = [];\n    let uniqueSystemCols: Array<Array<number>> = [];\n\n    let rowShuttles: Array<Array<number>> =[];\n    let colShuttles: Array<Array<number>> =[];\n    let standardShuttleRows: Array<Array<number>> = [];\n    let standardShuttleCols: Array<Array<number>> = [];\n\n\n    switch(type){\n      case 'first':\n\n        //if there are multipleop_input.drafts, \n        d.colShuttleMapping =  generateMappingFromPattern(d.drawdown, drafts[0].colShuttleMapping,'col', 3);\n        d.rowShuttleMapping =  generateMappingFromPattern(d.drawdown, drafts[0].rowShuttleMapping,'row', 3);\n        d.colSystemMapping =  generateMappingFromPattern(d.drawdown, drafts[0].colSystemMapping,'col', 3);\n        d.rowSystemMapping =  generateMappingFromPattern(d.drawdown, drafts[0].rowSystemMapping,'row', 3);\n        \n        break;\n      case 'jointop':\n\n          //if there are multipleop_input.drafts, \n  \n          d.colShuttleMapping =  generateMappingFromPattern(d.drawdown, drafts[0].colShuttleMapping,'col', 3);\n          d.colSystemMapping =  generateMappingFromPattern(d.drawdown, drafts[0].colSystemMapping,'col', 3);\n\n          break;\n\n      case 'joinleft':\n          //if there are multipleop_input.drafts, \n          d.rowShuttleMapping =  generateMappingFromPattern(d.drawdown, drafts[0].rowShuttleMapping,'row', 3);\n          d.rowSystemMapping =  generateMappingFromPattern(d.drawdown, drafts[0].rowSystemMapping,'row', 3);\n\n            break;\n      case 'second':\n          const input_to_use = (drafts.length < 2) ?drafts[0] :drafts[1];\n          d.colShuttleMapping =  generateMappingFromPattern(d.drawdown, input_to_use.colShuttleMapping,'col',3);\n          d.rowShuttleMapping =  generateMappingFromPattern(d.drawdown, input_to_use.rowShuttleMapping,'row',3);\n          d.colSystemMapping =  generateMappingFromPattern(d.drawdown, input_to_use.colSystemMapping,'col',3);\n          d.rowSystemMapping =  generateMappingFromPattern(d.drawdown, input_to_use.rowSystemMapping,'row',3);\n         \n\n      case 'materialsonly':\n\n        d.colShuttleMapping =  generateMappingFromPattern(d.drawdown, drafts[1].colShuttleMapping,'col',3);\n        d.rowShuttleMapping =  generateMappingFromPattern(d.drawdown, drafts[1].rowShuttleMapping,'row',3);\n        d.colSystemMapping =  generateMappingFromPattern(d.drawdown, drafts[0].colSystemMapping,'col',3);\n        d.rowSystemMapping =  generateMappingFromPattern(d.drawdown, drafts[0].rowSystemMapping,'row',3);\n       \n        break;\n\n    case 'interlace':\n         rowSystems =drafts.map(el => el.rowSystemMapping);\n         uniqueSystemRows = makeWeftSystemsUnique(rowSystems);\n    \n         rowShuttles =drafts.map(el => el.rowShuttleMapping);\n         standardShuttleRows = standardizeMaterialLists(rowShuttles);\n\n        d.drawdown.forEach((row, ndx) => {\n\n          const select_array: number = ndx %drafts.length; \n          const select_row: number = Math.floor(ndx /drafts.length)%wefts(drafts[select_array].drawdown);\n          d.rowSystemMapping[ndx] = uniqueSystemRows[select_array][select_row];\n          d.rowShuttleMapping[ndx] = standardShuttleRows[select_array][select_row];\n\n        });\n\n  \n     \n      break;\n\n      case 'interlace_warps':\n        colSystems =drafts.map(el => el.colSystemMapping);\n        uniqueSystemCols = makeWeftSystemsUnique(colSystems);\n   \n        colShuttles =drafts.map(el => el.colShuttleMapping);\n        standardShuttleCols = standardizeMaterialLists(colShuttles);\n\n       d.drawdown.forEach((row, ndx) => {\n        \n\n         const select_array: number = ndx %drafts.length; \n         const select_col: number = Math.floor(ndx /drafts.length)%warps(drafts[select_array].drawdown);\n         d.colSystemMapping[ndx] = uniqueSystemCols[select_array][select_col];\n         d.colShuttleMapping[ndx] = standardShuttleCols[select_array][select_col];\n\n       });\n\n \n    \n     break;\n\n\n        case 'layer':\n           rowSystems=drafts.map(el => el.rowSystemMapping);\n           colSystems =drafts.map(el => el.colSystemMapping);\n           uniqueSystemRows = makeWeftSystemsUnique(rowSystems);\n           uniqueSystemCols= makeWarpSystemsUnique(colSystems);\n      \n           rowShuttles =drafts.map(el => el.rowShuttleMapping);\n           colShuttles =drafts.map(el => el.colShuttleMapping);\n           standardShuttleRows = standardizeMaterialLists(rowShuttles);\n           standardShuttleCols = standardizeMaterialLists(colShuttles);\n  \n          d.drawdown.forEach((row, ndx) => {\n  \n            const select_array: number = ndx %drafts.length; \n            const select_row: number = Math.floor(ndx /drafts.length)%wefts(drafts[select_array].drawdown);\n          \n            d.rowSystemMapping[ndx] = uniqueSystemRows[select_array][select_row];\n            d.rowShuttleMapping[ndx] = standardShuttleRows[select_array][select_row];\n  \n          });\n  \n  \n        for(let i = 0; i < wefts(d.drawdown); i++){\n          const select_array: number = i %drafts.length; \n          const select_col: number = Math.floor(i /drafts.length)%warps(drafts[select_array].drawdown);\n          d.colSystemMapping[i] = uniqueSystemCols[select_array][select_col];\n          d.colShuttleMapping[i] = standardShuttleCols[select_array][select_col];\n\n        }\n\n\n\n  \n          \n       \n        break;\n  \n\n      case 'stretch':\n        d.colShuttleMapping =  generateMappingFromPattern(drafts[0].drawdown, drafts[0].colShuttleMapping,'col', 3);\n        d.rowShuttleMapping =  generateMappingFromPattern(drafts[0].drawdown, drafts[0].rowShuttleMapping,'row', 3);\n        d.colSystemMapping =  generateMappingFromPattern(drafts[0].drawdown, drafts[0].colSystemMapping,'col', 3);\n        d.rowSystemMapping =  generateMappingFromPattern(drafts[0].drawdown, drafts[0].rowSystemMapping,'row', 3);\n        \n        //need to determine how to handle this - should it stretch the existing information or copy it over\n      break;\n\n      \n                \n    }\n\n\n\n\n  }\n","\nimport { first } from \"rxjs/operators\";\nimport { createCellFromSequenceVal, getCellValue } from \"./cell\";\nimport { Cell, Drawdown } from \"./datatypes\";\nimport utilInstance from \"./util\";\n\nexport module Sequence{\n\n  export class OneD{\n\n    private state: Array<number> = [];\n\n\n    constructor(initSequence:Array<number> = []){\n      if(initSequence){\n        this.state = initSequence;\n      }\n      return this;\n    }\n\n       /**\n     * adds a new value to the front of current sequence state\n     * @param val can accept a number or boolean. \n     */\n       unshift(val: number | boolean){\n        if(typeof val == 'number'){\n          this.state.unshift(val)\n        }else{\n          switch(val){\n            case null:\n              this.state.unshift(2);\n              break;\n            case false: \n              this.state.unshift(0);\n              break;\n            case true: \n              this.state.unshift(1);\n              break;\n          }\n        }\n  \n        return this;\n      }\n\n    /**\n     * pushes a new value to the current sequence state\n     * @param val can accept a number or boolean. \n     */\n    push(val: number | boolean){\n      if(typeof val == 'number'){\n        this.state.push(val)\n      }else{\n        switch(val){\n          case null:\n            this.state.push(2);\n            break;\n          case false: \n            this.state.push(0);\n            break;\n          case true: \n            this.state.push(1);\n            break;\n        }\n      }\n\n      return this;\n    }\n\n \n\n     pushMultiple(push_val: number | boolean, multiple: number){\n\n      for(let i = 0; i < multiple; i++){\n        this.push(push_val);\n      }\n      return this;\n\n    }\n\n    unshiftMultiple(push_val: number | boolean, multiple: number){\n\n      for(let i = 0; i < multiple; i++){\n        this.unshift(push_val);\n      }\n      return this;\n\n    }\n    \n    \n\n\n    /**\n     * repeats or cuts the current sequence so that it is of length n.\n     * @param n the length of the sequence \n     */\n    resize(n: number){\n\n\n      if(this.state.length == 0) return;\n      let len = this.state.length;\n\n      if(n < len){\n        this.state = this.state.slice(0, n);\n      }else{\n\n        let remainder = n - len;\n\n        for(let j = 0; j < remainder; j++){\n          this.state.push(this.state[j%len]); \n        };\n      }\n\n      return this;\n    }\n\n        /**\n     * adds unset cells so that it is of length n.\n     * @param n the length of the sequence \n     */\n      padTo(n: number){\n\n        if(this.state.length == 0) return;\n  \n        let len = this.state.length;\n        let remainder = n - len;\n  \n        for(let j = 0; j < remainder; j++){\n          this.state.push(2); \n        };\n  \n        return this;\n      }\n    \n\n\n    /**\n     * inverts all of the values of the current state\n     * @returns \n     */\n    invert(){\n      this.state = this.state.map(el => {\n        if(el == 2) return 2;\n        else return (el == 0) ? 1: 0;\n      });\n      return this;\n    }\n\n     /**\n     * slices a portion of the sequence\n     * @returns \n     */\n      slice(start: number, end: number){\n        this.state = this.state.slice(start, end);\n        return this;\n      }\n    \n\n    /**\n     * clears the current state and pushes a new row into the state value\n     * @param row \n     * @returns \n     */\n    import(row: Array<Cell> | Array<number>){\n      this.state = [];\n      row.forEach(cell => {\n        if(typeof cell == 'number') this.push(cell);\n\n        else this.push(getCellValue(cell));\n      })\n      return this;\n\n    }\n\n      /**\n     *  pushes a new row into the state value without clearing the state\n     * @param row \n     * @returns \n     */\n      pushRow(row: Array<Cell> | Array<number>){\n        row.forEach(cell => {\n          if(typeof cell == 'number') this.push(cell);\n  \n          else this.push(getCellValue(cell));\n        })\n        return this;\n  \n      }\n\n    deleteAndDrawIn(val: number){\n\n      if(val < 1 || val >= this.state.length) return this;\n      \n      let deleted = this.state[val];\n\n      this.state = this.state.filter((el, ndx) => ndx !== val);\n      this.state.unshift(deleted);\n      // this.state.push(deleted);\n      return this;\n    }\n\n    /**\n     * given a sequence as input. It makes sure the current state and the sequence submitted to the function are modified to be the same length. They are made the same length by appending unset values to the sequence.  \n     * @param seq \n     * @returns \n     */\n    matchSize(seq: Sequence.OneD) {\n      if(this.state.length < seq.length()){\n        let diff = seq.length() - this.state.length;\n        this.pushMultiple(2, diff);\n      }else if(this.state.length > seq.length()){\n        let diff = seq.length() - this.state.length;\n        seq.pushMultiple(2, diff)\n      }\n      return this;\n    }\n\n    computeFilter(filter: string, seq: Sequence.OneD){\n\n      this.matchSize(seq);\n\n      for(let i = 0; i < this.length(); i++){\n        let bool_a = null;\n        if(this.state[i] == 0) bool_a = false;\n        if(this.state[i] == 1) bool_a = true;\n\n        let bool_b = null;\n        if(seq.get(i) == 0) bool_b = false;\n        if(seq.get(i) == 1) bool_b = true;\n        let res:boolean = utilInstance.computeFilter(filter, bool_a, bool_b);\n\n        switch (res){\n          case null:\n            this.state[i] = 2;\n            break;\n          case false:\n            this.state[i] = 0;\n            break;\n          case true:\n            this.state[i] = 1;\n            break;\n        }\n      }\n\n      return this;\n\n    }\n\n\n    /**\n     * shifts the sequence in the amount of val\n     * @param val a positive or negative number that controls the direction of the shift\n     * @returns \n     */\n    shift(val: number){\n      this.state = this.state.map((el, ndx) => {     \n        let shift_ndx = (ndx - val)%this.state.length;\n        if(shift_ndx < 0) shift_ndx+= this.state.length;\n        return this.state[shift_ndx];\n      });\n      return this;\n    }\n\n    /**\n     * repeats the sequence val times returning a sequence of size val * original sequence\n     * @param val the number of times you would like to repeat. 1 returns itself. 0 returns nothing\n     * @returns \n     */\n    repeat(val: number){\n      if(val <= 0) return;\n      for(let j = 0; j < val-1; j++){\n        this.state = this.state.concat(this.state);\n      }\n      return this;\n    }\n\n\n    reverse(){\n      this.state = this.state.reverse();\n      return this;\n    }\n\n\n    /**\n     * provides the value of the state at this given moment of computation. \n     * @returns the sequence as a numeric array\n     */\n    val():Array<number>{\n      return this.state.slice();\n    }\n\n    /**\n     * gets the value at a specified position\n     * @returns the value at this location, or -1 if the location was invalid\n     */\n    get(i: number):number{\n      if(i >= 0 && i < this.length()) return this.state[i];\n      return -1;\n    }\n\n       /**\n     * gets the value at a specified position\n     * @returns the value at this location, or -1 if the location was invalid\n     */\n    set(i: number, val: number |boolean){\n        if(i < 0 || i > this.length()) return this;\n\n        let insert_val = <number> val;\n        if(typeof val != 'number'){\n         \n          switch(val){\n            case null:\n              insert_val = 2;\n              break;\n            case false: \n            insert_val = 0;\n            break;\n            case true: \n            insert_val = 1;\n            break;\n          }\n        }\n\n        this.state[i] = insert_val\n        return this;\n    }\n        \n    \n\n    /**\n     * returns the length of the given state\n     * @returns a number 0 or above\n     */\n    length():number{\n      return this.state.length;\n    }\n\n  \n\n  }\n\n  export class TwoD{\n\n    private state: Array<Array<number>> = [];\n\n\n    constructor(){\n      return this;\n    }\n\n\n    deleteWeft(i: number){\n      this.state = this.state.filter((el, ndx)=> ndx != i);\n      return this;\n   }\n\n   deleteWarp(j: number){\n     this.state.forEach((row, i) => {\n      this.state[i] = row.filter((el, ndx)=> ndx != j);\n     });\n     return this;\n  }\n\n  /**\n   * uses the current state to populate a new space, but only upon a certain set of warps and wefts. \n   * @param weftsys - the weft system upon which to map this draft\n   * @param warpsys - the warp system upon which to map this draft\n   * @param weft_system_map - the pattern of weft systems along the wefts\n   * @param warp_system_draft - the pattern of warp systems along the warps\n   */\n  mapToSystems(weftsys: Array<number>, warpsys: Array<number>, weft_system_map: Sequence.OneD, warp_system_map: Sequence.OneD){\n    // console.log(\"MAPPING \", this.state, \" to \", weftsys, warpsys)\n    let total_wefts: number = 0;\n    total_wefts = utilInstance.lcm([this.wefts(), weft_system_map.length()])*weft_system_map.length();\n\n    let total_warps: number = 0;\n    total_warps = utilInstance.lcm([this.warps(), warp_system_map.length()])*warp_system_map.length();\n\n    //create a blank draft of the size needed that we'll copy into \n    let mapped_seq = new Sequence.TwoD().setBlank(2).fill(total_warps, total_wefts);\n\n    //now map the new values within that space\n    let within_sequence_i = 0; \n    let within_sequence_j = 0;\n\n    for(let i = 0; i < total_wefts; i++){\n      let active_weft_system = weft_system_map.get(i%weft_system_map.length());\n      if(weftsys.find(el => el == active_weft_system) !== undefined){\n        within_sequence_j = 0;\n        for(let j = 0; j < total_warps; j++){\n          let active_warp_system = warp_system_map.get(j%warp_system_map.length());\n\n          if(warpsys.find(el => el == active_warp_system) !== undefined){\n            mapped_seq.set(i, j, this.get(within_sequence_i, within_sequence_j), false)\n            within_sequence_j = (within_sequence_j + 1) % this.warps();\n          }\n        }\n        within_sequence_i = (within_sequence_i + 1) % this.wefts();\n      }\n    }\n\n    this.state = mapped_seq.state.slice();\n    return this;\n\n  }\n\n\n  /**\n   * places the non unset values from seq atop any unset values in the current state. It will also make the two sequences compatable sizes by repeating their original values. \n   * @param seq \n   * @returns \n   */\n  overlay(seq: Sequence.TwoD, consider_heddle_down_as_unset: boolean) {\n\n    //first, make the seqences of compatible sizes\n    let total_wefts: number = 0;\n    total_wefts = utilInstance.lcm([this.wefts(), seq.wefts()]);\n\n    let total_warps: number = 0;\n    total_warps = utilInstance.lcm([this.warps(), seq.warps()]);\n\n    this.fill(total_warps, total_wefts);\n    seq.fill(total_warps, total_wefts);\n\n\n    this.state.forEach((row, i) => {\n      row.forEach((cell, j) => {\n        if(seq.get(i, j) !== 2 && cell == 2){\n          this.set(i, j, seq.get(i, j), false);\n        }else if(seq.get(i, j) !== 2 && cell != 2){\n          if(consider_heddle_down_as_unset){\n            if(seq.get(i, j) == 1){\n              this.set(i,j, 1, true);\n            }\n          }else{\n              console.error(\"Sequence 2D, overlay is attempting to overwrite a set value\");\n          }\n        }\n      })\n    })\n\n    \n\n\n\n\n    return this;\n  }\n\n  /**\n   * looks at the given weft. Sets any unset value in this weft to the value provided to the function\n   * @param i \n   * @param val \n   */\n  setUnsetOnWeft(i: number, val: number) {\n\n    let weft:Array<number> = this.getWeft(i);\n    weft.forEach((el, j) => {\n      if(el == 2) this.set(i, j, val, false);\n    });\n\n    return this;\n  }\n\n    /**\n   * looks at the given warp. Sets any unset value in this warp to the value provided to the function\n   * @param j \n   * @param val \n   */\n    setUnsetOnWarp(j: number, val: number) {\n\n      let warp:Array<number> = this.getWarp(j);\n      warp.forEach((el, i) => {\n        if(el == 2) this.set(i, j, val, false);\n      });\n\n      return this;\n    }\n  \n\n\n  layerSystems(warp_system_to_layers: Array<{ws: number, layer: number}>, warp_system_map: Sequence.OneD){\n\n    let before_layering: Sequence.TwoD = this.copy();\n\n    //get the actual layers we are dealing with\n    let layers = utilInstance.filterToUniqueValues(warp_system_to_layers.map(el => el.layer));\n    //might have to make these numbers consequtive?\n\n    for(let l = 0; l < layers.length; l++){\n\n      //get the warp systems associated with this layer\n      let warp_systems: Array<number> = warp_system_to_layers.filter(el => el.layer == l).map(el => el.ws);\n\n      //now go through the wefts, do they interlace on this warp? If yes, \n      //set all the unset values on this weft to down\n      before_layering.state.forEach((row, i) => {\n        \n        //get the first set value\n        let first_set = row.findIndex(el => el !== 2);\n\n        if(first_set !== -1){\n          //is it on this warp system? \n          let interlacing_ws = warp_system_map.get(first_set);\n          // console.log(\"First set value on  \", i, \" is \", first_set, \"interlacing on \", interlacing_ws, \" current warp system is \", warp_systems);\n\n          if(warp_systems.find(el => el == interlacing_ws) !== undefined){\n            //this warp system is interlacing on this layer!\n            this.setUnsetOnWeft(i, 0);\n          }\n        }\n\n      });\n\n      //how, set all the unset values on the warps associated with this \n      for(let j = 0; j < this.warps(); j++){\n        let warp_syst = warp_system_map.get(j % warp_system_map.length());\n        if(warp_systems.find(el => el == warp_syst) !== undefined){\n          this.setUnsetOnWarp(j, 1);\n        }\n      }\n\n\n    } // end for each layer\n    \n\n    return this;\n\n\n  }\n\n/**\n * this sets the value at a given location specified by i and j\n * This function will only succesfully set a value if the current value in that place is \"unset\", otherwise it returns an error that it is attempting to overwrite a value\n * @param i \n * @param j \n * @param val \n * @returns \n */\n  set(i: number, j: number, val: number, can_overwrite_set: boolean) {\n    if(i < 0 || i >= this.wefts()){\n      console.error(\"Sequence2D - attempting to set an out of range weft value\");\n      return this;\n    }\n    if(j < 0 || j >= this.warps()){\n      console.error(\"Sequence2D - attempting to set an out of range warp value\");\n      return this;\n    }\n\n    if(this.state[i][j] !== 2 && !can_overwrite_set){\n\n        console.error(\"overriding set value at \", i, j, this.state[i][j]);\n      return this;\n    }\n\n    this.state[i][j] = val;\n    return this;\n  }\n\n  get(i: number, j: number) : number {\n\n    if(i < 0 || i >= this.wefts()){\n      console.error(\"Sequence2D - attempting to get an out of range weft value\");\n      return -1;\n    }\n    if(j < 0 || j >= this.warps()){\n      console.error(\"Sequence2D - attempting to get an out of range warp value\");\n      return -1;\n    }\n\n    return  this.state[i][j];\n  }\n\n  getWeft(i: number )  : Array<number>{\n    if(i < 0 || i >= this.wefts()){\n      console.error(\"Sequence2D - attempting to get an out of range weft value\");\n      return [];\n    }\n\n    return this.state[i];\n\n  }\n\n  getWarp(j: number )  : Array<number>{\n    if(j < 0 || j >= this.warps()){\n      console.error(\"Sequence2D - attempting to get an out of range warp value\");\n      return [];\n    }\n    return this.state.reduce((acc, val) => {\n      return acc.concat(val[j]);\n    }, []);\n\n  }\n\n\n\n  /**\n   * adds a row to the first (or subsequent row) of the 2D sequence\n   * @param seq the 1D sequence value to add \n   * @returns \n   */\n  pushWarpSequence(seq: Array<number>){\n\n    let height = this.state.length;\n    if(height > 0 && height != seq.length){\n     \n      let lcm = utilInstance.lcm([height, seq.length]);\n      let width = this.state[0].length;\n\n      let difference = lcm - height;\n      if(difference > 0){\n        for(let i = 0; i < difference; i++){\n          this.state.push([]);\n        }\n      }\n\n\n\n      for(let j = 0; j < width; j++){\n        let col = this.state.map(el => el[j]);\n        let col_seq = new OneD(col).resize(lcm).val();\n        for(let i = 0; i < lcm; i++){\n          this.state[i][j] = col_seq[i];\n        }\n      }\n    }\n\n    if(this.state.length == 0){\n      seq.forEach((num, ndx) => {\n        this.state.push([]);\n      })\n    }\n\n    seq.forEach((num, ndx) => {\n      this.state[ndx].push(num);\n    })\n    \n    return this;\n  }\n\n    /**\n   * adds this weft to the front of the pattern\n   * @param seq the 1D sequence value to add \n   * @returns \n   */\n    unshiftWarpSequence(seq: Array<number>){\n      let height = this.state.length;\n      if(this.state.length > 0 && height != seq.length){\n        let lcm = utilInstance.lcm([height, seq.length]);\n        let width = this.state[0].length;\n  \n        for(let j = 0; j < width; j++){\n          let col = this.state.map(el => el[j]);\n          let col_seq = new OneD(col).resize(lcm).val();\n          for(let i = 0; i < lcm; i++){\n            this.state[i][j] = col_seq[i];\n          }\n        }\n      }\n  \n      if(this.state.length == 0){\n        seq.forEach((num, ndx) => {\n          this.state.push([]);\n        })\n      }\n  \n      seq.forEach((num, ndx) => {\n        this.state[ndx].unshift(num);\n      })\n      \n      return this;\n\n    \n  }\n\n    /**\n   * adds a col to the first (or subsequent col) of the 2D sequence\n   * @param seq the 1D sequence value to add \n   * @returns \n   */\n    pushWeftSequence(seq: Array<number>){\n\n\n    \n    if(this.state.length > 0 && this.state[0].length !== seq.length){\n        let width = this.state[0].length;     \n\n        let lcm = utilInstance.lcm([width, seq.length]);\n        \n        this.state.forEach((row, ndx) => {\n          this.state[ndx] = new OneD(row).resize(lcm).val();\n        })\n      }\n      this.state.push(seq);\n\n    \n    return this;\n  }\n\n   /**\n   * adds this weft to the front of the pattern\n   * @param seq the 1D sequence value to add \n   * @returns \n   */\n    unshiftWeftSequence(seq: Array<number>){\n\n\n    \n        if(this.state.length > 0 && this.state[0].length !== seq.length){\n            let width = this.state[0].length;     \n  \n            let lcm = utilInstance.lcm([width, seq.length]);\n            \n            this.state.forEach((row, ndx) => {\n              this.state[ndx] = new OneD(row).resize(lcm).val();\n            })\n          }\n          this.state.unshift(seq);\n  \n        \n        return this;\n    }\n\n    setBlank(val: number | boolean = 2){\n\n      let res = new OneD().push(val).val();\n      this.state = [res];\n      return this;\n    }\n\n    wefts(): number{\n      return this.state.length;\n    }\n\n    warps(): number{\n      if(this.state.length == 0) return 0;\n      return this.state[0].length;\n    }\n\n\n    /**\n     * fills a rectangle of given size with the current state. If the rectangle specified is smaller than state, it crops the current state\n     * @param w the width\n     * @param h the hieght\n     */\n    fill(w: number, h: number) {\n      if(w < 0 || h < 0) return this;\n      if(this.state.length == 0) return;\n\n      let len = this.state.length;\n\n      for(let i = 0; i < h; i++){\n        let row;\n        if(w >= len)\n        row = new OneD(this.state[i%len]).resize(w).val();\n        else{\n        row = new OneD(this.state[i%len].slice(0, w)).val()\n        }\n        this.state[i] = row;\n      }\n\n      if(h < len){\n        this.state = this.state.slice(0, h);\n      }\n\n\n      return this;\n    }\n\n    copy() : Sequence.TwoD {\n\n      let dd = this.export();\n      let copy = new Sequence.TwoD();\n      copy.import(dd);\n\n      return copy;\n    }\n\n\n    /**\n     * clears the current state (if any)\n     * and creates a new 2D Sequence Object from a DD\n     * @param dd \n     */\n    import(dd: Drawdown) {\n      this.state = [];\n      dd.forEach((row, i) => {\n        this.state.push([]);\n        row.forEach((cell, j)=> {\n          switch(getCellValue(cell)){\n            case null:\n              this.state[i][j] = 2;\n              break;\n            case false:\n              this.state[i][j] = 0;\n              break;\n            case true:\n              this.state[i][j] = 1;\n              break;\n          }\n        })\n      });\n      return this;\n    }\n\n    /**\n     * converts the current state to a drawdown format\n     * @returns \n     */\n    export() : Drawdown {\n\n      const dd: Drawdown = [];\n      this.state.forEach((row, i) =>{\n        dd.push([]);\n        row.forEach((cell_val, j) => {\n          dd[i][j] = createCellFromSequenceVal(cell_val);\n        });\n      })\n      return dd;\n\n    }\n\n  }\n\n  \n}\n\n\n","import { System } from \"./datatypes\";\nimport utilInstance from \"./util\";\n\n\n\nexport const createSystem = (systemDict = null) : System => {\n\n  const sys = {\n    id: 0, \n    name: 'system',\n    notes: '',\n    visible: true,\n    in_use: true\n  }\n\n    if (systemDict){\n      sys.id = systemDict.id;\n      sys.id = systemDict.name;\n      sys.id = systemDict.notes;\n      sys.id = systemDict.visible;\n    } \n\n    return sys;\n}\n\nexport const setSystemId = (sys: System, id: number) : System => {\n    sys.id = id;\n    if (!sys.name) {\n      sys.name = 'System ' + (id + 1);\n    }\n    return sys;\n}\n\nexport const getSystemChar = (sys: System) : string => {\n     return String.fromCharCode(97 + sys.id)\n}\n\n\nexport const getSystemCharFromId = (id: number) : string => {\n  return String.fromCharCode(97 + id)\n}\n /**\n   * takes system maps and makes them all unique by adding a base value to the n+1th map. This helps when interlacing \n   * drafts that have different system mappings, and making sure they are each unique. \n   * This function will also return standard sized arrays = to the maximum sized input\n   * @param systems the system mappings to compare\n   */\n export const makeSystemsUnique = (systems: Array<Array<number>>) : Array<Array<number>>  => {\n   \n\n  if(systems.length === 0) return [];\n\n\n const max_in_systems: Array<number> = systems.map(el => utilInstance.getArrayMax(el));\n\n let last_max = 0;\n const unique_systems = systems.map((sys, ndx) => {\n   if(ndx > 0){\n     last_max += (max_in_systems[ndx -1]+1)\n     return sys.map(el => el + last_max);\n   }else{\n     return sys;\n   }\n });  \n\n  //standardize teh lengths of all the returned arrays \n  const max_length:number = unique_systems.reduce((acc, el) => {\n   const len = el.length;\n   if(len > acc) return len;\n   else return acc;\n }, 0);\n\n\n unique_systems.forEach((sys, ndx) => {\n   if(sys.length < max_length){\n     for(let i = sys.length; i < max_length; i++){\n       sys.push(sys[0]);\n     }\n   }\n });\n\n return unique_systems;\n}\n\nexport const  makeWeftSystemsUnique = (systems: Array<Array<number>>) : Array<Array<number>> => {\n\n const unique = makeSystemsUnique(systems);\n\n return unique;\n}\n\nexport const makeWarpSystemsUnique = (systems: Array<Array<number>>) : Array<Array<number>> => {\n\n const unique = makeSystemsUnique(systems);\n\n//  unique.forEach(system => {\n//    system.forEach(el => {\n//      if(this.getWarpSystem(el) === undefined) this.addWarpSystemFromId(el);\n//    })\n//  })\n\n return unique;\n}\n\n\n","/**\n * A collection of functions that are heplful within many areas of the tool\n * @class\n */\n\nimport { SubdraftComponent } from \"../../mixer/palette/subdraft/subdraft.component\";\nimport { MaterialMap } from \"../provider/materials.service\";\nimport { getCellValue, setCellValue } from \"./cell\";\nimport { Point, Interlacement, Bounds, Draft, Loom, LoomSettings, Material, Cell } from \"./datatypes\";\nimport { hasCell, initDraftWithParams, warps, wefts } from \"./drafts\";\nimport { createMaterial, setMaterialID } from \"./material\";\n\n\nclass Util {\n\n    /*Input: two arrays\n    Result: a boolean value for if they are equal or not\n    */\n    equals(array1, array2) {\n      if (array1.length != array2.length){\n        return false;\n      } \n      else {\n        for (var i =0; i < array1.length; i++) {\n          if(array1[i] != array2[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n\n   /**\n    * given a drawdown and a column index, return the column number of the first matching column\n    * @param j \n    * @param drawdown \n    * @returns the col id of the match or -1;\n    */\n    hasMatchingColumn(j: number, drawdown: Array<Array<Cell>>) : number {\n        \n      let unmatch = false;\n      for(let j_comp = 0; j_comp < drawdown[0].length; j_comp++){\n        unmatch = false;\n        if(j_comp != j){\n          for(let i = 0; i < drawdown.length && !unmatch; i++){\n            if(getCellValue(drawdown[i][j]) !== getCellValue(drawdown[i][j_comp])){\n              unmatch = true;\n            }\n          }\n          if(!unmatch){\n            return j_comp;\n          }\n        }\n      }\n\n      return -1;\n\n\n    }\n\n     /**\n    * given a drawdown and a column index, return if the column is blank\n    * @param j \n    * @param drawdown \n    * @returns true or false;\n    */\n      colIsBlank(j: number, drawdown: Array<Array<Cell>>) : boolean {\n        \n       \n        let blank = true;\n        drawdown.forEach((row, i) => {\n          if(getCellValue(row[j]) == true) blank = false;\n        });\n  \n        return blank;\n  \n      }\n  \n\n    /**\n    * given a drawdown and a row index, return the row number of the first matching row\n    * @param j \n    * @param drawdown \n    * @returns the row id of the match or -1;\n    */\n    hasMatchingRow(i: number, drawdown: Array<Array<Cell>>) : number {\n    \n    let unmatch = false;\n    for(let i_comp = 0; i_comp < drawdown.length; i_comp++){\n      unmatch = false;\n      if(i_comp != i){\n        for(let j = 0; j < drawdown[i_comp].length && !unmatch; j++){\n          if(getCellValue(drawdown[i][j]) !== getCellValue(drawdown[i_comp][j])){\n            unmatch = true;\n          }\n        }\n        if(!unmatch){\n          return i_comp;\n        }\n      }\n    }\n\n    return -1;\n\n\n  }\n\n    /**\n     * A function to count the number of occurances of a give value within an array\n     * @param arr the 1D array to search\n     * @param val the value we are seeking\n     * @returns number of occurances\n     */\n    countOccurrences(arr, val){\n      return arr.reduce((a, v) => (v === val ? a + 1 : a), 0)\n    }\n      \n    /*Input: an array of booleans\n    Result: the number of \"ones\" in the \"bitstring\" (in this context, returns the number of true valued booleans in the array of booleans)\n    */\n    countOnes(array) {\n      var counter = 0;\n      for (var i = 0; i < array.length; i++) {\n        if(array[i] == true) {\n          counter+=1;\n        }\n      }\n      return counter;\n    }\n    /*Input: two arrays of booleans\n    Result: a new array of length equal to the length of array1 that has combined array1 with array2 under the \"exclusive or\" operation\n    */\n    xor(array1, array2) {\n      var returnedList = [];\n      for (var i = 0; i < array1.length; i++) {\n        if (array1[i] && array2[i]) {\n          returnedList.push(false);\n        } else if (array1[i] || array2[i]) {\n          returnedList.push(true);\n        } else {\n          returnedList.push(false);\n        }\n      }\n      return returnedList;\n    }\n\n    maxOfPositiveList(array) {\n      var max = -1;\n      for (var i = 0; i < array.length; i++){\n        if (array[i] > max) {\n          max = array[i];\n        }\n      }\n      return max;\n    }\n\n    minOfList(array) {\n      var min = array[0]\n      for (var i = 0; i < array.length; i++) {\n        if (array[i] < min) {\n          min = array[i]\n        }\n      }\n      return min;\n    }\n\n    findSmallestElmtBiggerThan(n, array) {\n      var minElmtBiggerThanN = this.maxOfPositiveList(array) + 1;\n      for (var i =0; i < array.length; i++) {\n        if (array[i] > n && minElmtBiggerThanN[i] > array[i]) {\n          minElmtBiggerThanN = array[i];\n        }\n      }\n      return minElmtBiggerThanN;\n    }\n\n    findSmallestGap(array) {\n      var min = this.minOfList(array);\n      var smallestElmtBiggerThan = this.findSmallestElmtBiggerThan(min,array);\n      var max = this.maxOfPositiveList(array);\n      while (smallestElmtBiggerThan-min < 2 && smallestElmtBiggerThan != (max+1)) {\n        min = min+1;\n        smallestElmtBiggerThan = this.findSmallestElmtBiggerThan(min,array);\n      }\n      return smallestElmtBiggerThan;\n    }\n\n\n  /**\n   * finds the left-most component, used to create bounding box \n   * @param main the component we are comparing to\n   * @param isects all intersecting components\n   * @returns the leftmost component\n   */\n  getLeftMost(main:SubdraftComponent,  isects:Array<SubdraftComponent>):SubdraftComponent{\n\n    return isects.reduce((acc, isect) => {\n      if(isect.getTopleft().x < acc.getTopleft().x) {\n        acc = isect;\n      }\n      return acc;\n    }, main);    \n  }\n\n\n  /**\n   * finds the top-most component, used to create bounding box \n   * @param main the component we are comparing to\n   * @param isects all intersecting components\n   * @returns the top component\n   */\n  getTopMost(main:SubdraftComponent,  isects:Array<SubdraftComponent>):SubdraftComponent{\n\n    return isects.reduce((acc, isect) => {\n      if(isect.getTopleft().y < acc.getTopleft().y) {\n        acc = isect;\n      }\n      return acc;\n    }, main);    \n  }\n\n\n  /**\n   * finds the right-most component, used to create bounding box \n   * @param main the component we are comparing to\n   * @param isects all intersecting components\n   * @returns the rightmost component\n   */\n  // getRightMost(main:SubdraftComponent,  isects:Array<SubdraftComponent>):SubdraftComponent{\n\n  //   return isects.reduce((acc, isect) => {\n  //     if((isect.getTopleft().x + isect.bounds.width) > (acc.getTopleft().x + acc.bounds.width)) {\n  //       acc = isect;\n  //     }\n  //     return acc;\n  //   }, main);    \n  // }\n\n  /**\n   * finds the bottom-most component, used to create bounding box \n   * @param main the component we are comparing to\n   * @param isects all intersecting components\n   * @returns the bottom-most component\n   */\n  // getBottomMost(main:SubdraftComponent,  isects:Array<SubdraftComponent>):SubdraftComponent{\n\n  //   return isects.reduce((acc, isect) => {\n  //     if((isect.getTopleft().y + isect.bounds.height)> (acc.getTopleft().y + acc.bounds.height)) {\n  //       acc = isect;\n  //     }\n  //     return acc;\n  //   }, main);    \n  // }\n\n  /**\n   * takes absolute screen coordinates and returns the i, j position if a cell were to exist at that point\n   * considers the top banner of 62 pixels to offset\n   * @param p the point\n   * @param scale the scale of the view we are using\n   * @returns an Interlacement\n   */\n  resolveCoordsToNdx(p: Point, scale:number) : Interlacement {  \n    const i = Math.floor((p.y) / scale);\n    const j = Math.floor((p.x) / scale);\n    return {i: i, j: j, si: i};\n  }\n\n  /**\n   * takes two interlacements and sees if they are the same\n   * @param p1 the point\n   * @param p2 the point\n   */\n  isSameNdx(p1: Interlacement, p2:Interlacement) : boolean {    \n    if(p1.i != p2.i ) return false;\n    if(p1.j != p2.j) return false;\n    return true;\n  }\n\n   /**\n   * takes two booleans and returns their result based on the ink assigned\n   * @param ink the name of the ink in question \n   * @param a the first (top) value \n   * @param b the second (under) value\n   * @returns boolean result\n   */\n  computeFilter(ink: string, a: boolean, b: boolean):boolean{\n      switch(ink){\n        case 'neq':\n          return (a !== b);\n        break;\n  \n        case 'up':\n          if(a === null) return b;\n          if(a === true) return true;\n          return false;\n        break;\n  \n        case 'down':\n          if(a === null) return b;\n          if(b === null) return a;\n          if(a === false) return false;\n          return b;\n        break;\n  \n        case 'unset':\n          if(a === null) return b;\n          if(b === null) return a;\n          if(a === true) return null;\n          else return b;\n        break;\n  \n        case 'and':\n        if(a === null || b === null) return null;\n        return (a && b)\n        break;\n\n        case 'cut':\n          if(a == null) return a;\n          if(b === null) return a;\n          if(a == true && b == true) return false;\n          return a;\n          break;\n  \n        case 'or':\n          if(a === null) return b;\n          if(b === null) return a;\n          return (a || b);\n        break;\n  \n      }\n    }\n\n/**\n * check if the rectangles defined by the points overlap\n * @param l1 top left point of rectangle 1\n * @param r1 bottom right point of rectangle 1\n * @param l2 top left point of rectangle 2\n * @param r2 bottom right point of rectanble 2\n * @returns true or false in accordance to whether or not they overlap\n */\n  doOverlap(l1:Point,  r1:Point,  l2:Point,  r2:Point){\n\n    if (l1.x == r1.x || l1.y == r2.y || l2.x == r2.x\n        || l2.y == r2.y) {\n        // the line cannot have positive overlap\n        return false;\n    }\n\n    // If one rectangle is on left side of other\n    if (l1.x >= r2.x || l2.x >= r1.x){\n        return false;\n      }\n\n    // If one rectangle is above other\n    if (l1.y >= r2.y || l2.y >= r1.y){\n        return false;\n    }\n    return true;\n  }\n\n   /**\n   * returns a Bounds type that represents the intersection between primary and one intersecting subdraft\n   * @param primary the rectangular area we are checking for intersections\n   * @param isect an array of all the components that intersect\n   * @returns the array of bounds of all intersections\n   */\n    // getIntersectionBounds(primary: SubdraftComponent, isect: SubdraftComponent):Bounds{\n\n    //   const left: number = Math.max(primary.bounds.topleft.x, isect.bounds.topleft.x);\n    //   const top: number = Math.max(primary.bounds.topleft.y, isect.bounds.topleft.y);\n    //   const right: number = Math.min((primary.bounds.topleft.x + primary.bounds.width), (isect.bounds.topleft.x + isect.bounds.width));\n    //   const bottom: number = Math.min((primary.bounds.topleft.y + primary.bounds.height), (isect.bounds.topleft.y + isect.bounds.height));\n  \n    //   return {\n    //     topleft: {x: left, y: top},\n    //     width: right - left,\n    //     height: bottom - top\n    //   };\n  \n    // }\n  \n    /**\n     * gets the combined boundary of a Subdraft and any of its intersections\n     * @param moving A SubdraftComponent that is our primary subdraft\n     * @param isect  Any subdrafts that intersect with this component \n     * @returns the bounds of a rectangle that holds both components\n    //  */\n    // getCombinedBounds(moving: SubdraftComponent, isect: Array<SubdraftComponent>):Bounds{\n      \n    //   const bounds: Bounds = {\n    //     topleft: {x: 0, y:0},\n    //     width: 0,\n    //     height: 0\n    //   }\n  \n    //   bounds.topleft.x = utilInstance.getLeftMost(moving, isect).getTopleft().x;\n    //   bounds.topleft.y = utilInstance.getTopMost(moving, isect).getTopleft().y;\n  \n    //   const rm =  utilInstance.getRightMost(moving, isect);\n    //   const bm =  utilInstance.getBottomMost(moving, isect);\n  \n    //   bounds.width = (rm.getTopleft().x + rm.bounds.width) - bounds.topleft.x;\n    //   bounds.height =(bm.getTopleft().y + bm.bounds.height) - bounds.topleft.y;\n  \n    //   return bounds;\n  \n    // }\n\n    /**\n     * computes the value of a heddle given overlapping drafts\n     * @param p the point we are interested in\n     * @param main the top draft\n     * @param isect the intersecting drafts\n     * @returns \n     */\n    computeHeddleValue(p:Point, main: SubdraftComponent, isect: Array<SubdraftComponent>):boolean{\n      const a:boolean = main.resolveToValue(p);\n      //this may return an empty array, because the intersection might not have the point\n      const b_array:Array<SubdraftComponent> = isect.filter(el => el.hasPoint(p));\n  \n      //should never have more than one value in barray\n      // if(b_array.length > 1) console.log(\"WARNING: Intersecting with Two Elements\");\n  \n      const val:boolean = b_array.reduce((acc:boolean, arr) => arr.resolveToValue(p), null);   \n      \n      return utilInstance.computeFilter(main.ink, a, val);\n    }\n\n\n    getAdjustedPointerPosition(p: Point, viewport:Bounds) : any {   \n      return {\n        x: p.x + viewport.topleft.x,\n        y: p.y + viewport.topleft.y\n      } \n    }\n\n    /**\n   * takes an absolute point and returns the \"cell\" boundary that is closest. \n   * @param p the absolute point\n   * @returns the snapped point \n   */\n    snapToGrid(p: Point, scale:number):Point{\n\n      p.x = Math.floor(p.x / scale) * scale;\n      p.y = Math.floor(p.y / scale) * scale;\n      return p;\n\n    }\n\n/**\n * Takes an absolute coordinate and translates to a number that would represent its grid position on screen\n * used only for testing if a new move calculation should be called\n * @param p the screen coordinate\n * @returns the row and column within the draft (i = row, j=col), returns -1 if out of bounds\n */\n   public resolvePointToAbsoluteNdx(p:Point, scale:number) : Interlacement{\n    \n    let i = Math.floor((p.y) / scale);\n    let j = Math.floor((p.x) / scale);\n\n    return {i: i, j:j, si: i};\n\n  }\n\n  /**\n   * returns the number of wefts that is greatest out of all the input drafts\n   * \n   */\n  public getMaxWefts(inputs: Array<Draft>) : number{\n\n    const max_wefts:number = inputs\n    .filter(el => el !== null)\n    .reduce((acc, draft)=>{\n      if(wefts(draft.drawdown) > acc) return wefts(draft.drawdown);\n      return acc;\n      }, 0);\n      return max_wefts;\n  }\n\n  /**\n * returns the number of warps that is greatest out of all the input drafts\n */\n    public getMaxWarps(inputs: Array<Draft>) : number{\n\n\n    const max_warps:number = inputs\n    .filter(el => el !== null)\n    .reduce((acc, draft)=>{\n      if(warps(draft.drawdown) > acc) return warps(draft.drawdown);\n      return acc;\n      }, 0);\n      return max_warps;\n  }\n\n  /**\n   * given a list of values, return the value that occurs the most\n   * @param vals \n   */\n  public getMostCommon(vals: Array<any>): any{\n\n\n    const freq: Array<{i: any,count: any}>  = vals.reduce((acc, el) => {\n      const ndx = acc.findIndex(acc_el => acc_el.i === el);  \n      if(ndx === -1){\n        acc.push({i: el, count: 1});\n      }else{\n        acc[ndx].count++;\n      }\n      return acc;\n    }, []);\n\n    const common:{i: any,count: any} = freq.reduce((acc, el) => {\n      if(el.count > acc.count) return el;\n      else return acc;\n    }, {i:null, count: 0});\n\n    return common.i;\n  }\n\n  getInt(val, e) {\n    var index = e.search(val);\n    if (index != -1) {\n      var substring = e.substring(index, e.length);\n      var endOfLineChar = '\\n';\n      var endIndex = substring.indexOf(endOfLineChar);\n      if (endIndex!= -1) {\n        return +(substring.substring(val.length+1,endIndex)); //string is converted to int with unary + operator\n      } else {\n        return -1;\n      }\n    } else {\n      return -1;\n    }\n  }\n\n\n  getBool(val, e) {\n    var index = e.search(val);\n    if (index != -1) {\n      var substring = e.substring(index, e.length);\n      var endOfLineChar = '\\n';\n      var endIndex = substring.indexOf(endOfLineChar);\n      if (endIndex!= -1 && substring.substring(val.length+1,endIndex) === \"yes\") {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  getString(val, e) {\n    var index = e.search(val);\n    if (index != -1) {\n      var substring = e.substring(index, e.length);\n      var endOfLineChar = '\\n';\n      var endIndex = substring.indexOf(endOfLineChar);\n      if (endIndex != -1) {\n        return substring.substring(val.length+1, endIndex);\n      } else {\n        return \"\";\n      }\n    } else {\n      return \"\";\n    }\n  }\n\n  getSubstringAfter(val, e){\n    var index = e.search(val);\n    if( index != -1 ){\n      return e.substring(index+val.length);\n    } else {\n      return e;\n    }\n  }\n\n  getTreadling(e, draft) {\n    var treadling = [];\n    var treadles = this.getInt(\"Treadles\", e);\n\n    for (var i=0; i  < draft.wefts; i++) {\n      treadling.push(-1);\n    }\n\n    var indexOfLabel = e.search(\"TREADLING]\");\n    var startIndex = indexOfLabel + \"TREADLING]\".length+1;\n    var endOfLineChar = '\\n';\n    var endIndex = (e.substring(startIndex)).indexOf(endOfLineChar)+startIndex;\n    var line = e.substring(startIndex, endIndex);\n\n    while(line.match(/[0-9]*=[0-9]*/) != null) {\n      var weft = +(line.match(/[0-9]*/));\n      var treadle = +(line.match(/=[0-9]*/)[0].substring(1));\n      treadling[weft-1] = treadle-1;\n      startIndex = endIndex+1;\n      endIndex = e.substring(startIndex).indexOf(endOfLineChar)+startIndex;\n      line = e.substring(startIndex,endIndex);\n    }\n\n    return treadling;\n  }\n\n  getThreading(e, draft) {\n    var threading = [];\n\n    for (var i = 0; i < draft.warps; i++) {\n      threading.push(-1);\n    }\n\n    var indexOfLabel = e.search(\"THREADING]\");\n    var startIndex = indexOfLabel + \"THREADING]\".length+1;\n    var endOfLineChar = '\\n';\n    var endIndex = (e.substring(startIndex)).indexOf(endOfLineChar)+startIndex;\n    var line = e.substring(startIndex, endIndex);\n\n    while (line.match(/[0-9]*=[0-9]*/) != null) {\n      var warp = +(line.match(/[0-9]*/));\n      var frame = +(line.match(/=[0-9]*/)[0].substring(1));\n      threading[draft.warps - warp] = frame-1;\n      startIndex = endIndex+1;\n      endIndex = e.substring(startIndex).indexOf(endOfLineChar)+startIndex;\n      line = e.substring(startIndex,endIndex);\n    }\n\n    return threading;\n  }\n\n  getTieups(e, draft) {\n    var tieups = [];\n    var frames = this.getInt(\"Shafts\", e);\n    var treadles = this.getInt(\"Treadles\", e);\n\n    for (var i = 0; i < frames; i++) {\n      tieups.push([]);\n      for (var j = 0; j < treadles; j++) {\n        tieups[i].push(false);\n      }\n    }\n\n    var indexOfLabel = e.search(\"TIEUP]\");\n    var startIndex = indexOfLabel + \"TIEUP]\".length+1;\n    var endOfLineChar = '\\n';\n    var endIndex = (e.substring(startIndex)).indexOf(endOfLineChar)+startIndex;\n    var line = e.substring(startIndex, endIndex);\n\n    while (line.match(/[0-9]*=[0-9]*/) != null) {\n      var treadle = +(line.match(/[0-9]*/));\n      var firstFrame = +(line.match(/=[0-9]*/)[0].substring(1));\n      tieups[firstFrame-1][treadle-1] = true;\n      var restOfFrames = line.match(/,[0-9]/g);\n      if(restOfFrames != null) {\n        for (var i = 0; i < restOfFrames.length; i++) {\n          var currentFrame = +(restOfFrames[i].substring(1));\n          tieups[currentFrame-1][treadle-1] = true;\n        }\n      }\n      startIndex = endIndex+1;\n      endIndex = e.substring(startIndex).indexOf(endOfLineChar)+startIndex;\n      line = e.substring(startIndex,endIndex);\n    }\n      \n    return tieups;\n  }\n\n  //can likely simplify this as it is mostlyy like the function above but with different variable names for the respective applications\n  getColorTable(e) :Array<Material>  {\n    var color_table = [];\n    var originalShuttle = createMaterial();\n    originalShuttle.color = \"#3d3d3d\";\n    setMaterialID(originalShuttle, 0);\n    color_table.push(originalShuttle);\n\n    var indexOfLabel = e.search(\"COLOR TABLE]\");\n    var startIndex = indexOfLabel + \"COLOR TABLE]\".length+1;\n    var endOfLineChar = '\\n';\n    var endIndex = (e.substring(startIndex)).indexOf(endOfLineChar)+startIndex;\n    var line = e.substring(startIndex, endIndex);\n    var id = 1;\n\n    while (line.match(/[0-9]*=[0-9]*,[0-9]*,[0-9]*/) != null) {\n      // var index = +(line.match(/[0-9]*/));\n      var redNum = +(line.match(/=[0-9]*/)[0].substring(1));\n      var greenAndBlue = line.match(/,[0-9]*/g);\n      var greenNum = +(greenAndBlue[0].substring(1));\n      var blueNum = +(greenAndBlue[1].substring(1));\n\n      var hex = \"#\";\n      var hexr = redNum.toString(16);\n      if(hexr.length ==1 ){\n        hex += \"0\"+hexr;\n      } else {\n        hex += hexr;\n      }\n      var hexg= greenNum.toString(16);\n      if(hexg.length ==1 ){\n        hex += \"0\"+hexg;\n      } else {\n        hex += hexg;\n      }\n      var hexb= blueNum.toString(16);\n      if(hexb.length ==1 ){\n        hex += \"0\"+hexb;\n      } else {\n        hex += hexb;\n      }\n\n      var shuttle = createMaterial();\n      shuttle.color = hex;\n      setMaterialID(shuttle, id);\n      id++;\n\n      color_table.push(shuttle);\n\n      startIndex = endIndex+1;\n      endIndex = e.substring(startIndex).indexOf(endOfLineChar)+startIndex;\n      line = e.substring(startIndex,endIndex);\n    }\n    return color_table;\n  }\n\n  getColToShuttleMapping(e, draft) {\n    var colToShuttleMapping = [];\n\n    for (var i = 0; i < draft.warps; i++) {\n      colToShuttleMapping.push(0);\n    }\n\n    var indexOfLabel = e.search(\"WARP COLORS]\");\n    var startIndex = indexOfLabel + \"WARP COLORS]\".length+1;\n    var endOfLineChar = '\\n';\n    var endIndex = (e.substring(startIndex)).indexOf(endOfLineChar)+startIndex;\n    var line = e.substring(startIndex, endIndex);\n\n    while (line.match(/[0-9]*=[0-9]*/) != null) {\n      var warp = +(line.match(/[0-9]*/));\n      var color = +(line.match(/=[0-9]*/)[0].substring(1));\n      colToShuttleMapping[warp-1] = color;\n      startIndex = endIndex+1;\n      endIndex = e.substring(startIndex).indexOf(endOfLineChar)+startIndex;\n      line = e.substring(startIndex,endIndex);\n    }\n\n    var reversedMapping = [];\n    for (var i = colToShuttleMapping.length-1; i >= 0; i--) {\n      reversedMapping.push(colToShuttleMapping[i]);\n    }\n\n    return reversedMapping;\n  }\n\n  getRowToShuttleMapping(e, draft) {\n    var rowToShuttleMapping = [];\n\n    for (var i = 0; i < draft.wefts; i++) {\n      rowToShuttleMapping.push(0);\n    }\n\n    var indexOfLabel = e.search(\"WEFT COLORS]\");\n    var startIndex = indexOfLabel + \"WEFT COLORS]\".length+1;\n    var endOfLineChar = '\\n';\n    var endIndex = (e.substring(startIndex)).indexOf(endOfLineChar)+startIndex;\n    var line = e.substring(startIndex, endIndex);\n\n    while (line.match(/[0-9]*=[0-9]*/) != null) {\n      var weft = +(line.match(/[0-9]*/));\n      var color = +(line.match(/=[0-9]*/)[0].substring(1));\n      rowToShuttleMapping[weft-1] = color;\n      startIndex = endIndex+1;\n      endIndex = e.substring(startIndex).indexOf(endOfLineChar)+startIndex;\n      line = e.substring(startIndex,endIndex);\n    }\n\n    return rowToShuttleMapping;\n  }\n\n  /**\n   * this takes a map of material ideas and updates \n   * @param material_mapping - the mapping of rows of cols to a material \n   * @param index_map - a map from old to new material ids\n   * @param replacement_ndx - anything not found in the map will be replaced by this value\n   */\n  updateMaterialIds(material_mapping: Array<number>, index_map: Array<MaterialMap>, replacement_ndx:number) : Array<number>{\n\n    if(material_mapping === undefined) material_mapping = [];\n    //update the existing drafts given the new ids\n      const new_map: Array<number> = material_mapping.map(index => {\n        const mapping: MaterialMap = index_map.find(el => el.old_id === index);\n        if(mapping !== undefined){\n          return mapping.new_id;\n        }else{\n          return replacement_ndx;\n        }\n   \n\n\n    });\n\n    return new_map;\n  \n  }\n\n  /**\n   * takes an array of numbers and returns the highest number\n   * @param arr \n   * @returns \n   */\n  getArrayMax(arr: Array<number>) : number{\n    const max: number = arr.reduce((acc, el, ndx)=>{\n      if(el > acc) return el;\n      else return acc;\n    }, 0);\n    return max;\n  }\n\n  hasOnlyUnset(cells: Array<Cell>) : boolean{\n    const hasValue = cells.find(el => getCellValue(el) !== null);\n    if(hasValue === undefined) return true;\n    else return false;\n  }\n  \n\n  public patternToSize(pattern, warpSize, weftSize) {\n    if (pattern[0].length > warpSize) {\n        for (var i = 0; i < pattern.length; i++) {\n            while(pattern[i].length > warpSize) {\n                pattern[i].splice(pattern[i].length-1, 1);\n            }\n        }\n    }\n    if (pattern.length > weftSize) {\n        while(pattern.length > weftSize) {\n            pattern.splice(pattern.length-1, 1);\n        }\n    }\n    var idx = 0;\n    while (pattern[0].length < warpSize) {\n        for (var j = 0; j < pattern.length; j++) {\n            if (idx < pattern[j].length) {\n                pattern[j].push(pattern[j][idx]);\n            }\n        }\n        idx += 1;\n        if (idx >= pattern[0].length) {\n            idx = 0;\n        }\n    }\n    idx = 0;\n    while (pattern.length < weftSize) {\n        pattern.push(pattern[idx]);\n        idx += 1;\n        if (idx >= pattern.length) {\n            idx = 0;\n        }\n    }\n    return pattern;\n}\n\n/**\n * checks two looms settings objects \n * @param ls1 \n * @param ls2 \n * @returns  true if they have the same value\n */\nareLoomSettingsTheSame(ls1: LoomSettings, ls2: LoomSettings) : boolean {\n  if(ls1.epi !== ls2.epi) return false;\n  if(ls1.frames !== ls2.frames) return false;\n  if(ls1.treadles !== ls2.treadles) return false;\n  if(ls1.type !== ls2.type) return false;\n  if(ls1.units !== ls2.units) return false;\n  return true;\n}\n\n/**\n * checks two loom objects \n * @param loom1 \n * @param loom2 \n * @returns  true if they have the same value\n */\nareLoomsTheSame(loom1: Loom, loom2: Loom) : boolean {\n  if(loom1 === null && loom2 === null) return true;\n\n  for(let ndx = 0; ndx < loom1.threading.length; ndx++){\n    if(loom1.threading[ndx] !== loom2.threading[ndx]) return false;\n  }\n\n\n  for(let p = 0; p < loom1.treadling.length; p++){\n    for(let q = 0; q < loom1.treadling[p].length; q++){\n      if(loom1.treadling[p][q] !== loom2.treadling[p][q]) return false;\n    }\n  }\n\n  for(let p = 0; p < loom1.tieup.length; p++){\n    for(let q = 0; q < loom1.tieup[p].length; q++){\n      if(loom1.tieup[p][q] !== loom2.tieup[p][q]) return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * compares the states of two drafts\n * @param d1 \n * @param d2 \n * @returns true if they are the exact same in terms of the draft data (ignores names and ids)\n */\nareDraftsTheSame(d1: Draft, d2: Draft) : boolean {\n\n  if(d1 === null && d2 === null) return true;\n\n  for(let ndx = 0; ndx <  d1.colShuttleMapping.length; ndx++){\n    if( d1.colShuttleMapping[ndx] !==  d2.colShuttleMapping[ndx]) return false;\n  }\n\n  for(let ndx = 0; ndx <  d1.colSystemMapping.length; ndx++){\n    if( d1.colSystemMapping[ndx] !==  d2.colSystemMapping[ndx]) return false;\n  }\n\n  for(let ndx = 0; ndx <  d1.rowShuttleMapping.length; ndx++){\n    if( d1.rowShuttleMapping[ndx] !==  d2.rowShuttleMapping[ndx]) return false;\n  }\n\n  for(let ndx = 0; ndx <  d1.rowSystemMapping.length; ndx++){\n    if( d1.rowSystemMapping[ndx] !==  d2.rowSystemMapping[ndx]) return false;\n  }\n\n  for(let p = 0; p < d1.drawdown.length; p++){\n    for(let q = 0; q < d1.drawdown[p].length; q++){\n      if(getCellValue(d1.drawdown[p][q]) !== getCellValue(d2.drawdown[p][q])) return false;\n    }\n  }\n\n  return true;\n\n\n\n}\n\n/**\n * take an array of drafts and interlace them weft wise, in the order in which they appear in the array\n * this will also interlace weft systems and materials, but will use the first draft as the indication for the warp materials\n * @param drafts the drafts whose wefts we will be interlacing\n * @param factor_in_repeats should we calculate the size such that the pattern repeats in even intervals? \n * @param warp_patterns a draft to use to represent the warp systems. \n */\ninterlace(drafts: Array<Draft>, factor_in_repeats: number, warp_patterns: Draft): Draft {\n\n\n  let total_wefts: number = 0;\n  const all_wefts = drafts.map(el => wefts(el.drawdown)).filter(el => el > 0);\n  if(factor_in_repeats === 1)  total_wefts = utilInstance.lcm(all_wefts);\n  else  total_wefts = utilInstance.getMaxWefts(drafts);\n\n  let total_warps: number = 0;\n  const all_warps = drafts.map(el => warps(el.drawdown)).filter(el => el > 0);\n\n  if(factor_in_repeats === 1)  total_warps = utilInstance.lcm(all_warps);\n  else  total_warps = utilInstance.getMaxWarps(drafts);\n\n\n\n  //create a draft to hold the merged values\n  const d:Draft = initDraftWithParams(\n    {warps: total_warps, \n      wefts:(total_wefts *drafts.length),\n      colShuttleMapping: warp_patterns.colShuttleMapping,\n      colSystemMapping: warp_patterns.colSystemMapping});\n\n    d.drawdown.forEach((row, ndx) => {\n\n      const select_array: number = ndx %drafts.length; \n      const select_row: number = (factor_in_repeats === 1) ? Math.floor(ndx /drafts.length) % wefts(drafts[select_array].drawdown) : Math.floor(ndx /drafts.length);\n      row.forEach((cell, j) =>{\n          const select_col = (factor_in_repeats === 1) ? j % warps(drafts[select_array].drawdown) : j;\n          if(hasCell(drafts[select_array].drawdown, select_row, select_col)){\n              const pattern = drafts[select_array].drawdown;\n              cell = setCellValue(cell, getCellValue(pattern[select_row][select_col]));\n\n          }else{\n              cell = setCellValue(cell, null);\n          }\n      });\n\n  });\n  \n\n  return d;\n\n}\n\n/**\n * take an array of drafts and interlace them warp-wise, in the order in which they appear in the array\n * @param drafts the drafts whose wefts we will be interlacing\n * @param factor_in_repeats should we calculate the size such that the pattern repeats in even intervals? \n * @param weft_patterns a draft to use to represent the warp systems. \n */\ninterlace_warps(drafts: Array<Draft>, factor_in_repeats: number, weft_patterns: Draft): Draft {\n\n\n  let total_warps: number = 0;\n  const all_warps = drafts.map(el => warps(el.drawdown)).filter(el => el > 0);\n  if(factor_in_repeats === 1)  total_warps = utilInstance.lcm(all_warps);\n  else  total_warps = utilInstance.getMaxWefts(drafts);\n\n  let total_wefts: number = 0;\n  const all_wefts = drafts.map(el => wefts(el.drawdown)).filter(el => el > 0);\n\n  if(factor_in_repeats === 1)  total_wefts = utilInstance.lcm(all_wefts);\n  else  total_wefts = utilInstance.getMaxWarps(drafts);\n\n\n\n  //create a draft to hold the merged values\n  const d:Draft = initDraftWithParams(\n    {warps: total_warps*drafts.length, \n      wefts:(total_wefts),\n      rowShuttleMapping: weft_patterns.rowShuttleMapping,\n      rowSystemMapping: weft_patterns.rowSystemMapping});\n\n    d.drawdown.forEach((col, ndx) => {\n\n      const select_array: number = ndx %drafts.length; \n      const select_col: number = (factor_in_repeats === 1) ? Math.floor(ndx /drafts.length) % warps(drafts[select_array].drawdown) : Math.floor(ndx /drafts.length);\n      col.forEach((cell, i) =>{\n          const select_row = (factor_in_repeats === 1) ? i % wefts(drafts[select_array].drawdown) : i;\n          if(hasCell(drafts[select_array].drawdown, select_row, select_col)){\n              const pattern = drafts[select_array].drawdown;\n              cell = setCellValue(cell, getCellValue(pattern[select_row][select_col])); \n\n          }else{\n              cell = setCellValue(cell, null);\n          }\n      });\n\n  });\n  \n\n  return d;\n\n}\n\n/**\n * in connection with lcm, the gcd (greatest common divisor) determines the largest number that can divide into both inputs\n * I used Eulers algorithm with Euclidan Divison for determining this. \n * assumes non-zero inputs\n */\ngcd(a: number, b: number) : number {\n\n  if(b === 0) return a;\n\n  const max = (a > b) ? a : b;\n  const min = (a <= b) ? a : b;\n\n  return this.gcd(min, max % min);\n\n\n}\n\n\n/**\n * this is an algorithm for finding the least common multiple of a give set of input numbers \n * it works based on the formulat lcd (a,b) = a*b / gcd(a,b), and then caculates in a pairwise fashion.\n * this has the risk of breaking with very large sets of inputs and/or prime numbers of a large size\n */\nlcm(original: Array<number>) : number{\n\n  const set = original.slice();\n\n  if(set.length === 0) return 0;\n  if(set.length === 1) return set[0];\n\n  const a: number = set.shift();\n  const b: number = set.shift();\n\n  let mult: number = a * b; \n  let gcd = this.gcd(a, b);\n\n  let lcd = mult / gcd; \n\n\n  while(set.length > 0){\n    const c = set.shift();\n    mult = c * lcd;\n    gcd = this.gcd(c, lcd);\n    lcd = mult/gcd;\n  }\n\n  return lcd;\n\n}\n\n/**\n * take any input array and return an array of only the unique elements\n * @param arr \n * @returns \n */\nfilterToUniqueValues(arr: Array<any>) : Array<any>{\n\n  const unique: Array<any> = [];\n  arr.forEach(el => {\n    const ndx = unique.findIndex(uel => uel === el);\n    if(ndx === -1) unique.push(el);\n  });\n  return unique;\n}\n\n/**\n * takes an input string and a regex and returns each match as an array\n * @param input \n */\nparseRegex(input:string, regex: RegExp) : Array<any> {\n  if(input == undefined || regex == undefined) return [];\n  input = input.toString();\n  const global_regex = new RegExp(regex, 'g');\n  const matches = input.match(global_regex);\n  return matches;\n}\n\n/**\n * compares two lists of values and returns a list of the elements from newInlets that need to be added to the current list, \n * as well as the elements in currentInlets that no longer need to exist. \n * @param newInlets \n * @returns the list of elements that needed to be added to or removed from current Inlets to make it match the list in newInlets\n */\ngetInletsToUpdate(newInlets: Array<any>, currentInlets: Array<any>) : {toadd: Array<any>, toremove: Array<any>} {\n\n  const toadd = newInlets.reduce((acc, inlet) => {\n    if(currentInlets.find(el => el == inlet) === undefined) acc.push(inlet);\n    return acc;\n  }, []);\n  const toremove = currentInlets.reduce((acc, inlet) => {\n    if(newInlets.find(el => el == inlet) === undefined) acc.push(inlet);\n    return acc;\n  }, []);\n\n  return {toadd, toremove};\n}\n\n  /**\n   * takes two versions and compares them\n   * returns true if versions are same or version a is greater than b, returns false if a older than b\n   * @param compare \n   */\n   sameOrNewerVersion(a: string, b: string ) : boolean {\n\n    if(a === undefined || b===undefined){\n      console.error(\"checking undefined version\", a, b);\n      return false;\n    }\n\n    const a_spl = a.split('.');\n    const b_spl = b.split('.');\n    let flag_end = false;\n    let return_val = true;\n\n    for(let i = 0; i < a_spl.length && !flag_end; i++){\n      if(i < b_spl.length){\n        if(parseInt(a_spl[i]) < parseInt(b_spl[i])){\n          return_val = false;\n          flag_end = true;\n        }else  if(parseInt(a_spl[i]) > parseInt(b_spl[i])){\n          return_val = true;\n          flag_end = true;\n        } \n      }\n    }\n\n    if(flag_end) return return_val;\n    return true;\n\n  }\n                                                                          \n                                                                                                                   \n// generateId :: Integer -> String                                                                                                  \ngenerateId = (len:number) : number => {                              \n  const arr = new Uint8Array((len || 40) / 2)                                                                  \n  window.crypto.getRandomValues(arr)            \n  return parseInt(arr.join(''))                                                                                  \n}  \n\n\n//print the draft to console\nprintDraft(d: Draft){\n  console.log('draft ', d.id);\n  for(let i = 0; i < wefts(d.drawdown);i++){\n    const row: string = d.drawdown[i].reduce((acc, el) => {\n      if(getCellValue(el) === true) acc = acc.concat('x')\n      else acc = acc.concat('o')\n      return acc;\n    }, '');\n    console.log(row)\n  }\n}\n\n\n/**\n * this function determines how one can flip the draft between two origin states\n * @param draft \n * @param loom \n * @param from \n * @param to \n */\ngetFlips(from:number, to: number) : {horiz: boolean, vert: boolean} {\n\n  // console.log(\"flipping from/to\", from, to);\n\n\n  let horiz = false;\n  let vert = false;\n\n  if(from === to) return {horiz, vert};\n\n  if((from === 0 && to === 1) || (from === 1 && to === 0)){\n    vert = true;\n  }else if((from === 0 && to === 2) || (from === 2 && to === 0)){\n    vert = true;\n    horiz = true;\n  }else if((from === 0 && to === 3) || (from === 3 && to === 0)){\n    horiz = true;\n  }else if((from === 1 && to == 2) || (from === 2 && to === 1)){\n    horiz = true;\n  }else if((from === 1 && to == 3) || (from === 3 && to === 1)){\n    vert = true;\n    horiz = true;\n  }else if((from === 2 && to == 3) || (from === 3 && to === 2)){\n    vert = true;\n  }else{\n    console.error(\"to/from origin flip options not found\", to, from)\n  }\n\n  // console.log(\"horiz/vert\", horiz, vert);\n\n  return {horiz, vert};\n\n}\n\n\n\n}\n  \n  //makes it so that we are using this util class as a singleton (referenced: https://www.digitalocean.com/community/tutorials/js-js-singletons)\n  const utilInstance = new Util();\n  Object.freeze(utilInstance);\n  export default utilInstance;","\nimport { SQRT1_2 } from \"mathjs\";\nimport { drawdown } from \"../operations/drawdown/drawdown\";\nimport { layer } from \"../operations/layer/layer\";\nimport { MaterialsService } from \"../provider/materials.service\";\nimport { getCellValue } from \"./cell\";\nimport {  Bounds, Cell, Deflection, Draft, Drawdown, LayerMaps, SimulationData, SimulationVars, TopologyVtx, VertexMaps, WarpHeight, WarpInterlacementTuple, WarpRange, WeftInterlacementTuple, YarnCell, YarnFloat, YarnVertex } from \"./datatypes\";\nimport {getCol, getHeddle, warps, wefts } from \"./drafts\";\nimport { Sequence } from \"./sequence\";\n\n\n\n  \n  export const areInterlacement = (a: Cell, b: Cell) : boolean => {\n\n    if(getCellValue(a) == null || getCellValue(b) == null) return false;\n\n    if( getCellValue(a) != getCellValue(b)) return true;\n\n    return false;\n  }\n\n\n  export const getOrientation = (a: Cell, b: Cell) : boolean => {\n\n    if(getCellValue(a) == true && getCellValue(b) == false) return true;\n    return false;\n  }\n\n/**\n * analyzes the relationship between neighboring wefts to figure out where the warp travels from front to back \n * used to determine layering \n * @param dd drawdown\n * @returns an array of interlacements \n */\n  export const getWarpInterlacementTuples = (dd: Drawdown) : Array<WarpInterlacementTuple> => {\n    const ilace_list: Array<WarpInterlacementTuple> = [];\n    \n    for(let i = 0; i < wefts(dd); i++){\n      let i_top = i+1;\n      let i_bot = i;\n\n      for(let j = 0; j < warps(dd); j++){\n\n\n        if(i_top !== wefts(dd)){\n\n          const ilace = areInterlacement(dd[i_top][j], dd[i_bot][j]); \n          if(ilace ){\n\n            ilace_list.push({\n              i_bot: i_bot,\n              i_top:i_top,\n              j: j,\n              orientation: getOrientation(dd[i_top][j], dd[i_bot][j])\n            })\n          }\n        }\n      }\n    }\n    return ilace_list;\n  }\n\n\n\n  export const getWeftInterlacementTuples = (dd: Drawdown) : Array<WeftInterlacementTuple> => {\n    const ilace_list: Array<WeftInterlacementTuple> = [];\n\n    for(let j = 0; j < warps(dd); j++){\n     for(let i = 0; i < wefts(dd); i++){\n\n        let j_left = j;\n        let j_right = j+1;\n\n\n        if(j_right !== warps(dd)){\n\n          const ilace = areInterlacement(dd[i][j_left], dd[i][j_right]); \n          if(ilace ){\n\n            ilace_list.push({\n              j_left: j_left,\n              j_right:j_right,\n              i: i,\n              orientation: getOrientation(dd[i][j_left], dd[i][j_right])\n            })\n          }\n        }\n      }\n    }\n    return ilace_list;\n  }\n\n\n\n\n  /**\n   * given a list of interlacments, see if there are interlacements with opposite orientation within the list that would indicate that these two yarns cross eachother at some point.\n   * @param ilaces \n   * @returns \n   */\n  export const hasBarrier = (ilaces: Array<WarpInterlacementTuple> | Array<WeftInterlacementTuple>) : boolean => {\n\n    let last = null;\n    let barrier_found = false;\n    ilaces.forEach(ilace => {\n\n      if(last == null) last = ilace.orientation;\n      if(last !== ilace.orientation) barrier_found = true;\n    })\n\n    return barrier_found;\n\n  }\n\n  /**\n   * checks to see if either of the wefts we are comparing against is on the edge. \n   * @param draft \n   * @param ilaces \n   * @returns \n   */\n  export const containsWeftEdge = (draft: Draft, ilaces: Array<WarpInterlacementTuple>) : boolean => {\n\n    ilaces.forEach(ilace => {\n      if(ilace.i_top == wefts(draft.drawdown)-1) return true;\n      if(ilace.i_bot == 0) return true;\n    })\n\n    return false;\n\n  }\n\n    /**\n   * given a list of interlacments, see if there are interlacements with opposite orientation within the list that would indicate that these two yarns cross eachother at some point.\n   * @param ilaces \n   * @returns \n   */\n  export const hasWeftBarrierInRange = (ilaces: Array<WarpInterlacementTuple>, start: number, end: number, size: number, draft: Draft) : boolean => {\n\n    let adj_start = Math.max(start-size, 0);\n    let adj_end = Math.min(end+size, warps(draft.drawdown));\n\n    let all_relevant_interlacements = ilaces.filter(el => el.j > adj_start && el.j < adj_end);\n    return  hasBarrier(all_relevant_interlacements);\n    \n\n  }\n\n  export const hasWarpBarrierInRange = (ilaces: Array<WeftInterlacementTuple>, start: number, end: number, size: number, draft: Draft) : boolean => {\n\n\n\n    let adj_start = Math.max(start-size, 0);\n    let adj_end = Math.min(end+size, wefts(draft.drawdown));\n\n    let all_relevant_interlacements = ilaces.filter(el => el.i > adj_start && el.i < adj_end);\n    return  hasBarrier(all_relevant_interlacements);\n    \n\n  }\n\n\n\n\n  export const positionFloatingWefts = (i_active: number, i_check: number, j_start: number, j_end: number, ms: MaterialsService, draft: Draft, weft_vtxs: Array<Array<YarnVertex>>) :   Array<Array<YarnVertex>> =>{\n    let check_mat = ms.getDiameter(draft.rowShuttleMapping[i_check]);\n    let active_mat = ms.getDiameter(draft.rowShuttleMapping[i_active]);\n    for(let j =j_start; j <= j_end; j++){     \n      weft_vtxs[i_active][j].y = weft_vtxs[i_check][j].y + (check_mat/2 + active_mat/2);  \n    }\n    return weft_vtxs;\n  }\n\n\n  /**\n   * given two rows (i) generate a list of all interlacments (between jstart and end) that exist between these two rows\n   * @param i_active \n   * @param i_check \n   * @param j_start \n   * @param j_end \n   * @param draft \n   * @returns \n   */\n  export const getInterlacementsBetweenWefts = (i_active: number, i_check: number, j_start: number, j_end: number, draft: Draft) => {\n\n    let ilace_list: Array<WarpInterlacementTuple> = [];\n    \n    if(i_check < 0){\n      return ilace_list;\n    }\n\n    for(let j =j_start; j <= j_end; j++){\n      \n      const are_interlacements = areInterlacement(draft.drawdown[i_active][j], draft.drawdown[i_check][j]);\n      if(are_interlacements) ilace_list.push({\n        i_top: i_active,\n        i_bot: i_check,\n        j: j,\n        orientation: getOrientation(draft.drawdown[i_active][j], draft.drawdown[i_check][j])\n      })\n    }\n    return ilace_list;\n  }\n\n\n  /**\n   * given two columsn/warps (j) generate a list of all interlacments (between istart and iend) that exist between these two warps\n   * @param j_active \n   * @param j_check \n   * @param i_start \n   * @param i_end \n   * @param draft \n   * @returns \n   */\n  export const getInterlacementsBetweenWarps = (j_active: number, j_check: number, i_start: number, i_end: number, draft: Draft) => {\n    let ilace_list: Array<WeftInterlacementTuple> = [];\n    for(let i =i_start; i <= i_end; i++){\n      const are_interlacements = areInterlacement(draft.drawdown[i][j_active], draft.drawdown[i][j_check]);\n      if(are_interlacements) ilace_list.push({\n        j_left: j_check,\n        j_right: j_active,\n        i: i,\n        orientation: getOrientation(draft.drawdown[i][j_active], draft.drawdown[i][j_check])\n      })\n    }\n    return ilace_list;\n  }\n\n\n \n\n  export const setLayerZ = (ilace_list: Array<WarpInterlacementTuple>, count: number, layer_spacing: number, warp_vtxs: Array<Array<YarnVertex>>) :  Array<Array<YarnVertex>> => {\n      // if(count == 0) console.log(\"------COUNT 0 \", ilace_list);\n\n    ilace_list.forEach(ilace => {\n\n      //warp_vtxs[ilace.i_top][ilace.j].y = warp_vtxs[ilace.i_bot][ilace.j].y + 1;\n\n      for(let i = ilace.i_bot; i <= ilace.i_top; i++){\n        // console.log(\"writing to \", i, ilace.j, count);\n        warp_vtxs[i][ilace.j].z = count*layer_spacing;\n      }\n    });\n\n    return warp_vtxs;\n\n  }\n\n \n  /**\n   * a segment with no varience in interlacemetn orientations often signifies a layer. In this snippit, you continue comparing the active row with each subsequent row underneith to identify if it has a barrier. When it finds a barrier, it sets all the warps associated with teh interlacements on the barrier row to the associated layer position. \n   * @param count how many rows have been explored so far\n   * @param i_active the row we are attempting to move down\n   * @param i_check the row we are checking against\n   * @param j_start the j position we are starting to look\n   * @param j_end the j position we are ending on\n   * @param draft the current draft\n   * @param range the distance required from an interlacement to form a layer\n   * @param warp_vtxs the warp positions\n   * @returns \n   */\n  export const layerWarpsInZBetweenInterlacements = (count: number, i_active:number, i_check: number, j_start: number, j_end: number, draft: Draft, range: number, layer_spacing: number,  warp_vtxs: Array<Array<YarnVertex>>) : Array<Array<YarnVertex>>=> {\n\n    let ilace_list: Array<WarpInterlacementTuple> = getInterlacementsBetweenWefts(i_active, i_check, j_start, j_end, draft);\n    //if check is 0 there are no more rows to check and we should just return where we are. \n    if(i_check < 0){\n      // console.log(\"we are at the end of the range, sending count \", count, ilace_list)\n      return setLayerZ(ilace_list, count, layer_spacing, warp_vtxs);\n    }\n\n  \n    // console.log(\"i lace list comparing\", i_active, i_check, j_start, j_end, ilace_list)\n    \n    //if there are no interlacements on this row, it was a duplicate of the previous row, and so we couls just move\n    if(ilace_list.length == 0)\n      return layerWarpsInZBetweenInterlacements(count, i_active, i_check-1, j_start, j_end, draft, range, layer_spacing,  warp_vtxs);\n    \n\n    const has_barrier = hasWeftBarrierInRange(ilace_list, j_start, j_end, range, draft);\n    // console.log(\"has barrier \", has_barrier);\n    if(has_barrier){\n      //set the warp positions here\n      //each mark each of the barriers as a place that needs to move \n      console.log(\"we are at a barrier, sending count \", count, ilace_list)\n\n      return setLayerZ(ilace_list, count, layer_spacing, warp_vtxs);\n\n    }else{\n    \n      let orientation = ilace_list[0].orientation;\n      if(orientation){\n        count = count -1;\n      }else{\n        count = count + 1;\n      }\n      return layerWarpsInZBetweenInterlacements(count, i_active, i_check-1, j_start, j_end, draft, range, layer_spacing, warp_vtxs);\n  \n    } \n\n  }\n\n  /**\n   * gets the first instance of an interlacement with a different orientation to the start, returns the index at which it was found and the distance\n   * @param start the first weft tuple\n   * @param remaining the remaining list\n   * @returns the ndx at which the segment ends (before the interlacement) or -1 if no interlacement is ever found.\n   */\n  export const getNonInterlacingWarpSegment = (start: WarpInterlacementTuple, remaining: Array<WarpInterlacementTuple>) : {ndx: number, dist: number} =>{\n     \n    let ref_orientation = start.orientation;\n    let barrier_cell = remaining.findIndex(el => el.orientation !== ref_orientation);\n   \n    if(barrier_cell !== -1){\n      let distance = Math.abs(start.j - remaining[barrier_cell].j-1);\n      return {ndx:barrier_cell, dist: distance};\n    }else{\n      return {ndx: -1, dist:-1};\n    }\n  }\n\n\n  export const getNonInterlacingWeftSegment = (start: WeftInterlacementTuple, all: Array<WeftInterlacementTuple>) : {ndx: number, dist: number} =>{\n     \n\n    let ref_orientation = start.orientation;\n    let barrier_cell = all.findIndex(el => el.i > start.i && el.orientation !== ref_orientation);\n\n\n    if(barrier_cell !== -1){\n      let distance = Math.abs(start.i - all[barrier_cell].i-1);\n      return {ndx:barrier_cell, dist: distance};\n    }else{\n      return {ndx: -1, dist:-1};\n    }\n  }\n\n\n\n\n/**\n * when positioning warps in layers, warps close to the ends of the draft will never get a position set. For this reason, we set an unreasinable z value to flag a process after the warps are positioned to update the ends. \n * @param i \n * @param j \n * @param warp_vtx \n * @returns \n */\nexport const getClosestWarpValue = (i: number, j: number, warp_vtx: Array<Array<YarnVertex>>) : number => {\n\n  for(let x = 1; x < warp_vtx.length; x++){\n    let bot = i-x;\n    let top = i+x;\n\n    if(bot >= 0 && bot <= warp_vtx.length-1 && warp_vtx[bot][j].z !== -10000000) return warp_vtx[bot][j].z;\n    if(top >= 0 && top <= warp_vtx.length -1 && warp_vtx[top][j].z !== -10000000) return warp_vtx[top][j].z;\n  }\n  return 0;\n\n}\n\n\n\n  export const getWeftOffsetFromWarp = (draft: Draft, i: number, j: number, ms: MaterialsService) : number => {\n\n    let warp_diam = ms.getDiameter(draft.colShuttleMapping[j]);\n    let weft_diam = ms.getDiameter(draft.rowShuttleMapping[i]);\n\n    return (warp_diam / 2 + weft_diam/2);\n\n  }\n\n  export const getMidpoint = (a: number, b: number) : number =>{\n    let max = Math.max(a,b);\n    let min = Math.min(a,b);\n    let float = max - min;\n    return min + float/2;\n\n  }\n\n\n  export const getTuplesWithinRange = (tuples: Array<WarpInterlacementTuple>, range: WarpRange) : Array<WarpInterlacementTuple> => {\n    return tuples.filter(tuple => tuple.j >= range.j_left && tuple.j <= range.j_right);\n  }\n\n\n  /**\n   * given a list of weft-oriented tuples (comapring wefts at each warp) find all the relevant interlacements\n   * @param tuples \n   * @param count \n   * @returns \n   */\n  export const extractInterlacementsFromTuples = (tuples: Array<WarpInterlacementTuple>, count: number, simvars: SimulationVars) : Array<TopologyVtx> => {\n    const topo: Array<TopologyVtx> = [];\n\n    //look left to right\n    for(let x = 1; x < tuples.length; x++){\n      let last = x -1;\n      if(tuples[last].orientation !== tuples[x].orientation && (tuples[x].j - tuples[last].j) <= simvars.max_interlacement_width){\n          topo.push({\n            id: tuples[last].i_bot+\".\"+tuples[last].i_top+\".\"+tuples[last].j+\".\"+tuples[x].j+\".\"+count,\n            i_top: tuples[last].i_top, \n            i_bot: tuples[last].i_bot,\n            j_left: tuples[last].j,\n            j_right: tuples[x].j,\n            orientation: !tuples[last].orientation,\n            z_pos: count\n          });\n        }\n      }\n\n    let optimal_topo: Array<TopologyVtx> = [];\n    topo.forEach(vtx => {\n      let reduced = reduceInterlacement(vtx, tuples, count);\n\n      if(reduced === null) optimal_topo.push(vtx);\n      else optimal_topo.push(reduced);\n    })\n\n\n\n     return optimal_topo;\n\n    \n  }\n\n  export const reduceInterlacement = (vtx: TopologyVtx, tuples: Array<WarpInterlacementTuple>, count: number) : TopologyVtx => {\n\n    if(vtx.j_right - vtx.j_left <= 1) return null;\n\n\n      let inner_tuples = getTuplesWithinRange(tuples, {j_left: vtx.j_left, j_right: vtx.j_right});\n      let right_side_orientation = !vtx.orientation;\n\n      //get the closest interlacment ot the right side\n      let closest = inner_tuples.reduce((acc, val, ndx) => {\n        if(val.orientation !== right_side_orientation &&  vtx.j_right - val.j < acc.dist ) return {ndx, dist:  vtx.j_right - val.j}\n        return acc;\n      },{ndx: -1, dist: vtx.j_right - vtx.j_left});\n\n\n      //this was irreducible\n      if(closest.dist == vtx.j_right - vtx.j_left || closest.dist == 0) return null;\n      \n      let new_vtx:TopologyVtx = {\n        id: vtx.i_bot+\".\"+vtx.i_top+\".\"+vtx.j_left+\".\"+vtx.j_right+\".\"+vtx.z_pos,\n        i_bot: vtx.i_bot, \n        i_top: vtx.i_top,\n        j_left: inner_tuples[closest.ndx].j,\n        j_right: vtx.j_right,\n        z_pos: count,\n        orientation: vtx.orientation\n      }\n\n      return new_vtx;\n\n\n  }\n\n  /**\n   * a recursive function that finds interlacments, returns them, and then searches remaining floating sections to see if they should push to a new layer\n   * @param tuples the list of tuples to search\n   * @param count  the current layer id\n   * @param draft the draft in question\n   * @returns \n   */\n  export const getInterlacements = (tuples: Array<WarpInterlacementTuple>, range: WarpRange, count: number,  draft: Draft, simvars: SimulationVars) : Array<TopologyVtx> => {\n\n\n    let closeness_to_edge = Math.ceil(warps(draft.drawdown)/8);\n\n\n    if(tuples.length < 1) return [];\n\n\n\n    if(tuples[0].i_bot < 0) return [];\n\n\n\n   // if(tuples[0].i_top == wefts(draft.drawdown)-1) return [];\n\n\n    \n    tuples = getTuplesWithinRange(tuples, range);\n\n    const topo  = extractInterlacementsFromTuples(tuples, count, simvars);\n\n    let i_bot = tuples[0].i_bot;\n    let i_top = tuples[0].i_top;\n    let orientation = tuples[0].orientation\n\n    let ilaces: Array<TopologyVtx> = [];\n    let float_groups: Array<WarpRange> = splitRangeByVerticies(range , topo);\n    float_groups = float_groups.filter(el => el.j_left !== el.j_right);\n\n    //filter out groups where the last warp is included because they tend to be noisy  \n    float_groups = float_groups.filter(el => !(el.j_right != warps(draft.drawdown)-1 && el.j_right - el.j_left < closeness_to_edge));\n\n    \n    // console.log(\"FLOAT GROUPS AT \", i_top, i_bot, range, topo, float_groups);\n\n\n    float_groups.forEach((range, x) => {\n      // console.log(\"LOOKING AT FLOAT GROUP \", x)\n      count = orientation ? count + 1 : count -1;\n      \n      let next_row_tuple: Array<WarpInterlacementTuple> = getInterlacementsBetweenWefts(i_top, i_bot-1, range.j_left, range.j_right, draft);\n      ilaces = ilaces.concat(getInterlacements(next_row_tuple.slice(), range, count,  draft, simvars));\n\n    });\n  \n\n      \n    \n    return topo.concat(ilaces);\n\n  }\n\n\n  export const getFloatRanges = (draft: Draft, i: number) => {\n    const ranges: Array<WarpRange> = [];\n    let last_ndx = -1;\n    let last_value, cur_value: boolean  = false;\n    draft.drawdown[i].forEach((cell, j) => {\n      if(j == 0){\n        last_ndx = 0;\n        last_value = cell.is_set && cell.is_up;\n      } else{\n        cur_value = cell.is_set && cell.is_up;\n        if(cur_value != last_value){\n          ranges.push({j_left:last_ndx, j_right:j})\n        }\n        last_value = cur_value;\n        last_ndx = j;\n\n      }\n    })\n    ranges.push({j_left: last_ndx, j_right: warps(draft.drawdown)-1});\n    return ranges;\n  } \n\n\n  /**\n   * after you find a list of verticies between the two rows, you split the semgents of the row between the verticies \n   * @param range \n   * @param verticies \n   * @returns \n   */\n  export const splitRangeByVerticies = (range:WarpRange, verticies: Array<TopologyVtx>) : Array<WarpRange> => {\n\n    let groups:Array<WarpRange> = [];\n    verticies = sortInterlacementsOnWeft(verticies);\n\n    //this would happen if the row just checked didn't have any interlacements, \n    if(verticies.length == 0) return [range];\n\n    for(let v = 0; v < verticies.length; v++){\n      if(v == 0){\n        groups.push({\n          j_left: range.j_left, \n          j_right: verticies[v].j_left\n        })\n      }\n      \n\n      if( v > 0 && v < verticies.length-1){\n        groups.push({\n          j_left: verticies[v-1].j_right, \n          j_right:  verticies[v].j_left\n        })\n      }\n\n      if(v == verticies.length -1){\n        groups.push({\n          j_left: verticies[v].j_right, \n          j_right: range.j_right\n        })\n      }\n\n    }\n\n    return groups;\n  }\n\n\n\n  export const correctInterlacementLayers = (all: Array<TopologyVtx>, weft: Array<TopologyVtx>, layer_threshold: number) : Array<TopologyVtx> => {\n\n\n//this is a list of every possible interlacement between wefts but also includes sometimes more interlacements than we need. For instance, with satin, it might detect layers within float spaces. We can identify those as interlacements that share a corner. \n\n    let hard_overlaps = [];\n    let to_check = weft.slice();\n    all.forEach((topo) => {\n        to_check = to_check.filter(el => el.id != topo.id);\n        to_check.forEach((check) => {\n          if(topo.i_bot == check.i_bot && topo.j_left == check.j_left) hard_overlaps.push({a: topo.id, b: check.id})\n          if(topo.i_bot == check.i_bot && topo.j_right == check.j_right) hard_overlaps.push({a: topo.id, b: check.id})\n          if(topo.i_top == check.i_top && topo.j_left == check.j_left) hard_overlaps.push({a: topo.id, b: check.id})\n          if(topo.i_top == check.i_top && topo.j_right == check.j_right) hard_overlaps.push({a: topo.id, b: check.id})\n        });\n    })\n\n    hard_overlaps.forEach(topo => {\n      weft = weft.filter(el => el.id !== topo.b);\n\n      // let a:TopologyVtx = all.find(el => el.id == topo.a);\n      // let b:TopologyVtx = weft.find(el => el.id == topo.b);\n      // if(a !== undefined && b!== undefined){\n      // if(Math.abs(a.z_pos) < Math.abs(b.z_pos)) weft = weft.filter(el => el.id !== b.id);\n      // else all = all.filter(el => el.id !== a.id);\n      // }\n    });\n    all = weft.slice();\n\n\n    let compressed_weft = [];\n    let last = null;\n\n    //check weft from left to right and strip out anything that seems to be an outlier\n    weft.forEach(vtx => {\n      \n      if(vtx.z_pos == last){\n         compressed_weft[compressed_weft.length-1].count++;\n         compressed_weft[compressed_weft.length-1].els.push(vtx);\n      }else{\n        compressed_weft.push({id: vtx.z_pos, count: 1, els: [vtx]});\n      }\n      last = vtx.z_pos;\n    });\n\n\n    let mark_for_removal = [];\n    compressed_weft.forEach((item, ndx) => {\n      if(item.count < layer_threshold){\n        //check left \n        // console.log(\"Removing below threshold elements\")\n        item.els.forEach(el => {\n          mark_for_removal.push(el.id);\n        })\n        //let left_mag = (ndx -1 >= 0) ? compressed_weft[ndx-1].count : -1;\n        //let right_mag = (ndx +1 < compressed_weft.length) ? compressed_weft[ndx+1].count : -1;\n\n        // if(left_mag !== -1 && right_mag != -1){\n        //   let new_pos = -1;\n        //   if(left_mag >= right_mag){\n        //     new_pos = compressed_weft[ndx-1].id;\n        //   }else{\n        //     new_pos = compressed_weft[ndx+1].id;\n        //   }\n          \n         \n        // }\n\n      }\n    })\n\n    weft = weft.filter(el => mark_for_removal.find(item => item == el.id) == undefined);\n    all = weft.slice();\n\n\n\n    //check weft from top to bottom\n    //this has the problem that if there is an error somewhere, it will no ripple out through the cloth. \n    weft.forEach(vtx => {\n\n      let shares_layer = all.filter(el => \n        (el.j_left == vtx.j_right && el.i_top == vtx.i_bot) || (el.j_right == vtx.j_left && el.i_top == vtx.i_bot))\n\n      shares_layer.forEach(topo_vtx => {\n        vtx.z_pos = topo_vtx.z_pos;\n      })\n\n    });\n\n    return weft;\n  }\n\n\n\n  /**\n   * this function takes a draft and input variables and uses those to generate a list of vertexes between which yarns will cross on the z plane. These points are used to determine how layers are formed and how yarns will stack relative to eacother. \n   */\n  export const getDraftTopology = (draft: Draft, sim: SimulationVars) : Promise<Array<TopologyVtx>> => {\n    let dd = draft.drawdown;\n\n    //extend the drawdown by boundary in all directions so that we can eliminate strange data that emerges from drafts that don't have enough interlacements because they are small. This artifically tiles the draft to get more fidelity. \n\n\n\n    const warp_tuples = getWarpInterlacementTuples(dd);\n    // console.log(\"WARP TUPLES \", warp_tuples);\n    let topology: Array<TopologyVtx> = [];\n\n  \n    //look at each weft\n    for(let i = 0; i < wefts(dd); i++){\n\n      //get the interlacements associated with this row\n      let a = warp_tuples.filter(el => el.i_top == i);\n\n      let range = {j_left: 0, j_right: warps(draft.drawdown)-1}\n     // console.log(\"LOOKING AT \", i, \" \", a)\n\n      let verticies = getInterlacements( a, range, 0,  draft, sim);\n      topology = topology.concat(verticies);\n\n\n      let corrected = correctInterlacementLayers(topology, verticies, sim.layer_threshold);\n\n      topology = topology.concat(corrected);\n    }\n\n  \n    return  Promise.resolve(topology);\n\n  }\n\n\n   /**\n    * checks if there is the indiciated value found along a warp within the specified range\n    * @param layer_map \n    * @param val \n    * @param i_min \n    * @param i_max \n    * @param j \n    * @returns \n    */\n    export const warpLayerValueInRange = (layer_map: Array<Array<number>>, val: number, i_min: number, i_max: number, j: number) : number => {\n\n\n      let warp:Array<number> = layer_map.reduce((acc, val)=> {\n        return acc.concat(val[j])\n      }, []);\n\n      let range = warp\n      .filter((el, ndx) => ndx > Math.max(0, i_min) && ndx < i_max)\n  \n\n      let has_value = range.findIndex(el => el == val);\n      if(has_value !== -1) return has_value;\n\n      if(i_min == 0) return 0;\n\n      if(i_max == layer_map.length-1) return layer_map.length-1;\n\n      return -1;\n     \n    }\n\n   /**\n    * checks if there is the indiciated value found along a warp within the specified range\n    * @param layer_map \n    * @param val \n    * @param i_min \n    * @param i_max \n    * @param j \n    * @returns \n    */\n   export const weftLayerValueInRange = (layer_map: Array<Array<number>>, val: number, j_min: number, j_max: number, i: number) : number => {\n\n\n\n    let range = layer_map[i]\n    .filter((el, ndx) => ndx > Math.max(0, j_min) && ndx < j_max)\n\n\n    let has_value = range.findIndex(el => el == val);\n    if(has_value !== -1) return has_value;\n\n    if(j_min == 0) return 0;\n\n    if(j_max == layer_map[0].length-1) return layer_map[0].length-1;\n\n    return -1;\n   \n  }\n\n\n    /**\n     * takes interlacements associted with a layer and organizes them to associate each warp location with a given location\n     * @param layer_map \n     * @param interlacements \n     * @param max_ilace_width how close do warps need to be in an interlacement to consider these two warps being on the same layer\n     * @param max_ilace_height how close do wefts need to be in an interlacement to consider these wefts as being on the same layer\n     * @returns \n     */\n    export const addWarpLayerInterlacementsToMap = (layer_map: Array<Array<number>>, interlacements: Array<TopologyVtx>, max_ilace_width: number, max_ilace_height: number) : Array<Array<number>> => {\n\n\n      interlacements.forEach(ilace => {\n        let width = ilace.j_right-ilace.j_left;\n        if(width <= max_ilace_width){\n    \n          //span the interlaced warps onto the same layer\n         for(let i = ilace.i_bot; i <= ilace.i_top; i++){\n              if(layer_map[i][ilace.j_left] == null) layer_map[i][ilace.j_left] = ilace.z_pos;\n              if(layer_map[i][ilace.j_right] == null) layer_map[i][ilace.j_right] = ilace.z_pos;\n            \n         } \n\n        }\n      });\n\n      return layer_map;\n    }\n\n    export const addWeftLayerInterlacementsToMap = (layer_map: Array<Array<number>>, interlacements: Array<TopologyVtx>, max_ilace_width: number) : Array<Array<number>> => {\n\n\n      interlacements.forEach(ilace => {\n        let width = ilace.j_right-ilace.j_left;\n        if(width <= max_ilace_width){\n    \n          //span the interlaced wefts onto the same layer\n         for(let j = ilace.j_left; j <= ilace.j_right; j++){\n              if(layer_map[ilace.i_bot][j] == null) layer_map[ilace.i_bot][j]  = ilace.z_pos;\n              if(layer_map[ilace.i_top][j] == null) layer_map[ilace.i_top][j] = ilace.z_pos;\n            \n         } \n\n         let j_min = Math.max(0, ilace.j_left - max_ilace_width);\n         let j_max = Math.min(ilace.j_right + max_ilace_width, layer_map[0].length-1);\n\n        //reach out from all four corners and see if there is an interlacement with the same layer val in range\n         let bottom_left = weftLayerValueInRange(layer_map, ilace.z_pos, j_min, ilace.j_left, ilace.i_bot);\n\n        if(bottom_left !== -1){\n         for(let j = bottom_left; j < ilace.j_left; j++){\n          if(layer_map[ilace.i_bot][j] == null) layer_map[ilace.i_bot][j] = ilace.z_pos;\n         }\n        }\n\n        let top_left = weftLayerValueInRange(layer_map, ilace.z_pos, j_min, ilace.j_left, ilace.i_top);\n        if(top_left !== -1){\n          for(let j = top_left; j < ilace.j_left; j++){\n            if(layer_map[ilace.i_top][j] == null) layer_map[ilace.i_top][j] = ilace.z_pos;\n          }\n         }\n \n         let bottom_right = weftLayerValueInRange(layer_map, ilace.z_pos, ilace.j_right, j_max, ilace.i_bot);\n         if(bottom_right !== -1){\n          for(let j = ilace.j_right; j <= bottom_right; j++){\n            if(layer_map[ilace.i_bot][j] == null) layer_map[ilace.i_bot][j] = ilace.z_pos;\n          }\n         }\n\n         let top_right = weftLayerValueInRange(layer_map, ilace.z_pos, ilace.j_right, j_max, ilace.i_top);\n         if(top_right !== -1){\n          for(let j = ilace.j_right; j <= top_right; j++){\n            if(layer_map[ilace.i_top][j] == null) layer_map[ilace.i_top][j] = ilace.z_pos;\n          }\n         }\n        }\n      });\n\n      return layer_map;\n    }\n\n    /**\n     * to create the rendering of the draft, we need to understand what is happening layer wise with the warps and wefts\n     */\n    export const createLayerMaps =  (draft: Draft, topo: Array<TopologyVtx>, sim: SimulationVars) : \n    Promise<LayerMaps> => {\n\n\n      const layer_maps = {\n        weft: [], \n        warp: []\n      };\n      \n       //let a list of all the active layers in this toplogy (as absolute vals)\n       let active_layers:Array<number> = topo.reduce((acc, val) => {\n         let has_elem = acc.find(el => el == Math.abs(val.z_pos))\n         if(has_elem === undefined){\n           return acc.concat(Math.abs(val.z_pos));\n         }\n         return acc;\n       }, []); \n \n       //get the largest magnitude layer (e.g. farthest from zero)\n       const max_layer = active_layers.reduce((acc, val) => {\n         if(val > acc) return val;\n         return acc;\n       }, 0);\n\n\n\n\n      return createWarpLayerMap(draft, topo, sim, active_layers, max_layer)\n      .then(warps => {\n\n        layer_maps.warp = warps;\n        return createWeftLayerMap(draft, topo, sim, active_layers, max_layer)\n      }\n      ).then(wefts =>{\n\n        layer_maps.weft = wefts;\n        \n        return layer_maps;\n      });\n    }\n\n    /**\n     * use the topology generated to create a map describing the relationship between warp and weft layers. assign each position along a warp with an associated layer. If a weft interlaces with that warp, it must do so on the warps associated layer\n     */\n    export const createWarpLayerMap = (draft: Draft, topo: Array<TopologyVtx>, sim: SimulationVars, active_layers: Array<number>, max_layer: number) : Promise<Array<Array<number>>> => {\n    \n    //get the closest weft interlacements \n    const max_height = topo.reduce((acc, val) => {\n      if((val.i_top - val.i_bot) > acc) return (val.i_top - val.i_bot);\n      return acc;\n    }, 0);\n\n    //start from the smallest width to the largest  \n    //push interlacements to the map in this order, not adding any additional. \n    //add a \"strength, field that extends out from interlacement in \"\n    \n\n\n      // //default all layers to null\n      let layer_map: Array<Array<number>> = [];\n      for(let i = 0; i < wefts(draft.drawdown); i++){\n        layer_map.push([]);\n        for(let j = 0; j < warps(draft.drawdown); j++){\n          layer_map[i][j] = null;\n        }\n      }\n      \n      //go through layers 0 -> max and push interlacements to the layer map \n      for(let i = 1; i <= max_height; i++){\n          let layer_ilace = topo.filter(ilace => ilace.i_top-ilace.i_bot == i);\n          layer_map = addWarpLayerInterlacementsToMap(layer_map, layer_ilace, sim.max_interlacement_width, sim.max_interlacement_height); \n      }\n\n    \n        \n\n        //now scan through the layer map. Count the number of consecutive layer values on a warp. \n        //if it is larger than the layer threshold, keep them\n        //if not, \n        for(let j = 0; j < warps(draft.drawdown); j++){\n\n          let col = layer_map.reduce((acc,el) => {\n            return acc.concat(el[j]);\n          }, []);\n\n          //find all of the non null vals\n          let vals = [];\n          \n          col.forEach((el, ndx) => {\n            if(el !== null) vals.push(ndx);\n          });\n\n\n          if(vals.length == 0){\n            //find the first non-zero val to the columns to the right \n            //fill this with those columns \n          }else{\n\n            vals.forEach(val => {\n              //fill downwards\n              let found = false;\n              for(let i = val-1; i >= 0 && !found; i--){\n                if(layer_map[i][j] == null) layer_map[i][j] =  layer_map[val][j];\n                else found = true;\n              };\n\n              //fill upwards\n               found = false;\n              for(let i = val+1; i < col.length && !found; i++){\n                if(layer_map[i][j] == null) layer_map[i][j] =  layer_map[val][j];\n                else found = true;\n              };\n\n\n            });\n            \n\n          }\n\n           \n        // }\n\n        }\n\n\n  /**\n   * look through rows, if you hit a null value in a row, look to the preview \n   * values it had just saw, and replace this value with those values. \n   */\n    let prior_pattern = [];\n    let count_null = 0;\n    for(let i = 0; i < wefts(draft.drawdown); i++){\n      for(let j = 0; j < warps(draft.drawdown); j++){\n        if(layer_map[i][j] !== null){\n          if(count_null > 0) prior_pattern = [];\n          prior_pattern.push(layer_map[i][j]);\n          count_null = 0;\n        }else{\n       //   console.log(\"FOUND NULL AT \", i, j, \"PRIOR IS \", prior_pattern, \" \", count_null);\n          if(prior_pattern.length == 0) layer_map[i][j] = 0;\n          else layer_map[i][j] = prior_pattern[count_null%prior_pattern.length];\n          count_null++;\n        }\n\n      }\n    }\n\n\n      //now clean up \n      console.log(\"WARP LAYER MAP\", layer_map)\n      return Promise.resolve(layer_map);\n     \n    }\n  \n    /**\n     * use the topology generated to create a map describing the relationship between warp and weft layers. assign each position along a warp with an associated layer. If a weft interlaces with that warp, it must do so on the warps associated layer\n     * @param draft the draft to draw\n     * @param topo the generated topography\n     * @param  power if you see an interlacement at i, j, how far should its \"power\" extend to neighbors. \n     * @param layer_threshold how many consecutive layer assignments need to be seen in order to call it a layer\n     * @returns \n     */\n    export const createWeftLayerMap = (draft: Draft, topo: Array<TopologyVtx>, sim: SimulationVars, active_layers: Array<number>, max_layer: number) : Promise<Array<Array<number>>> => {\n\n        //default all layers to null\n        let layer_map: Array<Array<number>> = [];\n        for(let i = 0; i < wefts(draft.drawdown); i++){\n          layer_map.push([]);\n          for(let j = 0; j < warps(draft.drawdown); j++){\n            layer_map[i][j] = null;\n          }\n        }\n      \n\n      //go through layers 0 -> max and push interlacements to the layer map \n      for(let i = 0; i <= max_layer; i++){\n        let layers_to_check: Array<number> = []; \n        if(i !== 0){\n          layers_to_check = [i, -i];\n        }else{\n          layers_to_check = [0]\n        }\n\n\n        layers_to_check.forEach(layer_id => {\n          let layer_ilace = topo.filter(ilace => ilace.z_pos == layer_id);\n          layer_map = addWeftLayerInterlacementsToMap(layer_map, layer_ilace, sim.max_interlacement_width);\n        })\n        \n      }\n\n        /**\n       * look through rows, if you hit a null value in a row, look to the preview \n       * values it had just saw, and replace this value with those values. \n       */\n      let prior_pattern = [];\n      let count_null = 0;\n      for(let j = 0; j < warps(draft.drawdown); j++){\n        for(let i = 0; i < wefts(draft.drawdown); i++){\n          if(layer_map[i][j] !== null){\n            if(count_null > 0) prior_pattern = [];\n            prior_pattern.push(layer_map[i][j]);\n            count_null = 0;\n          }else{\n        //   console.log(\"FOUND NULL AT \", i, j, \"PRIOR IS \", prior_pattern, \" \", count_null);\n            if(prior_pattern.length == 0) layer_map[i][j] = 0;\n            else layer_map[i][j] = prior_pattern[count_null%prior_pattern.length];\n            count_null++;\n          }\n\n        }\n      }\n\n    //  console.log(\"WEFT LAYER MAP\", layer_map)\n      return Promise.resolve(layer_map);\n\n    }\n\n    /**\n     * this function calculates proximity to the place in which the interlacement crosses and then attracts the other interlacements towards it position as a function of their distance. \n     * @param inlacement_j \n     * @param interlacement_y \n     * @param cur \n     * @param mm_per_warp \n     */\n    export const updateY = (interlacement_j: number, interlacement_y:number, cur: YarnVertex, mm_per_warp: number ) => {\n\n      //calc distance in mm. the closer to the interlacement, the stronger this vertex will be pulled twoards ilace_y\n      let dist = (interlacement_j-cur.j) * mm_per_warp;\n\n      //use the function 1 / 2^x/2 to calucate the force. \n     // let displacement_factor = 1 / Math.pow(2, dist/10);\n      let displacement_factor = 1;\n      let y_dist = interlacement_y - cur.y;\n\n      let new_y =  cur.y + (y_dist*displacement_factor);\n\n      // console.log(\"DIST, DISP, YDIST, NEWY\", dist, displacement_factor, y_dist, cur.y, new_y, interlacement_y);\n      return new_y;\n\n    \n    } \n\n    // /**\n    //  * given an distance range in mm, returns all the vtxs in that range. \n    //  * @param weft \n    //  * @param x_min \n    //  * @param x_max \n    //  * @returns \n    //  */\n    // export const getVtxsInRange = (weft: Array<YarnVertex>, x_min: number, x_max:number) => {\n       \n    //     let range = [];\n    //    for(let x = 0; x < weft.length; x++){\n    //       let vtx = weft[x]; \n    //       if(vtx.x >= x_min) range.push(vtx);\n    //       if(vtx.x >= x_max) return range;\n    //    }\n    // }\n\n\n    export const setBaselineYForWeft = (i: number, weft: Array<YarnVertex>, layer_maps: LayerMaps, draft: Draft, prior_wefts:Array<Array<YarnVertex>>, sim: SimulationVars) : Array<YarnVertex> => {\n        let updated_weft = [];\n        let weft_diam = sim.ms.getDiameter(draft.rowShuttleMapping[i]);\n\n        //find the y value of the same layer\n        weft.forEach((vtx) => {\n\n          let this_layer = layer_maps.weft[vtx.i][vtx.j];\n          let layer_ndx_map = layer_maps.weft\n          .filter((el, ndx) => ndx < i)\n          .map(el => el[vtx.j])\n          .map( (el, ndx) => {return {layer: el, i: ndx, j: vtx.j}});\n\n        let prev_wefts_on_layer = layer_ndx_map.filter(el => el.layer == this_layer);\n        let prev_weft = null;\n        let layer_y = {y: 0, i: -1};\n        \n        \n        if(prev_wefts_on_layer.length > 0){\n          prev_weft = prev_wefts_on_layer.slice().pop();\n          let prev_weft_vtx = prior_wefts[prev_weft.i].find(el => el.j == vtx.j);\n          if(prev_weft_vtx !== undefined)\n          layer_y = {y:prev_weft_vtx.y, i: prev_weft.i};\n        }\n\n        //compare the last layer y to the highest y in the set\n       // let non_layer_map = layer_ndx_map.filter(el => el.layer !== this_layer);\n        let non_layer_map = layer_ndx_map;\n        let max_y = non_layer_map.reduce((acc, el) => {\n          let max_in_weft = prior_wefts[el.i].reduce((subacc, vtx) => {\n            if(vtx.y > subacc) return vtx.y;\n            return subacc;\n          }, 0);\n\n          if(max_in_weft >= acc.y) return {y: max_in_weft, i: el.i};\n          return acc;\n        }, {y: 0, i: -1});\n\n        let use_y = 0;\n\n        if(max_y.i !== -1 || (max_y.i == -1 && non_layer_map.length == 0)){\n          //if the layer_y is within acceptable distance from max\n          let diff = (max_y.y + sim.ms.getDiameter(draft.rowShuttleMapping[max_y.i])/2)  - (layer_y.y + weft_diam/2);\n          if(layer_y.i == -1 || diff > weft_diam){\n            use_y = max_y.y + sim.ms.getDiameter(draft.rowShuttleMapping[max_y.i])/2 - weft_diam;\n          } \n          else{\n            //make sure the new y isn't too far away\n            if(Math.ceil(max_y.y - layer_y.y) >= weft_diam) {\n              console.log(\"DETECTED DIFFERENCE \")\n              layer_y.y = max_y.y - weft_diam; \n            }\n\n            use_y = layer_y.y + sim.ms.getDiameter(draft.rowShuttleMapping[layer_y.i])/2 + weft_diam/2;\n\n          } \n\n        }\n\n       //TECHNICALLY - WE SHOULD UPDATE WARP VTXS TOO!\n        updated_weft.push({\n          x: vtx.x,\n          y: use_y, \n          z: vtx.z,\n          i: vtx.i,\n          j: vtx.j\n        })\n    })\n\n    return updated_weft;\n    }\n\n    /**\n     * an interlacement pushes two wefts away from eachother by an amount that depends on the sett, yarn thickness, and strength of the interlacement. This funciton radiates, and dissapates that force along the weft to ensure a smooth gradual change in position that is never out of range\n     * @param weft the weft vertexes\n     * @param deflections a copy of vertexes, but storing the already occured deflections\n     * @param x the position of the interlacement\n     * @param i the weft id\n     * @param strength the strength of the interlacement (closer interlacements are stronger)\n     * @param max_displacement the maximum amont of distance, in y, that this weft can be displaced\n     * @param simvars the simulation variables. \n     * @returns \n     */\n    export const radiateInterlacementForce = (weft: Array<YarnVertex>, deflections: Array<Deflection>, x: number, i: number, strength: number, max_displacement, simvars: SimulationVars) : Array<Deflection> => {\n\n      let in_range = weft.map((el, ndx) => {\n       if(el.x >= x - simvars.radius && el.x <= x + simvars.radius) return ndx;\n       else return -1;\n      });\n\n      in_range.filter(el => el !== -1).forEach(ndx => {\n        deflections[ndx].dy += strength * max_displacement;\n        if(deflections[ndx].dy > max_displacement) deflections[ndx].dy = max_displacement;\n      })\n\n      return deflections;\n\n    }\n\n    /**\n     * given the distance of this interlacement in mm, this function figures out the strength factor. Which will determine how much to push up this warp as  function of distance. Smaller widths get pushed up harder than farther widths. Max is 1 - min is very close to zero.\n     * @param dist \n     */\n    export const calcStrength = (dist: number) : number => {\n      return 1/dist;\n    }\n\n    /**\n     * how far can a strong interlacement push a weft upward in the cloth. This depends on the sett of the cloth and density of the yarns. How much distance is between these yarns? Returns the displacement in mm. \n     * @param sett_width - how many mm between the two yarns in question\n     * @param max_warp_thickness - how thick is the warp at this interlacement.\n     * @returns \n     */\n    export const calcMaxDisplacement = (sett_width: number, max_warp_thickness: number) : number => {\n      return max_warp_thickness / sett_width;\n    }\n\n    export const getPrevWarpOnLayer = (i: number, j: number, layermaps: LayerMaps) : number => {\n\n      for(let ndx = j; ndx >=0; ndx--){\n        if(layermaps.weft[i][j] == layermaps.weft[i][ndx]) return ndx;\n      }\n      return -1;\n\n    }\n\n    export const getNextWarpOnLayer = (i: number, j: number, layermaps: LayerMaps) : number => {\n\n      for(let ndx = j; ndx < layermaps.weft[0].length; ndx++){\n        if(layermaps.weft[i][j] == layermaps.weft[i][ndx]) return ndx;\n      }\n      return -1;\n\n    }\n\n        /**\n     * how far can a strong interlacement push a weft upward in the cloth. This depends on the sett of the cloth and density of the yarns. How much distance is between these yarns? Returns the displacement in mm. \n     * @param sett_width - how many mm between the two yarns in question\n     * @param max_warp_thickness - how thick is the warp at this interlacement.\n     * @returns \n     */\n      export const calcFloatDistance = (i: number, j: number, float: YarnFloat, weft: Array<YarnVertex>, layer_maps: LayerMaps, draft:Draft, sim:SimulationVars) : number => {\n        \n        let left_warp_id = getPrevWarpOnLayer(i, float.start, layer_maps); \n        let right_warp_id =float.end; \n\n        if(j == left_warp_id || j == right_warp_id) return 0;\n        \n\n\n       \n\n        let start_x = sim.warp_spacing*left_warp_id;\n        let end_x =  sim.warp_spacing*right_warp_id;\n        let width = end_x - start_x;\n\n        let half_width = width/2;\n\n        let jx = (j * sim.warp_spacing) - start_x;\n        let distance_from_center = (jx <= half_width) ? half_width - jx : jx - half_width;\n       \n        if(half_width == 0) return 0;\n\n        let closeness_ratio = 1-(distance_from_center/half_width);\n        // console.log(\"WIDTH / DISTANCE \", distance_from_center, half_width, closeness_ratio)\n        //should be 1 when the distance is 0;\n\n\n        //less x_distance, stonger repel. \n        // repel depends on length; \n        let max_dx = Math.min(8, width/10);\n        let pcent = Math.sin(Math.PI/2 * closeness_ratio)\n\n\n\n       \n        //let positioned_dx = (float.heddle) ? max_dx*pcent : -max_dx*pcent; \n        let positioned_dx = (float.heddle) ? pcent*max_dx : -pcent*max_dx; \n       // console.log(\"POSITINED DX \", positioned_dx)\n\n        return positioned_dx;\n      }\n\n      export const getFirstWarpAssociatedWithLayer = (i: number, layerid: number, layermaps: LayerMaps ) : number => {\n\n        for(let j = 0; j < layermaps.weft[i].length; j++){\n          if(layermaps.warp[i][j] == layerid) return j;\n        }\n        return -1;\n\n      }\n    \n\n    /**\n     * convert a draft row into an array of floats. This is an alternate representation of the same data that focuses on how long the float values are and where they start, rather than each cell individually. Teh structure stores teh start of the float - the first cell that reresents the value across the float. The end value represents the cell upon which the value changes. \n     * @param i \n     * @param draft \n     * @param layer_maps \n     * @returns \n     */\n    export const getWeftAsFloat = (i: number, draft:Draft, layer_maps:LayerMaps) : Array<YarnFloat> => {\n     \n      if(draft.drawdown[i].length == 0) return [];\n\n      let start_id = getFirstWarpAssociatedWithLayer(i, layer_maps.weft[i][0], layer_maps);\n\n      let floats:Array<YarnFloat> = [{\n        heddle: getCellValue(draft.drawdown[i][start_id]),\n        end: start_id, \n        start: 0,\n        layer: layer_maps.weft[i][start_id],\n      }];\n\n      let last_float = floats[0];\n\n\n      for(let j = 1; j < warps(draft.drawdown); j++){\n        if(layer_maps.warp[i][j] == layer_maps.weft[i][j]){\n\n          last_float.end = j;\n\n          if(getCellValue(draft.drawdown[i][j]) != last_float.heddle ||  layer_maps.weft[i][j] != last_float.layer){\n            last_float = {\n              heddle: getCellValue(draft.drawdown[i][j]) ,\n              start: j,\n              end:j,\n              layer: layer_maps.weft[i][j]\n            }\n\n            floats.push(last_float);\n          }\n        }\n      }\n\n      return floats;\n\n    }\n\n\n    /**\n     * position the weft on top of the previous weft (on the corresponding layers) and then repositing to account for the physics of an interlacement htat pushes in different directions. \n     * @param i \n     * @param weft \n     * @param topo \n     * @param layer_maps \n     * @param draft \n     * @param prior_wefts \n     * @param sim \n     * @returns \n     */\n    export const packWeft = (i: number, weft: Array<YarnVertex>, topo: Array<TopologyVtx>, layer_maps: LayerMaps, draft: Draft,  prior_wefts:Array<Array<YarnVertex>>, sim: SimulationVars) : Array<YarnVertex> => {\n\n      //get the interlacements that have the current weft as the top value\n      let ilaces = topo.filter(el => el.i_top === i);\n      let ilace_coords = [];\n\n      weft = setBaselineYForWeft(i, weft, layer_maps, draft, prior_wefts, sim);\n      \n      let floats:Array<YarnFloat> = getWeftAsFloat(i, draft, layer_maps)\n      let deflections: Array<Deflection> = weft.map(vtx => {return {i: vtx.i, j: vtx.j, dx: 0, dy: 0, dz: 0}});\n\n      // console.log(\"FLOATS ON \", i, floats, warps(draft.drawdown))\n      ilaces.forEach(ilace => {\n   \n          let width = (ilace.j_right - ilace.j_left)*sim.warp_spacing;\n          let strength = calcStrength(width);\n  \n          let current_left_ndx:number = weft.findIndex(el => el.j == ilace.j_left);\n          if(current_left_ndx == -1) return;\n          let current_left:YarnVertex = weft[current_left_ndx];\n          \n          let current_right_ndx:number = weft.findIndex(el => el.j == ilace.j_right);\n          if(current_right_ndx == -1) return;\n          let current_right:YarnVertex = weft[current_right_ndx];\n\n\n          let center_x = current_right.x + (current_right.x - current_left.x)/2;\n          ilace_coords.push(center_x);\n          let left_warp_diam = sim.ms.getDiameter(draft.colShuttleMapping[ilace.j_left]);\n          let right_warp_diam = sim.ms.getDiameter(draft.colShuttleMapping[ilace.j_right]);\n          let between_yarns_width = width - (left_warp_diam/2 + right_warp_diam/2);\n          if(between_yarns_width < 0) between_yarns_width = 0.1;\n          let max_displacement = calcMaxDisplacement(between_yarns_width, Math.max(left_warp_diam, right_warp_diam));\n\n          deflections = radiateInterlacementForce(weft, deflections, center_x, i, strength, max_displacement, sim);\n                \n      });\n\n\n      floats.forEach(float => {\n  \n        for(let f = float.start; f <= float.end; f++){\n            let deflection_id = deflections.findIndex(el => el.j == f);\n            if(deflection_id !== -1) deflections[deflection_id].dz = calcFloatDistance(i, f, float, weft, layer_maps, draft, sim);\n        }\n      });\n\n      weft.forEach((vtx, ndx) => {\n        vtx.y += deflections[ndx].dy;\n        vtx.z += deflections[ndx].dz;\n      })\n\n  \n\n      \n\n\n      return weft;\n    }\n  \n\n\n\n\n  /**\n   * converts a topology diagram to a list of vertexes to draw. It only draws key interlacements to the list\n   * @param draft \n   * @param topo \n   * @param layer_map \n   * @param sim \n   * @returns \n   */\n  export const translateTopologyToPoints = (draft: Draft, topo: Array<TopologyVtx>, layer_maps: {warp: Array<Array<number>>, weft: Array<Array<number>>}, sim: SimulationVars) : Promise<VertexMaps>=> {\n\n    let weft_vtx: Array<Array<YarnVertex>> = [];\n    let warp_vtx: Array<Array<YarnVertex>> = [];\n\n\n\n    for(let i = 0; i < wefts(draft.drawdown); i++){\n      weft_vtx.push([]);\n      let weft = insertWeft(draft, [],  i, sim, layer_maps);\n      let res = packWeft(i, weft.slice(), topo, layer_maps, draft, weft_vtx, sim);\n      weft_vtx[i] = res.slice();\n\n    } \n\n    for(let j = 0; j < warps(draft.drawdown); j++){\n      warp_vtx.push([]);\n      //get every interlacement involving this weft\n      const ilaces= topo.filter(el => el.j_left == j || el.j_right == j);\n      warp_vtx = insertWarp(draft, ilaces, warp_vtx,  j, sim, layer_maps.warp).slice();\n    } \n   \n\n    return Promise.resolve({warps: warp_vtx, wefts:weft_vtx});\n  }\n\n  export const sortInterlacementsOnWarp = (ilaces: Array<TopologyVtx>) : Array<TopologyVtx> => {\n\n    let unsorted = ilaces.slice();\n    let sorted = [];\n\n    while(unsorted.length > 1 ){\n    let bottommost = unsorted.reduce((acc, ilace, ndx) => {\n      if(ilace.i_bot < acc.val) return {ndx: ndx, val: ilace.i_bot};\n      return acc;\n    }, {ndx: -1, val: 100000000});\n\n    let arr_removed = unsorted.splice(bottommost.ndx, 1);\n    sorted.push(arr_removed[0]);\n\n    }\n\n    sorted = sorted.concat(unsorted);\n    return sorted;\n  }\n\n\n  export const sortInterlacementsOnWeft = (ilaces: Array<TopologyVtx>) : Array<TopologyVtx> => {\n\n    let unsorted = ilaces.slice();\n    let sorted = [];\n\n    while(unsorted.length > 1 ){\n    let leftmost = unsorted.reduce((acc, ilace, ndx) => {\n      if(ilace.j_left < acc.val) return {ndx: ndx, val: ilace.j_left};\n      return acc;\n    }, {ndx: -1, val: 100000000});\n\n    let arr_removed = unsorted.splice(leftmost.ndx, 1);\n    sorted.push(arr_removed[0]);\n\n    }\n\n    sorted = sorted.concat(unsorted);\n    return sorted;\n  }\n\n\n\n  // export const calcFloatHeightAtPosition = (pos: number, total_float_len: number, max_float: number) : number => {\n\n  //   let radians = pos/total_float_len * Math.PI;\n  //   return max_float * Math.sin(radians);\n\n  // }\n\n  export const getWeftOrientationVector = (draft: Draft, i: number, j: number) : number => {\n    return (draft.drawdown[i][j].is_set && draft.drawdown[i][j].is_up) ? 1 : -1; \n\n  }\n\n\n  export const insertWarp = (draft: Draft, unsorted_ilaces: Array<TopologyVtx>, warp_vtxs: Array<Array<YarnVertex>>, j: number,sim: SimulationVars, layer_map:Array<Array<number>>) :Array<Array<YarnVertex>> => {\n\n    let ilaces = sortInterlacementsOnWarp(unsorted_ilaces);\n    let diam = sim.ms.getDiameter(draft.colShuttleMapping[j]);\n    let res = processWarpInterlacement(draft, j, diam, ilaces.slice(), warp_vtxs, [], sim, layer_map);\n\n    return res;\n    \n  }\n\n\n  /**\n   * given all the interlacements involving this weft, this function returns the list of vertecies that will be uused to draw that weft on screen. \n   * @param draft \n   * @param unsorted_ilaces \n   * @param weft_vtx \n   * @param i \n   * @param sim \n   * @param layer_map \n   * @returns \n   */\n  export const insertWeft \n  = (draft: Draft, \n    weft_vtx: Array<YarnVertex>, \n    i: number, \n    sim: SimulationVars, \n    layer_maps: LayerMaps\n    ) \n    : Array<YarnVertex> => {\n\n    let diam = sim.ms.getDiameter(draft.rowShuttleMapping[i]);\n    return  processWeftInterlacements(draft, i, diam, weft_vtx,sim, layer_maps);\n  }\n\n\n\n  export const calcClothHeightOffsetFactor = (diam: number, radius: number, offset: number) : number => {\n    return  diam * (radius-offset)/radius; \n  }\n \n\n \n\n  export const addWeftInterlacement \n  =  (\n    draft: Draft, \n    i: number, \n    j: number, \n    z_pos: number, \n    diam: number, \n    sim: SimulationVars, \n    weft_vtxs: Array<YarnVertex>, \n    ) \n  : Array<YarnVertex> => {\n    let offset = getWeftOffsetFromWarp(draft, i, j, sim.ms);\n    let orient = getWeftOrientationVector(draft, i, j);\n\n\n      weft_vtxs.push({\n      x: j*sim.warp_spacing, \n      y: i*diam,\n      z: z_pos*sim.layer_spacing+offset*orient,\n      i: i, \n      j: j\n     });\n\n\n\n     return weft_vtxs;\n     \n  }\n\n\n  export const addWarpInterlacement = (draft: Draft, i: number, j: number, z_pos: number, diam: number, sim: SimulationVars, warp_vtxs: Array<Array<YarnVertex>>) :  Array<Array<YarnVertex>> => {\n\n\n    warp_vtxs[j].push({\n      x: j*sim.warp_spacing, \n      y: i*diam,\n      z: z_pos*sim.layer_spacing,\n      i: i, \n      j: j\n     });\n\n\n     return warp_vtxs;\n     \n  }\n\n\n\n  // export const areDuplicateWarps = (j: number, j_next: number, draft: Draft) : boolean => {\n  //   for(let i = 0; i < wefts(draft.drawdown); i++){\n  //     if(draft.drawdown[i][j].getHeddle() != draft.drawdown[i][j_next].getHeddle()) return false;\n  //   }\n  //   return true;\n  // }\n\n\n  /**\n   * given a list of weft interlacements it converts\n   * @param draft \n   * @param i \n   * @param ilace_last \n   * @param diam \n   * @param ilaces \n   * @param weft_vtxs \n   * @param drawn_positions \n   * @param sim \n   * @param layer_map \n   * @returns \n   */\n  export const processWeftInterlacements \n  = (draft: Draft, \n    i: number,  \n    diam: number, \n    weft_vtxs: Array<YarnVertex>,  \n    sim: SimulationVars, \n    layer_maps:  LayerMaps) \n    : Array<YarnVertex> => {\n\n    let indexs_added = [];\n\n    //look across the row and make new interlacements\n    let last_layer = layer_maps.weft[i][0];\n   \n    weft_vtxs = addWeftInterlacement(draft, i, 0, last_layer, diam, sim, weft_vtxs).slice();\n    indexs_added.push(0);\n\n    for(let j = 1; j < warps(draft.drawdown); j++){\n\n       if(layer_maps.warp[i][j]==layer_maps.weft[i][j]){\n        let layer_id:number = layer_maps.weft[i][j];        \n        weft_vtxs = addWeftInterlacement(draft, i, j, layer_id, diam, sim, weft_vtxs).slice();\n      }\n\n    }\n\n    return weft_vtxs;\n\n  }\n\n  export const processWarpInterlacement = (draft: Draft, j: number, diam: number,  ilaces: Array<TopologyVtx>, warp_vtxs: Array<Array<YarnVertex>>, drawn_positions: Array<number>, sim: SimulationVars, layer_map: Array<Array<number>>) : Array<Array<YarnVertex>> => {\n\n    //ilaces is all the interlacements on this warp\n\n    let last_id = layer_map[0][j];\n    let just_added = false;\n\n    warp_vtxs = addWarpInterlacement(draft, -1, j, last_id, diam, sim, warp_vtxs);\n\n\n    for(let i = 1; i < wefts(draft.drawdown); i++){\n      if(last_id !== layer_map[i][j]){\n        //add the top-size of the interlacement\n        if(!just_added) warp_vtxs = addWarpInterlacement(draft, i-1, j, layer_map[i-1][j], diam, sim, warp_vtxs);\n        warp_vtxs = addWarpInterlacement(draft, i, j, layer_map[i][j], diam, sim, warp_vtxs);\n        just_added = true;\n      }else{\n        just_added  = false;\n        \n      }\n      last_id = layer_map[i][j];\n     \n    }\n\n    warp_vtxs = addWarpInterlacement(draft, wefts(draft.drawdown), j, last_id, diam, sim, warp_vtxs);\n\n\n    return warp_vtxs;\n  }\n\n\n\n \n\n\n\n\n\n\n\n\n  \n\n\n  \n\n\n\n","import { Draft, NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { copyDraft, getHeddle, initDraftFromDrawdown, initDraftWithParams, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\nconst name = \"apply materials\";\nconst old_names = [];\n\n//PARAMS\n//PARAMS\nconst shift_warp_mat:NumParam =  \n{name: 'warp colors shift',\nmin: 0,\nmax: 10000,\nvalue: 0,\ntype: 'number',\ndx: 'number of ends by which to shift the warp color pattern'\n}\n\nconst shift_weft_mats:NumParam = {\n    name: 'warp colors shift',\n      min: 0,\n      max: 10000,\n      value: 0,\n      type: 'number',\n      dx: 'number of pics by which to shift the weft color pattern'\n}\n\nconst shift_warp_systems:NumParam =  \n{name: 'warp system shift',\nmin: 0,\nmax: 10000,\nvalue: 0,\ntype: 'number',\ndx: 'number of ends by which to shift the warp system order'\n}\n\nconst shift_weft_systems:NumParam =  \n{name: 'weft system shift',\nmin: 0,\nmax: 10000,\nvalue: 0,\ntype: 'number',\ndx: 'number of pics by which to shift the weft system order'\n}\n\n\n\n\nconst params = [shift_warp_mat, shift_weft_mats, shift_warp_systems, shift_weft_systems];\n\n\n\n//INLETS\nconst draft: OperationInlet = {\n    name: 'draft', \n    type: 'static',\n    value: null,\n    uses: 'draft',\n    dx: 'the draft to which you would like to apply materials',\n    num_drafts: 1\n}\n\n  const materials: OperationInlet = {\n    name: 'systems & materials', \n    type: 'static',\n    value: null,\n    uses: 'warp-and-weft-data',\n    dx: 'a draft which has the materials and systems you would like to repeat across the pics and ends of the resulting draft',\n    num_drafts: 1\n  }\n\n\n  const inlets = [draft, materials];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) : Promise<Array<Draft>> => {\n\n    const base_drafts = getAllDraftsAtInlet(op_inputs, 0);\n    const materials_drafts = getAllDraftsAtInlet(op_inputs, 1);\n\n    const weft_mat_shift = getOpParamValById(0, op_params);\n    const warp_mat_shift = getOpParamValById(1, op_params);\n    const warp_sys_shift = getOpParamValById(2, op_params);\n    const weft_sys_shift = getOpParamValById(3, op_params);\n\n\n    if(base_drafts.length == 0 && materials_drafts.length == 0) return Promise.resolve([]);\n\n\n    let active_draft = (base_drafts.length > 0) ?base_drafts[0] : initDraftWithParams({warps: 1, wefts: 1});\n\n    let materials_draft = (materials_drafts.length > 0) ?materials_drafts[0] : initDraftWithParams({warps: 1, wefts: 1});\n    \n\n    let width = warps(active_draft.drawdown);\n    let height = wefts(active_draft.drawdown);\n\n    let warp_systems = new Sequence.OneD(materials_draft.colSystemMapping).resize(width).shift(warp_sys_shift);\n\n    let warp_mats = new Sequence.OneD(materials_draft.colShuttleMapping).resize(width).shift(warp_mat_shift);\n\n    let weft_systems = new Sequence.OneD(materials_draft.rowSystemMapping).resize(height).shift(weft_sys_shift);\n\n    let weft_materials = new Sequence.OneD(materials_draft.rowShuttleMapping).resize(height).shift(weft_mat_shift);\n\n    \n    let d = copyDraft(active_draft);\n    d.colShuttleMapping = warp_mats.val();\n    d.colSystemMapping = warp_systems.val();\n    d.rowShuttleMapping = weft_materials.val();\n    d.rowSystemMapping = weft_systems.val();\n\n\n\n    return Promise.resolve([d]);\n\n};   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n    let r = getAllDraftsAtInlet(op_inputs, 0);\n    let name_list = parseDraftNames(r);\n  return name_list;\n}\n\n\nexport const apply_mats: Operation = {name, old_names, params, inlets, perform, generateName};\n\n","import { createCell } from \"../../model/cell\";\nimport { Draft, Operation, OperationInlet, OpInput, OpParamVal, StringParam } from \"../../model/datatypes\";\nimport { generateMappingFromPattern, initDraftFromDrawdown, initDraftWithParams } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\nconst name = \"assign systems\";\nconst old_names = [];\n\n//PARAMS\n\nconst weft_pattern:StringParam =  \n    {name: 'weft system pattern',\n    type: 'string',\n    value: 'a b c d e f g',\n    regex: /\\S+/, //NEVER USE THE GLOBAL FLAG - it will throw errors randomly\n    error: 'invalid entry, must use single lower-case letters separated by a space',\n    dx: 'all entries must be single lower-case letters separated by a space'\n  }\n  const warp_system:StringParam =  \n    {name: 'weft system pattern',\n    type: 'string',\n    value: '1 2 3',\n    regex: /\\S+/, //NEVER USE THE GLOBAL FLAG - it will throw errors randomly\n    error: 'invalid entry, must use single lower-case letters separated by a space',\n    dx: 'all entries must be single lower-case letters separated by a space'\n  }\n\n\n  const assign_to_weft:StringParam =  \n  {name: 'assign to weft',\n  type: 'string',\n  value: 'a',\n  regex: /\\S+/, //NEVER USE THE GLOBAL FLAG - it will throw errors randomly\n  error: 'invalid entry, must use one lower case letter',\n  dx: 'all entries must be one single lower-case letter'\n}\n\n  const assign_to_warp:StringParam =  \n  {name: 'assign to warp',\n  type: 'string',\n  value: '1',\n  regex: /\\S+/, //NEVER USE THE GLOBAL FLAG - it will throw errors randomly\n  error: 'invalid entry, must use one number',\n  dx: 'all entries must be one number'\n}\n\n\n\nconst params = [weft_pattern, warp_system, assign_to_weft, assign_to_warp];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'draft',\n    type: 'static',\n    value: null,\n    uses: 'draft',\n    dx: \"the draft that will be assigned to a given system\",\n    num_drafts: 1\n  }\n\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) : Promise<Array<Draft>> => {\n\n\n    const weft_system_string = getOpParamValById(0, op_params);\n    const warp_system_string = getOpParamValById(1, op_params);\n    const weft_assignment_string = getOpParamValById(2, op_params);\n    const warp_assignment_string = getOpParamValById(3, op_params);\n\n    const weft_system_string_split = utilInstance.parseRegex(weft_system_string, (<StringParam>op_params[0].param).regex);\n\n    const warp_system_string_split = utilInstance.parseRegex(warp_system_string, (<StringParam>op_params[0].param).regex);\n\n    const weft_assignment_string_split = utilInstance.parseRegex(weft_assignment_string, (<StringParam>op_params[0].param).regex);\n\n    const warp_assignment_string_split = utilInstance.parseRegex(warp_assignment_string, (<StringParam>op_params[0].param).regex);\n\n\n    if(weft_system_string_split.length == 0 || warp_system_string_split.length == 0){\n        return Promise.resolve([]);\n    } \n\n    let weft_sys_seq = new Sequence.OneD();\n    weft_system_string_split.forEach(id => {\n        weft_sys_seq.push(id.charCodeAt(0) - 97);\n    });\n\n    let warp_sys_seq = new Sequence.OneD();\n    warp_system_string_split.forEach(id => {\n        warp_sys_seq.push(id.charCodeAt(0) - 49);\n    });\n\n    let drafts = getAllDraftsAtInlet(op_inputs, 0);\n    let seq = new Sequence.TwoD();\n\n    if(drafts.length == 0 || weft_assignment_string_split.length == 0 || warp_assignment_string_split.length == 0){\n        let draft = initDraftWithParams({wefts: weft_sys_seq.length(), warps: warp_sys_seq.length(), drawdown:[[createCell(null)]]})\n        seq.import(draft.drawdown);\n      \n    }else{\n\n        let weft_assn = (weft_assignment_string_split.length == 0) ? 0 :  weft_assignment_string_split[0].charCodeAt(0) - 97;\n       \n        let warp_assn = (warp_assignment_string_split.length == 0) ? 0 :  warp_assignment_string_split[0].charCodeAt(0) - 49;\n       \n       \n        let draft = drafts[0];\n    \n        seq.import(draft.drawdown).mapToSystems([weft_assn], [warp_assn], weft_sys_seq, warp_sys_seq);\n    \n    \n\n    }\n\n   \n\n    let d: Draft = initDraftFromDrawdown(seq.export());\n     d.colSystemMapping =  generateMappingFromPattern(d.drawdown, warp_sys_seq.val(),'col', 3);\n    d.rowSystemMapping =  generateMappingFromPattern(d.drawdown, weft_sys_seq.val(),'row', 3);\n\n\n\n  return Promise.resolve([d]);\n};   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n    let drafts = getAllDraftsAtInlet(op_inputs, 0);\n    let name_list = parseDraftNames(drafts);\n  return \"assign systems(\"+name_list+\")\";\n}\n\n\nexport const assignsystems: Operation = {name, old_names, params, inlets, perform, generateName};","import { createCell } from \"../../model/cell\";\nimport { NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\n\nconst name = \"atop\";\nconst old_names = ['set atop', 'set atop, (a, b) => a'];\n\n//PARAMS\n\nconst shift_ends:NumParam =\n{name: 'shift ends',\ntype: 'number',\nmin: 0,\nmax: 10000,\nvalue: 0,\ndx:''\n};\n\nconst shift_pics:NumParam =\n{name: 'shift pics',\ntype: 'number',\nmin: 0,\nmax: 10000,\nvalue: 0,\ndx:''\n};\n\nconst params = [shift_ends, shift_pics];\n\n//INLETS\nconst draft_a: OperationInlet = {\n    name: 'a', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'all the drafts you would like to overlay another onto',\n    num_drafts: 1\n  }\n\n  const draft_b: OperationInlet = {\n    name: 'b', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft you would like to overlay onto the base',\n    num_drafts: 1\n  }\n\n  const inlets = [draft_a, draft_b];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft_a = getAllDraftsAtInlet(op_inputs, 0);\n  let input_draft_b = getAllDraftsAtInlet(op_inputs, 1);\n  let shift_ends = getOpParamValById(0, op_params);\n  let shift_pics = getOpParamValById(1, op_params);\n\n   if(input_draft_a.length == 0 && input_draft_b.length == 0) return Promise.resolve([]);\n\n   let draft_a = (input_draft_a.length == 0) ? initDraftFromDrawdown([[createCell(null)]]) : input_draft_a[0];\n   let draft_b = (input_draft_b.length == 0) ? initDraftFromDrawdown([[createCell(null)]]) : input_draft_b[0];\n\n\n    let height = Math.max(wefts(draft_b.drawdown) + shift_pics, wefts(draft_a.drawdown));\n    let width = Math.max(warps(draft_b.drawdown) + shift_ends, warps(draft_a.drawdown));\n\n\n    //offset draft b:\n    let pattern_b = new Sequence.TwoD();\n    for(let i = 0; i < height; i++ ){\n        let seq = new Sequence.OneD();\n        if(i < shift_pics){\n            seq.pushMultiple(2, width);\n        }else if(i < (shift_pics + wefts(draft_b.drawdown))){\n            seq.pushMultiple(2, shift_ends).pushRow(draft_b.drawdown[i-shift_pics]);\n            let remaining = width - (warps(draft_b.drawdown) + shift_ends);\n            if(remaining > 0) seq.pushMultiple(2, remaining);\n        }else{\n            seq.pushMultiple(2, width);\n        }\n        pattern_b.pushWeftSequence(seq.val());\n    }\n\n    //make sure pattern a is the same size\n    let pattern_a = new Sequence.TwoD();\n    for(let i = 0; i < height; i++ ){\n        let seq = new Sequence.OneD();\n        if(i < wefts(draft_a.drawdown)){\n            seq.pushRow(draft_a.drawdown[i]);\n            let remaining = width - draft_a.drawdown[i].length;\n            if(remaining > 0) seq.pushMultiple(2, remaining);\n        }else{\n            seq.pushMultiple(2, width);\n        }\n        pattern_a.pushWeftSequence(seq.val());\n    }\n\n\n\n    let pattern = new Sequence.TwoD();\n    for(let i = 0; i < height; i++ ){\n        let seq_a = new Sequence.OneD(pattern_a.getWeft(i));\n        let seq_b = new Sequence.OneD(pattern_b.getWeft(i));\n        seq_a.computeFilter('up', seq_b);\n        pattern.pushWeftSequence(seq_a.val());\n    }\n\n\n\n\n\n     let d = initDraftFromDrawdown(pattern.export());\n    d = updateWeftSystemsAndShuttles(d, draft_a);\n    d = updateWarpSystemsAndShuttles(d, draft_a);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let amt = getOpParamValById(0, param_vals);\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'atop'+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const atop: Operation = {name, old_names, params, inlets, perform, generateName};","import { toggleHeddle } from \"../../model/cell\";\nimport { NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getHeddle, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"bind warp floats\";\nconst old_names = [];\n\n//PARAMS\nconst max_float:NumParam =  \n{name: 'length',\ntype: 'number',\nmin: 1,\nmax: 100,\nvalue: 10,\ndx: 'the maximum length of a warp float'\n}\n\nconst params = [max_float];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n  name: 'draft', \n  type: 'static',\n  value: null,\n  dx: 'the draft to bind',\n  uses: \"draft\",\n  num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft = getInputDraft(op_inputs);\n  let max_float = getOpParamValById(0, op_params);\n\n  let seq = new Sequence.TwoD();\n\n\n  if(input_draft == null) return Promise.resolve([]);\n\n  let float_len: number = 0;\n  let last:boolean = false;\n\n\n  for(let j = 0; j < warps(input_draft.drawdown); j++){\n    float_len = 1;\n    last = null;\n    for(let i = 0; i < wefts(input_draft.drawdown); i++){\n\n      if(getHeddle(input_draft.drawdown,i,j) === null){\n        float_len = 1;\n        last = null\n      }else if(last === null){\n        float_len = 1;\n        last =getHeddle(input_draft.drawdown,i,j);\n      }\n      else if( getHeddle(input_draft.drawdown,i,j) === last){\n        float_len++;\n        \n        if(float_len > max_float){\n          input_draft.drawdown[i][j] = toggleHeddle(input_draft.drawdown[i][j]);\n          last = getHeddle(input_draft.drawdown,i,j)\n          float_len = 1\n        }\n\n\n      } else if(getHeddle(input_draft.drawdown,i,j) !== last){\n        float_len = 1;\n        last = getHeddle(input_draft.drawdown,i,j);\n      }\n\n     \n\n    }\n  }\n\n\n\n  return Promise.resolve([input_draft]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'bound warps('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const bindwarpfloats: Operation = {name, old_names, params, inlets, perform, generateName};","import { toggleHeddle } from \"../../model/cell\";\nimport { NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getHeddle, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"bind weft floats\";\nconst old_names = [];\n\n//PARAMS\nconst max_float:NumParam =  \n{name: 'max float length',\ntype: 'number',\nmin: 1,\nmax: 1000000,\nvalue: 10,\ndx: 'the maximum length of a weft float'\n}\n\nconst params = [max_float];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n  name: 'draft', \n  type: 'static',\n  value: null,\n  dx: 'the draft to bind',\n  uses: \"draft\",\n  num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft = getInputDraft(op_inputs);\n  let max_float = getOpParamValById(0, op_params);\n\n  let seq = new Sequence.TwoD();\n\n\n  if(input_draft == null) return Promise.resolve([]);\n\n  let float_len: number = 0;\n  let last:boolean = false;\n\n\n  for(let i = 0; i < wefts(input_draft.drawdown); i++){\n    float_len = 1;\n    last = null;\n    for(let j = 0; j < warps(input_draft.drawdown); j++){\n\n      if(getHeddle(input_draft.drawdown,i,j) === null){\n        float_len = 1;\n        last = null\n      }else if(last === null){\n        float_len = 1;\n        last =getHeddle(input_draft.drawdown,i,j);\n      }\n      else if( getHeddle(input_draft.drawdown,i,j) === last){\n        float_len++;\n        \n        if(float_len > max_float){\n          input_draft.drawdown[i][j] = toggleHeddle(input_draft.drawdown[i][j]);\n          last = getHeddle(input_draft.drawdown,i,j)\n          float_len = 1\n        }\n\n\n      } else if(getHeddle(input_draft.drawdown,i,j) !== last){\n        float_len = 1;\n        last = getHeddle(input_draft.drawdown,i,j);\n      }\n\n     \n\n    }\n  }\n\n\n\n  return Promise.resolve([input_draft]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'bound wefts('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const bindweftfloats: Operation = {name, old_names, params, inlets, perform, generateName};","import { createCell } from \"../../model/cell\";\nimport { AnalyzedImage, Cell, Draft, DynamicOperation, FileParam, NumParam, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getHeddle, initDraftFromDrawdown, initDraftWithParams, warps, wefts } from \"../../model/drafts\";\nimport { getOpParamValById } from \"../../model/operations\";\n\n\n\n\nconst name = \"bwimagemap\";\nconst old_names = [];\nconst dynamic_param_id = 0;\nconst dynamic_param_type = 'color';\n\n//PARAMS\n//the value on this param needs to hold all the image data\nconst file:FileParam =  {\n    name: 'image file (.jpg or .png)',\n    type: 'file',\n    value: {id: '', data: null},\n    dx: 'the file to upload',\n}\n\nconst width:NumParam = { \n   name: 'ends',     \n   type: 'number',\n   min: 1,\n   max: 10000,\n   value: 30,\n   dx: 'resize the input image to the width specified'\n}\n\nconst height:NumParam = {   \n    name: 'pics',   \n    type: 'number',\n    min: 1,\n    max: 10000,\n    value: 20,\n    dx: 'resize the input image to the height specified'\n }\n \n\n\nconst params = [file, width, height];\n\n//INLETS\n\n  const inlets = [];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n    const file_param = getOpParamValById(0, op_params);   \n    const res_w = getOpParamValById(1, op_params);\n    const res_h = getOpParamValById(2, op_params);\n\n    if(file_param.id == '' || file_param.data == null){\n        const d = initDraftWithParams({wefts: res_w, warps: res_h, drawdown: [[createCell(false)]]})\n        return Promise.resolve([d]);\n    } \n    \n\n    const data:AnalyzedImage = file_param.data;\n\n    const color_to_drafts = data.colors_to_bw.map((color, ndx) => {\n        if(color.black){\n            if(op_inputs.findIndex(input => input.inlet_id == 0) !== -1) return {color: color.hex, draft: op_inputs[0].drafts[0]}\n            else return {color: color.hex, draft: initDraftWithParams({warps: 1, wefts: 1, drawdown: [[createCell(true)]]})}\n          } else{\n            if(op_inputs.findIndex(input => input.inlet_id == 1) !== -1) return {color: color.hex, draft: op_inputs[1].drafts[0]}\n            else return {color: color.hex, draft: initDraftWithParams({warps: 1, wefts: 1, drawdown: [[createCell(false)]]})}\n\n          } \n        });\n      \n\n    const pattern: Array<Array<Cell>> = [];\n      for(let i = 0; i < res_h; i++){\n        pattern.push([]);\n        for(let j = 0; j < res_w; j++){\n\n          const i_ratio = data.height / res_h;\n          const j_ratio = data.width / res_w;\n\n          const map_i = Math.floor(i * i_ratio);\n          const map_j = Math.floor(j * j_ratio);\n\n          const color_ndx = data.image_map[map_i][map_j]; //\n          const color_draft = color_to_drafts[color_ndx].draft;\n\n          if(color_draft === null) pattern[i].push( createCell(false));\n          else {\n            const draft_i = i % wefts(color_draft.drawdown);\n            const draft_j = j % warps(color_draft.drawdown);\n            pattern[i].push(createCell(getHeddle(color_draft.drawdown,draft_i,draft_j)));\n          }\n\n        }\n      }\n\n    const draft: Draft = initDraftFromDrawdown(pattern);\n    return  Promise.resolve([draft]);\n\n  }   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  const file_param = getOpParamValById(0, param_vals);   \n  if(file_param.id == '' || file_param.data == null){\n      return 'bwimage';\n  }else{\n    return file_param.data.name;\n  } \n\n}\n\n\nconst onParamChange = (param_vals: Array<OpParamVal>, inlets: Array<OperationInlet>, inlet_vals: Array<any>, changed_param_id: number, param_val: any) : Array<any> => {\n\n    const new_inlets: Array<any> = ['#000000', '#ffffff']\n\n    return new_inlets;\n\n\n}\n  \n\nexport const bwimagemap: DynamicOperation = {name, old_names, params, inlets, dynamic_param_id, dynamic_param_type, perform, generateName,onParamChange};","import { Draft, Drawdown, NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { flipDraft, initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\n\nconst name = \"chaos\";\nconst old_names = [];\n\n//PARAMS\nconst warp_repeats:NumParam =  \n{name: 'warp-repeats',\ntype: 'number',\nmin: 1,\nmax: 100,\nvalue: 2,\ndx: 'the number of times to repeat this time across the width'\n};\n\nconst weft_repeats: NumParam = {name: 'weft-repeats',\ntype: 'number',\nmin: 1,\nmax: 100,\nvalue: 2,\ndx: 'the number of times to repeat this time across the length'\n}\n\n\nconst params = [warp_repeats, weft_repeats];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'draft', \n    type: 'static',\n    value: null,\n    dx: 'the draft to tile in the chaos sequence',\n    uses: 'draft',\n    num_drafts: -1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = async (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n\n  let input_drafts = getAllDraftsAtInlet(op_inputs, 0);\n  let warp_rep = getOpParamValById(0, op_params);\n  let weft_rep = getOpParamValById(1, op_params);\n\n\n   if(input_drafts.length == 0) return Promise.resolve([]);\n\n\n   const all_warps = input_drafts.map(el => warps(el.drawdown)).filter(el => el > 0);\n   const total_warps = utilInstance.lcm(all_warps);\n\n   const all_wefts = input_drafts.map(el => wefts(el.drawdown)).filter(el => el > 0);\n   const total_wefts = utilInstance.lcm(all_wefts);\n   const num_inputs = input_drafts.length;\n\n   const draft_indexing_fns = [];\n      //randomly grab one of the inputs\n      let ndx = Math.floor(Math.random()*num_inputs);\n      for(let i = 0; i < weft_rep; i++){\n        for(let j = 0; j < warp_rep; j++){\n          const x_flip = (Math.random() < 0.5) ? false: true; \n          const y_flip = (Math.random() < 0.5) ? false: true; \n          draft_indexing_fns.push(flipDraft(input_drafts[ndx], x_flip, y_flip));\n          ndx = Math.floor(Math.random()*num_inputs);\n        }\n      }\n\n    return Promise.all(draft_indexing_fns).then(all_flips => {\n        const pattern = new Sequence.TwoD();\n\n\n        for(let di = 0; di < weft_rep; di++){\n  \n          const drafts_on_row = all_flips.filter((el, ndx) => (ndx >= warp_rep*di && ndx < warp_rep*di + warp_rep));\n  \n          for(let i = 0; i < total_wefts; i++){\n              let seq = new Sequence.OneD();\n              drafts_on_row\n              .forEach(draft_on_row => {\n                    let expanded = new Sequence.OneD(draft_on_row.drawdown[i%wefts(draft_on_row.drawdown)]).resize(total_warps);\n             seq.pushRow(expanded.val())\n              })\n              pattern.pushWeftSequence(seq.val());\n          }\n      }\n          \n  \n  \n    let d = initDraftFromDrawdown(pattern.export());\n    d = updateWeftSystemsAndShuttles(d, input_drafts[0]);\n    d = updateWarpSystemsAndShuttles(d, input_drafts[0]);\n  \n    return Promise.resolve([d]);\n\n\n      } )\n\n      \n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'chaos('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const chaos: Operation = {name, old_names, params, inlets, perform, generateName};","import { createCell } from \"../../model/cell\";\nimport { Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftWithParams, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, parseDraftNames } from \"../../model/operations\";\n\n\nconst name = \"clear\";\nconst old_names = [];\n\n//PARAMS\n\n\n\nconst params = [];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'input draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft you would like to clear',\n    num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft = getInputDraft(op_inputs);\n  if(input_draft == null) return Promise.resolve([]);\n\n  let d = initDraftWithParams({\n    wefts: wefts(input_draft.drawdown),\n    warps: warps(input_draft.drawdown),\n    drawdown: [[createCell(null)]]\n  });\n  d = updateWeftSystemsAndShuttles(d, input_draft);\n  d = updateWarpSystemsAndShuttles(d, input_draft);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'clear('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const clear: Operation = {name, old_names, params, inlets, perform, generateName};","import { createCell, getCellValue, setCellValue } from \"../../model/cell\";\nimport { BoolParam, Draft, NumParam, Operation, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftWithParams, isUp, warps, wefts } from \"../../model/drafts\";\nimport { getOpParamValById } from \"../../model/operations\";\n\n\nconst name = \"combos\";\nconst old_names = [];\n\n//PARAMS\nconst ends:NumParam =  \n      {name: 'size',\n      type: 'number',\n        min: 2,\n        max: 4,\n      value: 3,\n      dx: 'the size of the structure'\n      }\n\nconst selection: NumParam = \n    {name: 'selection',\n    type: 'number',\n    min: 1,\n    max: 22874,\n    value: 1,\n    dx: 'the id of the generated structure you would like to view'\n    }\n\nconst download: BoolParam = \n    {\n    name: 'download all',\n    type: 'boolean',\n    falsestate: '',\n    truestate: 'downloading',\n    value: 0,\n    dx: \"when this is set to true, it will trigger download of an image of the whole set everytime it recomputes, this may result in multiple downloads\"\n    }\n\n\nconst params = [ends, selection, download];\n\n//INLETS\n\nconst inlets = [];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const size: number = getOpParamValById(0, param_vals);\n      let selection: number = getOpParamValById(1, param_vals);\n      const download: number = getOpParamValById(2, param_vals);\n\n      //adjust by one to convert user input to the array index of the structure\n      selection -= 1;\n\n      //for larger set sizes, you must split up the download into multiple files\n      const divisor = (size - 3 > 0) ? Math.pow(2,(size-3)): 1;\n\n      return getSet(size, size)\n      .then(alldrafts => { \n\n        if(download){\n\n          for(let set_id = 0; set_id < divisor; set_id++){\n            \n            const cc = 10;\n            const set_data = getDrafts(set_id, divisor);\n\n            let b:HTMLCanvasElement = <HTMLCanvasElement>document.createElement('canvas'); \n            let context = b.getContext('2d');\n            b.width = (cc*(size+5))*20;\n            b.height = Math.ceil(set_data.length  / 20)*((5+size)*cc);\n            context.fillStyle = \"white\";\n            context.fillRect(0,0,b.width,b.height);\n\n            set_data.forEach((set, ndx) => {\n              \n              const top = Math.floor(ndx / 20) * (wefts(set.draft.drawdown)+5)*cc + 10;\n              const left = ndx % 20 * (warps(set.draft.drawdown)+5)*cc + 10; \n              \n              context.font = \"8px Arial\";\n              context.fillStyle = \"#000000\"\n              context.fillText((set.id+1).toString(),left, top-2,size*cc)\n              context.strokeRect(left,top,size*cc,size*cc);\n\n              for (let i = 0; i < wefts(set.draft.drawdown); i++) {\n                for (let j = 0; j < warps(set.draft.drawdown); j++) {\n                  drawCell(context, set.draft, cc, i, j, top, left);\n                }\n              }            \n            })\n\n            // console.log(\"b\", b);\n            const a = document.createElement('a')\n            a.href = b.toDataURL(\"image/jpg\")\n            a.download = \"allvalid_\"+size+\"x\"+size+\"_drafts_\"+set_id+\".jpg\";\n            a.click();\n          }\n\n        }\n\n        \n        return Promise.resolve([getDraft(selection).draft]);\n\n      })\n      \n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n    const selection: number = getOpParamValById(1, param_vals);\n    const size: number = getOpParamValById(0, param_vals);\n\n  return size+'x'+size+'-'+selection;\n}\n\n\nexport const combinatorics: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n/**** CUSTOM FUNCTIONS FOR GENERATING ALL POSSIBLE STRUCRTURES****/\n\n\ninterface ComboTree {\n    set: Array<Array<number>>,\n    top: ComboNode\n  }\n  \n  interface ComboNode {\n    parent: ComboNode;\n    value: number,\n    set: Array<Array<number>>,\n    children: Array<ComboNode>;\n  }\n\n  let cur_set: any = {warps: 0, wefts: 0};\n  let all_possible_drafts: Array<{draft:Draft, id:number}> = [];\n  let min_interlacements: number = 1;\n\n\n  function drawCell(cx, draft, cell_size, i, j, top,  left){\n    let is_up = isUp(draft.drawdown, i, j);\n    let color = \"#ffffff\"\n   \n    if(is_up){\n      color = '#000000';\n    }else{\n      color = '#ffffff';\n    }\n    cx.fillStyle = color;\n    cx.strokeStyle = '#000000';\n\n \n\n    //hack, draw upside down to account for later flip\n    i = (wefts(draft.drawdown)-1) - i;\n\n    cx.strokeRect(left+j*cell_size, top+i*cell_size, cell_size, cell_size);\n    cx.fillRect(left+j*cell_size, top+i*cell_size, cell_size, cell_size);\n  }\n\n\n  /**\n   * returns all the values from the valid set that match the sequence\n   * @param seq \n   * @param valid \n   */\n  function filterForSeq(seq: Array<number>, valid: Array<Array<number>>) : Array<Array<number>>{\n    let filtered = valid.slice();\n    seq.forEach((val, ndx) => {\n      filtered = filtered.filter(set => set[ndx] == val);\n    });\n    return filtered;\n  }\n\n\n  /**\n   * prints the tree for verification\n   * @param tree \n   */\n  function printTree(tree: ComboTree){\n\n    console.log(\"***PRINT TREE***\");\n    printNodes([tree.top]);\n  }\n\n  function printNodes(nodes: Array<ComboNode>){\n    \n    nodes.forEach(node => {\n     // console.log(\"Node: \", this.traceSequenceViaParents(node), node.set);\n      printNodes(node.children);\n    });\n  }\n\n\n  /**\n   * given a node, it creates the sequence (e.g. 0110) that it represnts by calling each parent\n   * @param node a tree node from which to start\n   * @returns the sequence reprsented by this node. \n   */\n  function traceSequenceViaParents(node: ComboNode) : Array<number>{\n    let seq = [];\n    while(node.parent !== null){\n      seq = [node.value].concat(seq);\n      node = node.parent;\n    }\n    return seq;\n  }\n\n\n  /**\n   * converts the valid set into a tree, where the root/top node branches between 0, 1 at each child. \n   * therefore, every valid set traverses the tree. Each treenode stores the valid sets at its location\n   * allowing for each row add to be a lookup operation\n   * @param valid the valid set of combinations\n   * @returns a Combination Tree accounting for every valid set\n   */\n  function createTreeFromValidSet(valid: Array<Array<number>>) : Promise<ComboTree> {\n\n    let tree:ComboTree = {\n      set: valid.slice(),\n      top: {\n        parent: null,\n        value: -1,\n        set: valid.slice(),\n        children: []},\n    }\n\n\n    valid.forEach(valid_set => {\n\n      let node = tree.top;\n\n      valid_set.forEach(val => {\n            \n         const found = node.children.filter(el => el.value === val);\n         if(found.length == 0){\n           const combo_node: ComboNode = {\n            parent: node,\n            value: val,\n            set: [valid_set],\n            children: []\n            }\n            node.children.push(combo_node);\n            node = combo_node;\n          }else{\n            node = found[0];\n            node.set.push(valid_set);\n          }\n      });\n    })\n\n    return Promise.resolve(tree);\n\n  }\n\n\n  /**\n   * initializes a set of all possible valid drafts of a given dimension\n   * Right now must be square and have a minimum of 1 interlacement\n   * @param wefts the number of wefts of the structure\n   * @param warps the number of warps in the structure\n   * @returns a promise containing the array of all drafts generated\n   */\n  function initSet(wefts: number, warps: number) : Promise<Array<{draft:Draft, id:number}>>{\n\n    cur_set = {warps:0, wefts:0};\n    all_possible_drafts = [];\n\n    return getAllPossible(warps-1)\n    .then(possible => {\n      return makeValid(possible);\n    })\n    .then(valid => {\n\n      return createTreeFromValidSet(valid);\n\n\n    }).then(tree => {\n\n      printTree(tree);\n\n      let drafts: Array<Draft> = [];\n       let opts = getOptions([], tree);\n       \n       opts.forEach(opt => {\n\n        const draft: Draft = initDraftWithParams({warps: warps, wefts: wefts});\n    \n        for(let i = 0; i < wefts; i++){\n          for(let j = 0; j < warps; j++){\n            if(i == 0) draft.drawdown[i][j] = setCellValue(draft.drawdown[i][j], ((opt[j] == 0) ? false: true));\n          }\n        }\n        \n        drafts = drafts.concat([draft]);\n\n      });\n\n      //drafts.forEach(el => utilInstance.printDraft(el));\n\n      \n      const its = (wefts * 2) -1;\n      for(let i = 1; i <= its; i++){\n       drafts = expandDrafts(drafts, tree, i, wefts);\n       //drafts.forEach(el => utilInstance.printDraft(el));\n\n      }\n\n      //drafts.forEach(el => utilInstance.printDraft(el));\n\n      all_possible_drafts = drafts.map((el, ndx) => {return {draft: el, id: ndx}});\n      cur_set.wefts = wefts;\n       cur_set.warps = warps;\n      return Promise.resolve(all_possible_drafts);\n\n\n    });\n\n  }\n\n\n  /**\n   * gets the set of a defined size. If that set is already in memory, it returns it. If not, it generates it.\n   * @param warps the warps to check\n   * @param wefts the wefts to check\n   * @returns a boolean \n   */\n  function getSet(warps: number, wefts: number) : Promise<Array<{draft:Draft, id:number}>> {\n    if(warps === cur_set.warps && wefts === cur_set.wefts) return Promise.resolve(all_possible_drafts);\n    else return initSet(warps, wefts);\n  }\n\n  /**\n   * gets the draft at location NDX from the current set of generated drafts\n   * @param ndx the index to return\n   * @returns returns the draft at the index, or an empty draft if so\n   */\n  function getDraft(ndx: number) : {draft: Draft, id: number}{\n    const found = all_possible_drafts.find(el => el.id == ndx)\n    if(found == undefined) return {draft: initDraftWithParams({wefts: 1, warps: 1}), id: -1};\n    else return found;\n  }\n\n  /**\n   * gets the draft at location NDX from the current set of generated drafts\n   * @param ndx the index to return\n   * @returns returns the draft at the index, or an empty draft if so\n   */\n  function getDrafts(ndx: number, divisor: number) : Array<{draft: Draft, id: number}>{\n    const set_size = Math.floor(all_possible_drafts.length/divisor);\n    const begin = ndx * set_size;\n    const stop = begin + set_size;\n    const drafts = all_possible_drafts.filter(el => (el.id >= begin && el.id <= stop));\n    return drafts;\n  }\n\n  /**\n   * gets a list of possible drafts by adding a single row or column\n   * @param vsd an array of drafts and associated valid sets\n   * @param ndx the index in the adding of row columns\n   * @param wefts the size of the structure\n   * @returns an (expanded)array of drafts and associated valid sets\n   */\n  function expandDrafts(drafts: Array<Draft>, tree: ComboTree, ndx: number, wefts: number) : Array<Draft> {\n\n    let all_drafts: Array< Draft> = [];\n    drafts.forEach(draft => {\n      if(ndx % 2 == 0) all_drafts = all_drafts.concat(addRow(draft, tree, Math.floor(ndx/2), wefts));\n      if(ndx % 2 == 1) all_drafts = all_drafts.concat(addCol(draft, tree, Math.floor(ndx/2), wefts));\n    })\n\n    //console.log(\"returning from all drafts\", all_drafts.length);\n    return all_drafts;\n\n\n  }\n\n\n  /**\n   * adds a row to the set of drafts added\n   * @param vsd \n   * @param i \n   * @param n \n   * @returns \n   */\n  function addRow(draft: Draft, tree: ComboTree, i:number, n: number){\n    let expanded_drafts = [];  \n    //console.log(\"adding rows to \", vsd);\n\n    let set = [];\n    for(let j = 0; j < i; j++){\n      set.push(getCellValue(draft.drawdown[i][j]) ? 1 : 0);\n    }\n    //console.log(\"Generated set \", set, );\n\n\n    let opts = getOptions(set, tree);\n    //console.log(\"generated options\", opts);\n    opts.forEach(opt => {\n\n      let pattern = [];\n      pattern = draft.drawdown.slice();\n      //add to the draft and push\n      for(let j = 0; j < n; j++){\n        pattern[i][j] = (opt[j] == 0) ? createCell(false) : createCell(true);\n      }\n\n      expanded_drafts.push(initDraftWithParams({warps: n, wefts: n, pattern: pattern.slice()}));\n      \n    });\n\n\n    return expanded_drafts;\n  }\n\n  function addCol(draft: Draft, tree: ComboTree, j:number, n: number){\n    //console.log(\"adding cols to \", vsd);\n\n    let expanded_drafts = [];\n\n    let set = [];\n    for(let i = 0; i < (j+1); i++){\n      set.push(getCellValue(draft.drawdown[i][j]) ? 1 : 0);\n    }\n\n    let opts =getOptions(set, tree);\n    //console.log(\"generated options for set\", set, opts);\n\n    opts.forEach(opt => {\n\n      let pattern = [];\n      pattern = draft.drawdown.slice();\n      //add to the draft and push\n      for(let i = 0; i < n; i++){\n        pattern[i][j] = (opt[i] == 0) ? createCell(false) : createCell(true);\n      }\n\n      expanded_drafts.push(initDraftWithParams({warps: n, wefts: n, pattern: pattern.slice()}));\n      \n    });\n    //console.log(\"****returning ****\");\n   // expanded_drafts.forEach(el => utilInstance.printDraft(el.draft))\n    return expanded_drafts;\n  }\n\n\n\n  /**\n   * uses the input sequence to identify the node of possible children\n   * @param seq the input sequence to locate \n   * @param tree the tree to search\n   * @returns \n   */\n  function getOptions(seq: Array<Number>, tree: ComboTree) : Array<Array<number>>{\n\n    let children = tree.top.children.slice();\n    \n    if(seq.length == 0) return tree.set.slice();\n    //get to the node we need\n    let node = null;\n\n\n    seq.forEach(val => {\n      node = children.find(el => el.value == val);\n      if(node === undefined) children = [];\n      else children = node.children.slice();\n    });\n\n    if(node === undefined) return [];\n    else return node.set.slice();\n  }\n\n  /**\n   * if there is all zeros or all ones, it adds a contrasting bit at the end, or both bits \n   * @param all_possible \n   * @returns \n   */\n  function makeValid(all_possible: Array<Array<number>>) : Promise<Array<Array<number>>>{\n    const all_valid = [];\n\n    for(let i = 0; i < all_possible.length; i++){\n      if(all_possible[i].find(el => el == 0) === undefined){\n        all_valid.push(all_possible[i].concat([0]))\n      }else if(all_possible[i].find(el => el == 1) === undefined){\n        all_valid.push(all_possible[i].concat([1]))\n      }else{\n        all_valid.push(all_possible[i].concat([0]))\n        all_valid.push(all_possible[i].concat([1]))\n      }\n    }\n\n    return Promise.resolve(all_valid);\n  }\n\n\n\n  /**\n   * generates a list of all valid sums with n factors that total t. \n   * all elements > 0\n   * @param n \n   */\n  function getAllPossible(n: number): Promise<Array<Array<number>>>{\n\n    let all_combos = [];\n\n    for(let i = 0; i < n; i++){\n      all_combos = addBit(all_combos);\n    }\n    return Promise.resolve(all_combos);\n    \n  }\n\n\n  \n\n  function addBit(set: Array<Array<number>>) : Array<Array<number>> {\n    \n    const expanded_set = [];\n\n    if(set.length == 0){\n      expanded_set.push([0]);\n      expanded_set.push([1]);\n    }else{\n      for(let i = 0; i < set.length; i++){\n        expanded_set.push(set[i].concat([0]));\n        expanded_set.push(set[i].concat([1]));\n      }\n    }\n    return expanded_set;\n  }\n\n\n\n","import { first } from \"rxjs/operators\";\nimport { createCell, getCellValue } from \"../../model/cell\";\nimport { BoolParam, Draft, NumParam, Operation, OpInput, OpParamVal, StringParam } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, initDraftWithParams, setHeddle, warps, wefts } from \"../../model/drafts\";\nimport { getOpParamValById } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"complextwill\";\nconst old_names = [];\n\n//PARAMS\nconst string_input:StringParam =  \n    {name: 'pattern',\n    type: 'string',\n    regex: /(\\d+)/,\n    value: '2 2 3 3',\n    error: '',\n    dx: 'the under over pattern of this twill'\n};\n\n\nconst sz: BoolParam = \n        {name: 'S/Z',\n        type: 'boolean',\n        falsestate: 'S',\n        truestate: 'Z',\n        value: 0,\n        dx: ''\n        }\n\n\nconst params = [string_input, sz];\n\n//INLETS\n\n  const inlets = [];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const input_string: string = getOpParamValById(0, param_vals);\n      const sz: number = getOpParamValById(1, param_vals);\n\n      const input_array: Array<number> = input_string.split(' ').map(el => parseInt(el));\n\n      let size: number =input_array.reduce( (acc, val) => {\n        return val + acc;\n    }, 0);\n\n\n      let first_row = new Sequence.OneD();\n      let under = true;\n      input_array.forEach(input => {\n        first_row.pushMultiple(under, input);\n        under = !under;\n      })\n\n      let pattern = new Sequence.TwoD();\n      let shift_dir = (sz) ? -1 : 1;\n      for(let i = 0; i < size; i++){\n        pattern.pushWeftSequence(first_row.shift(shift_dir).val());\n      }\n\n\n      return Promise.resolve([initDraftFromDrawdown(pattern.export())]);\n\n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  return 'complex twill';\n}\n\n\nexport const complextwill: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { F } from \"@angular/cdk/keycodes\";\nimport { Draft, NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, initDraftWithParams, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\nconst name = \"crop\";\nconst old_names = [];\n\n//PARAMS\nconst starting_ends:NumParam =  \n{name: 'ends from start',\ntype: 'number',\nmin: 0,\nmax: 10000,\nvalue: 0,\ndx: 'number of pics from the origin to start the cut'\n}\n\nconst staring_pics:NumParam = {\n    name: 'pics from start',\n      min: 0,\n      max: 10000,\n      value: 0,\n      type: 'number',\n      dx: 'number of ends from the origin to start the cut'\n    }\n\nconst width:NumParam =  \n{name: 'width',\ntype: 'number',\nmin: 1,\nmax: 10000,\nvalue: 10,\ndx: 'total width of cutting box'\n}\n\nconst height:NumParam =  \n{name: 'height',\ntype: 'number',\nmin: 1,\nmax: 10000,\nvalue: 10,\ndx: 'height of the cutting box'\n}\n\n\n\n\n\n\nconst params = [starting_ends, staring_pics, width, height];\n\n//INLETS\nconst draft: OperationInlet = {\n    name: 'draft', \n    type: 'static',\n    value: null,\n    dx: 'the draft to crop',\n    uses: \"draft\",\n    num_drafts: 1\n}\n\n\n\n  const inlets = [draft];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) : Promise<Array<Draft>> => {\n\n    const draft = getInputDraft(op_inputs);\n    const left = getOpParamValById(0, op_params);\n    const top = getOpParamValById(1, op_params);\n    const width = getOpParamValById(2, op_params);\n    const height = getOpParamValById(3, op_params);\n\n\n    if(draft == null) return Promise.resolve([]);\n\n    let warp_systems = new Sequence.OneD(draft.colSystemMapping).shift(left).resize(width);\n    let warp_mats = new Sequence.OneD(draft.colShuttleMapping).shift(left).resize(width);\n    let weft_systems = new Sequence.OneD(draft.rowSystemMapping).shift(top).resize(height);\n    let weft_materials = new Sequence.OneD(draft.rowShuttleMapping).shift(top).resize(height);\n\n    let pattern = new Sequence.TwoD();\n\n    //start with starting pics\n    for(let i = 0; i < height; i++){\n\n        let seq = new Sequence.OneD();\n        let adj_i = i + top;\n        if(adj_i >= wefts(draft.drawdown)){\n            seq.pushMultiple(2, width);\n        }else{\n\n            let row = (draft.drawdown[adj_i].length > left) ? draft.drawdown[adj_i].slice(left) : [];\n            seq.pushRow(row);\n            let diff = width - row.length;\n            if(diff > 0) seq.pushMultiple(2, diff);\n            if(diff < 0){\n                seq.resize(width);\n            } \n        }\n\n        pattern.pushWeftSequence(seq.val())\n      \n    }\n\n\n    let d = initDraftFromDrawdown(pattern.export());\n    d.colShuttleMapping = warp_mats.val();\n    d.colSystemMapping = warp_systems.val();\n    d.rowShuttleMapping = weft_materials.val();\n    d.rowSystemMapping = weft_systems.val();\n\n\n    return Promise.resolve([d]);\n\n};   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n    let r = getAllDraftsAtInlet(op_inputs, 0);\n    let name_list = parseDraftNames(r);\n  return 'crop('+name_list+\")\";\n}\n\n\nexport const crop: Operation = {name, old_names, params, inlets, perform, generateName};\n\n","import { createCell } from \"../../model/cell\";\nimport { NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"cutout\";\nconst old_names = [];\n\n//PARAMS\n\nconst shift_ends:NumParam =\n{name: 'shift ends',\ntype: 'number',\nmin: 0,\nmax: 10000,\nvalue: 0,\ndx:''\n};\n\nconst shift_pics:NumParam =\n{name: 'shift pics',\ntype: 'number',\nmin: 0,\nmax: 10000,\nvalue: 0,\ndx:''\n};\n\nconst params = [shift_ends, shift_pics];\n\n//INLETS\nconst draft_a: OperationInlet = {\n    name: 'a', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'all the drafts you would like to cut out',\n    num_drafts: 1\n  }\n\n  const draft_b: OperationInlet = {\n    name: 'b', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the pattern you would like to use to describe the cutting',\n    num_drafts: 1\n  }\n\n  const inlets = [draft_a, draft_b];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft_a = getAllDraftsAtInlet(op_inputs, 0);\n  let input_draft_b = getAllDraftsAtInlet(op_inputs, 1);\n  let shift_ends = getOpParamValById(0, op_params);\n  let shift_pics = getOpParamValById(1, op_params);\n\n   if(input_draft_a.length == 0 && input_draft_b.length == 0) return Promise.resolve([]);\n\n   let draft_a = (input_draft_a.length == 0) ? initDraftFromDrawdown([[createCell(null)]]) : input_draft_a[0];\n   let draft_b = (input_draft_b.length == 0) ? initDraftFromDrawdown([[createCell(null)]]) : input_draft_b[0];\n\n\n    let height = Math.max(wefts(draft_b.drawdown) + shift_pics, wefts(draft_a.drawdown));\n    let width = Math.max(warps(draft_b.drawdown) + shift_ends, warps(draft_a.drawdown));\n\n\n    //offset draft b:\n    let pattern_b = new Sequence.TwoD();\n    for(let i = 0; i < height; i++ ){\n        let seq = new Sequence.OneD();\n        if(i < shift_pics){\n            seq.pushMultiple(2, width);\n        }else if(i < (shift_pics + wefts(draft_b.drawdown))){\n            seq.pushMultiple(2, shift_ends).pushRow(draft_b.drawdown[i-shift_pics]);\n            let remaining = width - (warps(draft_b.drawdown) + shift_ends);\n            if(remaining > 0) seq.pushMultiple(2, remaining);\n        }else{\n            seq.pushMultiple(2, width);\n        }\n        pattern_b.pushWeftSequence(seq.val());\n    }\n\n    //make sure pattern a is the same size\n    let pattern_a = new Sequence.TwoD();\n    for(let i = 0; i < height; i++ ){\n        let seq = new Sequence.OneD();\n        if(i < wefts(draft_a.drawdown)){\n            seq.pushRow(draft_a.drawdown[i]);\n            let remaining = width - draft_a.drawdown[i].length;\n            if(remaining > 0) seq.pushMultiple(2, remaining);\n        }else{\n            seq.pushMultiple(2, width);\n        }\n        pattern_a.pushWeftSequence(seq.val());\n    }\n\n\n\n    let pattern = new Sequence.TwoD();\n    for(let i = 0; i < height; i++ ){\n        let seq_a = new Sequence.OneD(pattern_a.getWeft(i));\n        let seq_b = new Sequence.OneD(pattern_b.getWeft(i));\n        seq_a.computeFilter('cut', seq_b);\n        pattern.pushWeftSequence(seq_a.val());\n    }\n\n\n\n\n\n     let d = initDraftFromDrawdown(pattern.export());\n    d = updateWeftSystemsAndShuttles(d, draft_a);\n    d = updateWarpSystemsAndShuttles(d, draft_a);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let amt = getOpParamValById(0, param_vals);\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'cut'+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const cutout: Operation = {name, old_names, params, inlets, perform, generateName};","import { BoolParam, Draft, NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getDraftName, initDraftFromDrawdown, updateWarpSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\nconst name = \"deinterlace\";\nconst old_names = [];\n\n//PARAMS\n\nconst split_by:NumParam =  \n    {name: 'factor',\n    type: 'number',\n    min: 2,\n    max: 500,\n    value: 2,\n    dx: \"this number determines how many times the input draft will be divided\"\n    };\n\n\n\nconst params = [split_by];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'drafts', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft you would like to split apart',\n    num_drafts: 1\n  }\n\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) : Promise<Array<Draft>> => {\n\n\n  let input_draft = getInputDraft(op_inputs);\n  let factor = getOpParamValById(0, op_params);\n\n  if(input_draft == null) return Promise.resolve([]);\n\n  let patterns: Array<Sequence.TwoD> =[];\n  let drafts: Array<Draft> =[];\n  let row_shuttle: Array<Array<number>> =[];\n  let row_system: Array<Array<number>> =[];\n\n  for(let i = 0; i < factor; i++){\n    patterns.push(new Sequence.TwoD());\n    row_shuttle.push([]);\n    row_system.push([]);\n  }\n\n\n  for(let i = 0; i < wefts(input_draft.drawdown); i++){\n\n    let selected_draft_id = i % factor;\n    let row = new Sequence.OneD([]).import(input_draft.drawdown[i]);\n    patterns[selected_draft_id].pushWeftSequence(row.val());\n    row_shuttle[selected_draft_id].push(input_draft.rowShuttleMapping[i])\n    row_system[selected_draft_id].push(input_draft.rowSystemMapping[i])\n  }\n\n  for(let i = 0; i < factor; i++){\n\n    let d = initDraftFromDrawdown(patterns[i].export());\n    d.rowShuttleMapping = row_shuttle[i].slice();\n    d.rowSystemMapping = row_system[i].slice();\n    d = updateWarpSystemsAndShuttles(d, input_draft);\n    drafts.push(d);\n  }\n\n\n\n  return Promise.resolve(drafts);\n};   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n    let input_draft = getInputDraft(op_inputs);\n    return \"deinterlaced(\"+getDraftName(input_draft)+\")\";\n}\n\n\nexport const deinterlace: Operation = {name, old_names, params, inlets, perform, generateName};","import { createCell } from \"../../model/cell\";\nimport { NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\n\nconst name = \"diff\";\nconst old_names = ['knockout'];\n\n//PARAMS\n\nconst shift_ends:NumParam =\n{name: 'shift ends',\ntype: 'number',\nmin: 0,\nmax: 10000,\nvalue: 0,\ndx:''\n};\n\nconst shift_pics:NumParam =\n{name: 'shift pics',\ntype: 'number',\nmin: 0,\nmax: 10000,\nvalue: 0,\ndx:''\n};\n\nconst params = [shift_ends, shift_pics];\n\n//INLETS\nconst draft_a: OperationInlet = {\n    name: 'a', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'one draft you would like to compare',\n    num_drafts: 1\n  }\n\n  const draft_b: OperationInlet = {\n    name: 'b', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'one draft you would like to compare',\n    num_drafts: 1\n  }\n\n  const inlets = [draft_a, draft_b];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft_a = getAllDraftsAtInlet(op_inputs, 0);\n  let input_draft_b = getAllDraftsAtInlet(op_inputs, 1);\n  let shift_ends = getOpParamValById(0, op_params);\n  let shift_pics = getOpParamValById(1, op_params);\n\n   if(input_draft_a.length == 0 && input_draft_b.length == 0) return Promise.resolve([]);\n\n   let draft_a = (input_draft_a.length == 0) ? initDraftFromDrawdown([[createCell(null)]]) : input_draft_a[0];\n   let draft_b = (input_draft_b.length == 0) ? initDraftFromDrawdown([[createCell(null)]]) : input_draft_b[0];\n\n\n    let height = Math.max(wefts(draft_b.drawdown) + shift_pics, wefts(draft_a.drawdown));\n    let width = Math.max(warps(draft_b.drawdown) + shift_ends, warps(draft_a.drawdown));\n\n\n    //offset draft b:\n    let pattern_b = new Sequence.TwoD();\n    for(let i = 0; i < height; i++ ){\n        let seq = new Sequence.OneD();\n        if(i < shift_pics){\n            seq.pushMultiple(2, width);\n        }else if(i < (shift_pics + wefts(draft_b.drawdown))){\n            seq.pushMultiple(2, shift_ends).pushRow(draft_b.drawdown[i-shift_pics]);\n            let remaining = width - (warps(draft_b.drawdown) + shift_ends);\n            if(remaining > 0) seq.pushMultiple(2, remaining);\n        }else{\n            seq.pushMultiple(2, width);\n        }\n        pattern_b.pushWeftSequence(seq.val());\n    }\n\n    //make sure pattern a is the same size\n    let pattern_a = new Sequence.TwoD();\n    for(let i = 0; i < height; i++ ){\n        let seq = new Sequence.OneD();\n        if(i < wefts(draft_a.drawdown)){\n            seq.pushRow(draft_a.drawdown[i]);\n            let remaining = width - draft_a.drawdown[i].length;\n            if(remaining > 0) seq.pushMultiple(2, remaining);\n        }else{\n            seq.pushMultiple(2, width);\n        }\n        pattern_a.pushWeftSequence(seq.val());\n    }\n\n\n\n    let pattern = new Sequence.TwoD();\n    for(let i = 0; i < height; i++ ){\n        let seq_a = new Sequence.OneD(pattern_a.getWeft(i));\n        let seq_b = new Sequence.OneD(pattern_b.getWeft(i));\n        seq_a.computeFilter('neq', seq_b);\n        pattern.pushWeftSequence(seq_a.val());\n    }\n\n\n\n\n\n     let d = initDraftFromDrawdown(pattern.export());\n    d = updateWeftSystemsAndShuttles(d, draft_a);\n    d = updateWarpSystemsAndShuttles(d, draft_a);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let amt = getOpParamValById(0, param_vals);\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'diff'+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const diff: Operation = {name, old_names, params, inlets, perform, generateName};","import { createCell, getCellValue } from \"../../model/cell\";\nimport { Cell, Draft, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getHeddle, initDraftFromDrawdown, initDraftWithParams, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getLoomUtilByType } from \"../../model/looms\";\nimport { getAllDraftsAtInlet, parseDraftNames } from \"../../model/operations\";\n\n\nconst name = \"directdrawdown\";\nconst old_names = [];\n\n//PARAMS\n\nconst params = [];\n\n//INLETS\n\nconst threading: OperationInlet = {\n    name: 'threading', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to use as threading',\n    num_drafts: 1\n  }\n\n\nconst liftplan: OperationInlet = {\n    name: 'lift plan', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to use as tieup',\n    num_drafts: 1\n  }\n\n  \n\n  const inlets = [threading, liftplan];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let threading = getAllDraftsAtInlet(op_inputs, 0);\n  let lift_plan = getAllDraftsAtInlet(op_inputs, 1);\n\n  \n  if(threading.length == 0 || lift_plan.length == 0) return Promise.resolve([]);\n\n  const threading_draft = threading[0];\n  const lift_draft = lift_plan[0];\n\n  const threading_list: Array<number> = [];\n  for(let j = 0; j < warps(threading_draft.drawdown); j++){\n    const col: Array<Cell> = threading_draft.drawdown.reduce((acc, row, ndx) => {\n      acc[ndx] = row[j];\n      return acc;\n    }, []);\n\n    threading_list[j] = col.findIndex(cell => getCellValue(cell));\n\n  }\n\n  const treadling_list: Array<Array<number>> =\n  lift_draft.drawdown.map(row => {\n    let edited_row = row.reduce((acc, cell, ndx) =>{\n        if(getCellValue(cell) === true) acc.push(ndx);\n        return acc;\n    }, [])\n    return edited_row;\n    }\n  );\n\n  let tieup = [];\n   for(let i = 0; i < 100; i++){\n    tieup.push([])\n     for(let j = 0; j < 100; j++){\n        if(i==j) tieup[i].push(true)\n        else tieup[i].push(false)\n     }\n   }\n\n\n  let draft: Draft = initDraftWithParams({warps:warps(threading_draft.drawdown), wefts:wefts(lift_draft.drawdown)});\n\n\n  const utils = getLoomUtilByType('direct');\n  const loom = {\n    threading: threading_list,\n    tieup: tieup,\n    treadling:treadling_list\n  }\n\n\n\n  return utils.computeDrawdownFromLoom(loom, 0).then(drawdown => {\n    draft.drawdown = drawdown;\n    draft = updateWarpSystemsAndShuttles(draft, threading_draft)\n    draft = updateWeftSystemsAndShuttles(draft, lift_draft )\n    return Promise.resolve([draft]);\n\n  })\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'drawdown('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const directdrawdown: Operation = {name, old_names, params, inlets, perform, generateName};","import { createCell, getCellValue } from \"../../model/cell\";\nimport { Cell, Draft, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getHeddle, initDraftFromDrawdown, initDraftWithParams, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getLoomUtilByType } from \"../../model/looms\";\nimport { getAllDraftsAtInlet, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"drawdown\";\nconst old_names = [];\n\n//PARAMS\n\nconst params = [];\n\n//INLETS\n\nconst threading: OperationInlet = {\n    name: 'threading', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to use as threading',\n    num_drafts: 1\n  }\n\n\nconst tieup: OperationInlet = {\n    name: 'tieup', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to use as tieup',\n    num_drafts: 1\n  }\n\n  const treadling: OperationInlet = {\n    name: 'treadling', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to use as treadling',\n    num_drafts: 1\n  }\n\n  const inlets = [threading, tieup, treadling];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let threading = getAllDraftsAtInlet(op_inputs, 0);\n  let tieup = getAllDraftsAtInlet(op_inputs, 1);\n  let treadling = getAllDraftsAtInlet(op_inputs, 2);\n\n  \n  if(threading.length == 0 || tieup.length == 0|| treadling.length == 0) return Promise.resolve([]);\n\n  const threading_draft = threading[0];\n  const tieup_draft = tieup[0];\n  const treadling_draft = treadling[0];\n\n  const threading_list: Array<number> = [];\n  for(let j = 0; j < warps(threading_draft.drawdown); j++){\n    const col: Array<Cell> = threading_draft.drawdown.reduce((acc, row, ndx) => {\n      acc[ndx] = row[j];\n      return acc;\n    }, []);\n\n    threading_list[j] = col.findIndex(cell => getCellValue(cell));\n\n  }\n\n  const treadling_list: Array<Array<number>> =treadling_draft.drawdown\n  .map(row => [row.findIndex(cell => getCellValue(cell))]);\n\n  const tieup_list =tieup_draft.drawdown.map(row => {\n    return row.map(cell => getCellValue(cell));\n  });\n\n  let draft: Draft = initDraftWithParams({warps:warps(threading_draft.drawdown), wefts:wefts(treadling_draft.drawdown)});\n  const utils = getLoomUtilByType('frame');\n  const loom = {\n    threading: threading_list,\n    tieup: tieup_list,\n    treadling:treadling_list\n  }\n\n  return utils.computeDrawdownFromLoom(loom, 0).then(drawdown => {\n    draft.drawdown = drawdown;\n    draft = updateWarpSystemsAndShuttles(draft, threading_draft)\n    draft = updateWeftSystemsAndShuttles(draft, treadling_draft )\n    return Promise.resolve([draft]);\n\n  })\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'drawdown('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const drawdown: Operation = {name, old_names, params, inlets, perform, generateName};","import { Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getCol, initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\n\nconst name = \"erase blank rows\";\nconst old_names = [];\n\n//PARAMS\n\nconst params = [];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'draft', \n      type: 'static',\n      value: null,\n      uses: \"draft\",\n      dx: 'the draft to erase blank rows from',\n      num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft = getInputDraft(op_inputs);\n   \n  if(input_draft == null) return Promise.resolve([]);\n\n  let pattern = new Sequence.TwoD();\n   let weft_sys = new Sequence.OneD();\n   let weft_mats = new Sequence.OneD();\n\n\n input_draft.drawdown.forEach((row, i) => {\n    let seq = new Sequence.OneD().import(row);\n    if(!utilInstance.hasOnlyUnset(row)){\n        pattern.pushWeftSequence(seq.val());\n        weft_sys.push(input_draft.rowSystemMapping[i])\n        weft_mats.push(input_draft.rowShuttleMapping[i])\n    } \n\n })\n\n\n \n\n\n\n  let d = initDraftFromDrawdown(pattern.export());\n\n  d.rowShuttleMapping = weft_mats.val();\n  d.rowSystemMapping = weft_sys.val();\n  d = updateWarpSystemsAndShuttles(d, input_draft);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'eraseblank('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const erase_blank: Operation = {name, old_names, params, inlets, perform, generateName};","import { createCell } from \"../../model/cell\";\nimport { Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getHeddle, initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"fill\";\nconst old_names = [];\n\n//PARAMS\n\nconst params = [];\n\n//INLETS\n\nconst pattern: OperationInlet = {\n    name: 'pattern', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'a draft you would like to fill',\n    num_drafts: 1\n  }\n\n\nconst black_cells: OperationInlet = {\n    name: 'black cell structure', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the structure you would like to repeat in in the black regions of the base draft',\n    num_drafts: 1\n  }\n\n  const white_cells: OperationInlet = {\n    name: 'white cell structure', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the structure you would like to repeat in in the white regions of the base draft',\n    num_drafts: 1\n  }\n\n  const inlets = [pattern, black_cells, white_cells];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let to_fills = getAllDraftsAtInlet(op_inputs, 0);\n  let black_cells = getAllDraftsAtInlet(op_inputs, 1);\n  let white_cells = getAllDraftsAtInlet(op_inputs, 2);\n\n  \n  if(to_fills.length == 0) return Promise.resolve([]);\n\n  let black_cell = (black_cells.length == 0) ? initDraftFromDrawdown([[createCell(true)]]) : black_cells[0];\n\n  let white_cell = (white_cells.length == 0) ? initDraftFromDrawdown([[createCell(false)]]) : white_cells[0];\n\n\n\n    let to_fill = to_fills[0];\n    let pattern = new Sequence.TwoD();\n\n    to_fill.drawdown.forEach((row, i) =>{\n        let seq = new Sequence.OneD();\n        row.forEach((cell, j) => {\n\n            if(cell.is_set){\n                if(cell.is_up){\n                    seq.push(\n                        getHeddle(\n                            black_cell.drawdown, \n                            i%wefts(black_cell.drawdown), \n                            j%warps(black_cell.drawdown))\n                        );\n                }else{\n                    seq.push(\n                        getHeddle(\n                            white_cell.drawdown, \n                            i%wefts(white_cell.drawdown), \n                            j%warps(white_cell.drawdown))\n                        );\n                }\n            }else{\n                seq.push(2);\n            }\n        })\n        pattern.pushWeftSequence(seq.val());\n    })\n\n\n  let d = initDraftFromDrawdown(pattern.export())\n  d = updateWeftSystemsAndShuttles(d, to_fill);\n  d = updateWarpSystemsAndShuttles(d, to_fill);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'fill('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const fill: Operation = {name, old_names, params, inlets, perform, generateName};","import { BoolParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"flip\";\nconst old_names = [];\n\n//PARAMS\n\nconst horiz: BoolParam = \n        {name: 'horiz',\n        type: 'boolean',\n        falsestate: 'no',\n        truestate: 'yes',\n        value: 0,\n        dx: ''\n        }\n\nconst vert: BoolParam = \n    {name: 'vert',\n    type: 'boolean',\n    falsestate: \"no\",\n    truestate: \"yes\",\n    value: 0,\n    dx: ''\n    }\n\n\n\nconst params = [horiz, vert];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'draft', \n      type: 'static',\n      value: null,\n      uses: \"draft\",\n      dx: 'the draft to flip horizontally',\n      num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft = getInputDraft(op_inputs);\n\n   if(input_draft == null) return Promise.resolve([]);\n\n\n   let weft_systems = new Sequence.OneD(input_draft.rowSystemMapping);\n   let weft_materials = new Sequence.OneD(input_draft.rowShuttleMapping);\n   let warp_systems = new Sequence.OneD(input_draft.colSystemMapping);\n   let warp_mats = new Sequence.OneD(input_draft.colShuttleMapping);\n \n\n  let pattern = new Sequence.TwoD();\n  let horiz = getOpParamValById(0, op_params);\n  let vert = getOpParamValById(1, op_params);\n\n  if(horiz){\n  warp_systems.reverse();\n  warp_mats.reverse();\n\n    input_draft.drawdown.forEach(row => {\n        let seq = new Sequence.OneD().import(row).reverse().val();\n        pattern.pushWeftSequence(seq);\n    })\n  }else{\n    pattern.import(input_draft.drawdown);\n  }\n\n  let next_pattern = new Sequence.TwoD();\n\n\n  if(vert){\n   weft_systems.reverse();\n   weft_materials.reverse();\n\n    for(let j  =0; j < warps(input_draft.drawdown);j++){\n    let col = pattern.getWarp(j);\n    let seq = new Sequence.OneD().import(col).reverse();\n    next_pattern.pushWarpSequence(seq.val());\n    }\n  }else{\n    next_pattern.import(pattern.export());\n  }\n\n\n\n  let d = initDraftFromDrawdown(next_pattern.export());\n  d.colShuttleMapping = warp_mats.val();\n  d.colSystemMapping = warp_systems.val();\n  d.rowShuttleMapping = weft_materials.val();\n  d.rowSystemMapping = weft_systems.val();\n\n\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'flip('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const flip: Operation = {name, old_names, params, inlets, perform, generateName};","import { Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"flip horiz\";\nconst old_names = [];\n\n//PARAMS\n\nconst params = [];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'draft', \n      type: 'static',\n      value: null,\n      uses: \"draft\",\n      dx: 'the draft to flip horizontally',\n      num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft = getInputDraft(op_inputs);\n   if(input_draft == null) return Promise.resolve([]);\n\n  let pattern = new Sequence.TwoD();\n\n  input_draft.drawdown.forEach(row => {\n    let seq = new Sequence.OneD().import(row).reverse().val();\n    pattern.pushWeftSequence(seq);\n  })\n\n  let d = initDraftFromDrawdown(pattern.export());\n  d = updateWeftSystemsAndShuttles(d, input_draft);\n  d = updateWarpSystemsAndShuttles(d, input_draft);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'flipx('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const flipx: Operation = {name, old_names, params, inlets, perform, generateName};","import { Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getCol, initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"flip vert\";\nconst old_names = [];\n\n//PARAMS\n\nconst params = [];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'draft', \n      type: 'static',\n      value: null,\n      uses: \"draft\",\n      dx: 'the draft to flip vertically',\n      num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft = getInputDraft(op_inputs);\n   if(input_draft == null) return Promise.resolve([]);\n\n  let pattern = new Sequence.TwoD();\n\n  for(let j = 0; j < warps(input_draft.drawdown); j++){\n    const col = getCol(input_draft.drawdown, j);\n    let seq = new Sequence.OneD().import(col).reverse().val();\n    pattern.pushWarpSequence(seq);\n\n  }\n\n\n  let d = initDraftFromDrawdown(pattern.export());\n  d = updateWeftSystemsAndShuttles(d, input_draft);\n  d = updateWarpSystemsAndShuttles(d, input_draft);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'flipy('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const flipy: Operation = {name, old_names, params, inlets, perform, generateName};","import { promise } from \"protractor\";\nimport { createCell } from \"../../model/cell\";\nimport { AnalyzedImage, Cell, Draft, DynamicOperation, FileParam, NumParam, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getHeddle, initDraftFromDrawdown, initDraftWithParams, warps, wefts } from \"../../model/drafts\";\nimport { getOpParamValById } from \"../../model/operations\";\n\n\n\n\nconst name = \"imagemap\";\nconst old_names = [];\nconst dynamic_param_id = 0;\nconst dynamic_param_type = 'color';\n\n//PARAMS\n//the value on this param needs to hold all the image data\nconst file:FileParam =  {\n    name: 'image file (.jpg or .png)',\n    type: 'file',\n    value: {id: '', data: null},\n    dx: 'the file to upload',\n}\n\nconst width:NumParam = { \n   name: 'draft width',     \n   type: 'number',\n   min: 1,\n   max: 10000,\n   value: 30,\n   dx: 'resize the input image to the width specified'\n}\n\nconst height:NumParam = {   \n    name: 'draft height',   \n    type: 'number',\n    min: 1,\n    max: 10000,\n    value: 20,\n    dx: 'resize the input image to the height specified'\n }\n \n\n\nconst params = [file, width, height];\n\n//INLETS\n\n  const inlets = [];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n    const file_param = getOpParamValById(0, op_params);   \n    const res_w = getOpParamValById(1, op_params);\n    const res_h = getOpParamValById(2, op_params);\n\n    if(file_param.id == '' || file_param.data == null){\n        const d = initDraftWithParams({wefts: res_w, warps: res_h, drawdown: [[createCell(false)]]})\n        return Promise.resolve([d]);\n    } \n    \n\n    const data:AnalyzedImage = file_param.data;\n\n    const color_to_drafts = data.colors.map((color, ndx) => {\n        const child_of_color = op_inputs.find(input => (input.params.findIndex(param => param === color) !== -1));\n        if(child_of_color === undefined) return {color: color, draft: null};\n        else return {color: color, draft: child_of_color.drafts[0]};\n      });\n\n    const pattern: Array<Array<Cell>> = [];\n      for(let i = 0; i < res_h; i++){\n        pattern.push([]);\n        for(let j = 0; j < res_w; j++){\n\n          const i_ratio = data.height / res_h;\n          const j_ratio = data.width / res_w;\n\n          const map_i = Math.floor(i * i_ratio);\n          const map_j = Math.floor(j * j_ratio);\n\n          const color_ndx = data.image_map[map_i][map_j]; //\n          const color_draft = color_to_drafts[color_ndx].draft;\n\n          if(color_draft === null) pattern[i].push( createCell(false));\n          else {\n            const draft_i = i % wefts(color_draft.drawdown);\n            const draft_j = j % warps(color_draft.drawdown);\n            pattern[i].push(createCell(getHeddle(color_draft.drawdown,draft_i,draft_j)));\n          }\n\n        }\n      }\n\n    const draft: Draft = initDraftFromDrawdown(pattern);\n    return  Promise.resolve([draft]);\n\n  }   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n// const image_data = getImageData(getOpParamValById(0, param_vals));\n  const file_param = getOpParamValById(0, param_vals);   \n  if(file_param.id == '' || file_param.data == null){\n      return 'image';\n  }else{\n    return file_param.data.name;\n  } \n\n}\n\n\nconst onParamChange = (param_vals: Array<OpParamVal>, inlets: Array<OperationInlet>, inlet_vals: Array<any>, changed_param_id: number, param_val: any) : Array<any> => {\n\n    if(changed_param_id == 0){\n        const id_and_data = param_val;\n        if(id_and_data.id !== ''){\n            inlets  = [];\n               id_and_data.data.colors.forEach(hex => { \n                    inlets.push(hex);\n            });\n        }   \n        return inlets;\n    }\n\n\n}\n  \n\nexport const imagemap: DynamicOperation = {name, old_names, params, inlets, dynamic_param_id, dynamic_param_type, perform, generateName,onParamChange};","import { BoolParam, Draft, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\nconst name = \"interlace\";\nconst old_names = [];\n\n//PARAMS\nconst repeats:BoolParam =  \n    {name: 'calculate repeats',\n    type: 'boolean',\n    falsestate: 'do not repeat inputs to match size',\n    truestate: 'repeat inputs to match size',\n    value: 1,\n    dx: \"controls if the inputs are intelaced in the exact format sumitted or repeated to fill evenly\"\n    }\n\n\n\nconst params = [repeats];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'drafts', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'all the drafts you would like to interlace',\n    num_drafts: -1\n  }\n\n  const warp_systems: OperationInlet = {\n    name: 'warp system map', \n    type: 'static',\n    value: null,\n    uses: \"warp-data\",\n    dx: 'if you would like to specify the warp system or materials, you can do so by adding a draft here',\n    num_drafts: 1\n  }\n\n\n  const inlets = [draft_inlet, warp_systems];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) : Promise<Array<Draft>> => {\n\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  let systems = getAllDraftsAtInlet(op_inputs, 1);\n  let repeat = getOpParamValById(0, op_params);\n\n  if(drafts.length == 0) return Promise.resolve([]);\n\n\n  let total_wefts = utilInstance.lcm(drafts.map(el => wefts(el.drawdown)))*drafts.length;\n\n    let total_warps;\n    if(repeat){\n        total_warps  = utilInstance.lcm(drafts.map(el => warps(el.drawdown)));\n    }else{\n        total_warps = utilInstance.getMaxWarps(drafts);\n    }\n\n  \n  let pattern = new Sequence.TwoD();\n  let weft_systems: Array<number> = [];\n  let weft_shuttles: Array<number> = [];\n\n  for(let i = 0; i < total_wefts; i++){\n\n    let selected_draft_id = i % drafts.length;\n    let within_draft_i = Math.floor(i / drafts.length);\n    let selected_draft = drafts[selected_draft_id];\n\n    if(repeat || within_draft_i < wefts(selected_draft.drawdown)){\n\n        let selected_draft = drafts[selected_draft_id];\n        let modulated_id = within_draft_i % wefts(selected_draft.drawdown);\n        let row = new Sequence.OneD().import(selected_draft.drawdown[modulated_id]);\n        \n        if(repeat) row.resize(total_warps);\n        else row.padTo(total_warps);\n\n        pattern.pushWeftSequence(row.val());\n        weft_systems.push(selected_draft.rowSystemMapping[modulated_id]);\n        weft_shuttles.push(selected_draft.rowShuttleMapping[modulated_id]);\n    }\n  }\n\nlet d = initDraftFromDrawdown(pattern.export());\nd.rowShuttleMapping = weft_shuttles;\nd.rowSystemMapping = weft_systems;\nif(systems.length > 0) d = updateWarpSystemsAndShuttles(d, systems[0]);\n\n\n\n  return Promise.resolve([d]);\n};   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n    let drafts = getAllDraftsAtInlet(op_inputs, 0);\n    let name_list = parseDraftNames(drafts);\n  return \"interlace(\"+name_list+\")\";\n}\n\n\nexport const interlace: Operation = {name, old_names, params, inlets, perform, generateName};","import { BoolParam, Draft, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getCol, initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\nconst name = \"interlacewarps\";\nconst old_names = ['interlace_warps'];\n\n//PARAMS\nconst repeats:BoolParam =  \n    {name: 'calculate repeats',\n    type: 'boolean',\n    falsestate: 'do not repeat inputs to match size',\n    truestate: 'repeat inputs to match size',\n    value: 1,\n    dx: \"controls if the inputs are intelaced in the exact format sumitted or repeated to fill evenly\"\n    }\n\n\n\nconst params = [repeats];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'drafts', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'all the drafts you would like to interlace',\n    num_drafts: -1\n  }\n\n  const weft_systems: OperationInlet = {\n    name: 'weft system map', \n    type: 'static',\n    value: null,\n    uses: \"weft-data\",\n    dx: 'if you would like to specify the weft system or materials, you can do so by adding a draft here',\n    num_drafts: 1\n  }\n\n\n  const inlets = [draft_inlet, weft_systems];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) : Promise<Array<Draft>> => {\n\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  let systems = getAllDraftsAtInlet(op_inputs, 1);\n  let repeat = getOpParamValById(0, op_params);\n\n  if(drafts.length == 0) return Promise.resolve([]);\n\n\n  let total_warps = utilInstance.lcm(drafts.map(el => warps(el.drawdown)))*drafts.length;\n\n    let total_wefts;\n    if(repeat){\n        total_wefts  = utilInstance.lcm(drafts.map(el => wefts(el.drawdown)));\n    }else{\n        total_wefts = utilInstance.getMaxWefts(drafts);\n    }\n\n  \n  let pattern = new Sequence.TwoD();\n  let warp_systems: Array<number> = [];\n  let warp_shuttles: Array<number> = [];\n\n  for(let j = 0; j < total_warps; j++){\n\n    let selected_draft_id = j % drafts.length;\n    let within_draft_j = Math.floor(j / drafts.length);\n    let selected_draft = drafts[selected_draft_id];\n\n    if(repeat || within_draft_j < warps(selected_draft.drawdown)){\n\n        let selected_draft = drafts[selected_draft_id];\n        let modulated_id = within_draft_j % warps(selected_draft.drawdown);\n        let col = new Sequence.OneD().import(getCol(selected_draft.drawdown,modulated_id));\n        \n        if(repeat) col.resize(total_wefts);\n        else col.padTo(total_wefts);\n\n        pattern.pushWarpSequence(col.val());\n        warp_systems.push(selected_draft.colSystemMapping[modulated_id]);\n        warp_shuttles.push(selected_draft.colShuttleMapping[modulated_id]);\n    }\n  }\n\nlet d = initDraftFromDrawdown(pattern.export());\nd.colShuttleMapping = warp_shuttles;\nd.colSystemMapping = warp_systems;\nif(systems.length > 0) d = updateWeftSystemsAndShuttles(d, systems[0]);\n\n\n\n  return Promise.resolve([d]);\n};   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n    let drafts = getAllDraftsAtInlet(op_inputs, 0);\n    let name_list = parseDraftNames(drafts);\n  return \"interlace warps(\"+name_list+\")\";\n}\n\n\nexport const interlacewarps: Operation = {name, old_names, params, inlets, perform, generateName};","import { promise } from \"protractor\";\nimport { Draft, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"invert\";\nconst old_names = [];\n\n//PARAMS\n\n\nconst params = [];\n\n//INLETS\n\nconst input:OperationInlet = {\n      name: 'draft', \n      type: 'static',\n      value: null,\n      uses: \"draft\",\n      dx: 'the draft to invert',\n      num_drafts: 1\n    };\n\nconst inlets = [input];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n     const input_draft = getInputDraft(op_inputs);\n     if(input_draft == null) return Promise.resolve([]);\n     \n     let pattern = new Sequence.TwoD();\n     input_draft.drawdown.forEach(row => {\n        const r = new Sequence.OneD().import(row).invert().val();\n        pattern.pushWeftSequence(r);\n     });\n\n     let d: Draft = initDraftFromDrawdown(pattern.export());\n     d = updateWeftSystemsAndShuttles(d, input_draft);\n     d = updateWarpSystemsAndShuttles(d, input_draft);\n   \n\n    return Promise.resolve([d]);\n\n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n    let drafts = getAllDraftsAtInlet(op_inputs, 0);\n    return 'invert('+parseDraftNames(drafts)+\")\";\n\n\n}\n\n\nexport const invert: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { BoolParam, Draft, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getHeddle, initDraftFromDrawdown, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\nconst name = \"join left\";\nconst old_names = [];\n\n//PARAMS\n\nconst repeats:BoolParam = {name: 'calculate repeats',\ntype: 'boolean',\nfalsestate: 'do not repeat inputs to match size',\ntruestate: 'repeat inputs to match size',\nvalue: 1,\ndx: \"controls if the inputs are repeated along the height so they repeat in even intervals\"}\n\n\n\nconst params = [repeats];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to join horizontally',\n    num_drafts: -1\n  }\n\n  const weft_data: OperationInlet = {\n    name: 'weft pattern', \n    type: 'static',\n    value: null,\n    uses: \"weft-data\",\n    dx: 'optional, define a custom weft material or system pattern here',\n    num_drafts: 1\n  }\n\n\n\n\nconst inlets = [draft_inlet, weft_data];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) : Promise<Array<Draft>> => {\n\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  let weftdata = getAllDraftsAtInlet(op_inputs, 1);\n  let factor_in_repeats = getOpParamValById(0, op_params);\n\n  if(drafts.length == 0) return Promise.resolve([]);\n\n  let total_wefts: number = 0;\n  const all_wefts = drafts.map(el => wefts(el.drawdown)).filter(el => el > 0);\n  if(factor_in_repeats === 1) total_wefts = utilInstance.lcm(all_wefts);\n  else  total_wefts = utilInstance.getMaxWefts(drafts);\n\n  let pattern = new Sequence.TwoD();\n\n  for(let i = 0; i < total_wefts; i++){\n\n    let seq = new Sequence.OneD();\n    drafts.forEach(draft => {\n        for(let j = 0; j < warps(draft.drawdown); j++){\n            seq.push(getHeddle(draft.drawdown, i%wefts(draft.drawdown), j))\n        }\n    })\n    pattern.pushWeftSequence(seq.val());\n  }\n\n\n  let d: Draft = initDraftFromDrawdown(pattern.export());\n\n  let warp_mats = new Sequence.OneD();\n  let warp_sys = new Sequence.OneD();\n\n\n\n  drafts.forEach(draft => {\n    for(let j = 0; j < warps(draft.drawdown); j++){\n        warp_mats.push(draft.colShuttleMapping[j]);\n        warp_sys.push(draft.colSystemMapping[j]);\n    }\n  })\n\n  d.colShuttleMapping = warp_mats.resize(warps(d.drawdown)).val();\n\n  d.colSystemMapping = warp_sys.resize(warps(d.drawdown)).val();\n\n  if(weftdata.length > 0){\n    d.rowShuttleMapping = new Sequence.OneD().import(weftdata[0].rowShuttleMapping).resize(wefts(d.drawdown)).val();\n\n    d.rowSystemMapping = new Sequence.OneD().import(weftdata[0].rowSystemMapping).resize(wefts(d.drawdown)).val();\n\n  }else{\n\n    d.rowShuttleMapping = new Sequence.OneD().import(drafts[0].rowShuttleMapping).resize(wefts(d.drawdown)).val();\n\n    d.rowSystemMapping = new Sequence.OneD().import(drafts[0].rowSystemMapping).resize(wefts(d.drawdown)).val();\n\n  }\n\n\n  return Promise.resolve([d]);\n};   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n    let drafts = getAllDraftsAtInlet(op_inputs, 0);\n    let name_list = parseDraftNames(drafts);\n  return \"join left(\"+name_list+\")\";\n}\n\n\nexport const joinleft: Operation = {name, old_names, params, inlets, perform, generateName};","import { getCellValue } from \"../../model/cell\";\nimport { BoolParam, Draft, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getCol, getHeddle, initDraftFromDrawdown, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\nconst name = \"join top\";\nconst old_names = [];\n\n//PARAMS\n\nconst repeats:BoolParam = {name: 'calculate repeats',\ntype: 'boolean',\nfalsestate: 'do not repeat inputs to match size',\ntruestate: 'repeat inputs to match size',\nvalue: 1,\ndx: \"controls if the inputs are repeated along the width so they repeat in even intervals\"}\n\n\n\nconst params = [repeats];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to join horizontally',\n    num_drafts: -1\n  }\n\n  const warp_data: OperationInlet = {\n    name: 'warp pattern', \n    type: 'static',\n    value: null,\n    uses: \"warp-data\",\n    dx: 'optional, define a custom warp material or system pattern here',\n    num_drafts: 1\n  }\n\n\n\n\nconst inlets = [draft_inlet, warp_data];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) : Promise<Array<Draft>> => {\n\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  let warpdata = getAllDraftsAtInlet(op_inputs, 1);\n  let factor_in_repeats = getOpParamValById(0, op_params);\n\n  if(drafts.length == 0) return Promise.resolve([]);\n\n  let total_warps: number = 0;\n  const all_warps = drafts.map(el => warps(el.drawdown)).filter(el => el > 0);\n  if(factor_in_repeats === 1) total_warps = utilInstance.lcm(all_warps);\n  else  total_warps = utilInstance.getMaxWarps(drafts);\n\n  let pattern = new Sequence.TwoD();\n\n  for(let j = 0; j < total_warps; j++){\n\n    let seq = new Sequence.OneD();\n    drafts.forEach(draft => {\n\n        let col = getCol(draft.drawdown, j%warps(draft.drawdown));\n        for(let i = 0; i < wefts(draft.drawdown); i++){\n            seq.push(getCellValue(col[i]));\n        }\n    })\n    pattern.pushWarpSequence(seq.val());\n  }\n\n\n  let d: Draft = initDraftFromDrawdown(pattern.export());\n\n  let weft_mats = new Sequence.OneD();\n  let weft_sys = new Sequence.OneD();\n\n\n\n  drafts.forEach(draft => {\n    for(let i = 0; i < wefts(draft.drawdown); i++){\n        weft_mats.push(draft.rowShuttleMapping[i]);\n        weft_sys.push(draft.rowSystemMapping[i]);\n    }\n  })\n\n  d.rowShuttleMapping = weft_mats.resize(wefts(d.drawdown)).val();\n\n  d.rowSystemMapping = weft_sys.resize(wefts(d.drawdown)).val();\n\n  if(warpdata.length > 0){\n    d.colShuttleMapping = new Sequence.OneD().import(warpdata[0].colShuttleMapping).resize(warps(d.drawdown)).val();\n\n    d.colSystemMapping = new Sequence.OneD().import(warpdata[0].colSystemMapping).resize(warps(d.drawdown)).val();\n\n  }else{\n\n    d.colShuttleMapping = new Sequence.OneD().import(drafts[0].colShuttleMapping).resize(warps(d.drawdown)).val();\n\n    d.colSystemMapping = new Sequence.OneD().import(drafts[0].colSystemMapping).resize(warps(d.drawdown)).val();\n\n  }\n\n\n  return Promise.resolve([d]);\n};   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n    let drafts = getAllDraftsAtInlet(op_inputs, 0);\n    let name_list = parseDraftNames(drafts);\n  return \"join top(\"+name_list+\")\";\n}\n\n\nexport const jointop: Operation = {name, old_names, params, inlets, perform, generateName};","import { Draft, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { generateMappingFromPattern, initDraftFromDrawdown } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\nconst name = \"layer\";\nconst old_names = [];\n\n//PARAMS\n\nconst params = [];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'drafts', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the drafts to layer (from top to bottom)',\n    num_drafts: -1\n  }\n\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) : Promise<Array<Draft>> => {\n\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n\n  if(drafts.length == 0) return Promise.resolve([]);\n\n\n    //create a default system mapping that assumes alternating weft and warp systems associated with each layer\n   let sys_seq = new Sequence.OneD();\n   for(let i = 0; i < drafts.length; i++){\n    sys_seq.push(i);\n   }\n\n   let composite = new Sequence.TwoD().setBlank(2\n    );\n   drafts.forEach((draft, ndx) => {\n    let seq = new Sequence.TwoD().import(draft.drawdown);\n    seq.mapToSystems([ndx], [ndx], sys_seq, sys_seq);\n    composite.overlay(seq, false);\n   })\n\n   let system_layer_map = sys_seq.val().map(el => {return {ws: el, layer: el}});\n   composite.layerSystems(system_layer_map, sys_seq);\n\n\n    let d: Draft = initDraftFromDrawdown(composite.export());\n    d.colSystemMapping =  generateMappingFromPattern(d.drawdown, sys_seq.val(),'col', 3);\n    d.rowSystemMapping =  generateMappingFromPattern(d.drawdown, sys_seq.val(),'row', 3);\n\n\n\n  return Promise.resolve([d]);\n};   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n    let drafts = getAllDraftsAtInlet(op_inputs, 0);\n    let name_list = parseDraftNames(drafts);\n  return \"layer(\"+name_list+\")\";\n}\n\n\nexport const layer: Operation = {name, old_names, params, inlets, perform, generateName};","import { createCell, getCellValue } from \"../../model/cell\";\nimport { Draft, OperationInlet, OpInput, OpParamVal, StringParam, NotationTypeParam, DynamicOperation, OperationParam } from \"../../model/datatypes\";\nimport {  generateMappingFromPattern, initDraftFromDrawdown, initDraftWithParams, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, parseDraftNames, reduceToStaticInputs } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport { getSystemCharFromId } from \"../../model/system\";\nimport utilInstance from \"../../model/util\";\n\n\nconst name = \"notation\";\nconst old_names = [\"assignlayers\"];\nconst dynamic_param_id = 0;\nconst dynamic_param_type = 'notation';\n\n//PARAMS\nconst pattern:StringParam =  \n    {name: 'pattern',\n    type: 'string',\n    value: '(a1)(b2)',\n    regex: /.*?\\((.*?[a-xA-Z]*[\\d]*.*?)\\).*?/i, //this is the layer parsing regex\n    error: 'invalid entry',\n    dx: 'all system pairs must be listed as letters followed by numbers, layers are created by enclosing those system lists in pararenthesis. For example, the following are valid: (a1b2)(c3) or (c1)(a2). The following are invalid: (1a)(2b) or (2b'\n  }\n\n\n\n\nconst params = [pattern];\n\n//INLETS\nconst systems: OperationInlet = {\n    name: 'systems draft', \n    type: 'static',\n    value: null,\n    uses: \"warp-and-weft-data\",\n    dx: 'the draft that describes the system ordering we will add input structures within',\n    num_drafts: 1\n  }\n\n  const inlets = [systems];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const original_string = getOpParamValById(0, op_params);\n      const original_string_split = utilInstance.parseRegex(original_string,  /.*?\\((.*?[a-xA-Z]*[\\d]*.*?)\\).*?/i);\n      \n\n\n      if(original_string_split == null || original_string_split.length == 0) return Promise.resolve([]);\n\n      const system_map = getAllDraftsAtInlet(op_inputs, 0);\n      if(op_inputs.length == 0) return Promise.resolve([]);\n\n\n      if(system_map.length == 0) return Promise.resolve([]); ;\n     \n\n      let weft_system_map = new Sequence.OneD(system_map[0].rowSystemMapping);\n      let warp_system_map = new Sequence.OneD(system_map[0].colSystemMapping);\n      let weft_shuttle_map = new Sequence.OneD(system_map[0].rowShuttleMapping);\n      let warp_shuttle_map = new Sequence.OneD(system_map[0].colShuttleMapping);\n\n      //make sure the system draft map has a representation for every layer, even if the draft at that layer is null.\n      const layer_draft_map = original_string_split.map((unit, layer) => {\n  \n        \n        let drafts = getAllDraftsAtInlet(op_inputs, layer+1);\n    \n        return {\n          wesy: parseWeftSystem(unit), \n          wasy: parseWarpSystem(unit),\n          layer: layer, //map layer order to the inlet id, all inlets must be ordered the same as the input\n          draft: (drafts.length == 0) ? initDraftWithParams({wefts: 1, warps: 1, drawdown:[[createCell(false)]]}) : drafts[0]\n        }\n      })\n\n\n      let composite = new Sequence.TwoD().setBlank(2);\n\n      layer_draft_map.forEach((sdm, ndx) => {\n        let seq = new Sequence.TwoD().import(sdm.draft.drawdown);\n        seq.mapToSystems(sdm.wesy, sdm.wasy, weft_system_map, warp_system_map);\n        composite.overlay(seq, false);\n        \n\n       });\n\n\n\n        let system_layer_map = [];\n        layer_draft_map.forEach(el => {\n          el.wasy.forEach(wasy => {\n            system_layer_map.push({ws: wasy, layer:el.layer})\n          })\n        });\n        composite.layerSystems(system_layer_map, warp_system_map);\n    \n    \n\n\n       let d: Draft = initDraftFromDrawdown(composite.export());\n       d.colSystemMapping =  generateMappingFromPattern(d.drawdown, warp_system_map.val(),'col', 3);\n       d.rowSystemMapping =  generateMappingFromPattern(d.drawdown, weft_system_map.val(),'row', 3);\n       d.colShuttleMapping =  generateMappingFromPattern(d.drawdown, warp_shuttle_map.val(),'col', 3);\n       d.rowShuttleMapping =  generateMappingFromPattern(d.drawdown, weft_shuttle_map.val(),'row', 3);\n\n      \n      \n      return  Promise.resolve([d]);\n\n  }   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  return ''+param_vals[0]+\"\";\n}\n\n\nconst onParamChange = (param_vals: Array<OpParamVal>, inlets: Array<OperationInlet>, inlet_vals: Array<any>, changed_param_id: number, param_val: any) : Array<any> => {\n\n    inlet_vals = reduceToStaticInputs(inlets, inlet_vals);\n\n    const param_regex = (<StringParam> param_vals[0].param).regex;\n    \n    let matches = [];\n\n    matches = utilInstance.parseRegex(param_val,param_regex);\n    matches = matches.map(el => el.slice(1, -1))\n\n    matches.forEach(el => {\n      inlet_vals.push(el);\n    })\n\n    return inlet_vals;\n\n}\n\n\n\n\n\n\n//pull out all the nubmers from a notation element into warp systems\nconst parseWarpSystem = (val: string) : Array<number> => {\n  let matches = val.match(/\\d+/g);\n  if(matches == null || matches.length == 0){\n    console.error(\"in Layer Notation, no warp system\")\n    return [];\n  }\n  return  matches.map(el => parseInt(el)-1);\n\n}\n\n//pull out all the letters from a notation element into weft systems\nconst parseWeftSystem = (val: string) : Array<number> => {\n  let matches = val.match(/[a-zA-Z]+/g);\n  if(matches == null || matches.length == 0){\n    console.error(\"in Layer Notation, no weft system\")\n    return [];\n  }\n  return matches.map(match => match.charCodeAt(0) - 97);\n\n}\n  \n\nexport const notation: DynamicOperation = {name, old_names, params, inlets, dynamic_param_id, dynamic_param_type, perform, generateName,onParamChange};","import { Draft, LoomSettings, NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getDraftName, initDraftWithParams, setHeddle, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getLoomUtilByType, numFrames, numTreadles } from \"../../model/looms\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\n\n\nconst name = \"direct loom\";\nconst old_names = [];\n\n//PARAMS\n\nconst frames:NumParam =  \n{name: 'frames',\nmin: 2,\nmax: 10000,\nvalue: 8,\ntype: 'number',\ndx: 'number of frames to use. If the drawdown requires more, it will generate more'\n}\n\n\nconst params = [frames];\n\n//INLETS\n\nconst drawdown: OperationInlet = {\n    name: 'drawdown', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the drawdown from which to create threading and lift plan from',\n    num_drafts: 1\n  }\n\n\n  const inlets = [drawdown];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let draft = getInputDraft(op_inputs);\n  let frames = getOpParamValById(0, op_params);\n\n  \n  if(draft == null) return Promise.resolve([]);\n\n\n  const loom_settings:LoomSettings = {\n    type: 'direct',\n    epi: 10, \n    units: 'in',\n    frames: frames,\n    treadles: frames\n  }\n\n  const utils = getLoomUtilByType(loom_settings.type);\n  return utils.computeLoomFromDrawdown(draft.drawdown, loom_settings, 3)\n  .then(l => {\n\n    const frames = Math.max(numFrames(l), loom_settings.frames);\n    const treadles = Math.max(numTreadles(l), loom_settings.treadles);\n \n    let threading: Draft =initDraftWithParams({warps:warps(draft.drawdown), wefts: frames});\n  l.threading.forEach((frame, j) =>{\n    if(frame !== -1) setHeddle(threading.drawdown,frame, j, true);\n  });\n\n  threading = updateWarpSystemsAndShuttles(threading, draft)\n\n\n  let treadling: Draft =initDraftWithParams({warps:treadles, wefts:wefts(draft.drawdown)});   \n  l.treadling.forEach((treadle_row, i) =>{\n    treadle_row.forEach(treadle_num => {\n      setHeddle(treadling.drawdown, i, treadle_num, true);\n    })\n  });\n\n  treadling = updateWeftSystemsAndShuttles(treadling, draft)\n\n  return Promise.resolve([threading, treadling]);\n\n  });\n   \n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>, ndx: number) : string => {\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n\n  switch (ndx ){\n    case 0: \n    return   \"threading_\"+parseDraftNames(drafts);\n\n    case 1: \n    return   \"lift plan_\"+parseDraftNames(drafts);\n\n  }\n\n  return 'makedirectloom('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const makedirectloom: Operation = {name, old_names, params, inlets, perform, generateName};","import { Draft, LoomSettings, NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getDraftName, initDraftWithParams, setHeddle, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getLoomUtilByType, numFrames, numTreadles } from \"../../model/looms\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\n\n\nconst name = \"floor loom\";\nconst old_names = [];\n\n//PARAMS\n\nconst frames:NumParam =  \n{name: 'frames',\nmin: 2,\nmax: 10000,\nvalue: 8,\ntype: 'number',\ndx: 'number of frames to use. If the drawdown requires more, it will generate more'\n}\n\nconst treadles:NumParam = {\n    name: 'treadles',\n      min: 1,\n      max: 10000,\n      value: 12,\n      type: 'number',\n      dx: 'number of treadles to use. If the drawdown requires more, it will generate more'\n    }\n\nconst params = [frames, treadles];\n\n//INLETS\n\nconst drawdown: OperationInlet = {\n    name: 'drawdown', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the drawdown from which to create threading, tieup and treadling data from',\n    num_drafts: 1\n  }\n\n\n  const inlets = [drawdown];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let draft = getInputDraft(op_inputs);\n  let frames = getOpParamValById(0, op_params);\n  let treadles = getOpParamValById(1, op_params);\n\n  \n  if(draft == null) return Promise.resolve([]);\n\n\n  const loom_settings:LoomSettings = {\n    type: 'frame',\n    epi: 10, \n    units: 'in',\n    frames: frames,\n    treadles: treadles\n  }\n\n  const utils = getLoomUtilByType(loom_settings.type);\n  return utils.computeLoomFromDrawdown(draft.drawdown, loom_settings, 3)\n  .then(l => {\n\n    const frames = Math.max(numFrames(l), loom_settings.frames);\n    const treadles = Math.max(numTreadles(l), loom_settings.treadles);\n \n    let threading: Draft =initDraftWithParams({warps:warps(draft.drawdown), wefts: frames});\n  l.threading.forEach((frame, j) =>{\n    if(frame !== -1) setHeddle(threading.drawdown,frame, j, true);\n  });\n  threading = updateWarpSystemsAndShuttles(threading, draft)\n\n  let treadling: Draft =initDraftWithParams({warps:treadles, wefts:wefts(draft.drawdown)});   \n  l.treadling.forEach((treadle_row, i) =>{\n    treadle_row.forEach(treadle_num => {\n      setHeddle(treadling.drawdown, i, treadle_num, true);\n    })\n  });\n  treadling = updateWeftSystemsAndShuttles(treadling, draft)\n\n\n  let tieup: Draft =initDraftWithParams({warps: treadles, wefts: frames});\n  l.tieup.forEach((row, i) => {\n    row.forEach((val, j) => {\n      setHeddle(tieup.drawdown, i, j, val);\n    })\n  });\n  tieup = updateWeftSystemsAndShuttles(tieup, draft)\n  tieup = updateWarpSystemsAndShuttles(tieup, draft)\n\n  return Promise.resolve([threading, tieup, treadling]);\n\n\n\n  });\n   \n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>, ndx: number) : string => {\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n\n  switch (ndx ){\n    case 0: \n    return   \"threading_\"+parseDraftNames(drafts);\n\n    case 1: \n    return   \"tie_up_\"+parseDraftNames(drafts);\n\n    case 2: \n    return   \"treadling_\"+parseDraftNames(drafts);\n  }\nreturn ''\n}\n\n\nexport const makeloom: Operation = {name, old_names, params, inlets, perform, generateName};","import { create } from \"domain\";\nimport { row } from \"mathjs\";\nimport { createCell } from \"../../model/cell\";\nimport { BoolParam, Operation, OperationInlet, OpInput, OpParamVal, SelectParam } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, initDraftWithParams, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"makesymmetric\";\nconst old_names = [''];\n\n//PARAMS\nconst corner: SelectParam = {\n    name: 'options',\n      type: 'select',\n      selectlist: [\n        {name: '4-way around top left corner', value: 0},\n        {name: '4-way around top right corner', value: 1},\n        {name: '4-way around bottom right corner', value: 2},\n        {name: '4-way around bottom left corner', value: 3},\n        {name: '2-way top axis', value: 4},\n        {name: '2-way right axis', value: 5},\n        {name: '2-way bottom axis', value: 6},\n        {name: '2-way left axis', value: 7}\n      ],\n      value: 0,\n      dx: 'select 4-way or 2-way symmetric. If 4-way, select the corner to which this draft is rotated around 0 is top left, 1 top right, 2 bottom right, 3 bottom left. If 2-way, select the access it is mirror around'\n      \n}\n\nconst remove_center: BoolParam = {\n    name: 'remove center repeat',\n    type: 'boolean',\n    falsestate: \"center repeat kept\",\n    truestate: \"center repeat removed\",\n    value: 0,\n    dx: 'rotating drafts creates a repeated set of columns or rows extending from the center. Use this toggle to alternative the structure by either keeping or erasing those repeated cells'\n    \n}\n\n\n\nconst params = [corner, remove_center];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'input draft', \n    type: 'static',\n    value: null,\n    dx: 'the draft you would like to modify',\n    uses: \"draft\",\n    num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n/**TODO - make this support systems as well */\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft = getInputDraft(op_inputs);\n  let sym_mode = getOpParamValById(0, op_params);\n  let remove_center = getOpParamValById(1, op_params);\n\n  if(input_draft == null) return Promise.resolve([]);\n\n    let pattern = new Sequence.TwoD();\n    let warp_systems = new Sequence.OneD();\n    let warp_mats = new Sequence.OneD();\n    let weft_systems = new Sequence.OneD();\n    let weft_materials = new Sequence.OneD();\n\n        switch(sym_mode){\n\n            //4-way, top left - 2-way left\n            case 0:\n            case 7:\n\n                input_draft.drawdown.forEach((row, i) =>{\n                    let rev = new Sequence.OneD().import(row).reverse();\n                  \n                    let rev_warp_sys = new Sequence.OneD().import(input_draft.colSystemMapping).reverse();\n                    let rev_warp_mats = new Sequence.OneD().import(input_draft.colShuttleMapping).reverse();\n\n                    if(remove_center == 1){\n                        rev.slice(0, row.length-1);\n                        rev_warp_mats.slice(0, row.length-1);\n                        rev_warp_sys.slice(0, row.length-1);\n                    }\n                    rev.pushRow(row);\n\n                    if(i == 0){\n                        warp_mats = rev_warp_mats.pushRow(input_draft.colShuttleMapping);\n                        warp_systems = rev_warp_sys.pushRow(input_draft.colSystemMapping);\n                    }                    \n\n                    if(remove_center == 1 && i == 0){\n                        \n                        pattern.pushWeftSequence(rev.val())\n                        weft_materials.push(input_draft.rowShuttleMapping[i]);\n                        weft_systems.push(input_draft.rowSystemMapping[i]);\n\n                    }else{\n                        pattern.pushWeftSequence(rev.val())\n                        weft_materials.push(input_draft.rowShuttleMapping[i]);\n                        weft_systems.push(input_draft.rowSystemMapping[i]);\n\n                        if(sym_mode==0){\n\n                            pattern.unshiftWeftSequence(rev.val())\n                            weft_materials.unshift(input_draft.rowShuttleMapping[i]);\n                            weft_systems.unshift(input_draft.rowSystemMapping[i]);\n                        }\n\n                    }\n            });\n\n            break;\n\n            //4-way top right // 2-way - right\n            case 1:\n            case 4:\n            case 5:\n                input_draft.drawdown.forEach((row, i) =>{\n                    let rev = new Sequence.OneD().import(row).reverse();\n                    let rev_warp_sys = new Sequence.OneD().import(input_draft.colSystemMapping).reverse();\n                    let rev_warp_mats = new Sequence.OneD().import(input_draft.colShuttleMapping).reverse();\n\n                    if(remove_center == 1 && (sym_mode == 1 || sym_mode == 5)){\n                        rev.slice(1,row.length);\n                        rev_warp_mats.slice(1, row.length);\n                        rev_warp_sys.slice(1, row.length);\n                    }\n\n                    let seq = new Sequence.OneD().import(row);\n                    if(i == 0){\n                        warp_mats.import(input_draft.colShuttleMapping).pushRow(rev_warp_mats.val());\n                        warp_systems.import(input_draft.colSystemMapping).pushRow(rev_warp_sys.val());\n                    }   \n\n\n                    if(sym_mode !== 4){\n                    \n                        seq.pushRow(rev.val());\n                        warp_mats.pushRow(rev_warp_mats.val());\n                        warp_systems.pushRow(rev_warp_sys.val());\n                    \n                    }\n\n                    if(remove_center == 1 && i == 0){\n                        pattern.pushWeftSequence(seq.val())\n                        weft_materials.push(input_draft.rowShuttleMapping[i]);\n                        weft_systems.push(input_draft.rowSystemMapping[i]);\n                    }else{\n                        pattern.pushWeftSequence(seq.val())\n                        weft_materials.push(input_draft.rowShuttleMapping[i]);\n                        weft_systems.push(input_draft.rowSystemMapping[i]);\n                        if(sym_mode == 1 || sym_mode == 4){\n                            pattern.unshiftWeftSequence(seq.val())\n                            weft_materials.unshift(input_draft.rowShuttleMapping[i]);\n                            weft_systems.unshift(input_draft.rowSystemMapping[i]);\n                        }\n\n                    }\n            });\n            \n            break;\n            \n            //4-way bottom right, 2-way bottom \n            case 2:\n            case 6:\n\n            \n                for(let i = input_draft.drawdown.length-1; i >=0; i--){\n                    let row = input_draft.drawdown[i];\n                    let rev = new Sequence.OneD().import(row).reverse();\n                    let rev_warp_sys = new Sequence.OneD().import(input_draft.colSystemMapping).reverse();\n                    let rev_warp_mats = new Sequence.OneD().import(input_draft.colShuttleMapping).reverse();\n                    \n                    let seq = new Sequence.OneD().import(row);\n\n\n                    if(remove_center == 1 && sym_mode == 2){\n                        rev.slice(1, row.length);\n                        rev_warp_mats.slice(1, row.length);\n                        rev_warp_sys.slice(1, row.length);\n                    }\n\n\n                    if(sym_mode == 2){\n                     warp_mats.import(input_draft.colShuttleMapping).pushRow(rev_warp_mats.val());\n                     warp_systems.import(input_draft.colSystemMapping).pushRow(rev_warp_sys.val());\n                    }else if(i==0){\n                        warp_mats.import(input_draft.colShuttleMapping)\n                        warp_systems.import(input_draft.colSystemMapping)\n                    }\n\n                    if(remove_center == 1 && i == input_draft.drawdown.length-1){\n                        pattern.pushWeftSequence(seq.val())\n                        weft_materials.push(input_draft.rowShuttleMapping[i]);\n                        weft_systems.push(input_draft.rowSystemMapping[i]);\n                    }else{\n                        pattern.pushWeftSequence(seq.val())\n                        weft_materials.push(input_draft.rowShuttleMapping[i]);\n                        weft_systems.push(input_draft.rowSystemMapping[i]);\n                        pattern.unshiftWeftSequence(seq.val())\n                        weft_materials.unshift(input_draft.rowShuttleMapping[i]);\n                        weft_systems.unshift(input_draft.rowSystemMapping[i]);\n                    }\n                }\n          \n            break;\n\n            //4-way bottom left\n            case 3:\n                for(let i = input_draft.drawdown.length-1; i >=0; i--){\n                    let row = input_draft.drawdown[i];\n                    let rev = new Sequence.OneD().import(row).reverse();\n                    let rev_warp_sys = new Sequence.OneD().import(input_draft.colSystemMapping).reverse();\n                    let rev_warp_mats = new Sequence.OneD().import(input_draft.colShuttleMapping).reverse();\n\n                    if(remove_center == 1){\n                        rev.slice(0, rev.length()-1);\n                        rev_warp_mats.slice(0, rev.length()-1);\n                        rev_warp_sys.slice(0, rev.length()-1);\n                    }\n\n                    console.log(\"IN MS\", row);\n                    rev.pushRow(row);\n                    if(i == 0){\n                      rev_warp_mats.pushRow(input_draft.colShuttleMapping)\n                      rev_warp_sys.pushRow(input_draft.colSystemMapping)\n                    }\n\n                    if(remove_center == 1 && i == input_draft.drawdown.length-1){\n                        pattern.pushWeftSequence(rev.val())\n                        weft_materials.push(input_draft.rowShuttleMapping[i]);\n                        weft_systems.push(input_draft.rowSystemMapping[i]);\n                    }else{\n                        pattern.pushWeftSequence(rev.val())\n                        weft_materials.push(input_draft.rowShuttleMapping[i]);\n                        weft_systems.push(input_draft.rowSystemMapping[i]);\n                        pattern.unshiftWeftSequence(rev.val())\n                        weft_materials.unshift(input_draft.rowShuttleMapping[i]);\n                        weft_systems.unshift(input_draft.rowSystemMapping[i]);\n\n                    }\n                }\n            \n\n\n            \n            break;              \n          }\n\n    \n\n\n  let d = initDraftFromDrawdown(pattern.export())\n    d.colShuttleMapping = warp_mats.val();\n    d.colSystemMapping = warp_systems.val();\n    d.rowShuttleMapping = weft_materials.val();\n    d.rowSystemMapping = weft_systems.val();\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'symmetric('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const makesymmetric: Operation = {name, old_names, params, inlets, perform, generateName};","import { Draft, NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, initDraftWithParams, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\nconst name = \"margin\";\nconst old_names = [];\n\n//PARAMS\nconst starting_pics:NumParam =  \n{name: 'starting pics',\nmin: 0,\nmax: 10000,\nvalue: 12,\ntype: 'number',\ndx: 'number of pics to add to the bottom of the draft'\n}\n\nconst ending_pics:NumParam = {\n    name: 'ending pics',\n      min: 0,\n      max: 10000,\n      value: 12,\n      type: 'number',\n      dx: 'number of pics to add to the end of the draft'\n}\n\nconst starting_ends:NumParam =  \n{name: 'starting ends',\nmin: 0,\nmax: 10000,\nvalue: 12,\ntype: 'number',\ndx: 'number of ends to add to the start of the draft'\n}\n\nconst ending_ends:NumParam = {\n    name: 'ending ends',\n      min: 0,\n      max: 10000,\n      value: 12,\n      type: 'number',\n      dx: 'number of ends to add to the end of the draft'\n}\n\n\n\n\n\nconst params = [starting_pics, ending_pics, starting_ends, ending_ends];\n\n//INLETS\nconst draft: OperationInlet = {\n    name: 'draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to add margins to',\n    num_drafts: 1\n}\n\n  const selvedge_draft: OperationInlet = {\n    name: 'margin', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to repeat within the margins',\n    num_drafts: 1\n  }\n\n\n  const inlets = [draft, selvedge_draft];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) : Promise<Array<Draft>> => {\n\n    const base_drafts = getAllDraftsAtInlet(op_inputs, 0);\n    const margin_drafts = getAllDraftsAtInlet(op_inputs, 1);\n    const starting_pics = getOpParamValById(0, op_params);\n    const ending_pics = getOpParamValById(1, op_params);\n    const starting_ends = getOpParamValById(2, op_params);\n    const ending_ends = getOpParamValById(3, op_params);\n\n\n    if(base_drafts.length == 0 && margin_drafts.length == 0) return Promise.resolve([]);\n\n\n    let complete = new Sequence.TwoD();\n\n    let active_draft = (base_drafts.length > 0) ?base_drafts[0] : initDraftWithParams({warps: 1, wefts: 1});\n\n    let margin_draft = (margin_drafts.length > 0) ?margin_drafts[0] : initDraftWithParams({warps: 1, wefts: 1});\n    \n   \n\n    let width = warps(active_draft.drawdown) + starting_ends + ending_ends;\n\n    let height = wefts(active_draft.drawdown) + ending_pics + starting_pics;\n\n    let warp_systems = new Sequence.OneD(active_draft.colSystemMapping).resize(width).shift(starting_ends);\n\n    let warp_mats = new Sequence.OneD(active_draft.colShuttleMapping).resize(width).shift(starting_ends);\n\n    let weft_systems = new Sequence.OneD(active_draft.rowSystemMapping).resize(height).shift(starting_pics);\n\n    let weft_materials = new Sequence.OneD(active_draft.rowShuttleMapping).resize(height).shift(starting_pics);\n\n    let pattern = new Sequence.TwoD();\n\n    //start with starting pics\n    for(let i = 0; i < height; i++){\n\n        let seq = new Sequence.OneD();\n\n        if(i < starting_pics){\n\n            seq.import(margin_draft.drawdown[i%wefts(margin_draft.drawdown)])\n            .resize(width);\n        }else if(i < starting_pics + wefts(active_draft.drawdown)){\n\n            //adjust the start of the margin draft so it starts at the same index as the original\n            let adj_i = i - starting_pics;\n\n            const left_margin = new Sequence.OneD().pushRow(margin_draft.drawdown[i%wefts(margin_draft.drawdown)])\n            .resize(starting_ends);\n\n            const center = new Sequence.OneD().pushRow(active_draft.drawdown[adj_i%wefts(active_draft.drawdown)])\n\n            //shift this so it sequences at the same rate as the other margin rows\n            let shift_i = (starting_ends + warps(active_draft.drawdown)) % warps(margin_draft.drawdown);\n\n            shift_i = warps(margin_draft.drawdown) - shift_i;\n\n            const right_margin = new Sequence.OneD().pushRow(margin_draft.drawdown[i%wefts(margin_draft.drawdown)])\n            .resize(ending_ends).shift(shift_i);\n            \n\n            seq\n            .pushRow(left_margin.val())\n            .pushRow(center.val())\n            .pushRow(right_margin.val());\n\n        }else{\n            seq.import(margin_draft.drawdown[i%wefts(margin_draft.drawdown)])\n            .resize(width);\n        }\n\n\n        pattern.pushWeftSequence(seq.val())\n\n    }\n\n\n\n    let d = initDraftFromDrawdown(pattern.export());\n    d.colShuttleMapping = warp_mats.val();\n    d.colSystemMapping = warp_systems.val();\n    d.rowShuttleMapping = weft_materials.val();\n    d.rowSystemMapping = weft_systems.val();\n\n\n\n    return Promise.resolve([d]);\n\n};   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n    let r = getAllDraftsAtInlet(op_inputs, 0);\n    let name_list = parseDraftNames(r);\n  return name_list+\"+margin\";\n}\n\n\nexport const margin: Operation = {name, old_names, params, inlets, perform, generateName};\n\n","import { createCell } from \"../../model/cell\";\nimport { NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\n\nconst name = \"mask\";\nconst old_names = ['mask','mask, (a,b) => (a AND b)'];\n\n//PARAMS\n\nconst shift_ends:NumParam =\n{name: 'shift ends',\ntype: 'number',\nmin: 0,\nmax: 10000,\nvalue: 0,\ndx:''\n};\n\nconst shift_pics:NumParam =\n{name: 'shift pics',\ntype: 'number',\nmin: 0,\nmax: 10000,\nvalue: 0,\ndx:''\n};\n\nconst params = [shift_ends, shift_pics];\n\n//INLETS\nconst draft_a: OperationInlet = {\n    name: 'a', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'all the drafts you would like to like to mask',\n    num_drafts: 1\n  }\n\n  const draft_b: OperationInlet = {\n    name: 'b', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the mask you are applying to this draft',\n    num_drafts: 1\n  }\n\n  const inlets = [draft_a, draft_b];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft_a = getAllDraftsAtInlet(op_inputs, 0);\n  let input_draft_b = getAllDraftsAtInlet(op_inputs, 1);\n  let shift_ends = getOpParamValById(0, op_params);\n  let shift_pics = getOpParamValById(1, op_params);\n\n   if(input_draft_a.length == 0 && input_draft_b.length == 0) return Promise.resolve([]);\n\n   let draft_a = (input_draft_a.length == 0) ? initDraftFromDrawdown([[createCell(null)]]) : input_draft_a[0];\n   let draft_b = (input_draft_b.length == 0) ? initDraftFromDrawdown([[createCell(null)]]) : input_draft_b[0];\n\n\n    let height = Math.max(wefts(draft_b.drawdown) + shift_pics, wefts(draft_a.drawdown));\n    let width = Math.max(warps(draft_b.drawdown) + shift_ends, warps(draft_a.drawdown));\n\n\n    //offset draft b:\n    let pattern_b = new Sequence.TwoD();\n    for(let i = 0; i < height; i++ ){\n        let seq = new Sequence.OneD();\n        if(i < shift_pics){\n            seq.pushMultiple(2, width);\n        }else if(i < (shift_pics + wefts(draft_b.drawdown))){\n            seq.pushMultiple(2, shift_ends).pushRow(draft_b.drawdown[i-shift_pics]);\n            let remaining = width - (warps(draft_b.drawdown) + shift_ends);\n            if(remaining > 0) seq.pushMultiple(2, remaining);\n        }else{\n            seq.pushMultiple(2, width);\n        }\n        pattern_b.pushWeftSequence(seq.val());\n    }\n\n    //make sure pattern a is the same size\n    let pattern_a = new Sequence.TwoD();\n    for(let i = 0; i < height; i++ ){\n        let seq = new Sequence.OneD();\n        if(i < wefts(draft_a.drawdown)){\n            seq.pushRow(draft_a.drawdown[i]);\n            let remaining = width - draft_a.drawdown[i].length;\n            if(remaining > 0) seq.pushMultiple(2, remaining);\n        }else{\n            seq.pushMultiple(2, width);\n        }\n        pattern_a.pushWeftSequence(seq.val());\n    }\n\n\n\n    let pattern = new Sequence.TwoD();\n    for(let i = 0; i < height; i++ ){\n        let seq_a = new Sequence.OneD(pattern_a.getWeft(i));\n        let seq_b = new Sequence.OneD(pattern_b.getWeft(i));\n        seq_a.computeFilter('and', seq_b);\n        pattern.pushWeftSequence(seq_a.val());\n    }\n\n\n\n\n\n     let d = initDraftFromDrawdown(pattern.export());\n    d = updateWeftSystemsAndShuttles(d, draft_a);\n    d = updateWarpSystemsAndShuttles(d, draft_a);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let amt = getOpParamValById(0, param_vals);\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'mask'+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const mask: Operation = {name, old_names, params, inlets, perform, generateName};","import { createCell } from \"../../model/cell\";\nimport { NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\n\nconst name = \"overlay\";\nconst old_names = ['overlay','overlay, (a,b) => (a OR b)'];\n\n//PARAMS\n\nconst shift_ends:NumParam =\n{name: 'shift ends',\ntype: 'number',\nmin: 0,\nmax: 10000,\nvalue: 0,\ndx:''\n};\n\nconst shift_pics:NumParam =\n{name: 'shift pics',\ntype: 'number',\nmin: 0,\nmax: 10000,\nvalue: 0,\ndx:''\n};\n\nconst params = [shift_ends, shift_pics];\n\n//INLETS\nconst draft_a: OperationInlet = {\n    name: 'a', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'all the drafts you would like to overlay another onto',\n    num_drafts: 1\n  }\n\n  const draft_b: OperationInlet = {\n    name: 'b', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft you would like to overlay onto the base',\n    num_drafts: 1\n  }\n\n  const inlets = [draft_a, draft_b];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft_a = getAllDraftsAtInlet(op_inputs, 0);\n  let input_draft_b = getAllDraftsAtInlet(op_inputs, 1);\n  let shift_ends = getOpParamValById(0, op_params);\n  let shift_pics = getOpParamValById(1, op_params);\n\n   if(input_draft_a.length == 0 && input_draft_b.length == 0) return Promise.resolve([]);\n\n   let draft_a = (input_draft_a.length == 0) ? initDraftFromDrawdown([[createCell(null)]]) : input_draft_a[0];\n   let draft_b = (input_draft_b.length == 0) ? initDraftFromDrawdown([[createCell(null)]]) : input_draft_b[0];\n\n\n    let height = Math.max(wefts(draft_b.drawdown) + shift_pics, wefts(draft_a.drawdown));\n    let width = Math.max(warps(draft_b.drawdown) + shift_ends, warps(draft_a.drawdown));\n\n\n    //offset draft b:\n    let pattern_b = new Sequence.TwoD();\n    for(let i = 0; i < height; i++ ){\n        let seq = new Sequence.OneD();\n        if(i < shift_pics){\n            seq.pushMultiple(2, width);\n        }else if(i < (shift_pics + wefts(draft_b.drawdown))){\n            seq.pushMultiple(2, shift_ends).pushRow(draft_b.drawdown[i-shift_pics]);\n            let remaining = width - (warps(draft_b.drawdown) + shift_ends);\n            if(remaining > 0) seq.pushMultiple(2, remaining);\n        }else{\n            seq.pushMultiple(2, width);\n        }\n        pattern_b.pushWeftSequence(seq.val());\n    }\n\n    //make sure pattern a is the same size\n    let pattern_a = new Sequence.TwoD();\n    for(let i = 0; i < height; i++ ){\n        let seq = new Sequence.OneD();\n        if(i < wefts(draft_a.drawdown)){\n            seq.pushRow(draft_a.drawdown[i]);\n            let remaining = width - draft_a.drawdown[i].length;\n            if(remaining > 0) seq.pushMultiple(2, remaining);\n        }else{\n            seq.pushMultiple(2, width);\n        }\n        pattern_a.pushWeftSequence(seq.val());\n    }\n\n\n\n    let pattern = new Sequence.TwoD();\n    for(let i = 0; i < height; i++ ){\n        let seq_a = new Sequence.OneD(pattern_a.getWeft(i));\n        let seq_b = new Sequence.OneD(pattern_b.getWeft(i));\n        seq_a.computeFilter('or', seq_b);\n        pattern.pushWeftSequence(seq_a.val());\n    }\n\n\n\n\n\n     let d = initDraftFromDrawdown(pattern.export());\n    d = updateWeftSystemsAndShuttles(d, draft_a);\n    d = updateWarpSystemsAndShuttles(d, draft_a);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let amt = getOpParamValById(0, param_vals);\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'overlay'+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const overlay: Operation = {name, old_names, params, inlets, perform, generateName};","import { createCell } from \"../../model/cell\";\nimport { NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"overlay_multiple\";\nconst old_names = [];\n\n//PARAMS\n\n\nconst params = [];\n\n//INLETS\nconst drafts: OperationInlet = {\n    name: 'input_drafts', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'all the drafts you would like to overlay another onto',\n    num_drafts: -1\n  }\n\n\n\n  const inlets = [drafts];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n\n   if(drafts.length == 0) return Promise.resolve([]);\n\n   let sys_seq = new Sequence.OneD([0]);\n\n   let composite = new Sequence.TwoD().setBlank(2\n    );\n\n   drafts.forEach((draft, ndx) => {\n    let seq = new Sequence.TwoD().import(draft.drawdown);\n    seq.mapToSystems([0], [0], sys_seq, sys_seq);\n    composite.overlay(seq, true);\n   })\n\n\n    let d = initDraftFromDrawdown(composite.export());\n    d = updateWeftSystemsAndShuttles(d, drafts[0]);\n    d = updateWarpSystemsAndShuttles(d, drafts[0]);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'overlay_multi'+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const overlay_multi: Operation = {name, old_names, params, inlets, perform, generateName};","import { NumParam, Operation, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown } from \"../../model/drafts\";\nimport { getOpParamValById } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"random\";\nconst old_names = [];\n\n//PARAMS\nconst ends:NumParam =  \n    {name: 'ends',\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 6,\n    dx: \"\"\n};\n\nconst pics: NumParam = \n    {name: 'pics',\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 6,\n    dx:\"\"\n}\n\nconst pcent: NumParam = \n    {name: 'percent warp raised',\n    type: 'number',\n    min: 1,\n    max: 100,\n    value: 50,\n    dx: 'percentage of warps raised to be used'\n    };\n\n\nconst params = [ends, pics, pcent];\n\n//INLETS\n\n  const inlets = [];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const ends: number = getOpParamValById(0, param_vals);\n      const pics: number = getOpParamValById(1, param_vals);;\n      const pcent: number = getOpParamValById(2, param_vals);\n     \n      let pattern = new Sequence.TwoD();\n\n      for(let i = 0; i < pics; i++){\n        let row = new Sequence.OneD();\n        for(let j = 0; j < ends; j++){\n            const rand: number = Math.random() * 100;\n            if(rand > pcent) row.push(0);\n            else row.push(1);\n        }\n        pattern.pushWeftSequence(row.val());\n\n      }\n\n      return Promise.resolve([initDraftFromDrawdown(pattern.export())]);\n\n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n    const pcent: number = getOpParamValById(2, param_vals);\n\n  return 'random'+pcent;\n}\n\n\nexport const random: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { Drawdown, NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"rectangle\";\nconst old_names = [];\n\n//PARAMS\nconst ends:NumParam =  \n    {name: 'ends',\n    type: 'number',\n    min: 1,\n    max: 500,\n    value: 10,\n    dx: \"\"\n    };\n\nconst pics: NumParam = \n    {name: 'pics',\n    type: 'number',\n    min: 1,\n    max: 500,\n    value: 10,\n    dx: \"\"\n    }\n\nconst params = [ends, pics];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'input draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft with which you would like to fill this rectangle',\n    num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft = getInputDraft(op_inputs);\n  let w = getOpParamValById(0, op_params);\n  let h = getOpParamValById(1, op_params);\n\n  let seq = new Sequence.TwoD();\n  if(input_draft !== null) seq.import(input_draft.drawdown);\n  else seq.setBlank();\n\n  let dd: Drawdown = seq.fill(w,h).export();\n  let d = initDraftFromDrawdown(dd);\n  d = updateWeftSystemsAndShuttles(d, input_draft);\n  d = updateWarpSystemsAndShuttles(d, input_draft);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'rect('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const rect: Operation = {name, old_names, params, inlets, perform, generateName};","import { getCellValue } from \"../../model/cell\";\nimport { Drawdown, NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getHeddle, initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"resize\";\nconst old_names = [];\n\n//PARAMS\nconst ends:NumParam =  \n{name: 'ends',\ntype: 'number',\nmin: 1,\nmax: 10000,\nvalue: 100,\ndx: ''\n};\n\nconst pics: NumParam = {\n    name: 'pics',\n    type: 'number',\n    min: 1,\n    max: 10000,\n    value: 100,\n    dx: 'number of wefts to resize to'\n}\n\n\nconst params = [ends, pics];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'draft', \n    type: 'static',\n    value: null,\n    dx: 'the draft to resize',\n    uses: \"draft\",\n    num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n\n  let input = getInputDraft(op_inputs);\n   if(input == null) return Promise.resolve([]);\n\n\n  let ends = getOpParamValById(0, op_params);\n  let pics = getOpParamValById(1, op_params);\n\n  const weft_factor = wefts(input.drawdown) / pics ;\n  const warp_factor = warps(input.drawdown) / ends;\n\n  let pattern = new Sequence.TwoD();\n\n  let weft_mats = new Sequence.OneD();\n  let weft_sys = new Sequence.OneD();\n  let warp_mats = new Sequence.OneD();\n  let warp_sys = new Sequence.OneD();\n\n   for(let i = 0; i < pics; i++){\n    let seq = new Sequence.OneD();\n    let adj_i = Math.floor(i*weft_factor);\n    weft_mats.push(input.rowShuttleMapping[adj_i]);\n    weft_sys.push(input.rowSystemMapping[adj_i]);\n\n    for(let j=0; j < ends; j++){\n        let adj_j = Math.floor(j*warp_factor);\n        seq.push(getHeddle(input.drawdown, adj_i, adj_j));\n    }\n    pattern.pushWeftSequence(seq.val());\n\n   }\n    \n    for(let j=0; j < ends; j++){\n        let adj_j = Math.floor(j*warp_factor);\n        warp_mats.push(input.colShuttleMapping[adj_j]);\n        warp_sys.push(input.colSystemMapping[adj_j]);\n    }\n\n\n\n\n  let d = initDraftFromDrawdown(pattern.export());\n  d.colShuttleMapping = warp_mats.val();\n  d.colSystemMapping = warp_sys.val();\n  d.rowShuttleMapping = weft_mats.val();\n  d.rowSystemMapping = weft_sys.val();\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'resize('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const resize: Operation = {name, old_names, params, inlets, perform, generateName};","import { BoolParam, Draft, Operation, OperationInlet, OpInput, OpParamVal, SelectParam } from \"../../model/datatypes\";\nimport { getHeddle, initDraftFromDrawdown, initDraftWithParams, setHeddle, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"rotate\";\nconst old_names = [];\n\n//PARAMS\n\nconst amt:SelectParam ={\n        name: 'amount',\n        type: 'select',\n        selectlist: [\n        {name: '90', value: 0},\n        {name: '180', value: 1},\n        {name: '270', value: 2},\n        ],\n        value: 0,\n        dx: 'corner to which this draft is rotated around 0 is top left, 1 top right, 2 bottom right, 3 bottom left'\n}\n\nconst rotate_materials: BoolParam = {\n        name: 'materials?',\n        type: 'boolean',\n        falsestate: 'no, don\\'t rotate materials',\n        truestate: 'yes, rotate materials',\n        value: 1, \n        dx: 'if your draft has materials assigned, you can choose wether you want to rotate the draft or the materials only'\n\n      }\n\n\nconst params = [amt, rotate_materials];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to rotate',\n    num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let draft = getInputDraft(op_inputs);\n  const num_rots = getOpParamValById(0, op_params);\n  const rotate_mats = (getOpParamValById(1, op_params) === 0) ? false : true;\n\n   if(draft == null) return Promise.resolve([]);\n\n\n   let seq = new Sequence.TwoD();\n\n   switch(num_rots){\n\n    case 0:\n\n    draft.drawdown.forEach((row, i) => {\n        let r = new Sequence.OneD().import(row).reverse();\n        seq.pushWarpSequence(r.val());\n\n    });\n    break;\n\n    case 1:\n    draft.drawdown.forEach((row, i) => {\n        let r = new Sequence.OneD().import(row).reverse();\n        seq.unshiftWeftSequence(r.val());\n    })\n\n    break;\n    case 2:\n\n    draft.drawdown.forEach((row, i) => {\n        let r = new Sequence.OneD().import(row);\n        seq.unshiftWarpSequence(r.val());\n    })\n\n\n    break;\n\n   }\n\n   let weft_materials = new Sequence.OneD().import(draft.rowShuttleMapping);\n   let weft_systems = new Sequence.OneD().import(draft.rowSystemMapping);\n   let warp_materials = new Sequence.OneD().import(draft.colShuttleMapping);\n   let warp_systems = new Sequence.OneD().import(draft.colSystemMapping);\n\n   const d = initDraftFromDrawdown(seq.export());\n\n   if(rotate_mats){\n    switch(num_rots){\n\n        case 0:\n\n        d.rowShuttleMapping =  warp_materials.reverse().val();\n        d.rowSystemMapping =  warp_systems.reverse().val();\n        d.colShuttleMapping = weft_materials.val();\n        d.colSystemMapping = weft_systems.val();\n\n\n        break;\n\n        case 1:\n        d.rowShuttleMapping =  weft_materials.reverse().val();\n        d.rowSystemMapping =  weft_systems.reverse().val();\n        d.colShuttleMapping = warp_materials.reverse().val();\n        d.colSystemMapping = warp_systems.reverse().val();\n\n\n        break;\n        case 2:\n\n        d.rowShuttleMapping =  warp_materials.val();\n        d.rowSystemMapping =  warp_systems.val();\n        d.colShuttleMapping = weft_materials.reverse().val();\n        d.colSystemMapping = weft_systems.reverse().val();\n\n\n\n        break;\n\n     }\n    }else{\n\n        d.rowShuttleMapping =  weft_materials.resize(wefts(d.drawdown)).val();\n        d.rowSystemMapping =  weft_systems.resize(wefts(d.drawdown)).val();\n        d.colShuttleMapping = warp_materials.resize(warps(d.drawdown)).val();\n        d.colSystemMapping = warp_systems.resize(warps(d.drawdown)).val();\n       \n    }\n\n\n\n\n   return Promise.resolve([d]);\n \n\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'rotate('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const rotate: Operation = {name, old_names, params, inlets, perform, generateName};","import { Draft, DynamicOperation, OperationInlet, OpInput, OpParamVal, StringParam } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, reduceToStaticInputs } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\n\nconst name = \"sample_length\";\nconst old_names = [\"\"];\nconst dynamic_param_id = 0;\nconst dynamic_param_type = 'profile';\n\n//PARAMS\nconst pattern:StringParam =  \n{name: 'pattern',\ntype: 'string',\nvalue: 'a20 b20 a40 b40',\nregex:/(?:[a-xA-Z][\\d]*[\\ ]*).*?/, //NEVER USE THE GLOBAL FLAG - it will throw errors randomly\nerror: 'invalid entry',\ndx: 'all entries must be a single letter followed by a number, which each letter-number unit separated by a space'\n  }\n\n\n\n\nconst params = [pattern];\n\n//INLETS\nconst systems: OperationInlet = {\n    name: 'warp pattern', \n    type: 'static',\n    value: null,\n    uses: \"warp-data\",\n    dx: 'optional, define a custom weft material or system pattern here',\n    num_drafts: 1\n  }\n\n  const inlets = [systems];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const original_string = getOpParamValById(0, op_params);\n      const system_data = getAllDraftsAtInlet(op_inputs, 0);\n      const original_string_split = utilInstance.parseRegex(original_string, (<StringParam>op_params[0].param).regex);\n      \n      if(original_string_split == null || original_string_split.length == 0) return Promise.resolve([]);\n\n      if(op_inputs.length == 0) return Promise.resolve([]);\n     \n      //now just get all the drafts\n        const all_drafts: Array<Draft> = op_inputs\n        .filter(el => el.inlet_id > 0)\n        .reduce((acc, el) => {\n            el.drafts.forEach(draft => {acc.push(draft)});\n            return acc;\n        }, []);\n\n        let total_warps: number = 0;\n        const all_warps = all_drafts.map(el => warps(el.drawdown)).filter(el => el > 0);\n        total_warps = utilInstance.lcm(all_warps);\n  \n        const profile_draft_map = op_inputs\n        .map(el => {\n          return  {\n            id: el.inlet_id, \n            val: (el.params[0]).toString(),\n            draft: el.drafts[0]\n          }\n        });\n\n        console.log(\"profile draft map\", profile_draft_map)\n        let pattern = new Sequence.TwoD();\n        let warp_systems = new Sequence.OneD();\n        let warp_mats = new Sequence.OneD();\n        let weft_systems = new Sequence.OneD();\n        let weft_materials = new Sequence.OneD();\n\n        if(system_data.length == 0){\n            warp_systems.import(all_drafts[0].colSystemMapping).resize(total_warps);\n            warp_mats.import(all_drafts[0].colShuttleMapping).resize(total_warps);\n        }else{\n            warp_systems.import(system_data[0].colSystemMapping).resize(total_warps);\n            warp_mats.import(system_data[0].colShuttleMapping).resize(total_warps);\n\n        }\n\n        original_string_split.forEach(string_id => {\n            const label = string_id.charAt(0);\n            const qty = parseInt((<string>string_id).substring(1))\n\n            let pdm_item = profile_draft_map.find(el => el.val == label.toString());\n            if(pdm_item !== undefined){\n                let draft = pdm_item.draft;\n           \n                for(let i = 0; i < qty; i++){\n                    let row = draft.drawdown[i%wefts(draft.drawdown)];\n\n                    let seq = new Sequence.OneD().import(row).resize(total_warps);\n                    pattern.pushWeftSequence(seq.val());\n                    weft_materials.push(draft.rowShuttleMapping[i%draft.rowShuttleMapping.length]);\n                    weft_systems.push(draft.rowSystemMapping[i%draft.rowSystemMapping.length]);\n                }\n\n             }\n\n\n        })\n\n       let d: Draft = initDraftFromDrawdown(pattern.export());\n       d.colShuttleMapping = warp_mats.val();\n       d.colSystemMapping = warp_systems.val();\n       d.rowShuttleMapping = weft_materials.val();\n       d.rowSystemMapping = weft_systems.val();\n\n      \n      return  Promise.resolve([d]);\n\n  }   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  return 'sample across length:'+param_vals[0].val+\"\";\n}\n\n\nconst onParamChange = (param_vals: Array<OpParamVal>, inlets: Array<OperationInlet>, inlet_vals: Array<any>, changed_param_id: number, param_val: any) : Array<any> => {\n    \n\n  \n    inlet_vals = reduceToStaticInputs(inlets, inlet_vals);\n    const param_regex = (<StringParam> param_vals[0].param).regex;\n\n    let matches = [];\n\n    matches = utilInstance.parseRegex(param_val,param_regex);\n    matches = matches.map(el => el.charAt(0));\n    matches = utilInstance.filterToUniqueValues(matches);\n\n    \n    matches.forEach(el => {\n      inlet_vals.push(el);\n    })\n\n    return inlet_vals;\n\n\n\n}\n\n\n\nexport const sample_length: DynamicOperation = {name, old_names, params, inlets, dynamic_param_id, dynamic_param_type, perform, generateName,onParamChange};","import { Draft, DynamicOperation, OperationInlet, OpInput, OpParamVal, StringParam } from \"../../model/datatypes\";\nimport { getCol, initDraftFromDrawdown, warps } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, reduceToStaticInputs } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\n\nconst name = \"sample_width\";\nconst old_names = [\"\"];\nconst dynamic_param_id = 0;\nconst dynamic_param_type = 'profile';\n\n//PARAMS\nconst pattern:StringParam =  \n    {name: 'pattern',\n    type: 'string',\n    value: 'a20 b20 a40 b40',\n    regex:/(?:[a-xA-Z][\\d]*[\\ ]*).*?/, //NEVER USE THE GLOBAL FLAG - it will throw errors randomly\n    error: 'invalid entry',\n    dx: 'all entries must be a single letter followed by a number, which each letter-number unit separated by a space'\n  }\n\n\n\n\nconst params = [pattern];\n\n//INLETS\nconst systems: OperationInlet = {\n    name: 'warp pattern', \n    type: 'static',\n    value: null,\n    uses: \"warp-data\",\n    dx: 'optional, define a custom warp material or system pattern here',\n    num_drafts: 1\n  }\n\n  const inlets = [systems];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const original_string = getOpParamValById(0, op_params);\n      const system_data = getAllDraftsAtInlet(op_inputs, 0);\n      const original_string_split = utilInstance.parseRegex(original_string, (<StringParam>op_params[0].param).regex);\n      \n      if(original_string_split == null || original_string_split.length == 0) return Promise.resolve([]);\n\n      if(op_inputs.length == 0) return Promise.resolve([]);\n     \n      //now just get all the drafts\n        const all_drafts: Array<Draft> = op_inputs\n        .filter(el => el.inlet_id > 0)\n        .reduce((acc, el) => {\n            el.drafts.forEach(draft => {acc.push(draft)});\n            return acc;\n        }, []);\n\n        let total_wefts: number = 0;\n        const all_wefts = all_drafts.map(el => warps(el.drawdown)).filter(el => el > 0);\n        total_wefts = utilInstance.lcm(all_wefts);\n  \n        const profile_draft_map = op_inputs\n        .map(el => {\n          return  {\n            id: el.inlet_id, \n            val: el.params[0].toString(),\n            draft: el.drafts[0]\n          }\n        });\n\n        let pattern = new Sequence.TwoD();\n        let warp_systems = new Sequence.OneD();\n        let warp_mats = new Sequence.OneD();\n        let weft_systems = new Sequence.OneD();\n        let weft_materials = new Sequence.OneD();\n\n        if(system_data.length == 0){\n            weft_systems.import(all_drafts[0].rowSystemMapping).resize(total_wefts);\n            weft_materials.import(all_drafts[0].rowShuttleMapping).resize(total_wefts);\n        }else{\n            weft_systems.import(system_data[0].rowSystemMapping).resize(total_wefts);\n            weft_materials.import(system_data[0].rowShuttleMapping).resize(total_wefts);\n\n        }\n\n        original_string_split.forEach(string_id => {\n\n            const label = string_id.charAt(0);\n            const qty = parseInt((<string>string_id).substring(1))\n\n            let pdm_item = profile_draft_map.find(el => el.val == label.toString());\n            if(pdm_item !== undefined){\n                let draft = pdm_item.draft;\n           \n                for(let j = 0; j < qty; j++){\n                    let col = getCol(draft.drawdown, j%warps(draft.drawdown));\n                    let seq = new Sequence.OneD().import(col).resize(total_wefts);\n                    pattern.pushWarpSequence(seq.val());\n                    warp_mats.push(draft.colShuttleMapping[j%draft.colShuttleMapping.length]);\n                    warp_systems.push(draft.colSystemMapping[j%draft.colSystemMapping.length]);\n          \n                }\n\n             }\n\n\n        })\n\n       let d: Draft = initDraftFromDrawdown(pattern.export());\n       d.colShuttleMapping = warp_mats.val();\n       d.colSystemMapping = warp_systems.val();\n       d.rowShuttleMapping = weft_materials.val();\n       d.rowSystemMapping = weft_systems.val();\n\n      \n      return  Promise.resolve([d]);\n\n  }   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  \n  return 'pattern width:'+param_vals[0].val+\"\";\n}\n\n\nconst onParamChange = (param_vals: Array<OpParamVal>, inlets: Array<OperationInlet>, inlet_vals: Array<any>, changed_param_id: number, param_val: any) : Array<any> => {\n    \n    inlet_vals = reduceToStaticInputs(inlets, inlet_vals);\n    const param_regex = (<StringParam> param_vals[0].param).regex;\n\n    let matches = [];\n\n    matches = utilInstance.parseRegex(param_val,param_regex);\n    matches = matches.map(el => el.charAt(0));\n    matches = utilInstance.filterToUniqueValues(matches);\n\n    \n    matches.forEach(el => {\n      inlet_vals.push(el);\n    })\n\n    return inlet_vals;\n\n\n}\n\n\n\nexport const sample_width: DynamicOperation = {name, old_names, params, inlets, dynamic_param_id, dynamic_param_type, perform, generateName,onParamChange};","import { BoolParam, NumParam, Operation, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown} from \"../../model/drafts\";\nimport { getOpParamValById } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"satin\";\nconst old_names = [];\n\n//PARAMS\nconst repeat:NumParam =  \n    {\n    name: 'repeat',\n    type: 'number',\n    min: 5,\n    max: 100,\n    value: 5,\n    dx: 'the width and height of the pattern'\n    }\n\nconst shift: NumParam = \n  {name: 'shift',\n  type: 'number',\n  min: 1,\n  max: 100,\n  value: 2,\n  dx: 'the move number on each row'\n  }\n\nconst facing: BoolParam = \n    {name: 'facing',\n    type: 'boolean',\n    falsestate: \"weft facing\",\n    truestate: \"warp facing\",\n    value: 0,\n    dx: ''\n    }\n\n\n\nconst params = [repeat, shift, facing];\n\n//INLETS\n\n  const inlets = [];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const repeat: number = getOpParamValById(0, param_vals);\n      const shift: number = getOpParamValById(1, param_vals);\n      const facing: number = getOpParamValById(2, param_vals);\n\n\n      let first_row = new Sequence.OneD();\n      first_row.push(1);\n\n      for(let j = 0; j < repeat-1; j++){\n        first_row.push(0);\n      }\n\n      if(facing) first_row.invert();\n\n\n      let pattern = new Sequence.TwoD();\n      for(let i = 0; i < repeat; i++){\n        pattern.pushWeftSequence(first_row.shift(shift).val());\n      }\n\n\n      return Promise.resolve([initDraftFromDrawdown(pattern.export())]);\n\n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n    const repeat: number = getOpParamValById(0, param_vals);\n    const shift: number = getOpParamValById(1, param_vals);\n    const facing: number = getOpParamValById(2, param_vals);\n    const dir: string = (facing) ? \"Warp Faced\" : \"Weft Faced\";\n  return repeat+\"/\"+shift+dir+' Satin';\n}\n\n\nexport const satin: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { BoolParam, NumParam, Operation, OpInput, OpParamVal, StringParam } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown } from \"../../model/drafts\";\nimport { getOpParamValById } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"satinish\";\nconst old_names = [];\n\n//PARAMS\nconst string_input:StringParam =  \n    {name: 'pattern',\n    type: 'string',\n    regex: /(\\d+)/,\n    value: '2 2 3 3',\n    error: '',\n    dx: 'the under over pattern of this twill'\n};\n\nconst shift: NumParam = \n  {name: 'shift',\n  type: 'number',\n  min: 1,\n  max: 100,\n  value: 2,\n  dx: 'the move number on each row'\n}\n\nconst sz: BoolParam = \n        {name: 'S/Z',\n        type: 'boolean',\n        falsestate: 'S',\n        truestate: 'Z',\n        value: 0,\n        dx: ''\n        }\n\n\n\nconst params = [string_input, shift, sz];\n\n//INLETS\n\n  const inlets = [];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const input_string: string = getOpParamValById(0, param_vals);\n      const shift: number = getOpParamValById(1, param_vals);\n\n      const sz: number = getOpParamValById(2, param_vals);\n\n      const input_array: Array<number> = input_string.split(' ').map(el => parseInt(el));\n\n      let size: number =input_array.reduce( (acc, val) => {\n        return val + acc;\n    }, 0);\n\n\n      let first_row = new Sequence.OneD();\n      let under = true;\n      input_array.forEach(input => {\n        first_row.pushMultiple(under, input);\n        under = !under;\n      })\n\n      let pattern = new Sequence.TwoD();\n      let shift_dir = (sz) ? -1*shift : 1*shift;\n      for(let i = 0; i < size; i++){\n        pattern.pushWeftSequence(first_row.shift(shift_dir).val());\n      }\n\n\n      return Promise.resolve([initDraftFromDrawdown(pattern.export())]);\n\n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  return 'shifty';\n}\n\n\nexport const satinish: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { NumParam, Operation, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown } from \"../../model/drafts\";\nimport { getOpParamValById } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"sawtooth\";\nconst old_names = [];\n\n//PARAMS\nconst width:NumParam =  \n    {name: 'ends',\n    type: 'number',\n    min: 1,\n    max: 10000,\n    value: 100,\n    dx: \"the total ends of the draft\"\n};\n\n\nconst amplitude: NumParam = \n    {name: 'pics',\n    type: 'number',\n    min: 1,\n    max: 10000,\n    value: 20,\n    dx: \"the total number of pics for the saw path to move through\"\n}\n\nconst segments: NumParam = \n        {name: 'segments',\n        type: 'number',\n        min: 1,\n        max: 10000,\n        value: 1,\n        dx: \"the total number of segments, each segment represents one half of the saw tooth's path \"\n        }\n\n\n\n\n\nconst params = [width, amplitude, segments];\n\n//INLETS\n\n  const inlets = [];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const warpnum: number = getOpParamValById(0, param_vals);\n      const pics: number = getOpParamValById(1, param_vals);\n      const peaks: number = getOpParamValById(2, param_vals);\n    \n    \n      const run = (warpnum/peaks);\n      const slope = pics /run;\n\n    let pattern = new Sequence.TwoD();\n      for(let j = 0; j < warpnum; j++){\n        let x = j % Math.floor(run*2);\n        let i = Math.floor(slope * x);\n        let seq = new Sequence.OneD().pushMultiple(0, pics);\n\n        if(i < pics)  seq.set(i, 1);\n        else seq.set((pics-1)-(i-pics), 1); \n        pattern.pushWarpSequence(seq.val())\n      }\n\n      return Promise.resolve([initDraftFromDrawdown(pattern.export())]);\n\n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  return 'sawtooth';\n}\n\n\nexport const sawtooth: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { Draft, NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getHeddle, initDraftFromDrawdown, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\nconst name = \"selvedge\";\nconst old_names = [];\n\n//PARAMS\nconst ends:NumParam =  \n{name: 'ends',\ntype: 'number',\nmin: 1,\nmax: 100,\nvalue: 12,\ndx: \"the number of ends of selvedge on each side of the cloth\"\n}\n\nconst right_shift:NumParam =  \n{name: 'right shift',\ntype: 'number',\nmin: 0,\nmax: 100,\nvalue: 0,\ndx: \"the number of pics to shift the right side by to ensure the ends catch\"\n}\n\n\n\n\n\nconst params = [ends, right_shift];\n\n//INLETS\nconst draft: OperationInlet = {\n    name: 'draft',\n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: \"the draft that will have a selvedge added\",\n    num_drafts: 1\n}\n\n  const selvedge_draft: OperationInlet = {\n    name: 'selvedge',\n    type: 'static',\n    value: null,\n    dx: \"the pattern to use for the selvedge\",\n    uses: \"draft\",\n    num_drafts: 1\n  }\n\n\n  const inlets = [draft, selvedge_draft];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) : Promise<Array<Draft>> => {\n\n    const draft = getAllDraftsAtInlet(op_inputs, 0);\n    const sel = getAllDraftsAtInlet(op_inputs, 1);\n    const w = getOpParamValById(0, op_params);\n    const shift = getOpParamValById(1, op_params);\n\n    if(draft.length == 0 && sel.length == 0) return Promise.resolve([]);\n\n    if(draft.length == 0) return Promise.resolve(sel);\n    if(sel.length == 0) return Promise.resolve(draft);\n\n\n    let complete = new Sequence.TwoD();\n    let active_draft = draft[0];\n    let sel_draft = sel[0];\n    let sel_draft_warps = warps(sel_draft.drawdown);\n    let sel_draft_wefts = wefts(sel_draft.drawdown);\n    let warp_systems = [];\n    let warp_materials = [];\n\n    active_draft.drawdown.forEach((row, i) => {\n        let row_seq = new Sequence.OneD();\n\n        for(let j = 0; j < w; j++){\n            row_seq.push(getHeddle(sel_draft.drawdown,i%sel_draft_wefts,j%sel_draft_warps))\n            warp_materials.push(sel_draft.colShuttleMapping[j%sel_draft_warps]);\n            warp_systems.push(sel_draft.colSystemMapping[j%sel_draft_warps]);\n        }\n\n        for(let j = 0; j < row.length; j++){\n            row_seq.push(getHeddle(active_draft.drawdown,i,j))\n            warp_materials.push(active_draft.colShuttleMapping[j]);\n            warp_systems.push(active_draft.colSystemMapping[j]);\n        }\n\n        for(let j = 0; j < w; j++){\n            row_seq.push(getHeddle(sel_draft.drawdown,(i+shift)%sel_draft_wefts,j%sel_draft_warps));\n            warp_materials.push(sel_draft.colShuttleMapping[j%sel_draft_warps]);\n            warp_systems.push(sel_draft.colSystemMapping[j%sel_draft_warps]);\n        }\n\n        complete.pushWeftSequence(row_seq.val());\n\n\n    })\n\n    let d = initDraftFromDrawdown(complete.export());\n    d = updateWeftSystemsAndShuttles(d, active_draft);\n    d.colShuttleMapping = warp_materials.slice();\n    d.colSystemMapping = warp_systems.slice();\n\n\n    return Promise.resolve([d]);\n\n};   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n    let r = getAllDraftsAtInlet(op_inputs, 0);\n    let name_list = parseDraftNames(r);\n  return name_list+\"+selvedge\";\n}\n\n\nexport const selvedge: Operation = {name, old_names, params, inlets, perform, generateName};\n\n","import { create } from \"domain\";\nimport { createCell } from \"../../model/cell\";\nimport { BoolParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, initDraftWithParams, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"set unset\";\nconst old_names = ['unset'];\n\n//PARAMS\nconst liftlower: BoolParam = {\n    name: 'lift/lower',\n    type: 'boolean',\n    falsestate: 'unset to warp lift',\n    truestate: 'unset to warp lower',\n    value: 1,\n    dx: ''\n}\n\nconst params = [liftlower];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'input draft', \n    type: 'static',\n    value: null,\n    dx: 'the draft you would like to modify',\n    uses: \"draft\",\n    num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft = getInputDraft(op_inputs);\n  let set_up = getOpParamValById(0, op_params);\n  if(input_draft == null) return Promise.resolve([]);\n\n    let pattern = new Sequence.TwoD();\n\n    input_draft.drawdown.forEach(row =>{\n        let set = row.map(el => {\n            if(!el.is_set){\n                if(set_up == 1) return createCell(false);\n                else return createCell(true);\n            } \n            return el;\n        })\n\n        pattern.pushWeftSequence(new Sequence.OneD().import(set).val())\n    })\n\n\n  let d = initDraftFromDrawdown(pattern.export())\n  d = updateWeftSystemsAndShuttles(d, input_draft);\n  d = updateWarpSystemsAndShuttles(d, input_draft);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'set unset interlacements('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const set: Operation = {name, old_names, params, inlets, perform, generateName};","import { BoolParam, NumParam, Operation, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown} from \"../../model/drafts\";\nimport { getOpParamValById } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"shaded_satin\";\nconst old_names = [];\n\n//PARAMS\nconst warps_raised:NumParam =  {\n    name: 'warps raised',\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 2,\n    dx: 'the number of warps to raise on the first pic'\n}\n\nconst warps_lowered: NumParam = \n  {name: 'warps lowered',\n  type: 'number',\n  min: 0,\n  max: 100,\n  value: 5,\n  dx:\"the number of warps to keep lowered on the first pic\"\n  }\n\nconst shift: NumParam = {\nname: 'shift',\ntype: 'number',\nmin: 1,\nmax: 100,\nvalue: 2,\ndx: 'amount to offset the interlacements on each row'\n}\n\nconst facing: BoolParam = \n    {name: 'facing',\n    type: 'boolean',\n    falsestate: \"weft facing\",\n    truestate: \"warp facing\",\n    value: 0,\n    dx: ''\n    }\n\n\n\nconst params = [warps_raised, warps_lowered, shift, facing];\n\n//INLETS\n\n  const inlets = [];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const raised: number = getOpParamValById(0, param_vals);\n      const lowered: number = getOpParamValById(1, param_vals);\n      const shift: number = getOpParamValById(2, param_vals);\n      const facing: number = getOpParamValById(3, param_vals);\n\n\n      let first_row = new Sequence.OneD();\n      first_row.pushMultiple(1, raised).pushMultiple(0, lowered);\n\n\n      if(facing) first_row.invert();\n\n\n      let pattern = new Sequence.TwoD();\n      for(let i = 0; i < raised+lowered; i++){\n        pattern.pushWeftSequence(first_row.shift(shift).val());\n      }\n\n\n      return Promise.resolve([initDraftFromDrawdown(pattern.export())]);\n\n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n    const raised: number = getOpParamValById(0, param_vals);\n    const lowered: number = getOpParamValById(1,param_vals); \n  return raised+\"/\"+lowered+' Satin';\n}\n\n\nexport const shaded_satin: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getCol, initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n/**\n * this will be the default function going forward, as the others will be removed. \n */\n\nconst name = \"shift\";\nconst old_names = [];\n\n//PARAMS\n\nconst amt_x:NumParam =\n      {name: 'warps',\n      type: 'number',\n      min: 1,\n      max: 100,\n      value: 1,\n      dx: 'the amount of warps to shift by'\n      }\n\n    const amt_y:NumParam =\n    {name: 'wefts',\n    type: 'number',\n    min: 1,\n    max: 100,\n    value: 1,\n    dx: 'the amount of wefts to shift by'\n    }\n\n\nconst params = [amt_x, amt_y];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'draft', \n      type: 'static',\n      value: null,\n      dx: 'the draft to shift',\n      uses: \"draft\",\n      num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft = getInputDraft(op_inputs);\n  let amt_x = getOpParamValById(0, op_params);\n  let amt_y = getOpParamValById(1, op_params);\n\n   if(input_draft == null) return Promise.resolve([]);\n\n   let warp_systems = new Sequence.OneD(input_draft.colSystemMapping).shift(-amt_x);\n\n   let warp_mats = new Sequence.OneD(input_draft.colShuttleMapping).shift(-amt_x);\n\n   let weft_systems = new Sequence.OneD(input_draft.rowSystemMapping).shift(-amt_y);\n\n   let weft_materials = new Sequence.OneD(input_draft.rowShuttleMapping).shift(-amt_y);\n\n\n  let pattern = new Sequence.TwoD();\n\n  input_draft.drawdown.forEach(row => {\n    let seq = new Sequence.OneD().import(row).shift(-amt_x).val();\n    pattern.pushWeftSequence(seq);\n  })\n\n  let next_pattern = new Sequence.TwoD();\n\n  for(let j  =0; j < warps(input_draft.drawdown);j++){\n    let col = pattern.getWarp(j);\n    let seq = new Sequence.OneD().import(col).shift(-amt_y);\n    next_pattern.pushWarpSequence(seq.val());\n  }\n\n  let d = initDraftFromDrawdown(next_pattern.export());\n  d.colShuttleMapping = warp_mats.val();\n  d.colSystemMapping = warp_systems.val();\n  d.rowShuttleMapping = weft_materials.val();\n  d.rowSystemMapping = weft_systems.val();\n\n\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let amt_x = getOpParamValById(0, param_vals);\n  let amt_y = getOpParamValById(1, param_vals);\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'shift'+amt_x+'/'+amt_y+'('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const shift: Operation = {name, old_names, params, inlets, perform, generateName};","import { NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"shift left\";\nconst old_names = [];\n\n//PARAMS\n\nconst amt:NumParam =\n      {name: 'amount',\n      type: 'number',\n      min: 1,\n      max: 100,\n      value: 1,\n      dx: 'the amount of warps to shift by'\n      }\n\nconst params = [amt];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'draft', \n      type: 'static',\n      value: null,\n      dx: 'the draft to shift',\n      uses: \"draft\",\n      num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft = getInputDraft(op_inputs);\n  let amt = getOpParamValById(0, op_params);\n\n   if(input_draft == null) return Promise.resolve([]);\n\n  let pattern = new Sequence.TwoD();\n\n  input_draft.drawdown.forEach(row => {\n    let seq = new Sequence.OneD().import(row).shift(-amt).val();\n    pattern.pushWeftSequence(seq);\n  })\n\n  let d = initDraftFromDrawdown(pattern.export());\n  d = updateWeftSystemsAndShuttles(d, input_draft);\n  d = updateWarpSystemsAndShuttles(d, input_draft);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let amt = getOpParamValById(0, param_vals);\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'shift'+amt+'('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const shiftx: Operation = {name, old_names, params, inlets, perform, generateName};","import { NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getCol, initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"shift up\";\nconst old_names = [];\n\n//PARAMS\n\nconst amt:NumParam =\n      {name: 'amount',\n      type: 'number',\n      min: 1,\n      max: 100,\n      value: 1,\n      dx: 'the amount of wefts to shift by'\n      }\n\nconst params = [amt];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to shift',\n    num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft = getInputDraft(op_inputs);\n  let amt = getOpParamValById(0, op_params);\n\n   if(input_draft == null) return Promise.resolve([]);\n\n  let pattern = new Sequence.TwoD();\n\n  for(let j = 0; j < warps(input_draft.drawdown); j++){\n    const col = getCol(input_draft.drawdown, j);\n    let seq = new Sequence.OneD().import(col).shift(-amt).val();\n    pattern.pushWarpSequence(seq);\n\n  }\n  let d = initDraftFromDrawdown(pattern.export());\n  d = updateWeftSystemsAndShuttles(d, input_draft);\n  d = updateWarpSystemsAndShuttles(d, input_draft);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let amt = getOpParamValById(0, param_vals);\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'shifty'+amt+'('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const shifty: Operation = {name, old_names, params, inlets, perform, generateName};","import { NumParam, Operation, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown } from \"../../model/drafts\";\nimport { getOpParamValById } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"sine\";\nconst old_names = [];\n\n//PARAMS\nconst width:NumParam =  \n    {name: 'ends',\n    type: 'number',\n    min: 1,\n    max: 10000,\n    value: 100,\n    dx: \"the total ends of the draft\"\n};\n\n\nconst amplitude: NumParam = \n    {name: 'amplitude',\n    type: 'number',\n    min: 1,\n    max: 10000,\n    value: 20,\n    dx: \"the total number of pics for the sin wave to move through\"\n}\n\nconst freq: NumParam = \n        {name: 'frequency',\n        type: 'number',\n        min: 1,\n        max: 10000,\n        value: 50,\n        dx: \"controls number of waves to include \"\n        }\n\n\n\n\n\nconst params = [width, amplitude, freq];\n\n//INLETS\n\n  const inlets = [];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const width: number = getOpParamValById(0, param_vals);\n      const amp: number = getOpParamValById(1, param_vals);\n      const freq: number = getOpParamValById(2, param_vals);\n\n\n    let pattern = new Sequence.TwoD();\n      for(let j = 0; j < width; j++){\n        let seq = new Sequence.OneD().pushMultiple(0, amp);\n        let i = Math.floor((amp/2)*Math.sin(j * freq) + (amp/2));\n        seq.set(i, 1);  \n        pattern.pushWarpSequence(seq.val())\n      }\n\n      return Promise.resolve([initDraftFromDrawdown(pattern.export())]);\n\n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n    const amp: number = getOpParamValById(1, param_vals);\n    const freq: number = getOpParamValById(2, param_vals);\n  return amp+\"/\"+freq+'sin';\n}\n\n\nexport const sinewave: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { BoolParam, Draft, NumParam, Operation, OperationInlet, OpInput, OpParamVal, StringParam } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, transferSystemsAndShuttles } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"slope\";\nconst old_names = [];\n\n//PARAMS\nconst end_shift:NumParam =  \n    {name: 'end shift',\n    type: 'number',\n    min: -100,\n    max: 100,\n    value: 1,\n    dx: 'the amount to shift rows by'\n    };\n\nconst pic_shift:NumParam = { \n    name: 'pic shift (n)',\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 1,\n    dx: 'describes how many rows we should apply the shift to'\n};\n\n\n\nconst params = [end_shift, pic_shift];\n\n//INLETS\n\nconst draft_input:OperationInlet = {\n    name: 'draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to slope',\n    num_drafts: 1\n}\n\n  const inlets = [draft_input];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const end_shift: number = getOpParamValById(0, param_vals);\n      const pic_shift: number = getOpParamValById(1, param_vals);\n\n      const drafts: Array<Draft> = getAllDraftsAtInlet(op_inputs, 0);\n\n      if(drafts.length == 0) return Promise.resolve([]);\n\n      let pattern = new Sequence.TwoD();\n      \n      drafts[0].drawdown.forEach((row, i) => {\n\n        let row_shift = 0;\n        if(pic_shift > 0) \n        row_shift = Math.floor(i/pic_shift) * end_shift;\n\n        pattern.pushWeftSequence(new Sequence.OneD().import(row).shift(row_shift).val())\n\n      })\n      \n      let d = initDraftFromDrawdown(pattern.export());\n      d = updateWarpSystemsAndShuttles(d, drafts[0]);\n      d = updateWeftSystemsAndShuttles(d, drafts[0]);\n\n\n      return Promise.resolve([d]);\n\n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n    const end_shift: number = getOpParamValById(0, param_vals);\n    const pic_shift: number = getOpParamValById(1, param_vals);\n  return 'slope'+pic_shift+\"/\"+end_shift;\n}\n\n\nexport const slope: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { BoolParam, Draft, NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getCol, getHeddle, initDraftFromDrawdown, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport { makeWarpSystemsUnique } from \"../../model/system\";\nimport utilInstance from \"../../model/util\";\n\nconst name = \"splice in warps\";\nconst old_names = [];\n\n//PARAMS\nconst ends_btwn:NumParam =  \n{name: 'ends between insertions',\ntype: 'number',\nmin: 1,\nmax: 100,\nvalue: 1,\ndx: \"the number of ends to keep between each splice\"\n}\n\nconst repeats: BoolParam = \n    {name: 'calculate repeats',\n    type: 'boolean',\n    falsestate: 'do not repeat inputs to match size',\n    truestate: 'repeat inputs to match size',\n    value: 1,\n    dx: \"\"\n};\n\nconst style: BoolParam =  \n{name: 'splice style',\ntype: 'boolean',\nfalsestate: 'line by line',\ntruestate: 'whole draft',\nvalue: 0,\ndx: \"controls if the whole draft is spliced in every nth weft or just the next pic in the draft\"\n}\n\n\nconst params = [ends_btwn, repeats, style];\n\n//INLETS\nconst receiving: OperationInlet = {\n    name: 'receiving draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'all the drafts you would like to interlace',\n    num_drafts: 1\n}\n\n  const splicing: OperationInlet = {\n    name: 'splicing draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft you would like to splice into the recieving draft',\n    num_drafts: 1\n  }\n\n\n  const inlets = [receiving, splicing];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) : Promise<Array<Draft>> => {\n\n  let receiving_drafts = getAllDraftsAtInlet(op_inputs, 0);\n  let splicing_drafts = getAllDraftsAtInlet(op_inputs, 1);\n  let ends_btwn = getOpParamValById(0, op_params);\n  let repeat = getOpParamValById(1, op_params);\n  let style = getOpParamValById(2, op_params);\n\n  let receiving_draft = (receiving_drafts.length == 0) ? null : receiving_drafts[0]; \n  let splicing_draft = (splicing_drafts.length == 0) ? null : splicing_drafts[0]; \n\n  const all_drafts = [receiving_draft, splicing_draft];\n\n  if(all_drafts.length == 0) return Promise.resolve([]);\n  if(receiving_draft == null || splicing_draft == null) return Promise.resolve([]);\n\n  let total_warps: number = 0;\n  let factors: Array<number> = [];\n  if(repeat === 1){\n    if(style){\n      factors = [warps(receiving_draft.drawdown), (warps(splicing_draft.drawdown)*(ends_btwn+warps(splicing_draft.drawdown)))];\n    }else{\n      factors = [warps(receiving_draft.drawdown), warps(splicing_draft.drawdown)*(ends_btwn+1)];\n    }\n    total_warps = utilInstance.lcm(factors);\n  }  \n  else  {\n    //sums the warps from all the drafts\n    total_warps =all_drafts.reduce((acc, el) => {\n      return acc + warps(el.drawdown);\n    }, 0);\n  }\n\n  let total_wefts: number = 0;\n  const all_wefts = all_drafts.map(el => wefts(el.drawdown)).filter(el => el > 0);\n\n  if(repeat === 1)  total_wefts = utilInstance.lcm(all_wefts);\n  else  total_wefts = utilInstance.getMaxWefts(all_drafts);\n\n\n  const uniqueSystemCols = makeWarpSystemsUnique(all_drafts.map(el => el.colSystemMapping));\n\n  let array_a_ndx = 0;\n  let array_b_ndx = 0;\n\n  //create a draft to hold the merged values\n  // const d:Draft = initDraftWithParams({warps: total_warps, wefts:total_wefts, rowShuttleMapping:static_input.rowShuttleMapping, rowSystemMapping:static_input.rowSystemMapping});\n\n  let pattern = new Sequence.TwoD();\n  let col_shuttle:Array<number>  = [];\n  let col_system:Array<number>  = [];\n\n  for(let j = 0; j < total_warps; j++){\n    let select_array: number;\n    if(style){\n      const cycle = ends_btwn + warps(splicing_draft.drawdown);\n      select_array = (j % (cycle) >= ends_btwn) ? 1 : 0; \n    }else{\n      select_array = (j % (ends_btwn+1) ===ends_btwn) ? 1 : 0; \n    } \n\n    if(!repeat){\n      if(array_b_ndx >=warps(splicing_draft.drawdown)) select_array = 0;\n      if(array_a_ndx >=warps(receiving_draft.drawdown)) select_array = 1;\n    }\n    \n    let cur_warp_num = warps(all_drafts[select_array].drawdown)\n    let ndx = (select_array === 0) ? array_a_ndx%cur_warp_num : array_b_ndx%cur_warp_num;\n\n    let seq = new Sequence.OneD();\n    for(let i = 0; i < total_wefts; i++){\n      let cur_weft_num = wefts(all_drafts[select_array].drawdown);\n      if(i >= cur_weft_num && !repeat) seq.push(2);\n      seq.push(getHeddle(all_drafts[select_array].drawdown, i%cur_weft_num, ndx));\n    }\n\n    pattern.pushWarpSequence(seq.val());\n\n\n\n    // const col:Array<Cell> = d.drawdown.reduce((acc, el) => {\n    //   acc.push(el[j]);\n    //   return acc;\n    // }, [])\n\n\n\n    col_system.push(uniqueSystemCols[select_array][ndx]);\n    col_shuttle.push(all_drafts[select_array].colShuttleMapping[ndx]);\n\n\n    if(select_array === 0){\n      array_a_ndx++;\n    } \n    else{\n      array_b_ndx++;\n    } \n\n  }\n\n  let d: Draft = initDraftFromDrawdown(pattern.export());\n  d.colShuttleMapping = col_shuttle.slice();\n  d.colSystemMapping = col_system.slice();\n  d = updateWeftSystemsAndShuttles(d, receiving_draft);\n  // this.transferSystemsAndShuttles(d,op_input.drafts,op_input.params, 'interlace');\n  return Promise.resolve([d]);\n\n};   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n    let r = getAllDraftsAtInlet(op_inputs, 0);\n    let s = getAllDraftsAtInlet(op_inputs, 1);\n    let name_list = parseDraftNames(r.concat(s));\n  return \"spliced(\"+name_list+\")\";\n}\n\n\nexport const spliceinwarps: Operation = {name, old_names, params, inlets, perform, generateName};","import { BoolParam, Draft, NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getHeddle, initDraftFromDrawdown, updateWarpSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, parseDraftNames, transferSystemsAndShuttles } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport { makeWeftSystemsUnique } from \"../../model/system\";\nimport utilInstance from \"../../model/util\";\n\nconst name = \"splice in wefts\";\nconst old_names = [];\n\n//PARAMS\nconst pics_btwn:NumParam =  \n{name: 'pics between insertions',\ntype: 'number',\nmin: 1,\nmax: 100,\nvalue: 1,\ndx: \"the number of pics to keep between each splice row\"\n}\n\nconst repeats: BoolParam = \n    {name: 'calculate repeats',\n    type: 'boolean',\n    falsestate: 'do not repeat inputs to match size',\n    truestate: 'repeat inputs to match size',\n    value: 1,\n    dx: \"\"\n};\n\nconst style: BoolParam =  \n{name: 'splice style',\ntype: 'boolean',\nfalsestate: 'line by line',\ntruestate: 'whole draft',\nvalue: 0,\ndx: \"controls if the whole draft is spliced in every nth weft or just the next pic in the draft\"\n}\n\n\n\n\n\nconst params = [pics_btwn, repeats, style];\n\n//INLETS\nconst receiving: OperationInlet = {\n    name: 'receiving draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'all the drafts you would like to interlace',\n    num_drafts: 1\n}\n\n  const splicing: OperationInlet = {\n    name: 'splicing draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft you would like to splice into the recieving draft',\n    num_drafts: 1\n  }\n\n\n  const inlets = [receiving, splicing];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) : Promise<Array<Draft>> => {\n\n  let receiving_drafts = getAllDraftsAtInlet(op_inputs, 0);\n  let splicing_drafts = getAllDraftsAtInlet(op_inputs, 1);\n  let pics_btwn = getOpParamValById(0, op_params);\n  let repeat = getOpParamValById(1, op_params);\n  let style = getOpParamValById(2, op_params);\n\n  let receiving_draft = (receiving_drafts.length == 0) ? null : receiving_drafts[0]; \n\n  let splicing_draft = (splicing_drafts.length == 0) ? null : splicing_drafts[0]; \n\n  const all_drafts = [receiving_draft, splicing_draft];\n\n  if(all_drafts.length == 0) return Promise.resolve([]);\n  if(receiving_draft == null || splicing_draft == null) return Promise.resolve([]);\n\n  let total_wefts: number = 0;\n  if(repeat === 1){\n    let factors = [];\n    if(style){\n      factors = [wefts(splicing_draft.drawdown), wefts(splicing_draft.drawdown)*(pics_btwn+wefts(splicing_draft.drawdown))];\n    }else{\n      factors = [wefts(receiving_draft.drawdown), wefts(splicing_draft.drawdown)*(pics_btwn+1)];\n    }\n    total_wefts = utilInstance.lcm(factors);\n  }  \n  else  {\n    //sums the wefts from all the drafts\n    total_wefts =all_drafts.reduce((acc, el) => {\n      return acc + wefts(el.drawdown);\n    }, 0);\n}\n\n  let total_warps: number = 0;\n  const all_warps = all_drafts.map(el => warps(el.drawdown)).filter(el => el > 0);\n  if(repeat === 1)  total_warps = utilInstance.lcm(all_warps);\n  else  total_warps = utilInstance.getMaxWarps(all_drafts);\n\n\n  const uniqueSystemRows = makeWeftSystemsUnique(all_drafts.map(el => el.rowSystemMapping));\n\n  let array_a_ndx = 0;\n  let array_b_ndx = 0;\n\n    let row_shuttle = [];\n    let row_system = [];\n    let pattern = new Sequence.TwoD();\n\n  for(let i = 0; i < total_wefts; i++){\n    let select_array:number = 0;\n\n    if(style){\n      const cycle = pics_btwn + wefts(splicing_draft.drawdown);\n      select_array = (i % cycle >= pics_btwn) ? 1 : 0; \n    }else{\n      select_array = (i % (pics_btwn+1) ===pics_btwn) ? 1 : 0; \n    } \n\n    if(!repeat){\n      if(array_b_ndx >=wefts(splicing_draft.drawdown)) select_array = 0;\n      if(array_a_ndx >=warps(receiving_draft.drawdown)) select_array = 1;\n    }\n    \n    let cur_weft_num = wefts(all_drafts[select_array].drawdown);\n    let ndx = (select_array === 0) ? array_a_ndx%cur_weft_num : array_b_ndx%cur_weft_num;\n    let seq = new Sequence.OneD();\n    for(let j = 0; j < total_warps; j++){\n        let cur_warp_num = warps(all_drafts[select_array].drawdown);\n        if(j >= cur_warp_num && !repeat) seq.push(2);\n        else seq.push(getHeddle(all_drafts[select_array].drawdown, ndx,j%cur_warp_num));\n\n    }\n\n    row_system.push(uniqueSystemRows[select_array][ndx]);\n    row_shuttle.push(all_drafts[select_array].rowShuttleMapping[ndx]);\n    pattern.pushWeftSequence(seq.val());\n\n\n    if(select_array === 0){\n      array_a_ndx++;\n    } \n    else{\n      array_b_ndx++;\n    } \n\n  }\n  let d = initDraftFromDrawdown(pattern.export());\n  d.rowShuttleMapping = row_shuttle;\n  d.rowSystemMapping = row_system.slice();\n  if(receiving_draft !== null) \n  d = updateWarpSystemsAndShuttles(d, receiving_draft);\n  return Promise.resolve([d]);\n\n};   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n    let r = getAllDraftsAtInlet(op_inputs, 0);\n    let s = getAllDraftsAtInlet(op_inputs, 1);\n    let name_list = parseDraftNames(r.concat(s));\n  return \"spliced(\"+name_list+\")\";\n}\n\n\nexport const splicein: Operation = {name, old_names, params, inlets, perform, generateName};","import { max } from \"rxjs/operators\";\nimport { NumParam, Operation, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown } from \"../../model/drafts\";\nimport { getOpParamValById } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"waffle\";\nconst old_names = [];\n\n//PARAMS\nconst max_float:NumParam =  \n    {name: 'float length',\n    type: 'number',\n    min: 3,\n    max: 100,\n    value: 7,\n    dx: \"the length of the longest float in the waffle structure. This number must be odd. If an even number is entered, the draft will make the longest float one less than the entered value.\"\n};\n\nconst bindings: NumParam = \n    {name: 'number of binding rows',\n    type: 'number',\n    min: 1,\n    max: 100,\n    value: 2,\n    dx:\"\"\n}\n\nconst packing_factor: NumParam = \n    {name: 'packing',\n    type: 'number',\n    min: 1,\n    max: 100,\n    value: 2,\n    dx:\"controls how much each waffle will overlap. A higher number will lead to a tighter packing of waffles, where a lower number will lead to more spacing between waffles\"\n}\n\n\nconst params = [max_float, bindings, packing_factor];\n\n//INLETS\n\n  const inlets = [];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      let float: number = getOpParamValById(0, param_vals);\n      const bindings: number = getOpParamValById(1, param_vals);\n      const packing_factor: number = getOpParamValById(2, param_vals);\n\n      //always make it an odd number \n      if(float % 2 == 0) float -= 1;\n\n      let max_binding = 1 + (bindings)*2;\n      const size = float + max_binding*2;\n      const center_point = Math.floor(size/ 2);\n\n      let pattern = new Sequence.TwoD();\n\n      for(let i = 0; i < center_point; i++){\n        let float_len = float - i*2;\n        let row = new Sequence.OneD();\n        if(float_len >= 0){\n        \n          let pad = Math.floor((size - float_len) / 2);\n          \n          //push the float\n          row.pushMultiple(1, float_len);\n\n          for(let p = 0; p < pad; p++){\n            if(p < max_binding){\n              let val = (p%2==0) ? 0 : 1;\n              row.unshift(val)\n              row.push(val)\n            }else{\n              row.unshift(0)\n              row.push(0)\n            }\n          }\n        }else{\n          max_binding -= 1;\n\n          let pad = Math.floor((size - max_binding*2) / 2);\n          row.pushMultiple(0, pad);\n          for(let b = 0; b < max_binding*2; b++){\n            if(b==0) row.push(0)\n            if(b%2 == 0) row.push(1)\n            else row.push(0);\n          }\n          row.pushMultiple(0, pad);\n\n        }\n          \n\n       \n      pattern.pushWeftSequence(row.val());\n\n      //if we're not in the center, push to both size\n      if(i > 0){\n        pattern.unshiftWeftSequence(row.val());\n      }\n        \n      }\n\n      //now delete the rows that would for duplicates when tiling\n      pattern.deleteWarp(0);\n      pattern.deleteWarp(0);\n\n      for(let p = 0; p <  packing_factor; p++){\n        pattern.deleteWarp(pattern.warps()-1);\n        pattern.deleteWeft(pattern.wefts()-1);\n        if(p > 0){\n          pattern.deleteWeft(0);\n          pattern.deleteWarp(0);\n\n        }\n      }\n\n\n      return Promise.resolve([initDraftFromDrawdown(pattern.export())]);\n\n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  return 'waffle';\n}\n\n\nexport const square_waffle: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { getCellValue } from \"../../model/cell\";\nimport { Drawdown, NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"stretch\";\nconst old_names = [];\n\n//PARAMS\nconst warp_repeats:NumParam =  \n{name: 'warp-repeats',\ntype: 'number',\nmin: 1,\nmax: 100,\nvalue: 2,\ndx: 'number of times to repeat each warp end'\n};\n\nconst weft_repeats: NumParam = {name: 'weft-repeats',\ntype: 'number',\nmin: 1,\nmax: 100,\nvalue: 2,\ndx: 'number of times to repeat each weft pic'\n}\n\n\nconst params = [warp_repeats, weft_repeats];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to stretch',\n    num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n\n  let input_draft = getInputDraft(op_inputs);\n   if(input_draft == null) return Promise.resolve([]);\n\n\n  let warp_rep = getOpParamValById(0, op_params);\n  let weft_rep = getOpParamValById(1, op_params);\n  let weft_mats = new Sequence.OneD();\n  let weft_sys = new Sequence.OneD();\n  let warp_mats = new Sequence.OneD();\n  let warp_sys = new Sequence.OneD();\n  let pattern = new Sequence.TwoD();\n\n  input_draft.drawdown.forEach((row, i) => {\n    let seq = new Sequence.OneD();\n    row.forEach((cell, j) => {\n        seq.pushMultiple(getCellValue(cell), warp_rep);\n        if(i == 0){\n            warp_mats.push(input_draft.colShuttleMapping[j]);\n            warp_sys.push(input_draft.colSystemMapping[j]);\n        }\n    \n    });\n\n    for(let r = 0; r < weft_rep; r++){\n        weft_mats.push(input_draft.rowShuttleMapping[i]);\n        weft_sys.push(input_draft.rowSystemMapping[i]);\n        pattern.pushWeftSequence(seq.val());\n    }\n\n  })\n\n\n  let d = initDraftFromDrawdown(pattern.export());\n  d.colShuttleMapping = warp_mats.val();\n  d.colSystemMapping = warp_sys.val();\n  d.rowShuttleMapping = weft_mats.val();\n  d.rowSystemMapping = weft_sys.val();\n\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'stretch('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const stretch: Operation = {name, old_names, params, inlets, perform, generateName};","import { createCell, getCellValue } from \"../../model/cell\";\nimport { Draft, OperationInlet, OpInput, OpParamVal, StringParam, NotationTypeParam, DynamicOperation, OperationParam } from \"../../model/datatypes\";\nimport {  generateMappingFromPattern, initDraftFromDrawdown, initDraftWithParams, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, parseDraftNames, reduceToStaticInputs } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\n\nconst name = \"notation_system\";\nconst old_names = [];\nconst dynamic_param_id = 0;\nconst dynamic_param_type = 'notation';\nconst layer_parsing_regex =/.*?\\((.*?[a-xA-Z]*[\\d]*.*?)\\).*?/i;\n\n//PARAMS\nconst pattern:StringParam =  \n    {name: 'pattern',\n    type: 'string',\n    value: '(a1b2c3)',\n    regex:  /.*?(.*?[a-xA-Z]+[\\d]+).*?/i,\n    error: 'invalid entry',\n    dx: 'all system pairs must be listed as letters followed by numbers, layers are created by enclosing those system lists in pararenthesis. For example, the following are valid: (a1b2)(c3) or (c1)(a2). The following are invalid: (1a)(2b) or (2b'\n    }\n\n\nconst params = [pattern];\n\n//INLETS\nconst systems: OperationInlet = {\n    name: 'systems draft', \n    type: 'static',\n    value: null,\n    uses: \"warp-and-weft-data\",\n    dx: 'the draft that describes the system ordering we will add input structures within',\n    num_drafts: 1\n  }\n\n  const inlets = [systems];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const original_string = getOpParamValById(0, op_params);\n\n      const original_string_split = utilInstance.parseRegex(original_string, /.*?(.*?[a-xA-Z]+[\\d]+).*?/i);\n      const layer_units = utilInstance.parseRegex(original_string, layer_parsing_regex);\n\n      if(original_string_split == null || original_string_split.length == 0) return Promise.resolve([]);\n\n      const system_map = getAllDraftsAtInlet(op_inputs, 0);\n      if(op_inputs.length == 0) return Promise.resolve([]);\n\n\n      if(system_map.length == 0) return Promise.resolve([]); ;\n     \n\n      let weft_system_map = new Sequence.OneD(system_map[0].rowSystemMapping);\n      let warp_system_map = new Sequence.OneD(system_map[0].colSystemMapping);\n\n      //make sure the system draft map has a representation for every layer, even if the draft at that layer is null.\n      const layer_draft_map = original_string_split.map((unit, ndx) => {\n        \n        let layer_id = layer_units.findIndex(el => el.includes(unit));\n\n        let drafts = getAllDraftsAtInlet(op_inputs, ndx+1);\n    \n        return {\n          wesy: parseWeftSystem(unit), \n          wasy: parseWarpSystem(unit),\n          layer: layer_id, //map layer order to the inlet id, all inlets must be ordered the same as the input\n          draft: (drafts.length == 0) ? initDraftWithParams({wefts: 1, warps: 1, drawdown:[[createCell(false)]]}) : drafts[0]\n        }\n      })\n\n\n      let composite = new Sequence.TwoD().setBlank(2);\n\n      layer_draft_map.forEach((sdm, ndx) => {\n        let seq = new Sequence.TwoD().import(sdm.draft.drawdown);\n        seq.mapToSystems(sdm.wesy, sdm.wasy, weft_system_map, warp_system_map);\n        composite.overlay(seq, false);\n        \n\n       });\n\n\n\n        let system_layer_map = [];\n        layer_draft_map.forEach(el => {\n          el.wasy.forEach(wasy => {\n            system_layer_map.push({ws: wasy, layer:el.layer})\n          })\n        });\n        composite.layerSystems(system_layer_map, warp_system_map);\n    \n    \n\n\n       let d: Draft = initDraftFromDrawdown(composite.export());\n       d.colSystemMapping =  generateMappingFromPattern(d.drawdown, warp_system_map.val(),'col', 3);\n       d.rowSystemMapping =  generateMappingFromPattern(d.drawdown, weft_system_map.val(),'row', 3);\n\n      \n      return  Promise.resolve([d]);\n\n  }   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  return ''+param_vals[0]+\"\";\n}\n\n\nconst onParamChange = (param_vals: Array<OpParamVal>, inlets: Array<OperationInlet>, inlet_vals: Array<any>, changed_param_id: number, param_val: any) : Array<any> => {\n\n    inlet_vals = reduceToStaticInputs(inlets, inlet_vals);\n\n    const param_regex = (<StringParam> param_vals[0].param).regex;\n\n    let matches = [];\n\n\n    matches = utilInstance.parseRegex(param_val, layer_parsing_regex);\n    console.log(matches);\n\n    matches = matches.map(el => el.slice(1, -1))\n\n    matches = matches.reduce((acc, val) => {\n    const sub_match = utilInstance.parseRegex(val, param_regex);\n    return acc.concat(sub_match);\n    }, []);\n\n    \n   \n\n    matches.forEach(el => {\n      inlet_vals.push(el);\n    })\n\n    return inlet_vals;\n\n}\n\n\n\n\n\n\n//pull out all the nubmers from a notation element into warp systems\nconst parseWarpSystem = (val: string) : Array<number> => {\n  let matches = val.match(/\\d+/g);\n  if(matches == null || matches.length == 0){\n    console.error(\"in Layer Notation, no warp system\")\n    return [];\n  }\n  return  matches.map(el => parseInt(el)-1);\n\n}\n\n//pull out all the letters from a notation element into weft systems\nconst parseWeftSystem = (val: string) : Array<number> => {\n  let matches = val.match(/[a-zA-Z]+/g);\n  if(matches == null || matches.length == 0){\n    console.error(\"in Layer Notation, no weft system\")\n    return [];\n  }\n  return matches.map(match => match.charCodeAt(0) - 97);\n\n}\n  \n\nexport const notation_system: DynamicOperation = {name, old_names, params, inlets, dynamic_param_id, dynamic_param_type, perform, generateName,onParamChange};","import { NumParam, Operation, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown } from \"../../model/drafts\";\nimport { getOpParamValById } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"tabbyder\";\nconst old_names = ['tabby'];\n\n//PARAMS\nconst warps_raised:NumParam =  \n    {name: 'warps raised',\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 1,\n    dx: \"\"\n};\n\nconst warps_lowered: NumParam = \n    {name: 'warps lowered',\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 1,\n    dx:\"\"\n}\n\nconst base_pics: NumParam = \n    {name: 'base pics',\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 1,\n    dx: 'the number of pics upon which the first tabby pic will be repeated'\n    };\n\nconst alt_pics: NumParam = \n    {name: 'alt pics',\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 1,\n    dx: 'the number of pics upon which the repeat the alteranting pattern'\n    };\n\nconst params = [warps_raised, warps_lowered, base_pics, alt_pics];\n\n//INLETS\n\n  const inlets = [];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const raised: number = getOpParamValById(0, param_vals);\n      const lowered: number = getOpParamValById(1, param_vals);;\n      const rep: number = getOpParamValById(2, param_vals);\n      const alt_rep: number = getOpParamValById(3, param_vals);\n\n\n      let first_row = new Sequence.OneD();\n      for(let j = 0; j < raised; j++){\n        first_row.push(1);\n      }\n\n      for(let j = 0; j < lowered; j++){\n        first_row.push(0);\n      }\n\n\n      let pattern = new Sequence.TwoD();\n      for(let i = 0; i < rep; i++){\n        pattern.pushWeftSequence(first_row.val());\n      }\n\n      let inverted =first_row.invert().val();\n\n      for(let i = 0; i < alt_rep; i++){\n        pattern.pushWeftSequence(inverted);\n      }\n\n      return Promise.resolve([initDraftFromDrawdown(pattern.export())]);\n\n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  return 'tabby';\n}\n\n\nexport const tabby_der: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { Drawdown, NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"tile\";\nconst old_names = [];\n\n//PARAMS\nconst warp_repeats:NumParam =  \n{name: 'warp-repeats',\ntype: 'number',\nmin: 1,\nmax: 100,\nvalue: 2,\ndx: 'the number of times to repeat this time across the width'\n};\n\nconst weft_repeats: NumParam = {name: 'weft-repeats',\ntype: 'number',\nmin: 1,\nmax: 100,\nvalue: 2,\ndx: 'the number of times to repeat this time across the length'\n}\n\n\nconst params = [warp_repeats, weft_repeats];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to tile',\n    num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n\n  let input_draft = getInputDraft(op_inputs);\n   if(input_draft == null) return Promise.resolve([]);\n\n\n  let warp_rep = getOpParamValById(0, op_params);\n  let weft_rep = getOpParamValById(1, op_params);\n\n  const w = warp_rep * warps(input_draft.drawdown);\n  const h = weft_rep * wefts(input_draft.drawdown);\n\n  let seq = new Sequence.TwoD();\n  seq.import(input_draft.drawdown);\n\n  let dd: Drawdown = seq.fill(w,h).export();\n  let d = initDraftFromDrawdown(dd);\n  d = updateWeftSystemsAndShuttles(d, input_draft);\n  d = updateWarpSystemsAndShuttles(d, input_draft);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'tile('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const tile: Operation = {name, old_names, params, inlets, perform, generateName};","import { F } from \"@angular/cdk/keycodes\";\nimport { Draft, NumParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { getHeddle, initDraftFromDrawdown, initDraftWithParams, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\nconst name = \"trim\";\nconst old_names = [];\n\n//PARAMS\nconst starting_ends:NumParam =  \n{name: 'ends from start',\ntype: 'number',\nmin: 0,\nmax: 10000,\nvalue: 1,\ndx: 'number of pics from the origin to start to remove'\n}\n\nconst staring_pics:NumParam = {\n    name: 'pics from start',\n      min: 0,\n      max: 10000,\n      value: 1,\n      type: 'number',\n      dx: 'number of ends from the origin to start to remove'\n    }\n\nconst ending_ends:NumParam =  \n{name: 'ends from the end',\ntype: 'number',\nmin: 1,\nmax: 10000,\nvalue: 1,\ndx: 'number of ends from the opposite edge of the origin to remove'\n}\n\nconst ending_pics:NumParam =  \n{name: 'pics from the end',\ntype: 'number',\nmin: 1,\nmax: 10000,\nvalue: 1,\ndx: 'number of pics from the opposite edge of the origin to remove'\n}\n\n\n\n\n\n\nconst params = [starting_ends, staring_pics, ending_ends, ending_pics];\n\n//INLETS\nconst draft: OperationInlet = {\n    name: 'draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to trim',\n    num_drafts: 1\n}\n\n\n\n  const inlets = [draft];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) : Promise<Array<Draft>> => {\n\n    const draft = getInputDraft(op_inputs);\n    const left = getOpParamValById(0, op_params);\n    const top = getOpParamValById(1, op_params);\n    const right = getOpParamValById(2, op_params);\n    const bottom = getOpParamValById(3, op_params);\n\n\n    if(draft == null) return Promise.resolve([]);\n\n    let warp_systems = new Sequence.OneD();\n    let warp_mats =  new Sequence.OneD();\n    let weft_systems =  new Sequence.OneD();\n    let weft_materials = new Sequence.OneD();\n\n    let pattern = new Sequence.TwoD();\n\n    //start with starting pics\n    for(let i = top; i < wefts(draft.drawdown)-bottom; i++){\n\n        let seq = new Sequence.OneD();\n        for(let j = left; j < warps(draft.drawdown)-right; j++){\n            seq.push(getHeddle(draft.drawdown, i, j));\n        }\n        pattern.pushWeftSequence(seq.val());\n        weft_materials.push(draft.rowShuttleMapping[i])\n        weft_systems.push(draft.rowSystemMapping[i])\n\n    }\n\n    for(let j = left; j < warps(draft.drawdown)-right; j++){\n        warp_mats.push(draft.colShuttleMapping[j])\n        warp_systems.push(draft.colSystemMapping[j])\n    }\n\n\n    let d = initDraftFromDrawdown(pattern.export());\n    d.colShuttleMapping = warp_mats.val();\n    d.colSystemMapping = warp_systems.val();\n    d.rowShuttleMapping = weft_materials.val();\n    d.rowSystemMapping = weft_systems.val();\n\n\n    return Promise.resolve([d]);\n\n};   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n    let r = getAllDraftsAtInlet(op_inputs, 0);\n    let name_list = parseDraftNames(r);\n  return 'trim('+name_list+\")\";\n}\n\n\nexport const trim: Operation = {name, old_names, params, inlets, perform, generateName};\n\n","import { first } from \"rxjs/operators\";\nimport { createCell, getCellValue } from \"../../model/cell\";\nimport { BoolParam, Draft, NumParam, Operation, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, initDraftWithParams, setHeddle, warps, wefts } from \"../../model/drafts\";\nimport { getOpParamValById } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"twill\";\nconst old_names = [];\n\n//PARAMS\nconst warps_raised:NumParam =  \n    {name: 'warps raised',\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 1,\n    dx: \"\"\n};\n\n\nconst warps_lowered: NumParam = \n    {name: 'warps lowered',\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 3,\n    dx:\"\"\n}\n\nconst sz: BoolParam = \n        {name: 'S/Z',\n        type: 'boolean',\n        falsestate: 'S',\n        truestate: 'Z',\n        value: 0,\n        dx: ''\n        }\n\nconst facing: BoolParam = \n    {name: 'facing',\n    type: 'boolean',\n    falsestate: \"weft facing\",\n    truestate: \"warp facing\",\n    value: 0,\n    dx: ''\n    }\n\n\n\nconst params = [warps_raised, warps_lowered, sz, facing];\n\n//INLETS\n\n  const inlets = [];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const raised: number = getOpParamValById(0, param_vals);\n      const lowered: number = getOpParamValById(1, param_vals);\n      const sz: number = getOpParamValById(2, param_vals);\n      const facing: number = getOpParamValById(3, param_vals);\n\n\n      let first_row = new Sequence.OneD();\n      first_row.pushMultiple(1, raised).pushMultiple(0, lowered);\n\n      if(facing) first_row.invert();\n\n\n      let pattern = new Sequence.TwoD();\n      let shift_dir = (sz) ? -1 : 1;\n      for(let i = 0; i < (raised+lowered); i++){\n        pattern.pushWeftSequence(first_row.shift(shift_dir).val());\n      }\n\n\n      return Promise.resolve([initDraftFromDrawdown(pattern.export())]);\n\n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n    const raised: number = getOpParamValById(0, param_vals);\n    const lowered: number = getOpParamValById(1, param_vals);\n    const sz: number = getOpParamValById(2, param_vals);\n    const dir: string = (sz) ? \"S\" : \"Z\";\n  return raised+\"/\"+lowered+dir+'twill';\n}\n\n\nexport const twill: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { BoolParam, Draft, Operation, OperationInlet, OpInput, OpParamVal, StringParam } from \"../../model/datatypes\";\nimport { getCol, initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\n\nconst name = \"undulatewarps\";\nconst old_names = [];\n\n//PARAMS\nconst shift_pattern:StringParam =  \n    {name: 'undulation pattern',\n    type: 'string',\n    regex: /(\\d+)/,\n    value: '1 1 1 2 2 3',\n    error: '',\n    dx: 'shifts each end of the input draft according to the number sequence specified.'\n};\nconst force_fit: BoolParam = \n        {name: 'fit to input',\n        type: 'boolean',\n        falsestate: 'do not force the fit',\n        truestate: 'force the draft to match the input size',\n        value: 0,\n        dx: 'controls if the output draft wefts should match the number of inputs to the undulation pattern or if the undulation pattern should repeat over the draft wefts'\n        }\n\n\n\nconst params = [shift_pattern, force_fit];\n\n//INLETS\n\nconst draft_input:OperationInlet = {\n    name: 'draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to undulate',\n    num_drafts: 1\n}\n\n  const inlets = [draft_input];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n\n      const undulating_string: string = getOpParamValById(0, param_vals);\n \n      const forcefit: number = getOpParamValById(1, param_vals);\n\n      const drafts: Array<Draft> = getAllDraftsAtInlet(op_inputs, 0);\n\n      if(drafts.length == 0) return Promise.resolve([]);\n\n      let regex_matches= utilInstance.parseRegex(undulating_string, shift_pattern.regex)\n\n\n      let undulating_array = regex_matches.map(el => parseInt(el))\n\n      let pattern = new Sequence.TwoD();\n\n      let max_wefts = 0;\n      let max_warps = 0;\n\n\n      if(forcefit){\n        max_warps = undulating_array.length;\n        max_wefts = undulating_array.reduce((acc, val)=> {\n            if(Math.abs(val) > acc) return Math.abs(val);\n            return acc;\n        }, -1);\n      }else{\n        max_wefts = wefts(drafts[0].drawdown);\n        max_warps = warps(drafts[0].drawdown)\n      }\n\n      for(let j = 0; j < max_warps; j++){\n\n        let und_val = undulating_array[j%undulating_array.length];\n\n   \n        pattern.pushWarpSequence(\n            new Sequence.OneD()\n        .import(getCol(drafts[0].drawdown, j%warps(drafts[0].drawdown)))\n        .resize(max_wefts)\n        .shift(und_val)\n        .val());\n\n      }\n  \n      let d = initDraftFromDrawdown(pattern.export());\n      d = updateWarpSystemsAndShuttles(d, drafts[0]);\n      d = updateWeftSystemsAndShuttles(d, drafts[0]);\n\n      return Promise.resolve([d]);\n\n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  return 'undulate warps';\n}\n\n\nexport const undulatewarps: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { BoolParam, Draft, NumParam, Operation, OperationInlet, OpInput, OpParamVal, StringParam } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\n\nconst name = \"undulatewefts\";\nconst old_names = [];\n\n//PARAMS\nconst shift_pattern:StringParam =  \n    {name: 'undulation pattern',\n    type: 'string',\n    regex: /(\\d+)/,\n    value: '1 1 1 2 2 3',\n    error: '',\n    dx: 'shifts each pic of the input draft according to the number sequence specified.'\n};\nconst force_fit: BoolParam = \n        {name: 'fit to input',\n        type: 'boolean',\n        falsestate: 'do not force the fit',\n        truestate: 'force the draft to match the input size',\n        value: 0,\n        dx: 'controls if the output draft wefts should match the number of inputs to the undulation pattern or if the undulation pattern should repeat over the draft wefts'\n        }\n\n\n\nconst params = [shift_pattern, force_fit];\n\n//INLETS\n\nconst draft_input:OperationInlet = {\n    name: 'draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft to undulate',\n    num_drafts: 1\n}\n\n  const inlets = [draft_input];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n\n      const undulating_string: string = getOpParamValById(0, param_vals);\n\n \n      const forcefit: number = getOpParamValById(1, param_vals);\n\n      const drafts: Array<Draft> = getAllDraftsAtInlet(op_inputs, 0);\n\n      if(drafts.length == 0) return Promise.resolve([]);\n\n      let regex_matches= utilInstance.parseRegex(undulating_string, shift_pattern.regex)\n\n\n      let undulating_array = regex_matches.map(el => parseInt(el))\n\n      let pattern = new Sequence.TwoD();\n\n      let max_wefts = 0;\n      let max_warps = 0;\n\n\n      if(forcefit){\n        max_wefts = undulating_array.length;\n        max_warps = undulating_array.reduce((acc, val)=> {\n            if(Math.abs(val) > acc) return Math.abs(val);\n            return acc;\n        }, -1);\n      }else{\n        max_wefts = wefts(drafts[0].drawdown);\n        max_warps = warps(drafts[0].drawdown)\n      }\n\n      for(let i = 0; i < max_wefts; i++){\n\n        let und_val = undulating_array[i%undulating_array.length];\n\n   \n        pattern.pushWeftSequence(\n            new Sequence.OneD()\n        .import(drafts[0].drawdown[i%wefts(drafts[0].drawdown)])\n        .resize(max_warps)\n        .shift(und_val)\n        .val());\n\n      }\n  \n      let d = initDraftFromDrawdown(pattern.export());\n      d = updateWarpSystemsAndShuttles(d, drafts[0]);\n      d = updateWeftSystemsAndShuttles(d, drafts[0]);\n\n      return Promise.resolve([d]);\n\n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  return 'undulate wefts';\n}\n\n\nexport const undulatewefts: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { BoolParam, NumParam, Operation, OpInput, OpParamVal, StringParam } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown } from \"../../model/drafts\";\nimport { getOpParamValById } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\n\nconst name = \"undulatingtwill\";\nconst old_names = [];\n\n//PARAMS\nconst string_input:StringParam =  \n    {name: 'first pic pattern',\n    type: 'string',\n    regex: /(\\d+)/,\n    value: '1 3 1 3',\n    error: '',\n    dx: 'the under over pattern of this twill'\n};\n\nconst shift_pattern:StringParam =  \n    {name: 'first pic pattern',\n    type: 'string',\n    regex: /(\\d+)/,\n    value: '1 1 1 2 2 3',\n    error: '',\n    dx: 'shifts the starting row by the amount spefied on each subsequent pic to create undulating patterns'\n};\nconst sz: BoolParam = \n        {name: 'S/Z',\n        type: 'boolean',\n        falsestate: 'S',\n        truestate: 'Z',\n        value: 0,\n        dx: ''\n        }\n\n\n\nconst params = [string_input, shift_pattern, sz];\n\n//INLETS\n\n  const inlets = [];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const input_string: string = getOpParamValById(0, param_vals);\n      const undulating_string: string = getOpParamValById(1, param_vals);\n      const sz: number = getOpParamValById(2, param_vals);\n\n\n\n      let regex_matches= utilInstance.parseRegex(input_string, shift_pattern.regex)\n      let input_array = regex_matches.map(el => parseInt(el))\n\n       regex_matches= utilInstance.parseRegex(undulating_string, shift_pattern.regex)\n      let undulating_array = regex_matches.map(el => parseInt(el))\n\n\n\n\n      let first_row = new Sequence.OneD();\n      let under = true;\n      input_array.forEach(input => {\n        first_row.pushMultiple(under, input);\n        under = !under;\n      })\n\n      let pattern = new Sequence.TwoD();\n\n      undulating_array.forEach(shiftval => {\n        let shift_dir = (sz) ? -1*shiftval : 1*shiftval;\n        pattern.pushWeftSequence(new Sequence.OneD(first_row.val()).shift(shift_dir).val());\n      })\n\n      return Promise.resolve([initDraftFromDrawdown(pattern.export())]);\n\n  }   \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  return 'shifty';\n}\n\n\nexport const undulatingtwill: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { create } from \"domain\";\nimport { createCell } from \"../../model/cell\";\nimport { BoolParam, Operation, OperationInlet, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, initDraftWithParams, updateWarpSystemsAndShuttles, updateWeftSystemsAndShuttles, warps, wefts } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getInputDraft, getOpParamValById, parseDraftNames } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"set down to unset\";\nconst old_names = ['set'];\n\n//PARAMS\nconst liftlower: BoolParam = {\n    name: 'raised/lowered',\n    type: 'boolean',\n    falsestate: 'warp raised to unset',\n    truestate: 'warp lowered to unset',\n    value: 1,\n    dx:\"\"\n}\n\nconst params = [liftlower];\n\n//INLETS\nconst draft_inlet: OperationInlet = {\n    name: 'input draft', \n    type: 'static',\n    value: null,\n    uses: \"draft\",\n    dx: 'the draft you would like to modify',\n    num_drafts: 1\n  }\n\n  const inlets = [draft_inlet];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n  let input_draft = getInputDraft(op_inputs);\n  let set_up = getOpParamValById(0, op_params);\n  if(input_draft == null) return Promise.resolve([]);\n\n    let pattern = new Sequence.TwoD();\n\n    input_draft.drawdown.forEach(row =>{\n        let set = row.map(el => {\n            if(el.is_set){\n                if(el.is_up && set_up==0) return createCell(null);\n                else if(!el.is_up && set_up==1) return createCell(null);\n            } \n            return el;\n        })\n\n        pattern.pushWeftSequence(new Sequence.OneD().import(set).val())\n    })\n\n\n  let d = initDraftFromDrawdown(pattern.export())\n  d = updateWeftSystemsAndShuttles(d, input_draft);\n  d = updateWarpSystemsAndShuttles(d, input_draft);\n\n  return Promise.resolve([d]);\n}   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  let drafts = getAllDraftsAtInlet(op_inputs, 0);\n  return 'set interlacements to unset('+parseDraftNames(drafts)+\")\";\n}\n\n\nexport const unset: Operation = {name, old_names, params, inlets, perform, generateName};","import { max } from \"rxjs/operators\";\nimport { createCell, getCellValue, setCellValue } from \"../../model/cell\";\nimport { Cell, Draft, NumParam, Operation, OpInput, OpParamVal } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, initDraftWithParams } from \"../../model/drafts\";\nimport { getOpParamValById } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\n\n\nconst name = \"waffleish\";\nconst old_names = [];\n\n//PARAMS\nconst ends:NumParam =  \n    {name: 'ends',\n    type: 'number',\n    min: 1,\n    max: 100,\n    value: 8,\n    dx:\"\"\n    }\n\nconst pics: NumParam = \n    {name: 'pics',\n    type: 'number',\n    min: 1,\n    max: 100,\n    value: 8,\n    dx:''\n    }\n\nconst border: NumParam = \n{name: 'interlacement borders',\ntype: 'number',\nmin: 0,\nmax: 100,\nvalue: 1,\ndx: 'builds tabby around the edges of the central diamond, creating some strange patterns'\n}\n\n\nconst params = [ends, pics, border];\n\n//INLETS\n\n  const inlets = [];\n\n\nconst  perform = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      let width: number = getOpParamValById(0, param_vals);\n      const height: number = getOpParamValById(1, param_vals);\n      const bindings: number = getOpParamValById(2, param_vals);\n\n      let outputs: Array<Draft> = [];\n\n      const pattern: Array<Array<Cell>> = [];\n      const mid_warp: number = Math.floor(width / 2);  //for 5 this is 2\n      const mid_weft: number = Math.floor(height / 2); //for 5 this is 2\n      const warps_to_wefts_ratio = mid_warp/mid_weft;\n\n      //first create the diamond\n      for(let i = 0; i < height; i++){\n        pattern.push([]);\n        const row_offset = (i > mid_weft) ? height - i : i;\n        for(let j = 0; j < width; j++){\n          if(j >= mid_warp - row_offset*warps_to_wefts_ratio && j <= mid_warp + row_offset*warps_to_wefts_ratio) pattern[i][j] = createCell(true);\n          else pattern[i][j] = createCell(false);\n        }\n      }\n\n      //carve out the tabby\n      if(bindings > 0){\n      const tabby_range_size = bindings * 2 + 1;\n      for(let i = 0; i < height; i++){\n        const row_offset = (i > mid_weft) ? height - i : i;\n        const range_size = Math.floor((mid_warp + row_offset*warps_to_wefts_ratio) - (mid_warp - row_offset*warps_to_wefts_ratio)) + 1;\n\n          //figure out how many bindings we're dealing with here - alterlate to the inside and outside of the diamong\n          for(let b = 1; b <= bindings; b++){\n            const inside = (b % 2 == 1) ? true : false;\n            if(inside){\n              const increment = Math.floor(b+1 / 2)\n              const diff = Math.ceil((range_size - tabby_range_size) / 2);\n              const left_j = mid_warp - (diff * increment);\n              const right_j = mid_warp + (diff * increment);\n              if(left_j > 0 && left_j < width) pattern[i][left_j].is_set = false;\n              if(right_j > 0 && right_j < width) pattern[i][right_j].is_set =(false);\n            }else{\n              const increment = Math.floor(b / 2);\n              const left_j = (mid_warp - Math.floor((range_size-1)/2)) - (increment*2);\n              const right_j = (mid_warp + Math.floor((range_size-1)/2)) + (increment*2);\n              if(left_j > 0 && left_j < width) pattern[i][left_j].is_set =(true);\n              if(right_j > 0 && right_j < width) pattern[i][right_j].is_set =(true);\n            }\n\n          }\n        \n      }\n    }\n\n    pattern.forEach(row => {\n      row.forEach(cell => {\n        if(getCellValue(cell) == null) cell = setCellValue(cell, false);\n      })\n    })\n\n\n      \n        const d: Draft =initDraftWithParams({warps: width, wefts: height, pattern: pattern});\n        outputs.push(d);\n\n      return Promise.resolve(outputs);\n\n    }        \n\n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n  return 'waffleish';\n}\n\n\nexport const waffleish: Operation = {name, old_names, params, inlets, perform, generateName};\n\n\n\n","import { Draft, DynamicOperation, OperationInlet, OpInput, OpParamVal, StringParam } from \"../../model/datatypes\";\nimport { getCol, initDraftFromDrawdown, warps } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, reduceToStaticInputs } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\n\nconst name = \"warp_profile\";\nconst old_names = [\"dynamicjoinleft\"];\nconst dynamic_param_id = 0;\nconst dynamic_param_type = 'profile';\n\n//PARAMS\nconst pattern:StringParam =  \n    {name: 'pattern',\n    type: 'string',\n    value: 'a b c a b c',\n    regex: /\\S+/, //NEVER USE THE GLOBAL FLAG - it will throw errors randomly\n    error: 'invalid entry',\n    dx: 'all entries must be letters separated by a space'\n  }\n\n\n\n\nconst params = [pattern];\n\n//INLETS\nconst systems: OperationInlet = {\n    name: 'weft pattern', \n    type: 'static',\n    value: null,\n    uses: \"weft-data\",\n    dx: 'optional, define a custom weft material or system pattern here',\n    num_drafts: 1\n  }\n\n  const inlets = [systems];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const original_string = getOpParamValById(0, op_params);\n      const system_data = getAllDraftsAtInlet(op_inputs, 0);\n      const original_string_split = utilInstance.parseRegex(original_string, (<StringParam>op_params[0].param).regex);\n      \n      if(original_string_split == null || original_string_split.length == 0) return Promise.resolve([]);\n\n      if(op_inputs.length == 0) return Promise.resolve([]);\n     \n      //now just get all the drafts\n        const all_drafts: Array<Draft> = op_inputs\n        .filter(el => el.inlet_id > 0)\n        .reduce((acc, el) => {\n            el.drafts.forEach(draft => {acc.push(draft)});\n            return acc;\n        }, []);\n\n        let total_wefts: number = 0;\n        const all_wefts = all_drafts.map(el => warps(el.drawdown)).filter(el => el > 0);\n        total_wefts = utilInstance.lcm(all_wefts);\n  \n        const profile_draft_map = op_inputs\n        .map(el => {\n          console.log(\"EL is \", el)\n          return  {\n            id: el.inlet_id, \n            val: (el.params == undefined || el.params[0] == undefined) ?  '' : (el.params[0]).toString(),\n            draft: el.drafts[0]\n          }\n        });\n\n        let pattern = new Sequence.TwoD();\n        let warp_systems = new Sequence.OneD();\n        let warp_mats = new Sequence.OneD();\n        let weft_systems = new Sequence.OneD();\n        let weft_materials = new Sequence.OneD();\n\n        if(system_data.length == 0){\n            weft_systems.import(all_drafts[0].rowSystemMapping).resize(total_wefts);\n            weft_materials.import(all_drafts[0].rowShuttleMapping).resize(total_wefts);\n        }else{\n            weft_systems.import(system_data[0].rowSystemMapping).resize(total_wefts);\n            weft_materials.import(system_data[0].rowShuttleMapping).resize(total_wefts);\n\n        }\n\n        original_string_split.forEach(string_id => {\n\n            let pdm_item = profile_draft_map.find(el => el.val == string_id);\n            if(pdm_item !== undefined){\n                let draft = pdm_item.draft;\n           \n                for(let j = 0; j < warps(draft.drawdown); j++){\n                    let col = getCol(draft.drawdown, j);\n                    let seq = new Sequence.OneD().import(col).resize(total_wefts);\n                    pattern.pushWarpSequence(seq.val());\n                    warp_mats.push(draft.colShuttleMapping[j%draft.colShuttleMapping.length]);\n                    warp_systems.push(draft.colSystemMapping[j%draft.colSystemMapping.length]);\n          \n                }\n\n             }\n\n\n        })\n\n       let d: Draft = initDraftFromDrawdown(pattern.export());\n       d.colShuttleMapping = warp_mats.val();\n       d.colSystemMapping = warp_systems.val();\n       d.rowShuttleMapping = weft_materials.val();\n       d.rowSystemMapping = weft_systems.val();\n\n      \n      return  Promise.resolve([d]);\n\n  }   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  \n  return 'pattern across width:'+param_vals[0].val+\"\";\n}\n\n\nconst onParamChange = (param_vals: Array<OpParamVal>, inlets: Array<OperationInlet>, inlet_vals: Array<any>, changed_param_id: number, param_val: any) : Array<any> => {\n    \n    inlet_vals = reduceToStaticInputs(inlets, inlet_vals);\n    const param_regex = (<StringParam> param_vals[0].param).regex;\n\n    let matches = [];\n\n    matches = utilInstance.parseRegex(param_val,param_regex);\n    matches = utilInstance.filterToUniqueValues(matches);\n\n    \n    matches.forEach(el => {\n      inlet_vals.push(el);\n    })\n\n    return inlet_vals;\n\n\n}\n\n\n\nexport const warp_profile: DynamicOperation = {name, old_names, params, inlets, dynamic_param_id, dynamic_param_type, perform, generateName,onParamChange};","import { Draft, DynamicOperation, OperationInlet, OpInput, OpParamVal, StringParam } from \"../../model/datatypes\";\nimport { initDraftFromDrawdown, warps } from \"../../model/drafts\";\nimport { getAllDraftsAtInlet, getOpParamValById, reduceToStaticInputs } from \"../../model/operations\";\nimport { Sequence } from \"../../model/sequence\";\nimport utilInstance from \"../../model/util\";\n\n\nconst name = \"weft_profile\";\nconst old_names = [\"dynamicjointop\"];\nconst dynamic_param_id = 0;\nconst dynamic_param_type = 'profile';\n\n//PARAMS\nconst pattern:StringParam =  \n    {name: 'pattern',\n    type: 'string',\n    value: 'a b c a b c',\n    regex: /\\S+/, //NEVER USE THE GLOBAL FLAG - it will throw errors randomly\n    error: 'invalid entry',\n    dx: 'all entries must be letters separated by a space'\n  }\n\n\n\n\nconst params = [pattern];\n\n//INLETS\nconst systems: OperationInlet = {\n    name: 'warp pattern', \n    type: 'static',\n    value: null,\n    uses: \"warp-data\",\n    dx: 'optional, define a custom weft material or system pattern here',\n    num_drafts: 1\n  }\n\n  const inlets = [systems];\n\n\nconst  perform = (op_params: Array<OpParamVal>, op_inputs: Array<OpInput>) => {\n\n      const original_string = getOpParamValById(0, op_params);\n      const system_data = getAllDraftsAtInlet(op_inputs, 0);\n      const original_string_split = utilInstance.parseRegex(original_string, (<StringParam>op_params[0].param).regex);\n      \n      if(original_string_split == null || original_string_split.length == 0) return Promise.resolve([]);\n\n      if(op_inputs.length == 0) return Promise.resolve([]);\n     \n      //now just get all the drafts\n        const all_drafts: Array<Draft> = op_inputs\n        .filter(el => el.inlet_id > 0)\n        .reduce((acc, el) => {\n            el.drafts.forEach(draft => {acc.push(draft)});\n            return acc;\n        }, []);\n\n        let total_warps: number = 0;\n        const all_warps = all_drafts.map(el => warps(el.drawdown)).filter(el => el > 0);\n        total_warps = utilInstance.lcm(all_warps);\n  \n        const profile_draft_map = op_inputs\n        .map(el => {\n          return  {\n            id: el.inlet_id, \n            val: (el.params[0]).toString(),\n            draft: el.drafts[0]\n          }\n        });\n\n        let pattern = new Sequence.TwoD();\n        let warp_systems = new Sequence.OneD();\n        let warp_mats = new Sequence.OneD();\n        let weft_systems = new Sequence.OneD();\n        let weft_materials = new Sequence.OneD();\n\n        if(system_data.length == 0){\n            warp_systems.import(all_drafts[0].colSystemMapping).resize(total_warps);\n            warp_mats.import(all_drafts[0].colShuttleMapping).resize(total_warps);\n        }else{\n            warp_systems.import(system_data[0].colSystemMapping).resize(total_warps);\n            warp_mats.import(system_data[0].colShuttleMapping).resize(total_warps);\n\n        }\n\n        original_string_split.forEach(string_id => {\n\n            let pdm_item = profile_draft_map.find(el => el.val == string_id);\n            if(pdm_item !== undefined){\n                let draft = pdm_item.draft;\n           \n                draft.drawdown.forEach((row, i) => {\n                    let seq = new Sequence.OneD().import(row).resize(total_warps);\n                    pattern.pushWeftSequence(seq.val());\n                    weft_materials.push(draft.rowShuttleMapping[i%draft.rowShuttleMapping.length]);\n                    weft_systems.push(draft.rowSystemMapping[i%draft.rowSystemMapping.length]);\n                })\n\n             }\n\n\n        })\n\n       let d: Draft = initDraftFromDrawdown(pattern.export());\n       d.colShuttleMapping = warp_mats.val();\n       d.colSystemMapping = warp_systems.val();\n       d.rowShuttleMapping = weft_materials.val();\n       d.rowSystemMapping = weft_systems.val();\n\n      \n      return  Promise.resolve([d]);\n\n  }   \n\nconst generateName = (param_vals: Array<OpParamVal>, op_inputs: Array<OpInput>) : string => {\n\n  return 'pattern across length:'+param_vals[0].val+\"\";\n}\n\n\nconst onParamChange = (param_vals: Array<OpParamVal>, inlets: Array<OperationInlet>, inlet_vals: Array<any>, changed_param_id: number, param_val: any) : Array<any> => {\n    \n\n  \n    inlet_vals = reduceToStaticInputs(inlets, inlet_vals);\n    const param_regex = (<StringParam> param_vals[0].param).regex;\n\n    let matches = [];\n\n    matches = utilInstance.parseRegex(param_val,param_regex);\n    matches = utilInstance.filterToUniqueValues(matches);\n\n    matches.forEach(el => {\n      inlet_vals.push(el);\n    })\n\n    return inlet_vals;\n\n\n}\n\n\n\nexport const weft_profile: DynamicOperation = {name, old_names, params, inlets, dynamic_param_id, dynamic_param_type, perform, generateName,onParamChange};","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../provider/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  uid: string;\n\n  constructor(private authService: AuthService) { \n\n    // console.log(\"getting name\", authService.getUid())\n    // this.uid = authService.getUid();\n\n  }\n\n  ngOnInit() {\n\n\n\n  }\n\n\n  signOut() {\n    this.authService.logout();\n  }\n\n}\n","<p>\n  Welcome to your secret profile token: {{uid}}!\n</p>\n<button (click)=\"signOut()\">Sign Out</button>","import { Injectable, Optional } from '@angular/core';\nimport { EMPTY, Observable, Subscription } from 'rxjs';\nimport { FilesystemService } from './filesystem.service';\nimport { getDatabase, ref as fbref, get as fbget } from '@angular/fire/database';\nimport { Auth, authState, createUserWithEmailAndPassword, GoogleAuthProvider, signInAnonymously, signInWithEmailAndPassword, signInWithPopup, signOut, User } from '@angular/fire/auth';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private readonly userDisposable: Subscription|undefined;\n  public readonly user: Observable<User | null> = EMPTY;\n  private readonly userData: Subscription|undefined;\n\n  showLoginButton = false;\n  showLogoutButton = false;\n  isLoggedIn = false;\n  firstLoad = true;\n\n  public uid:string;\n  public username: string = \"\";\n\n  constructor(@Optional() private auth: Auth) {\n\n    if (auth) {\n\n       this.userDisposable = authState(this.auth).subscribe(user => {\n        this.showLoginButton = (user === null);\n        this.showLogoutButton = (user !== null);\n        this.isLoggedIn = (user !== null);\n        this.uid =(user === null) ? \"\" : user.uid;\n        this.firstLoad = false;\n        if(user !== null) this.username = (user.displayName === null) ? user.email : user.displayName;        \n\n\n        //udpate the file system based on the files existing in the database\n        // if(user !== null){\n        //   const db = getDatabase();\n        //   const userFiles = query(ref(db, 'filemeta'), orderByChild('timestamp'));\n\n        //   onValue(userFiles, (snapshot) => {\n        //     snapshot.forEach((childSnapshot) => {\n        //       const childKey = childSnapshot.key;\n        //       const childData = childSnapshot.val();\n        //       if(childData.owner === user.uid) this.filesystem.addToTree(parseInt(childKey), childData)\n              \n        //     });\n        //   }, {\n        //     onlyOnce: true\n        //   });\n        \n        // }\n\n\n       });\n\n    }\n  }\n\n  async emailSignUp(email, password) : Promise<string>{\n    return await createUserWithEmailAndPassword(this.auth, email, password)\n    .then((userCredential) => {\n      // Signed in \n      return \"\";\n      // ...\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      return errorCode;\n    });\n  }\n\n  async emailSignIn(email, password) : Promise<string>{\n    return await signInWithEmailAndPassword(this.auth, email, password)\n    .then((userCredential) => {\n      // Signed in \n      const user = userCredential.user;\n      return \"\";\n      // ...\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      return error.code;\n    });\n\n  }\n\n  async login() {\n    return await signInWithPopup(this.auth, new GoogleAuthProvider());\n  }\n\n  async loginAnonymously() {\n    return await signInAnonymously(this.auth);\n  }\n\n  async logout() {\n    return await signOut(this.auth);\n  }\n\n  /**\n   * Used to determine when login is taking place, at very first load or mid use?\n   * @returns true if this is the first time the page is being loaded, false if it has already been active\n   */\n  isFirstSession() : boolean {\n    console.log(\"this.firstload\", this.firstLoad)\n    return this.firstLoad;\n  }\n\n  /**\n   * pings the users database to see if this user has an account already\n   * if it does, returns the account info\n   * if not, it returns null\n   */\n  getAccount(uid: string) : Promise<any> {\n    const db = getDatabase();\n    return fbget(fbref(db, `users/${uid}`)).then((userdata) => {\n      if(userdata.exists()){\n        return Promise.resolve(userdata.val());\n      }else{\n        return Promise.resolve(null);\n      }\n    });\n  }\n\n  /**\n   * checks to see if this user has an id already saved for their last used file\n   * @param user \n   */\n  getMostRecentFileIdFromUser(user: any): Promise<number>{\n    \n    return this.getAccount(user.uid).then(data => {\n      if(data.last_opened === undefined) return Promise.resolve(null);\n      else return Promise.resolve(data.last_opened)\n  \n    }).catch(console.error);\n  }\n\n  /**\n   * checks to see if this user has an ada file already saved for their last used file\n   * @param user \n   */\n    getMostRecentAdaFromUser(user: any): Promise<any>{\n      \n      return this.getAccount(user.uid).then(data => {\n        if(data.ada === undefined) return Promise.resolve(null);\n        else return Promise.resolve(data.ada)\n     })\n  \n    }\n  \n\n\n\n\n\n\n\n    ngOnDestroy(): void {\n      if (this.userDisposable) {\n        this.userDisposable.unsubscribe();\n      }\n\n      if (this.userData) {\n        this.userData.unsubscribe();\n      }\n    }\n  \n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { DesignMode } from '../model/datatypes';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DesignmodesService {\n\n\n  design_modes: Array<DesignMode>;\n  draw_modes:Array<DesignMode>;\n  shapes:Array<DesignMode>;\n\n  design_actions: Array<DesignMode>;\n  drawdown_editing_style: Array<DesignMode>;\n\n  \n  view_modes:Array<DesignMode>;\n  \n  density_units:Array<DesignMode>;\n  material_types: Array<DesignMode>;\n  loom_types: Array<DesignMode>\n  \n/**\n * Creates the objects that track which design mode (draw, select, etc) the user is currently working in. \n */\n  constructor() { \n\n\n    this.loom_types = [\n      //{value: 'rigid', viewValue: 'Ridid Heddle Loom',icon: \"fas fa-slash\", children: [], selected: false},\n      {value: 'direct', viewValue: 'Direct Tieup Loom',icon: \"fas fa-slash\", children: [], selected: true},\n      {value: 'frame', viewValue: 'Shaft/Treadle Loom',icon: \"fas fa-slash\", children: [], selected: false},\n      {value: 'jacquard', viewValue: 'Jacquard',icon: \"fas fa-slash\", children: [], selected: false}\n    ];\n  \n  \n\n    this.material_types = [\n      {value: '0', viewValue: 'Non-Conductive', icon: \"fas fa-slash\", children: [], selected: true},\n      {value: '1', viewValue: 'Conductive', icon: \"fas fa-slash\", children: [], selected: false},\n      {value: '2', viewValue: 'Resistive', icon: \"fas fa-slash\", children: [], selected: false}\n    ];\n\n    this.view_modes = [\n      {value: 'visual', viewValue: 'Visual', icon: \"fas fa-slash\", children: [], selected: false},\n      {value: 'pattern', viewValue: 'Draft', icon: \"fas fa-slash\", children: [], selected: true},\n      {value: 'yarn', viewValue: 'Circuit',icon: \"fas fa-slash\", children: [], selected: false},\n      {value: 'crossings', viewValue: 'Crossings',icon: \"fas fa-times\", children: [], selected: false}\n     // {value: 'mask', viewValue: 'Masks'}\n\n    ];\n\n    this.density_units = [\n      {value: 'in', viewValue: 'Ends per Inch', icon: \"fas fa-slash\", children: [], selected: false},\n      {value: 'cm', viewValue: 'Ends per 10cm ',icon: \"fas fa-slash\", children: [], selected: false}\n    ];\n\n    this.shapes = [\n      {value: 'line', viewValue: 'Line', icon: \"fas fa-slash\", children: [], selected: true},\n      {value: 'fill_circle', viewValue: 'Filled Circle', icon: \"fas fa-circle\", children: [], selected: false},\n      {value: 'stroke_circle', viewValue: 'Circle Outline', icon: \"far fa-circle\", children: [],selected: false},\n      {value: 'fill_rect', viewValue: 'Filled Rectangle', icon: \"fas fa-square\", children: [], selected: false},\n      {value: 'stroke_rect', viewValue: 'Rectangle Outline', icon: \"far fa-square\", children: [], selected: false},\n      {value: 'free', viewValue: 'Freehand', icon: \"fas fa-draw-polygon\", children: [], selected: false},\n    ]\n\n    this.draw_modes = [\n      {value: 'toggle', viewValue: 'Toggle Heddle', icon: \"fas fa-adjust\", children: [],selected: true},\n      {value: 'up', viewValue: 'Set Heddle Up', icon: \"fas fa-square\", children: [], selected: false},\n      {value: 'down', viewValue: 'Set Heddle Down', icon: \"far fa-square\", children: [], selected: false},\n      {value: 'unset', viewValue: 'Unset Heddle', icon: \"far fa-times\", children: [], selected: false},\n      {value: 'material', viewValue: 'Draw Material', icon: \"fas fa-pen\", children: [], selected: false},\n\n    ]\n\n    this.drawdown_editing_style = [\n      {value: 'drawdown', viewValue: 'Edit Drawdown (and Auto-Generate Loom Configuration)', icon: \"fas fa-pen\", children: [], selected: true},\n      {value: 'loom', viewValue: 'Edit Loom Configuration (and Auto-Generate Drawdown)', icon: \"fas fa-shapes\", children:[],selected: false},\n    ];\n    \n    this.design_modes = [\n      {value: 'draw', viewValue: 'Draw Heddle', icon: \"fas fa-pen\", children: this.draw_modes, selected: false},\n      {value: 'pan', viewValue: 'Pan', icon: \"fas fa-hand\", children: [], selected: false},\n      // {value: 'shape', viewValue: 'Shape', icon: \"fas fa-shapes\", children: this.shapes,selected: false},\n      {value: 'select', viewValue: 'Select', icon: \"fas fa-expand\", children: [],selected:false},\n      {value: 'marquee', viewValue: 'Cut/Create', icon: \"fas fa-expand\", children: [], selected:false},\n      {value: 'move', viewValue: 'Move', icon: \"fas fa-arrows-alt\", children: [],selected:true}\n      // {value: 'operation', viewValue: 'Operations', icon: \"fas fa-project-diagram\", children: [],selected:false},\n      // {value: 'zoom_in', viewValue: 'Zoom In', icon: \"fas fa-search-plus\", children: [], selected:false},\n      // {value: 'zoom_out', viewValue: 'Zoom Out', icon: \"fas fa-search-minus\", children: [],selected:false},\n      // {value: 'comment', viewValue: 'Comment', icon: \"fas fa-comment\", children: [],selected:false},\n    ];\n\n   this.design_actions = [\n      {value: 'toggle', viewValue: 'Invert Region', icon: \"fas fa-adjust\", children: [],selected:false},\n      {value: 'up', viewValue: 'Set Region Heddles Up', icon: \"fas fa-square\", children: [],selected:false},\n      {value: 'down', viewValue: 'Set Region Heddles Down', icon: \"far fa-square\", children: [],selected:false},\n      {value: 'flip_x', viewValue: 'Vertical Flip', icon: \"fas fa-arrows-alt-v\", children: [],selected:false},\n      {value: 'flip_y', viewValue: 'Horizontal Flip', icon: \"fas fa-arrows-alt-h\", children: [],selected:false},\n      {value: 'shift_left', viewValue: 'Shift 1 Warp Left', icon: \"fas fa-arrow-left\", children: [],selected:false},\n      {value: 'shift_up', viewValue: 'Shift 1 Pic Up', icon: \"fas fa-arrow-up\", children: [],selected:false},\n      {value: 'copy', viewValue: 'Copy Selected Region', icon: \"fa fa-clone\",children: [],selected:false},\n      {value: 'paste', viewValue: 'Paste Copyed Pattern to Selected Region', icon: \"fa fa-paste\",children: [],selected:false}\n    ];\n  \n  }\n\n  getOptionSet(name: string):Array<DesignMode>{\n    let modes: Array<DesignMode> = [];\n\n    switch(name){\n      case 'design_modes' : \n      modes = this.design_modes\n      break;\n\n      case 'view_modes' : \n      modes = this.view_modes\n      break;\n\n      case 'density_units' : \n      modes = this.density_units\n      break;\n\n      case 'loom_types' : \n      modes = this.loom_types;\n      break;    \n      \n      case 'shapes' : \n      modes = this.shapes;\n      break; \n     \n      case 'draw_modes' : \n      modes = this.draw_modes;\n      break;       \n      \n      case 'material_types' : \n      modes = this.material_types;\n      break;  \n\n      case 'design_actions' : \n      modes = this.design_actions;\n      break;  \n\n      case 'drawdown_editing_style' : \n      modes = this.drawdown_editing_style;\n      break;  \n    }\n\n    return modes;\n  }\n\n\n\n  /**\n   * A function to selects one mode and deselect others from a set of options given by the string \"from\"\n   * @param value of the component we're looking to set as selected\n   * @param name of the option set we are selecting from\n   */\n\n   selectDesignMode(value: string, from: string) {\n    \n\n    switch(from){\n\n      case 'shapes' : \n      this.selectDesignMode('shape', 'design_modes');\n      break; \n     \n      case 'draw_modes' : \n      this.selectDesignMode('draw', 'design_modes');\n      break;       \n      \n    }\n\n    const modes:Array<DesignMode> = this.getOptionSet(from);\n\n    modes.forEach( mode => {\n       if(mode.value === value){\n          mode.selected = true;\n       }else{\n          mode.selected = false;\n       }\n    });\n\n\n   }\n\n\n  /**\n   * A function to retreive a mode by name.\n   * @param name the name of the component we're looking to retreive\n   * @returns the DeisgnMode associated with that name, or null if nothing was found\n   */\n\n  getDesignMode(value: string, from: string): DesignMode {\n   \n    const modes:Array<DesignMode> = this.getOptionSet(from);\n     let found: DesignMode = null;\n\n   modes.forEach( mode => {\n      if(mode.value === value) found =  mode;\n   });\n    return found;\n  }\n\n  /**\n   * A function to retreive a mode by name.\n   * Possible modes to select from are: \n   * design_modes\n   * draw_modes\n   * shapes\n   * design_actions\n   * drawdown_editing_style\n   * view_modes\n   * density_units\n   * material_types\n   * loom_types\n   * @returns the DeisgnMode associated with that name, or null if nothing was found\n   * \n   */\n   getSelectedDesignMode(from: string): DesignMode {\n   \n    const modes:Array<DesignMode> = this.getOptionSet(from);\n    let found: DesignMode = null;\n \n    modes.forEach( mode => {\n       if(mode.selected === true) found =  mode;\n    });\n\n    //if null, return the first in the list\n    if(found === null){\n      const opts: Array<DesignMode> =  this.getOptionSet(from);\n      this.selectDesignMode(opts[0].value, from);\n      return opts[0];\n    }\n\n    return found;\n   }\n\n\n\n  /**\n   * checks if a user specified mode is selected\n   * @param name the name of the mode we are asking about\n   * @returns boolean describing if it was selected or not\n   */\n  isSelected(value:string, from: string):boolean{\n    const mode: DesignMode = this.getDesignMode(value, from);\n    if(mode == null){\n      console.error(\"mode \", value, \" in \", from, \" is null \");\n      return false;\n    }\n    return mode.selected;\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Example } from '../model/datatypes';\nimport examples from '../../../assets/json/examples.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExampleserviceService {\n\n  example_set: Array<Example> = [];\n\n  constructor() { \n\n    examples.examples.forEach(e => {\n      this.example_set.push({\n        id: e.id,\n        ext: e.ext,\n        desc: e.desc,\n        title: e.title\n      })\n    })\n\n  }\n\n  getExamples() : Array<Example>{\n\n    return this.example_set;\n  }\n\n\n\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Draft, DraftNodeProxy, Fileloader, FileObj, FileSaver, LoadResponse, Loom, LoomSettings, OpComponentProxy, SaveObj, StatusMessage } from '../model/datatypes';\nimport { initDraftWithParams, loadDraftFromFile } from '../model/drafts';\nimport { getLoomUtilByType, loadLoomFromFile } from '../model/looms';\nimport utilInstance from '../model/util';\nimport { FilesystemService } from './filesystem.service';\nimport { MaterialsService } from './materials.service';\nimport { NotesService } from './notes.service';\nimport { SystemsService } from './systems.service';\nimport { TreeService } from './tree.service';\nimport { VersionService } from './version.service';\nimport { WorkspaceService } from './workspace.service';\n\n\n\n\n/**\n * this service handles the processing of data from an uplaoded file. \n * It is called from the InitModal when the user uploads data. \n * The principle sholud be that you can load any .ada file into \n * mixer or weaver, no matter what. \n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n\n\n  status: Array<StatusMessage> = [];\n  loader: Fileloader = null;\n  saver: FileSaver = null;\n\n  constructor(\n    private tree: TreeService, \n    private ns: NotesService,\n    private ms: MaterialsService,\n    private ss: SystemsService,\n    private vs: VersionService,\n    private ws: WorkspaceService,\n    private files: FilesystemService) { \n  \n  this.status = [\n    {id: 0, message: 'success', success: true},\n    {id: 1, message: 'incompatable type', success: false}\n  ];\n\n\n  /**\n   * file loader loads files of different types, \n   * for .adaFiles, it gets the data listed in SaveObj and begins to process it\n   */\n  const dloader: Fileloader = {\n\n     ada: async (filename: string, id: number, desc: string, data: any) : Promise<LoadResponse> => {\n      if(desc === undefined) desc = \"\"\n      if(filename == undefined) filename = 'draft' \n      if(id === -1) id = this.files.generateFileId();\n      \n      let draft_nodes: Array<DraftNodeProxy> = [];\n      //let looms: Array<Loom> = [];\n      let ops: Array<OpComponentProxy> = [];\n      let version = \"0.0.0\";\n      \n      this.clearAll();\n\n      if(data == undefined) return Promise.reject(\" there is no data\")\n\n      if(data.version !== undefined) version = data.version;\n\n      if(data.workspace !== undefined){\n        this.ws.loadWorkspace(data.workspace);\n      }else{\n        this.ws.initDefaultWorkspace();\n      }\n\n      if(data.shuttles !== undefined){\n        this.ms.overloadShuttles(data.shuttles);\n\n      }else{\n        if(data.materials !== undefined){\n          this.ms.overloadShuttles(data.materials); \n        }\n      }\n\n      const flips_required = utilInstance.getFlips(3, this.ws.selected_origin_option);\n\n      const loom_elements = []\n      const loom_fns = []\n      const draft_elements = [];\n      const draft_fns = [];\n\n      if(!utilInstance.sameOrNewerVersion(version, '3.4.9')){\n        data.nodes.forEach(node => {\n          if(node.bounds !== undefined) node.topleft = node.bounds.topleft;\n        })\n      }\n\n      if(utilInstance.sameOrNewerVersion(version, '3.4.5')){\n        draft_nodes = data.draft_nodes;\n\n        if(draft_nodes == undefined) draft_nodes = [];\n\n        if(draft_nodes !== undefined){\n          draft_nodes.forEach(el => {\n            if(el.draft !== null && el.draft !== undefined){\n              draft_fns.push(loadDraftFromFile(el.draft, flips_required, version));\n              draft_elements.push(el);\n            }\n\n            if(el.loom !== null && el.loom !== undefined){\n              loom_fns.push(loadLoomFromFile(el.loom, flips_required, version));\n              loom_elements.push(el);\n            }\n        \n          });\n       }\n        \n      }else{\n\n        //handle old file types that didn't separate out drafts\n        if(data.drafts === undefined) data.drafts = [data];\n      \n\n        data.nodes\n        .filter(el => el.type === 'draft')\n        .forEach(async node => {\n          const loom = data.looms.find(loom => loom.draft_id === node.node_id);\n          const draft = data.drafts.find(draft => draft.id === node.node_id);\n\n          const dn: DraftNodeProxy = {\n            node_id: (node === undefined) ? -1 : node.node_id,\n            draft_id: node.node_id,\n            draft_name: node.draft_name,\n            draft:draft,\n            draft_visible: (node === undefined) ? true : node.draft_visible,\n            loom:null,\n            loom_settings: (loom === undefined) \n              ? {type: this.ws.type, epi: this.ws.epi, units: this.ws.units, frames: this.ws.min_frames, treadles: this.ws.min_treadles } \n              : {type: loom.type, epi: loom.epi, units: loom.units, frames: loom.min_frames, treadles: loom.min_treadles},\n            render_colors: (node === undefined || node.render_colors === undefined) ? true : node.render_colors,\n          }\n\n          draft_nodes.push(dn);\n\n          if(draft !== null && draft !== undefined){\n            draft_fns.push(loadDraftFromFile(draft, flips_required, version));\n            draft_elements.push(dn);\n          }\n\n          if(loom !== null && loom !== undefined){\n            loom_fns.push(loadLoomFromFile(loom, flips_required, version));\n            loom_elements.push(dn);\n          }\n\n\n        });\n\n        //in previous versions drafts and looms were loaded separately\n      }\n\n      return Promise.all(draft_fns)\n      .then( res => {\n\n          for(let i = 0; i < draft_elements.length; i++){\n            draft_elements[i].draft = res[i];\n          }\n\n      return Promise.all(loom_fns)\n      })\n      .then(res => {\n\n        for(let i = 0; i < loom_elements.length; i++){\n          draft_elements[i].loom = res[i];\n        }\n        \n        draft_nodes\n        .filter(el => el.draft !== null)\n        .forEach(el => {\n          //scan the systems and add any that need to be added\n          if(el.draft !== null && el.draft !== undefined && el.draft.rowSystemMapping !== undefined){\n            el.draft.rowSystemMapping.forEach(el => {\n              if(this.ss.getWeftSystem(el) === undefined) this.ss.addWeftSystemFromId(el);\n            });\n          }  \n  \n          //scan the systems and add any that need to be added\n          if(el.draft !== null && el.draft !== undefined && el.draft.colSystemMapping !== undefined){\n            el.draft.colSystemMapping.forEach(el => {\n              if(this.ss.getWarpSystem(el) === undefined) this.ss.addWarpSystemFromId(el);\n            });\n          }  \n        })\n      \n    \n        if(data.ops !== undefined){\n          ops = data.ops.map(data => {\n            const op: OpComponentProxy = {\n              node_id: data.node_id,\n              name: data.name,\n              params: data.params,\n              inlets: (data.inlets === undefined) ? [0] : data.inlets \n            }\n            return op;\n          });\n        }\n        \n          const envt: FileObj = {\n            version: data.version,\n            workspace: data.workspace,\n            filename: filename,\n            nodes: (data.nodes === undefined) ? [] : data.nodes,\n            treenodes: (data.tree === undefined) ? [] : data.tree,\n            draft_nodes: draft_nodes,\n            notes: (data.notes === undefined) ? [] : data.notes,\n            ops: ops,\n            scale: (data.scale === undefined) ? 5 : data.scale,\n          }\n    \n          return Promise.resolve({data: envt, name: filename, desc: desc, status: 0, id:id }); \n  \n        }\n      )\n\n\n\n    \n\n    }, \n\n    paste: async (data: any) : Promise<LoadResponse> => {\n      \n      let draft_nodes: Array<DraftNodeProxy> = [];\n      let ops: Array<OpComponentProxy> = [];\n      let version = \"0.0.0\";\n      \n      // this.clearAll();\n\n     \n\n      if(data.shuttles !== undefined){\n       //handle shuttles here\n      }\n\n      const flips_required = utilInstance.getFlips(this.ws.selected_origin_option, 3);\n\n    \n      const loom_elements = []\n      const loom_fns = []\n      const draft_elements = [];\n      const draft_fns = [];\n\n      draft_nodes = data.draft_nodes;\n\n      draft_nodes.forEach(el => {\n        if(el.draft !== null && el.draft !== undefined){\n          draft_fns.push(loadDraftFromFile(el.draft, flips_required, version));\n          draft_elements.push(el);\n        }\n\n        if(el.loom !== null && el.loom !== undefined){\n          loom_fns.push(loadLoomFromFile(el.loom, flips_required, version));\n          loom_elements.push(el);\n        }\n      });\n\n      return Promise.all(draft_fns)\n      .then( res => {\n\n          for(let i = 0; i < draft_elements.length; i++){\n            draft_elements[i].draft = res[i];\n          }\n\n      return Promise.all(loom_fns)\n      })\n      .then(res => {\n\n        for(let i = 0; i < loom_elements.length; i++){\n          draft_elements[i].loom = res[i];\n        }\n        \n        draft_nodes\n        .filter(el => el.draft !== null)\n        .forEach(el => {\n          //scan the systems and add any that need to be added\n          if(el.draft !== null && el.draft !== undefined && el.draft.rowSystemMapping !== undefined){\n            el.draft.rowSystemMapping.forEach(el => {\n              if(this.ss.getWeftSystem(el) === undefined) this.ss.addWeftSystemFromId(el);\n            });\n          }  \n  \n          //scan the systems and add any that need to be added\n          if(el.draft !== null && el.draft !== undefined && el.draft.colSystemMapping !== undefined){\n            el.draft.colSystemMapping.forEach(el => {\n              if(this.ss.getWarpSystem(el) === undefined) this.ss.addWarpSystemFromId(el);\n            });\n          }  \n        })\n      \n    \n        if(data.ops !== undefined){\n          ops = data.ops.map(data => {\n            const op: OpComponentProxy = {\n              node_id: data.node_id,\n              name: data.name,\n              params: data.params,\n              inlets: (data.inlets === undefined) ? [0] : data.inlets \n            }\n            return op;\n          });\n        }\n        \n          const envt: FileObj = {\n            version: '0.0.0',\n            workspace: null,\n            filename: 'paste',\n            nodes: (data.nodes === undefined) ? [] : data.nodes,\n            treenodes: (data.tree === undefined) ? [] : data.tree,\n            draft_nodes: draft_nodes,\n            notes:  [],\n            ops: ops,\n            scale: 5,\n          }\n    \n          return Promise.resolve({data: envt, name: 'paste', desc: 'a file represeting copied information', status: 0, id:-1 }); \n  \n        }\n      )\n\n\n\n    \n\n    }, \n\n    // wif: async (filename: string, data: any) : Promise<LoadResponse> => {\n    //   this.clearAll();\n\n\n    //   let drafts: Array<Draft> = [];\n    //   let looms: Array<Loom> = [];\n    //   let version = '0.0.0';\n     \n    //   var stringWithoutMetadata = utilInstance.getSubstringAfter(\"CONTENTS\", data);\n    //   const warps:number = utilInstance.getInt(\"Threads\",utilInstance.getSubstringAfter(\"WARP]\",stringWithoutMetadata));\n    //   const wefts:number = utilInstance.getInt(\"Threads\",utilInstance.getSubstringAfter(\"WEFT]\",stringWithoutMetadata));\n    //   const pattern: Array<Array<Cell>> = [];\n      \n    //   this.ns.resetNotes(); \n\n    //   for (var i = 0; i < wefts; i++) {\n    //     pattern.push([]);\n    //     for (var j = 0; j < warps; j++) {\n    //       pattern[i].push(new Cell(null));\n    //       pattern[i][j].setHeddle(false);\n    //     }\n    //   }\n\n    //   const draft = initDraft();\n    //   draft.drawdown = generateDrawdownWithPattern(pattern, warps, wefts);\n    //   drafts.push(draft);\n    //   draft.gen_name = data.name;\n\n    // let frames = utilInstance.getInt(\"Shafts\", data);\n    // let treadles = utilInstance.getInt(\"Treadles\", data);\n    \n    // const loom:Loom = new Loom(draft, 'frame', frames, treadles);\n    // looms.push(loom);\n\n    // // draft.loom.tieup = []\n\n    // // for (var i = 0; i < frames; i++) {\n    // //   draft.loom.tieup.push([]);\n    // //   for (var j = 0; j < treadles; j++) {\n    // //     draft.loom.tieup[i].push(false);\n    // //   }\n    // // }\n\n    // if (utilInstance.getBool(\"TREADLING\", stringWithoutMetadata)) {\n    //   var treadling = utilInstance.getTreadling(stringWithoutMetadata, draft);\n    //   loom.overloadTreadling(treadling, version, pattern.length);\n    // }\n    // if (utilInstance.getBool(\"THREADING\", stringWithoutMetadata)) {\n    //   var threading = utilInstance.getThreading(stringWithoutMetadata, draft);\n    //   loom.overloadThreading(threading);\n    // }\n    // if (utilInstance.getBool(\"TIEUP\", data)) {\n    //   var tieups = utilInstance.getTieups(stringWithoutMetadata, draft);\n    //   loom.overloadTieup(tieups);\n\n    // }\n    // if (utilInstance.getBool(\"COLOR TABLE\",data)) {\n    //   if (utilInstance.getString(\"Form\", data) === \"RGB\") {\n    //     let color_table: Array<Shuttle>  = utilInstance.getColorTable(data);\n    //     var shuttles = color_table;\n\n    //     /** TODO: Update this to add, not overwrite, shuttles */\n    //     this.ms.overloadShuttles(shuttles);\n    //     draft.overloadRowShuttleMapping(utilInstance.getRowToShuttleMapping(data, draft));\n    //     draft.overloadColShuttleMapping(utilInstance.getColToShuttleMapping(data, draft));\n    //   }\n    // }\n\n    // draft.recalculateDraft(tieups, treadling, threading);\n\n\n    // const proxies = this.tree.getNewDraftProxies(draft, []);\n\n    \n    // const f: FileObj = {\n    //   version: 'na',\n    //   filename: filename,\n    //   drafts: drafts,\n    //   looms: looms,\n    //   nodes: [proxies.node], \n    //   treenodes: [proxies.treenode],\n    //   ops: [],\n    //   scale: 5\n    // }\n\n\n    // return Promise.resolve({data: f ,status: 0});\n    // },\n    /**\n     * takes in a jpg, creates as many drafts as there are unique colors in the image. \n     * @param data \n     * @returns \n     */\n    // jpg: async (filename: string, data: any) : Promise<LoadResponse> => {\n    //   this.clearAll();\n\n    //   let drafts: Array<Draft> = [];\n    //   let looms: Array<Loom> = [];\n    //   this.ns.resetNotes(); \n\n    //   let e = data;\n    //   const warps = e.width;\n    //   const wefts = e.height;\n  \n    //   var img = e.data;\n\n    //   let hex_string: string = \"\";\n    //   const img_as_hex: Array<string> = [];\n    //   img.forEach((el, ndx) => {\n    //     hex_string = hex_string + el.toString(16);\n    //     if(ndx % 4 === 3){\n    //       img_as_hex.push(hex_string);\n    //       hex_string = \"\";\n    //     }\n\n    //   });\n\n\n    //   //the color table is a unique list of all the colors in this image\n    //   const seen: Array<string> = [];\n    //   const color_table: Array<string> = img_as_hex.filter((el, ndx) => {\n    //     if(seen.find(seen => seen === el) === undefined){\n    //       seen.push(el);\n    //       return true;\n    //     }\n    //   });\n    //   console.log(\"color table\", color_table);\n\n\n    //   //create a draft for each color table\n    //   color_table.forEach(color => {\n    //     const draft = initDraft();\n    //     draft.drawdown = generateDrawdownWithPattern([[new Cell(false)]], warps, wefts);\n    //     console.log(draft);\n    //     img_as_hex.forEach((el, ndx)=>{\n    //       const r: number = Math.floor(ndx/warps);\n    //       const c: number = ndx % warps;\n    //       if(el === color) draft.drawdown[r][c].setHeddleUp();\n    //       else draft.drawdown[r][c].unsetHeddle();\n    //     });\n    //     drafts.push(draft);\n    //     const loom:Loom = new Loom(draft, 'jacquard', 8, 10);\n    //     looms.push(loom);\n    //   })\n\n\n\n  \n    //   // for (var i=0; i< e.height; i++) {\n    //   //   pattern.push([]);\n    //   //   for (var j=0; j< e.width; j++) {\n    //   //     var idx = (i * 4 * warps) + (j * 4);\n    //   //     var threshold = (img[idx] + img[idx+1] + img[idx+2]);\n    //   //     var alpha = img[idx + 3];\n  \n    //   //     if (threshold < 750 && alpha != 0) {\n    //   //       pattern[i].push(new Cell(true));\n    //   //     } else {\n    //   //       pattern[i].push(new Cell(false));\n    //   //     }\n    //   //   }\n    //   // }\n  \n    //   // const draft: Draft = new Draft({warps: warps, wefts: wefts, pattern: pattern});\n    //   // drafts.push(draft);\n      \n    //   // //create a blank loom to accompany this\n    //   // const loom:Loom = new Loom(draft, 8, 10);\n    //   // loom.overloadType('jacquard');\n    //   // looms.push(loom);\n\n\n    //   const f: FileObj = {\n    //     filename: filename,\n    //     version: 'na',\n    //     drafts: drafts,\n    //     looms: looms,\n    //     nodes: [], \n    //     treenodes: [],\n    //     ops: [],\n    //     scale: 5\n    //   }\n  \n    //   return Promise.resolve({data: f ,status: 0});  \n    // },\n    // bmp: async (filename: string, data: any) : Promise<LoadResponse> => {\n    //   this.clearAll();\n\n    //   let drafts: Array<Draft> = [];\n    //   let looms: Array<Loom> = [];\n\n    //   let e = data;\n    //   const warps = e.width;\n    //   const wefts = e.height;\n  \n    //   var img = e.data;\n    //   var pattern = [];\n  \n    //   for (var i=0; i< e.height; i++) {\n    //     pattern.push([]);\n    //     for (var j=0; j< e.width; j++) {\n    //       var idx = (i * 4 * warps) + (j * 4);\n    //       var threshold = (img[idx] + img[idx+1] + img[idx+2]);\n    //       var alpha = img[idx + 3];\n  \n    //       if (threshold < 750 && alpha != 0) {\n    //         pattern[i].push(new Cell(true));\n    //       } else {\n    //         pattern[i].push(new Cell(false));\n    //       }\n    //     }\n    //   }\n  \n    //   const draft: Draft = new Draft({warps: warps, wefts: wefts, pattern: pattern});\n    //   drafts= [ draft];\n      \n    //   //create a blank loom to accompany this\n    //   const loom:Loom = new Loom(draft, 'jacquard', 8, 10);\n    //   looms.push(loom);\n\n    //   const proxies = this.tree.getNewDraftProxies(draft, []);\n\n    \n    //   const f: FileObj = {\n    //     filename: filename,\n    //     version: 'na',\n    //     drafts: drafts,\n    //     looms: looms,\n    //     nodes: [proxies.node], \n    //     treenodes: [proxies.treenode],\n    //     ops: [],\n    //     scale: 5\n    //   }\n  \n    //   return Promise.resolve({data: f ,status: 0});  \n    // },\n    form: async (f:any):Promise<LoadResponse> =>{\n      this.clearAll();\n\n      let drafts: Array<Draft> = [];\n      let looms: Array<Loom> = [];\n\n      var warps = 20;\n      if(f.value.warps !== undefined) warps = f.value.warps;\n\n\n      var wefts = 20;\n      if(f.value.wefts !== undefined) wefts = f.value.wefts;\n\n      const draft: Draft = initDraftWithParams({warps: warps, wefts: wefts});\n\n      var frame_num = (f.value.frame_num === undefined) ? 8 : f.value.frame_num;\n      var treadle_num = (f.value.treadle_num === undefined) ? 10 : f.value.treadle_num;\n      var loomtype = (f.value.loomtype === undefined) ? 'frame' : f.value.loomtype;\n      var frame_num = (f.value.frame_num === undefined) ? 2 : f.value.frame_num;\n      var treadle_num = (f.value.treadle_num === undefined) ? 2 : f.value.treadle_num;\n      if(f.value.loomtype == 'direct') treadle_num = frame_num;\n      var epi = (f.value.epi === undefined) ? 10 : f.value.epi;\n      var units = (f.value.units === undefined || ! f.value.units) ? \"in\" : f.value.units;\n      \n\n\n      const loom_settings: LoomSettings = {\n        type: loomtype,\n        epi: epi, \n        units: units,\n        frames: frame_num,\n        treadles: treadle_num\n      }\n\n      this.ws.inferData([loom_settings]);\n      \n\n      const loomutils = getLoomUtilByType(loomtype);\n      return loomutils.computeLoomFromDrawdown(draft.drawdown, loom_settings, 0).then(loom => {\n        looms.push(loom);\n        const proxies = this.tree.getNewDraftProxies(draft, []);\n        draft.id  = proxies.node.node_id;\n        proxies.draft_node.draft = draft;\n        proxies.draft_node.draft_id = draft.id;\n        proxies.draft_node.loom = loom;\n        proxies.draft_node.loom_settings = loom_settings;\n\n\n\n        \n        const envt: FileObj = {\n          version: this.vs.currentVersion(),\n          workspace: this.ws.exportWorkspace(),\n          filename: \"adacad mixer\",\n          nodes: [proxies.node], \n          treenodes: [proxies.treenode],\n          draft_nodes: [proxies.draft_node],\n          notes: [],\n          ops: [],\n          scale: 5\n        }\n    \n        return Promise.resolve({data: envt, name: \"new draft\", desc: \"created via form\", status: 0, id: this.files.generateFileId()});\n\n      });\n\n  \n\n      \n\n\n    }\n  }\n\n  // interface FileSaver{\n  //   ada: (drafts: Array<Draft>, looms: Array<Loom>, pattern: Array<Pattern>, palette:PaletteComponent) => void,\n  //   wif: (drafts: Array<Draft>, looms: Array<Loom>) => void,\n  //   bmp: (drafts: Array<Draft>) => LoadResponse,\n  //   jpg: (drafts: Array<Draft>, looms: Array<Loom>, pattern: Array<Pattern>, palette:PaletteComponent) => void\n  // }\n  \n\n  const dsaver: FileSaver = {\n\n    copy:  async (include: Array<number>, current_scale: number) : Promise<SaveObj> => {\n    \n      const out: SaveObj = {\n        type: 'partial',\n        version: this.vs.currentVersion(),\n        workspace: null,\n        nodes: this.tree.exportNodesForSaving(current_scale),\n        tree: this.tree.exportTreeForSaving(),\n        draft_nodes: await this.tree.exportDraftNodeProxiesForSaving(),\n        ops: this.tree.exportOpMetaForSaving(),\n        notes: [],\n        materials: this.ms.exportForSaving(),\n        scale: 5\n      }\n\n      //now filter out things that aren't relevant\n      out.nodes = out.nodes.filter(node => include.find(el => el == node.node_id) !== undefined);\n      out.nodes.forEach(node => {node.topleft = {x: node.topleft.x + 50, y: node.topleft.y+50}});\n      out.tree = out.tree.filter(tn => include.find(el => el == tn.node) !== undefined);\n      out.draft_nodes = out.draft_nodes.filter(dn =>  include.find(el => el == dn.node_id) !== undefined);\n      out.ops = out.ops.filter(op => include.find(el => el == op.node_id) !== undefined)\n\n\n      return Promise.resolve(out);\n\n    },\n    \n    ada:  async (type: string, for_timeline: boolean, current_scale: number) : Promise<{json: string, file: SaveObj}> => {\n           \n      const out: SaveObj = {\n        version: this.vs.currentVersion(),\n        workspace: this.ws.exportWorkspace(),\n        type: type,\n        nodes: this.tree.exportNodesForSaving(current_scale),\n        tree: this.tree.exportTreeForSaving(),\n        draft_nodes: await this.tree.exportDraftNodeProxiesForSaving(),\n        ops: this.tree.exportOpMetaForSaving(),\n        notes: this.ns.exportForSaving(),\n        materials: this.ms.exportForSaving(),\n        scale: current_scale\n      }\n\n      //update this to return the object and see how it writes\n      var theJSON = JSON.stringify(out);\n      return Promise.resolve({json: theJSON, file: out});\n\n\n    },\n   // wif: async (draft: Draft, loom: Loom) : Promise<string> => {\n      // const shuttles: Array<Shuttle> = this.ms.getShuttles();\n      //   //will need to import the obj for draft2wif.ts and then use it and pass this.weave for fileContents\n      // var fileContents = \"[WIF]\\nVersion=1.1\\nDate=November 6, 2020\\nDevelopers=Unstable Design Lab at the University of Colorado Boulder\\nSource Program=AdaCAD\\nSource Version=3.0\\n[CONTENTS]\";\n      // var fileType = \"text/plain\";\n\n      // fileContents += \"\\nCOLOR PALETTE=yes\\nWEAVING=yes\\nWARP=yes\\nWEFT=yes\\nTIEUP=yes\\nCOLOR TABLE=yes\\nTHREADING=yes\\nWARP COLORS=yes\\nTREADLING=yes\\nWEFT COLORS=yes\\n\";\n      \n      // fileContents += \"[COLOR PALETTE]\\n\";\n      // fileContents += \"Entries=\" + (shuttles.length).toString() +\"\\n\";\n      // fileContents += \"Form=RGB\\nRange=0,255\\n\";\n\n      // fileContents += \"[WEAVING]\\nShafts=\";\n      // fileContents += loom.min_frames.toString();\n      // fileContents += \"\\nTreadles=\";\n      // fileContents += loom.min_treadles.toString();\n      // fileContents += \"\\nRising Shed=yes\\n\";\n      // fileContents += \"[WARP]\\nThreads=\";\n      // fileContents += draft.warps.toString();\n      \n      // var warpColors = [];\n      // for (var i = 0; i < draft.colShuttleMapping.length; i++) {\n      //   if (!warpColors.includes(draft.colShuttleMapping[i])) {\n      //     warpColors.push(draft.colShuttleMapping[i]);\n      //   }\n      // }\n      // fileContents += \"\\nColors=\" + warpColors.length.toString();\n\n      // fileContents += \"\\n[WEFT]\\nThreads=\";\n      // fileContents += draft.wefts.toString();\n      // var weftColors = [];\n      // for (var i = 0; i < draft.colShuttleMapping.length; i++) {\n      //   if (!weftColors.includes(draft.colShuttleMapping[i])) {\n      //     weftColors.push(draft.colShuttleMapping[i]);\n      //   }\n      // }\n      // fileContents += \"\\nColors=\" + weftColors.length.toString();\n\n      // fileContents += \"\\n[TIEUP]\\n\";\n\n      // var treadles = [];\n      // for (var i =0; i < loom.tieup.length;i++) {\n      //   for (var j = 0; j < loom.tieup[i].length;j++) {\n      //     if (loom.tieup[i][j] && !treadles.includes(j)) {\n      //       treadles.push(j);\n      //     }\n      //   }\n      // }\n      // for (var i =0; i < treadles.length; i++) {\n      //   fileContents += (treadles[i]+1).toString() + \"=\";\n      //   var lineMarked = false;\n      //   for (var j = 0; j < loom.tieup.length; j++){\n      //     if (loom.tieup[j][treadles[i]]) { \n      //       if (lineMarked) {\n      //         fileContents += \",\";\n      //       }\n      //       fileContents += (j+1).toString();\n      //       lineMarked=true;\n      //     }\n      //   }\n      //   fileContents += \"\\n\";\n      // }\n\n      // fileContents+= \"[COLOR TABLE]\\n\";\n      // //Reference: https://css-tricks.com/converting-color-spaces-in-javascript/ for conversion for hex to RGB\n      // var counter = 1;\n      // for (var i = 0; i < shuttles.length; i++) {\n      //   fileContents+= (counter).toString();\n      //   counter = counter + 1;\n      //   fileContents+= \"=\";\n      //   var hex = shuttles[i].color;\n      //   if (hex.length == 7) {\n      //     var r = \"0x\" + hex[1] + hex[2];\n      //     var g = \"0x\" + hex[3] + hex[4];\n      //     var b = \"0x\" + hex[5] + hex[6];\n\n      //     fileContents += (+r).toString() + \",\" + (+g).toString() + \",\" + (+b).toString() + \"\\n\";\n      //   }\n      // }\n      \n      // fileContents += \"[THREADING]\\n\";\n      // for (var i=0; i <loom.threading.length; i++) {\n      //   var frame = loom.threading[i];\n      //   if (frame != -1) {\n      //     fileContents += (loom.threading.length-i).toString() + \"=\" + (frame+1).toString() + \"\\n\";\n      //   }\n      // }\n\n      // fileContents += \"[WARP COLORS]\\n\";\n      // for (var i = 0; i < draft.colShuttleMapping.length; i++) {\n      //   fileContents += (i+1).toString() + \"=\" + (draft.colShuttleMapping[(draft.colShuttleMapping.length)-(i+1)]+1).toString() + \"\\n\";\n      // }\n\n      // //THIS WILL ONLY WORK WTIH FRAME LOOM DRAFT STYLE\n      // fileContents += \"[TREADLING]\\n\";\n      // for (var i = 0; i < loom.treadling.length; i++) {\n      //   if (loom.treadling[i].length != 0 && loom.treadling[i][0] != -1){\n      //     fileContents += (i+1).toString() + \"=\" + (loom.treadling[i][0]+1).toString() + \"\\n\";\n      //   }\n      // }\n\n      // fileContents += \"[WEFT COLORS]\\n\";\n      // for (var i = 0; i < draft.rowShuttleMapping.length; i++) { // will likely have to change the way I import too\n      //   fileContents += (i+1).toString() + \"=\" + (draft.rowShuttleMapping[i]+1).toString() + \"\\n\";\n      // }\n\n   //   const href:string = \"data:\" + fileType +\";base64,\" + btoa(fileContents);\n   //   return Promise.resolve(href);\n   // },\n    bmp: async (canvas:HTMLCanvasElement) : Promise<string> => {\n      return Promise.resolve(canvas.toDataURL(\"image/jpg\"));\n\n    },\n    jpg: async (canvas:HTMLCanvasElement) : Promise<string> => {\n      return Promise.resolve(canvas.toDataURL(\"image/jpg\"));\n    }\n  }\n\n\n  this.loader = dloader;\n  this.saver = dsaver;\n  \n\n\n  }\n\n  clearAll(){\n    console.log(\"Clearing all in FS\")\n    this.tree.clear();\n    this.ms.reset();\n    this.ss.reset(),\n    this.ns.clear();\n\n  }\n\n\n\n\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { getDatabase, ref as fbref, set as fbset, query, ref, get as fbget, remove } from '@angular/fire/database';\nimport utilInstance from '../model/util';\nimport { DataSnapshot, onChildAdded, onChildChanged, onChildRemoved, onDisconnect, onValue, update } from 'firebase/database';\nimport { FileService } from './file.service';\nimport { ZoomService } from '../../mixer/provider/zoom.service';\nimport { Auth, authState, getAuth } from '@angular/fire/auth';\nimport { Observable, Observer, Subject } from 'rxjs';\nimport { FilebrowserComponent } from '../filebrowser/filebrowser.component';\n\n\n/**\n * users{\n *  uid: \n *    ada:\n *    timestamp: \n *    last_opened: \n *     files : {\n        *  file_id: \n        *  name: \n        *  timestamp: \n        *  desc:\n  }\n * \n *  }\n * \n * \n\n * filedata{\n *  file_id: \n *  data: \n * }\n * \n */\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesystemService {\n\n  file_tree_change$ = new Subject<any>();\n  file_saved_change$ = new Subject<any>();\n\n  file_tree: Array<any> = [];\n\n  current_file_id: number = -1;\n  current_file_name: string = \"draft\"\n  current_file_desc: string = \"\";\n\n  connected: boolean = false;\n\n  last_saved_time: number = 0;\n\n  updateUItree: Observable<Array<any>>;\n\n\n constructor(@Optional() private auth: Auth,\n    private fs: FileService, private zs: ZoomService) {\n\n      const db = getDatabase();\n\n    const presenceRef = ref(db, \"disconnectmessage\");\n    // Write a string when this client loses connection\n    onDisconnect(presenceRef).set(\"I disconnected!\");\n\n    const connectedRef = ref(db, \".info/connected\");\n    onValue(connectedRef, (snap) => {\n      if (snap.val() === true) {\n        console.log(\"connected\");\n        this.connected = true;\n      } else {\n        console.log(\"not connected\");\n        this.connected = false;\n      }\n    });\n\n      this.file_tree = [];\n\n      authState(this.auth).subscribe(user => {\n        console.log('user', user)\n        if(user == null){\n          this.file_tree = [];\n          return;\n        } \n        //update the tree based on the state of the DB\n       \n    \n    \n    \n        const userFiles = query(ref(db, 'users/'+user.uid+'/files'));\n        \n\n        //called once per item, then on subsequent changes\n        onChildAdded(userFiles, (childsnapshot) => {\n          //only add values that haven't already been added\n          if(this.file_tree.find(el => el.id === parseInt(childsnapshot.key)) === undefined){\n            this.addToTree(parseInt(childsnapshot.key), childsnapshot.val());\n           this.file_tree_change$.next(this.file_tree.slice());\n          }\n        }); \n\n       \n    \n        //called when anything in meta changes\n        onChildChanged(userFiles, (data) => {\n            const ndx = this.file_tree.findIndex(el => parseInt(el.id) === parseInt(data.key));\n            if(ndx !== -1){\n              this.file_tree[ndx].meta.name = data.val().name;\n              this.file_tree_change$.next(this.file_tree.slice());\n            }\n        });\n        \n        //needs to redraw the files list \n        onChildRemoved(userFiles, (removedItem) => {\n          const removedId = removedItem.key;\n          this.file_tree = this.file_tree.filter(el => parseInt(el.id) !== parseInt(removedId));\n          this.file_tree_change$.next(this.file_tree.slice());\n        });\n    \n    \n      });\n\n\n     \n   \n\n  }\n\n  \n  \n  public changeObserver(target: FilebrowserComponent) : Observable<Array<any>>{\n    return new Observable<Array<any>>((observer) => {\n\n      const handler = observer.next(this.file_tree);\n    }) \n  }\n  \n\n  public clearTree(){\n    this.file_tree = [];\n  }\n\n\n  /**\n   * adds to the local tree for the UI\n   */\n  addToTree(fileid: number, meta: any){\n\n    var dateFormat = new Date(meta.timestamp);\n    meta.date = dateFormat.toLocaleDateString();\n\n    this.file_tree.push({\n      id: fileid,\n      meta: meta\n    })\n  }\n\n\n  /**\n   * sets the current data and updates the metadeta\n   * @param fileid \n   * @param name \n   * @param desc \n   */\n  setCurrentFileInfo(fileid: number, name: string, desc: string){\n   \n    if(fileid === null || fileid == undefined) return; \n    if(desc === null || desc === undefined) desc = '';\n    if(name === null || name === undefined) name = 'no name'; \n   \n    this.current_file_id = fileid;\n    this.current_file_name = name;\n    this.current_file_desc = desc;\n    const stamp = Date.now();\n\n    const auth = getAuth();\n    const user = auth.currentUser;\n    if(user){\n      const db = getDatabase();\n      console.log(name, desc, stamp)\n      update(fbref(db, `users/${user.uid}`),{last_opened: fileid});\n      update(fbref(db, 'users/'+user.uid+'/files/'+fileid),{\n        name: name, \n        desc: desc,\n        timestamp: stamp});\n    }\n\n\n\n  }\n\n  renameFile(fileid: number, newname: string){\n  \n    if(fileid === null || fileid == undefined) return; \n    if(newname === null || newname === undefined) newname = 'no name'; \n    \n    this.current_file_name = newname;\n\n    const auth = getAuth();\n    const user = auth.currentUser;\n    if(user){\n      const db = getDatabase();\n      update(fbref(db, 'users/'+user.uid+'/files/'+fileid),{\n        name: newname});\n    }\n  }\n\n  updateDescription(fileid: number, desc: string){\n  \n    if(fileid === null || fileid == undefined) return; \n    if(desc === null || desc === undefined) desc = ''; \n    \n    this.current_file_desc = desc;\n\n    const auth = getAuth();\n    const user = auth.currentUser;\n    if(user){\n      const db = getDatabase();\n      update(fbref(db, 'users/'+user.uid+'/files/'+fileid),{\n        desc: desc});\n    }\n  }\n\n\n  generateFileId() : number{\n    return utilInstance.generateId(8);\n  }\n\n  /**\n   * if a user only has an ada file on their user id, this converts it to a file that is stored in teh filesystem\n   * @param ada \n   * @returns the id of the file\n   */\n  convertAdaToFile(uid: string, ada: any) : Promise<number>{\n    \n   const fileid = this.generateFileId();\n   this.writeFileData(uid, fileid, ada);\n   this.writeNewFileMetaData(uid, fileid, 'recovered draft', '')\n   return Promise.resolve(fileid);\n    \n  }\n\n\n\n  /**\n   * gets the file at a given id\n   * @returns the file data\n   */\n  getFile(fileid: number) : Promise<any> {\n    const db = getDatabase();\n\n    \n\n\n    return fbget(fbref(db, `filedata/${fileid}`))\n    .then((filedata) => {\n\n\n        if(filedata.exists()){\n          return Promise.resolve(filedata.val().ada);\n\n        }else{\n         return Promise.reject(\"User found but file id not found\")\n        }\n\n      }).catch(e => {console.error(e)});\n\n  }\n\n\n  /**\n   * calls when a file is selected to be deleted from the files list\n   * deletes all references to the file and then deletes from the users file list\n   * @param fileid \n   * @returns \n   */\n  removeFile(fileid: number) {\n\n    const db = getDatabase();\n    const auth = getAuth();\n    const user = auth.currentUser;\n\n    if(user == null) return;\n    remove(fbref(db, `filedata/${fileid}`));\n    remove(fbref(db, 'users/'+user.uid+'/files/'+fileid));\n  }\n\n  /**\n   * gets the file meta for a given id. \n   * @param fileid \n   * @returns the meta data\n   */\n  getFileMeta(fileid: number) : Promise<any> {\n    const db = getDatabase();\n    const auth = getAuth();\n    const user = auth.currentUser;\n\n    if(user == null) return;\n    \n    return fbget(fbref(db, 'users/'+user.uid+'/files/'+fileid)).then((meta) => {\n\n        if(meta.exists()){\n          return Promise.resolve(meta.val());\n        }else{\n          return Promise.reject(\"No meta data found for file id \"+fileid)\n        }\n\n      });\n\n  }\n\n  /**\n   * writes the data for the currently open file to the database\n   * @param cur_state \n   * @returns \n   */\n  writeFileData(uid: string, fileid: number, cur_state: any) {\n    const db = getDatabase();\n    const ref = fbref(db, 'filedata/'+fileid);\n    update(ref,{ada: cur_state})\n    .then(success => {\n      this.last_saved_time = Date.now();\n      this.file_saved_change$.next(this.last_saved_time);\n\n    })\n    .catch(err => {\n      console.error(err);\n    })\n  }\n\n\n\n\n\n\n  writeNewFileMetaData(uid: string, fileid: number, name: string, desc: string) {\n      const stamp = Date.now();\n      const db = getDatabase();\n      update(fbref(db, 'users/'+uid+'/files/'+fileid),{\n        name: name,\n        desc: desc,\n        timestamp: stamp, \n        last_opened:fileid});\n    }\n    \n    \n  \n\n\n  renameFolder(old_loc: string, new_name: string) : Promise<boolean>{\n    //all folders\n    return Promise.resolve(true);\n  }\n\n\n\n  deleteFile(path:string){\n\n  }\n\n\n  \n}\n\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AnalyzedImage } from '../model/datatypes';\nimport utilInstance from '../model/util';\nimport { UploadService } from '../provider/upload.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  images: Array<{id: string, data: AnalyzedImage}> = [];\n\n\n  constructor(private upSvc: UploadService, private httpClient: HttpClient) { }\n\n\n  loadFiles(ids: Array<string>) : Promise<any> {\n    const fns = ids\n    .filter(id => id !== '')\n    .map(id => this.loadFile(id));\n    return Promise.all(fns);\n  }\n\n\n  loadFile(id: string) : Promise<AnalyzedImage>{\n\n    let url = \"\";\n    this.images.push({id: id, data: null});\n  \n    return this.upSvc.getDownloadData(id).then(obj =>{\n      console.log(\"GOT DOWNLOAD DATA \", obj);\n      if(obj === undefined) return null;\n      url = obj;\n      return  this.processImage(obj);\n      \n    }).then(data => {\n      if(data == null){\n        var obj: AnalyzedImage = {\n          id: id,\n          name: 'placeholder',\n          data: null,\n          colors: [],\n          colors_to_bw: [],\n          image: null,\n          image_map: [],\n          width: 0,\n          height: 0,\n          type: 'image',\n          warning: 'image not found'\n        }\n        return obj;\n      } \n      var canvas = document.createElement('canvas');\n      var ctx = canvas.getContext('2d');\n      var image = new Image();\n      image.src = url;\n      image.crossOrigin = \"Anonymous\";\n\n      return image.decode().then(() => {\n        canvas.width = image.naturalWidth;\n        canvas.height = image.naturalHeight; \n\n        if(image.naturalWidth > 10000) Promise.reject('width error');\n        if(image.naturalHeight > 10000) Promise.reject('height error');\n\n        ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n        var imgdata = ctx.getImageData(0,0, canvas.width, canvas.height);\n\n        const pixels = imgdata.data;\n\n        //process the pixels into meaningful values;\n        const all_colors: Array<any> = [];\n        for(let i = 0; i < pixels.length; i+= 4){\n\n          let r: string= pixels[i].toString(16);\n          let r_val: number = pixels[i];\n      \n          if(r.length == 1) r = '0'+r;\n\n          let g:string = pixels[i+1].toString(16);\n          let g_val: number = pixels[i+1];\n          if(g.length == 1) g = '0'+g;\n\n          let b:string = pixels[i+2].toString(16);\n          let b_val: number = pixels[i+2];\n\n          if(b.length == 1) b = '0'+b;\n\n          const is_black:boolean = ((r_val + g_val + b_val/3) < (255/2))\n          const o = pixels[i+3].toString(16);\n\n\n          all_colors.push({hex: '#'+r+''+g+''+b, black: is_black});\n\n        }\n\n        const just_hex = all_colors.map(el => el.hex);\n        let filewarning = \"\";\n\n        let seen_vals = [];\n        let unique_count = 0;\n        for(let i = 0; i < just_hex.length && unique_count < 100; i++){\n          if(seen_vals.find(el => el == just_hex[i]) == undefined){\n            unique_count++;\n            seen_vals.push(just_hex[i]);\n          } \n        }\n\n\n        if(unique_count >= 100){\n          filewarning = \"this image contains more than 100 colors and will take too much time to process, consider indexing to a smaller color space\"\n          return Promise.reject(filewarning);\n        } \n\n        /**this is expensive, so just do a fast run to make sure the size is okay before we go into this */\n        const unique = utilInstance.filterToUniqueValues(just_hex);\n\n        const color_to_bw = unique.map(el => {\n          const item = all_colors.find(ell => ell.hex == el);\n          if(item !== undefined) return item\n        })\n\n \n        let image_map: Array<Array<number>> = [];\n        if(unique.length > 100){\n          filewarning = \"this image contains \"+unique.length+\" color and will take too much time to process, consider indexing to a smaller color space\"\n          return Promise.reject(filewarning);\n        } \n        else{\n          const image_map_flat: Array<number> = all_colors.map(item => unique.findIndex(el => el === item.hex));\n\n          let cur_i = 0;\n          let cur_j = 0;\n          image_map_flat.forEach((id, ndx)=> {\n            cur_i = Math.floor(ndx / imgdata.width);\n            cur_j = ndx % imgdata.width;\n            \n            if(cur_i >= image_map.length) image_map.push([]);\n            image_map[cur_i][cur_j] = id;\n          });\n        }\n      \n        var obj: AnalyzedImage = {\n          id: id,\n          name: 'placeholder',\n          data: imgdata,\n          colors: unique,\n          colors_to_bw: color_to_bw,\n          image: image,\n          image_map: image_map,\n          width: imgdata.width,\n          height: imgdata.height,\n          type: 'image',\n          warning: filewarning\n        }\n\n        return obj;\n      \n      }).then(imageobj => {\n\n        if(imageobj.data == null){\n          return Promise.resolve(imageobj);\n        }\n\n        return this.upSvc.getDownloadMetaData(id)\n        .then(metadata => {\n          if(metadata.customMetadata.filename !== undefined) imageobj.name = metadata.customMetadata.filename;\n          this.setImageData(id, imageobj);\n          return Promise.resolve(imageobj);\n\n        })\n\n      }) ;\n  });\n  }\n\n  \n\n  getImageData(id: string) : {id: string, data: AnalyzedImage}{\n    return this.images.find(el => el.id === id);\n  }\n\n  setImageData(id: string, data: any){\n    const entry = this.getImageData(id);\n    entry.data = data;\n  }\n\n\n  async processImage(url) : Promise<any> {\n    return  await this.httpClient.get(url, {responseType: 'blob'}).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Material } from '../model/datatypes';\nimport { createMaterial, setMaterialID } from '../model/material';\n\n\nexport interface MaterialMap{\n  old_id: number,\n  new_id: number\n }\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MaterialsService {\n\n\n\n  /** array ndx should be the same as shuttle id */\n  materials: Array<Material> = [];\n\n\n  constructor() { \n\n    //this.materials = [new Shuttle({id: 0, name: 'autogenerated', insert: true, visible: true, color: \"#333333\", thickness: 100, type: 0, notes: \"\"})];\n\n    this.materials = [\n     createMaterial({id: 0, name: 'shuttle 0', insert: true, visible: true, color: \"#333333\", thickness: 100, diameter: 5, type: 0, notes: \"\"}), \n     createMaterial({id: 1, name: 'shuttle 1', insert: true, visible: true, color: \"#ffffff\", thickness: 100, diameter: 5, type: 0, notes: \"\"}), \n     createMaterial({id: 2, name: 'conductive', insert: true, visible: true, color: \"#ff4081\", thickness: 100, diameter: 5,type: 1, notes: \"\"})];\n  }\n\n  reset() {\n    this.materials = [\n      createMaterial({id: 0, name: 'shuttle 0', insert: true, visible: true, color: \"#333333\", thickness: 100,diameter: 5, type: 0, notes: \"\"}), \n      createMaterial({id: 1, name: 'shuttle 1', insert: true, visible: true, color: \"#ffffff\", thickness: 100, diameter: 5,type: 0, notes: \"\"}), \n      createMaterial({id: 2, name: 'conductive', insert: true, visible: true, color: \"#ff4081\", thickness: 100,diameter: 5, type: 1, notes: \"\"})];\n  }\n\n\n\n  /**\n   * overload shuttles with uploaded data. \n   * check to ensure that ids match array index and return a draft mapping\n   * @param shuttles \n   */\n  overloadShuttles(shuttles: Array<Material>): Array<MaterialMap>{\n\n    const map: Array<MaterialMap> = [];\n    if(shuttles === undefined) return map;\n\n    this.materials = [];\n    return this.addShuttles(shuttles);\n  }\n\n  /**\n   * adds a set of shuttles from a file import\n   * @param shuttles \n   * @returns the offset of the new ids to the old ones\n   */\n  addShuttles(shuttles: Array<Material>) : Array<MaterialMap>{\n\n    const map: Array<MaterialMap> = [];\n\n    const offset: number = this.materials.length;\n\n    shuttles.forEach(s => {\n      const shuttle = createMaterial(s);\n      map.push({old_id: shuttle.id, new_id: this.materials.length});\n      setMaterialID(shuttle, this.materials.length);\n      this.materials.push(createMaterial(shuttle));\n    });\n\n    return map;\n  }\n\n  /**\n   * returns the color of the shuttle at this index\n   * @param index  the id of the shuttly to get\n   * @returns the color or white if null\n   */\n  getColor(index: number) {\n\n    const s: Material = this.getShuttle(index);\n    if(s === null) return \"#ffffff\";\n    return s.color;\n  }\n\n\n    getDiameter(index: number) {\n\n      const s: Material = this.getShuttle(index);\n      if(s === null) return 1;\n      return s.diameter;\n    }\n  \n\n/**\n * adds a new material to the end of the list and updates the id.\n * @param s \n */\n  addShuttle(s: Material){\n    s.id = this.materials.length;\n    this.materials.push(s);\n  }\n\n\n  /**\n   * deletes a shuttle and readjustes the id\n   * @param id \n   */\n  deleteShuttle(id: number) : Array<MaterialMap>{\n\n    const new_list: Array<Material> = this.materials.filter(el => el.id != id);\n    return this.overloadShuttles(new_list);\n\n  }\n\n  getShuttle(id: number) : Material{\n    const ndx: number = this.materials.findIndex(el => el.id === id);\n    if(ndx != -1) return this.materials[ndx];\n    return null;\n  }\n\n\n  getNextShuttle(id: number) : Material{\n    let ndx: number = 0;\n    if(id === undefined || id === null) ndx = this.getFirstShuttle().id;\n    else ndx = this.materials.findIndex(el => el.id === id)\n\n    if(ndx === -1){\n      console.error(\"material with id\", id, \"not found\");\n      return this.getFirstShuttle();\n    }else{\n      return this.materials[(ndx+1)%this.materials.length];\n    }\n\n  }\n\n  getShuttles() : Array<Material>{\n    return this.materials;\n  }\n\n  exportForSaving() : Array<Material> {\n    return this.materials;\n  }\n\n  getFirstShuttle()  : Material {\n    if(this.materials.length === 0){\n      console.error(\"no materials loaded\");\n      return null;\n    } \n    return this.materials[0];\n  }\n\n  /**\n   * given a list of material mappings, returns a list where they are all teh same size, \n   * @param systems the system mappings to compare\n   */\n  standardizeLists(shuttles: Array<Array<number>>) : Array<Array<number>> {\n   \n    if(shuttles.length === 0) return [];\n\n    const standard = shuttles.map(el => el.slice());\n\n     //standardize teh lengths of all the returned arrays \n     const max_length:number = standard.reduce((acc, el) => {\n      const len = el.length;\n      if(len > acc) return len;\n      else return acc;\n    }, 0);\n\n\n    standard.forEach((sys, ndx) => {\n      if(sys.length < max_length){\n        for(let i = sys.length; i < max_length; i++){\n          sys.push(sys[0]);\n        }\n      }\n    });\n\n    return standard;\n  }\n\n}\n","import { Injectable, ViewRef } from '@angular/core';\nimport { NoteComponent } from '../../mixer/palette/note/note.component';\nimport { Interlacement, Note } from '../model/datatypes';\nimport utilInstance from '../model/util';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotesService {\n\n\n  //id in array should always match note id. \n  notes: Array<Note>;  \n\n\n  constructor() { \n    this.notes = [];\n  }\n\n  clear(){\n    this.notes = [];\n  }\n\n  createNote(i: Interlacement, component: NoteComponent, ref: ViewRef, note: Note) : number{\n    let gennote: Note = null;\n    if(note == null){\n     gennote = {\n        id: utilInstance.generateId(8),\n        interlacement: i,\n        title: \"\",\n        text: \"\",\n        ref: ref,\n        color: \"#FFFF00\",\n        component: component,\n        imageurl: null,\n        width: 200, \n        height: 200\n      }\n    }else{\n      gennote = {\n        id: utilInstance.generateId(8),\n        interlacement: i,\n        title: (note.title !== undefined) ? note.title : \"\",\n        text: note.text,\n        ref: ref,\n        color: (note.color !== undefined) ? note.color : \"#FFFF00\",\n        component: component,\n        imageurl: (note.imageurl !== undefined) ? note.imageurl : null,\n        width: (note.width !== undefined) ? note.width : 200,\n        height: (note.height !== undefined) ? note.height : 200,\n      }\n    }\n\n    this.notes.push(gennote);\n    return gennote.id;\n  \n  }\n\n  createBlankNode(i: Interlacement) : Note{\n    const note: Note = {\n      id: utilInstance.generateId(8),\n      interlacement: i,\n      title: \"\",\n      text: \"\",\n      color: \"#FFFF00\",\n      ref: null,\n      component: null,\n      imageurl: null,\n      width: 200,\n      height: 200\n    }\n\n    this.notes.push(note);\n    return note;\n  \n  }\n\n  getComponents() : Array<NoteComponent> {\n    return this.notes.map(el => el.component);\n  }\n\n  getRefs() : Array<ViewRef> {\n    return this.notes.map(el => el.ref);\n  }\n\n  exportForSaving(): Array<any>{\n    return this.notes.map(note => {\n      return {\n      id: note.id, \n      title: note.title,\n      text: note.text,\n      color: note.color,\n      interlacement: note.interlacement,\n      imageurl: note.imageurl,\n      width: note.width,\n      height: note.height\n    }\n    });\n  }\n\n  // /** called on load new file as well as undo, redo  */\n  // reloadNotes(ns: Array<any>) : Array<Note>{\n\n  //   console.log(\"LOADING NOTES\", ns);\n  //   ns.forEach(newnote => {\n  //     const found = this.notes.find(el => el.id === newnote.id);\n  //     if(found !== undefined){\n  //       found.text = newnote.text;\n  //       found.interlacement= newnote.interlacement;\n  //       found.ref= (newnote.ref === undefined) ? null : newnote.ref;\n  //       found.component= (newnote.component === undefined) ? null : newnote.component\n  //     }else{\n  //       this.notes.push({\n  //         id: newnote.id,\n  //         text: newnote.text,\n  //         interlacement: newnote.interlacement,\n  //         ref: (newnote.ref === undefined) ? null : newnote.ref,\n  //         component: (newnote.component === undefined) ? null : newnote.component\n  //       })\n  //     }\n  //   });\n\n  //   this.notes = this.notes.filter(el => ns.find(nsel => nsel.id === el.id) !== undefined);\n\n  //   return ns;\n  // }\n\n  /**\n   * gets the note associated with a given id. \n   * @param id \n   * @returns the note object or undefined if not found\n   */\n  get(id: number) : Note {\n    return this.notes.find(el => el.id == id);\n  }\n\n  delete(id: number){\n    this.notes = this.notes.filter(el => el.id != id);\n  }\n\n  setColor(id: number, color: string){\n    let note = this.get(id);\n    note.color = color;\n  } \n\n\n}\n","import { Injectable } from '@angular/core';\nimport descriptions from '../../../assets/json/op_descriptions.json';\nimport classifications from '../../../assets/json/op_classifications.json';\nimport { OperationClassification } from '../model/datatypes';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OperationDescriptionsService {\n\n  constructor() { \n\n\n\n  }\n\n  getOpClassifications() : Array<OperationClassification>{\n\n    \n\n\n\n   return classifications.classifications;\n  }\n\n\n  getCatDescription(name: string) : string{\n    const cat =  classifications.classifications.find(el => el.category_name == name);\n    if(cat !== undefined) return cat.description;\n    else return \"\";\n   }\n\n   getCatName(name: string) : string{\n    const cat =  classifications.classifications.find(el => el.category_name == name);\n    if(cat !== undefined) return cat.category_name;\n    else return \"\";\n   }\n\n\n  getOpDescription(opname: string){\n    const item = descriptions.operation.find(el => el.name == opname);\n    if(item !== undefined){\n      return item.description;\n    }else{\n      return \"\";\n    }\n  }\n\n  hasDisplayName(opname: string) : boolean{\n    const item = descriptions.operation.find(el => el.name == opname);\n    if(item !== undefined){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  getDisplayName(opname: string){\n    const item = descriptions.operation.find(el => el.name == opname);\n    if(item !== undefined){\n      return item.displayname;\n    }else{\n      return opname;\n    }\n  }\n\n  getOpYoutube(opname: string){\n    const item = descriptions.operation.find(el => el.name == opname);\n    if(item !== undefined && item.youtube !== undefined){\n      return item.youtube;\n    }else{\n      return \"\";\n    }\n  }\n\n  getOpApplication(opname: string){\n    const item = descriptions.operation.find(el => el.name == opname);\n    if(item !== undefined){\n      return item.application;\n    }else{\n      return \"\";\n    }\n  }\n\n  getYoutube(opname: string){\n    const item = descriptions.operation.find(el => el.name == opname);\n    if(item !== undefined){\n      return item.youtube;\n    }else{\n      return \"\";\n    }\n  }\n\n  getParamDescription(paramname: string){\n    const item = descriptions.param.find(el => el.name == paramname);\n    if(item !== undefined){\n      return item.description;\n    }\n  }\n\n\n\n  getDyanmicText(): string{\n    return descriptions.dynamic_description;\n  }\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\n// import { VaeService} from \"../../core/provider/vae.service\"\nimport { DynamicOperation, Operation, OperationClassification } from '../../core/model/datatypes';\nimport { MaterialsService } from '../../core/provider/materials.service';\nimport { SystemsService } from '../../core/provider/systems.service';\nimport { combinatorics } from '../operations/combinatorics/combinatorics';\nimport { complextwill } from '../operations/complex_twill/complex_twill';\nimport { deinterlace } from '../operations/deinterlace/deinterlace';\nimport { interlace } from '../operations/interlace/interlace';\nimport { interlacewarps } from '../operations/interlace_warps/interlace_warps';\nimport { invert } from '../operations/invert/invert';\nimport { notation } from '../operations/layer_notation/layer_notation';\nimport { random } from '../operations/random/random';\nimport { rect } from '../operations/rect/rect';\nimport { satin } from '../operations/satin/satin';\nimport { satinish } from '../operations/satinish/satinish';\nimport { square_waffle } from '../operations/square_waffle/square_waffle';\nimport { tabby_der } from '../operations/tabby/tabby';\nimport { twill } from '../operations/twill/twill';\nimport { undulatingtwill } from '../operations/undulating_twill/undulating_twill';\nimport { waffleish } from '../operations/waffleish/waffleish';\n\nimport { apply_mats } from '../operations/applymaterialsandsystems/applymaterialsandsystems';\nimport { bindwarpfloats } from '../operations/bindwarpfloats/bindwarpfloats';\nimport { bindweftfloats } from '../operations/bindweftfloats/bindweftfloats';\nimport { chaos } from '../operations/chaos/chaos';\nimport { clear } from '../operations/clear/clear';\nimport { flipx } from '../operations/flipx/flipx';\nimport { flipy } from '../operations/flipy/flipy';\nimport { imagemap } from '../operations/imagemap/imagemap';\nimport { joinleft } from '../operations/joinleft/joinleft';\nimport { jointop } from '../operations/jointop/jointop';\nimport { layer } from '../operations/layer/layer';\nimport { makesymmetric } from '../operations/makesymmetric/makesymmetric';\nimport { margin } from '../operations/margin/margin';\nimport { resize } from '../operations/resize/resize';\nimport { rotate } from '../operations/rotate/rotate';\nimport { selvedge } from '../operations/selvedge/selvedge';\nimport { set } from '../operations/set/set';\nimport { shaded_satin } from '../operations/shaded_satin/shaded_satin';\nimport { shiftx } from '../operations/shiftx/shiftx';\nimport { shifty } from '../operations/shifty/shifty';\nimport { slope } from '../operations/slope/slope';\nimport { spliceinwarps } from '../operations/spliceinwarps/spliceinwarps';\nimport { splicein } from '../operations/spliceinwefts/spliceinwefts';\nimport { stretch } from '../operations/stretch/stretch';\nimport { notation_system } from '../operations/system_notation/system_notation';\nimport { tile } from '../operations/tile/tile';\nimport { undulatewarps } from '../operations/undulatewarps/undulatewarps';\nimport { undulatewefts } from '../operations/undulatewefts/undulatewefts';\nimport { unset } from '../operations/unset/unset';\nimport { warp_profile } from '../operations/warp_profile/warp_profile';\nimport { weft_profile } from '../operations/weft_profile/weft_profile';\nimport { overlay } from '../operations/overlay/overlay';\nimport { overlay_multi } from '../operations/overlay_multiple/overlay_multiple';\nimport { bwimagemap } from '../operations/bwimagemap/bwimagemap';\nimport { sample_length } from '../operations/samplelength/samplelength';\nimport { sample_width } from '../operations/samplewidth/samplewidth';\nimport {  assignsystems} from '../operations/assignsystems/assignsystems';\nimport { fill } from '../operations/fill/fill';\nimport { atop } from '../operations/atop/atop';\nimport { mask } from '../operations/mask/mask';\nimport { diff } from '../operations/diff/diff';\nimport { cutout } from '../operations/cutout/cutout';\nimport { crop } from '../operations/crop/crop';\nimport { trim } from '../operations/trim/trim';\nimport { makeloom } from '../operations/makeloom/makeloom';\nimport { makedirectloom } from '../operations/makedirectloom/makedirectloom';\nimport { drawdown } from '../operations/drawdown/drawdown';\nimport { directdrawdown } from '../operations/directdrawdown/directdrawdown';\nimport { sinewave } from '../operations/sinewave/sineweave';\nimport { sawtooth } from '../operations/sawtooth/sawtooth';\nimport { erase_blank } from '../operations/erase_blank/erase_blank';\nimport { shift } from '../operations/shift/shift';\nimport {flip} from '../operations/flip/flip'\n@Injectable({\n  providedIn: 'root'\n})\nexport class OperationService {\n\n  ops: Array<Operation> = [];\n  dynamic_ops: Array<DynamicOperation> = [];\n  classification: Array<OperationClassification> = [];\n\n  constructor() { \n     \n\n  \n\n    // this.dynamic_ops.push(dynamic_join_left);\n    // this.dynamic_ops.push(dynamic_join_top);\n    this.dynamic_ops.push(imagemap);\n    this.dynamic_ops.push(bwimagemap);\n    this.dynamic_ops.push(notation);\n    this.dynamic_ops.push(notation_system);\n    this.dynamic_ops.push(weft_profile);\n    this.dynamic_ops.push(warp_profile);\n    this.dynamic_ops.push(sample_width);\n    this.dynamic_ops.push(sample_length);\n\n\n    //**push operations that you want the UI to show as options here */\n    this.ops.push(rect);\n    this.ops.push(twill);\n    this.ops.push(complextwill);\n    this.ops.push(undulatingtwill);\n    this.ops.push(square_waffle);\n    this.ops.push(waffleish);\n    this.ops.push(satin);\n    this.ops.push(satinish);\n    this.ops.push(shaded_satin);\n    // this.ops.push(tabby);\n    this.ops.push(tabby_der);\n    // this.ops.push(rib);\n    this.ops.push(random);\n    this.ops.push(interlace);\n    this.ops.push(deinterlace);\n    this.ops.push(interlacewarps);\n    this.ops.push(splicein);\n    this.ops.push(spliceinwarps);\n    this.ops.push(assignsystems);\n    this.ops.push(invert);\n  //  this.ops.push(replicate);\n    this.ops.push(flipx);\n    this.ops.push(flipy);\n    this.ops.push(shiftx);\n    this.ops.push(shifty);\n    this.ops.push(layer);\n    this.ops.push(selvedge);\n    this.ops.push(bindweftfloats);\n    this.ops.push(bindwarpfloats);\n    this.ops.push(joinleft);\n    this.ops.push(jointop);\n    this.ops.push(slope);\n    this.ops.push(tile);\n    this.ops.push(undulatewefts);\n    this.ops.push(undulatewarps);\n    this.ops.push(chaos);\n    this.ops.push(stretch);\n    this.ops.push(resize);\n    this.ops.push(margin);\n    this.ops.push(clear);\n    this.ops.push(set);\n    this.ops.push(unset);\n    this.ops.push(rotate);\n    this.ops.push(makesymmetric);\n    this.ops.push(fill);\n    this.ops.push(overlay);\n    this.ops.push(atop);\n    this.ops.push(mask);\n    this.ops.push(diff);\n    this.ops.push(cutout);\n    this.ops.push(shift);\n    this.ops.push(flip);\n    this.ops.push(overlay_multi);\n\n  //   //this.ops.push(germanify);\n  //   //this.ops.push(crackleify);\n  //   //this.ops.push(variants);\n     this.ops.push(crop);\n    this.ops.push(trim);\n    this.ops.push(makeloom);\n    this.ops.push(makedirectloom);\n    this.ops.push(drawdown);\n    this.ops.push(directdrawdown);\n    this.ops.push(erase_blank);\n    this.ops.push(apply_mats);\n    this.ops.push(combinatorics);\n    this.ops.push(sinewave);\n    this.ops.push(sawtooth);\n    }\n\n\n   \n  isDynamic(name: string) : boolean{\n    const parent_ndx: number = this.dynamic_ops.findIndex(el => el.name === name);\n    if(parent_ndx == -1) return false;\n    return true;\n  }\n\n\n  getOp(name: string): Operation | DynamicOperation{\n    const op_ndx: number = this.ops.findIndex(el => el.name === name);\n    const parent_ndx: number = this.dynamic_ops.findIndex(el => el.name === name);\n    if(op_ndx !== -1) return this.ops[op_ndx];\n    if(parent_ndx !== -1) return this.dynamic_ops[parent_ndx];\n    return null;\n  }\n\n  hasOldName(op: Operation | DynamicOperation, name: string) : boolean {\n    return (op.old_names.find(el => el === name) !== undefined );\n  }\n\n  getOpByOldName(name: string): Operation | DynamicOperation{\n    const allops = this.ops.concat(this.dynamic_ops);\n    const old_name = allops.filter(el => this.hasOldName(el, name));\n\n    if(old_name.length == 0){\n      return this.getOp('rectangle');\n    }else{\n      return old_name[0]; \n    }\n\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatternfinderService {\n\n  constructor() { }\n\n  public getThreadingFromArr(arr) {\n    var marked_strings: number[][] = [];\n    var marked_strings_frame_tracker: number[] = [];\n    var threading: number[][] = [];\n    for (var i = 0; i < arr.length; i++) {\n        threading.push([]);\n        for (var j = 0; j < arr[i].length; j++) {\n            threading[i].push(0);\n        }\n    }\n    var frame_count: number = 0;\n\n    for (var c = 0; c < arr.length; c++) {\n        if (!marked_strings.includes(arr[c])) {\n            marked_strings.push(arr[c]);\n            marked_strings_frame_tracker.push(frame_count);\n            threading[frame_count][c] = 1;\n            frame_count += 1;\n        } else {\n            for (var s = 0; s < marked_strings.length; s++) {\n                if (marked_strings[s] == arr[c]) {\n                    threading[marked_strings_frame_tracker[s]][c] = 1;\n                }\n            }\n        }\n    }\n\n    var max_idx = 0;\n    for (var i = threading.length-1; i >= 0; i--) {\n        if (threading[i].find(elmt => elmt == 1)) {\n            for (var j = 0; j < threading[i].length; j++) {\n                if (threading[i][j] == 0) {\n                    var allZero: boolean = true;\n                    for (var k = j+1; k < threading[i].length; k++) {\n                        if (threading[i][k] == 1) {\n                            allZero = false;\n                        }\n                    }\n                    if (allZero && max_idx < j) {\n                        max_idx = j;\n                    }\n                }\n            }\n        } else {\n            threading.splice(i, 1);\n        }\n    }\n\n    for (var i = 0; i < threading.length; i++) {\n        threading[i].splice(max_idx+1, threading[i].length-max_idx+1);\n    }\n    var toRetThreading: number[] = [];\n    for (var i = 0; i < threading.length; i++) {\n        for (var j = 0; j < threading[i].length; j++) {\n            if (threading[i][j] == 1) {\n                toRetThreading.push(j);\n                break;\n            }\n        }\n    }\n    return toRetThreading;\n}\n\npublic getTreadlingFromArr(arr) {\n    var marked_strings: number[][] = [];\n    var marked_strings_col_tracker: number[] = [];\n    var treadling: number[][] = [];\n    for (var i = 0; i < arr.length; i++) {\n        treadling.push([]);\n        for (var j = 0; j < arr[i].length; j++) {\n            treadling[i].push(0);\n        }\n    }\n    var treadle_count: number = 0;\n\n    for (var r = 0; r < arr.length; r++) {\n        if (!marked_strings.includes(arr[r])) {\n            marked_strings.push(arr[r]);\n            marked_strings_col_tracker.push(treadle_count);\n            treadling[r][treadle_count] = 1;\n            treadle_count += 1;\n        } else {\n            for (var s = 0; s < marked_strings.length; s++) {\n                if (marked_strings[s] == arr[r]) {\n                    treadling[r][marked_strings_col_tracker[s]] = 1;\n                }\n            }\n        }\n    }\n\n    var max_idx = 0;\n    for (var i = treadling.length-1; i >= 0; i--) {\n        if (treadling[i].find(elmt => elmt == 1)) {\n            for (var j = 0; j < treadling[i].length; j++) {\n                if (treadling[i][j] == 0) {\n                    var allZero: boolean = true;\n                    for (var k = j+1; k < treadling[i].length; k++) {\n                        if (treadling[i][k] == 1) {\n                            allZero = false;\n                        }\n                    }\n                    if (allZero && max_idx < j) {\n                        max_idx = j;\n                    }\n                }\n            }\n        } else {\n            treadling.splice(i, 1);\n        }\n    }\n\n    for (var i = 0; i < treadling.length; i++) {\n        treadling[i].splice(max_idx+1, treadling[i].length-max_idx+1);\n    }\n    var toRetTreadling: number[] = [];\n    for (var i = 0; i < treadling.length; i++) {\n        for (var j = 0; j < treadling[i].length; j++) {\n            if (treadling[i][j] == 1) {\n                toRetTreadling.push(j);\n                break;\n            }\n        }\n    }\n    return toRetTreadling;\n}\n\nprivate findBasePatternString(subsection: string) {\n    var str: string = \"\";\n    var pattern: any = [];\n    for (var i = 0; i < subsection.length; i++) {\n        let currentChar = subsection[i]\n        if (currentChar == \",\") {\n            pattern.push(parseInt(str));\n            str = \"\";\n        } else {\n            str += currentChar;\n        }\n    }\n    return this.findBasePatternArray(pattern)\n}\n\nprivate findBasePatternArray(pattern: any) {\n    for (var i = 2; i < pattern.length; i++) {\n        if (pattern.length % i == 0) {\n            var match = true;\n            for (var j = 1; j < i; j++) {\n                if (pattern.slice(0, pattern.length/i) != pattern.slice((pattern.length/i)*j,(pattern.length/i)*(j+1))) {\n                    match = false;\n                }\n                if (match) {\n                    return this.findBasePatternArray(pattern.slice(0, pattern.length/i));\n                }\n            }\n        }\n    }\n    return pattern;\n}\n\nprivate toString(pattern: any) {\n    var strPattern: string = \"\";\n    for (var i = 0; i < pattern.length; i++) {\n        var num: number = pattern[i];\n        strPattern += num.toString();\n        strPattern += \",\";\n    }\n    return strPattern.slice(0, -1);\n}\n\nprivate toArray(pattern: string) {\n    var arrayPattern: any = [];\n    var temp: string = \"\";\n    for (var i = 0; i < pattern.length; i++) {\n        var currentChar = pattern[i];\n        if (currentChar != \",\") {\n            temp += currentChar;\n            if (i == pattern.length - 1) {\n                arrayPattern.push(parseInt(temp));\n            }\n        } else if (currentChar == \",\") {\n            arrayPattern.push(parseInt(temp));\n            temp = \"\";\n        } \n    }\n    return arrayPattern;\n}\n\nprivate countOccurances(arr, item) {\n    var count = 0;\n    for (var i in arr) {\n        if (i == item) {\n            count += 1;\n        }\n    }\n    return count;\n}\n\nprivate findPatterns(sequence) {\n    for (var i = 0; i < sequence.length; i++) {\n        if (sequence[i] == -1) {\n            var allEmpty = true;\n            for (var j = i+1; j < sequence.length; j++) {\n                if (sequence[j] != -1) {\n                    allEmpty = false;\n                }\n            }\n            if (allEmpty) {\n                break;\n            }\n        }\n    }\n    if (allEmpty) {\n        sequence.splice(i, sequence.length - i);\n    }\n    var singles = {};\n\n    for (var i = 0; i < sequence.length; i++) {\n        var count = 0;\n        sequence.forEach(element => {\n            if (element == sequence[i]) {\n                count += 1;\n            }\n        });\n        singles[sequence[i]] = count;\n    }\n    for (var key in singles) {\n        if (singles[key] == 1) {\n            delete singles[key];\n        }\n    }\n    if (Object.keys(singles).length == 0) {\n        return sequence;\n    }\n    \n    for (var size = 1; size < sequence.length; size++) {\n        for (var i = 0; i < sequence.length-1-size; size++) {\n            let key = sequence.slice(i, i+size);\n            var repeat = true;\n            for (var j = i+size; j < sequence.length-1-size; j+= size) {\n                if (JSON.stringify(sequence.slice(j, j+size))!= JSON.stringify(key)) {\n                    repeat = false;\n                }\n            }\n            if (repeat) {\n                return key;\n            }\n        }\n    }\n    return sequence;\n}\n\nprivate findDraftPatterns(treadlingPatterns, treadling, threadingPatterns, threading, draft) {\n    var treadlingString: string = this.toString(treadling);\n    var threadingString: string = this.toString(threading);\n\n\n    var treadlingRanges = [];\n    var threadingRanges = [];\n\n\n    let idxTreadling = treadlingString.indexOf(treadlingPatterns);\n    var length = -1;\n\n    for (var j = 0; j < treadlingString.length; j++) {\n        if (j == idxTreadling) {\n            length += 1;\n            break;\n        }\n        if (treadlingString[j] == \",\") {\n            length += 1;\n        }\n    }\n    treadlingRanges.push([length, treadlingPatterns.length]);\n\n    let idxThreading = threadingString.indexOf(threadingPatterns);\n    var length = -1;\n\n    for (var j = 0; j < threadingString.length; j++) {\n        if (j == idxThreading) {\n            length += 1;\n            break;\n        }\n        if (threadingString[j] == \",\") {\n            length += 1;\n        }\n    }\n    threadingRanges.push([length, threadingPatterns.length]);\n\n    var draftPatterns = [];\n    for (var i = 0; i < treadlingRanges.length; i++) {\n        for (var j = 0; j < threadingRanges.length; j++) {\n            var pattern = [];\n            var counter = -1;\n            for (var idxWeft = treadlingRanges[i][0]; idxWeft < treadlingRanges[i][1]; idxWeft += 1) {\n                counter += 1;\n                pattern.push([]);\n                for (var idxWarp = threadingRanges[j][0]; idxWarp < threadingRanges[j][1]; idxWarp += 1) {\n                    pattern[counter].push(draft[idxWeft][idxWarp]);\n                }\n            }\n            draftPatterns.push(pattern);\n        }\n    }\n    var transformedDraftPatterns = [];\n\n    for (var i = 0; i < draftPatterns.length; i++) {\n        transformedDraftPatterns.push([]);\n        for (var j = 0; j < draftPatterns[i].length; j++) {                \n            transformedDraftPatterns[i].push([]);\n            for(var k = 0; k < draftPatterns[i][j].length; k++) {\n                if (draftPatterns[i][j][k] == 1 || draftPatterns[i][j][k].is_up) {\n                    transformedDraftPatterns[i][j].push(1);\n                } else {\n                    transformedDraftPatterns[i][j].push(0);\n                }\n            }\n        }\n    }\n    return transformedDraftPatterns[0];\n}\n\n  public computePatterns(threading, treadling, draft) {\n\n      let threadingPatterns = this.findPatterns(threading);\n      let treadlingPatterns = this.findPatterns(treadling);\n\n      return this.findDraftPatterns(treadlingPatterns, treadling, threadingPatterns, threading, draft);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as THREE from 'three';\nimport { createLayerMaps, getDraftTopology, translateTopologyToPoints } from '../model/yarnsimulation';\nimport { MaterialsService } from '../provider/materials.service';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport { Lut } from 'three/examples/jsm/math/Lut';\nimport { Draft, Interlacement, SimulationData, SimulationVars, YarnVertex } from '../model/datatypes';\nimport { initDraftFromDrawdown, warps, wefts } from '../model/drafts';\nimport { getCellValue } from '../model/cell';\nimport { Sequence } from '../model/sequence';\nimport { from } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimulationService {\n\n  hasSimulation: boolean = false;\n  currentSim: SimulationData  = null;\n\n  warp_layer_map_scene: any;\n  weft_layer_map_scene: any;\n  warp_scene: any;\n  weft_scene: any;\n  axis_scene: any;\n  topo_scene: any;\n  draft_scene: any;\n\n  \n  constructor(private ms: MaterialsService) { \n\n \n\n  }\n\n\n  /**\n   * clears the memory devoted to a scene\n   * @param scene \n   */\n  public endSimulation(scene){\n\n   // document.body.removeChild(this.renderer.domElement);\n    scene.clear();\n    scene.children.forEach(childMesh => {\n      if(childMesh.geometry !== undefined) childMesh.geometry.dispose();\n      if(childMesh.texture !== undefined) childMesh.texture.dispose();\n      if(childMesh.material !== undefined) childMesh.material.dispose();\n    });\n\n    this.hasSimulation = false;\n  }\n\n  private tileDraft(draft: Draft, boundary: number) : Promise<Draft>{\n    //extend to left and right top and bottom\n    let pattern = new Sequence.TwoD();\n    let weft_mats = new Sequence.OneD();\n    let weft_sys  = new Sequence.OneD();\n    let warp_mats = new Sequence.OneD();\n    let warp_sys = new Sequence.OneD();\n\n    draft.drawdown.forEach((row, ndx) => {\n      let seq = new Sequence.OneD().import(row);\n      weft_mats.push(draft.rowShuttleMapping[ndx]);\n      weft_sys.push(draft.rowSystemMapping[ndx]);\n\n      if(ndx == 0){\n        warp_mats.import(draft.colShuttleMapping);\n        warp_sys.import(draft.colSystemMapping)\n      }\n\n      //first, expand rows\n      for(let i = 0; i < boundary; i++){\n        \n        seq.push(getCellValue(row[i%row.length]));\n        let from_end = (i%row.length);\n        seq.unshift(getCellValue(row[(row.length -1 -from_end)]))\n\n        if(ndx == 0){\n\n          warp_mats.push(draft.colShuttleMapping[i%row.length]);\n          warp_mats.unshift(draft.colShuttleMapping[(row.length -1 -from_end)])\n          warp_sys.push(draft.colSystemMapping[i%row.length]);\n          warp_sys.unshift(draft.colSystemMapping[(row.length -1 -from_end)])\n\n        }\n      \n      }\n      pattern.pushWeftSequence(seq.val());\n\n    })\n\n  \n    let extended_pattern = new Sequence.TwoD().import(pattern.export());\n    for(let i = 0; i < boundary; i++){\n      let offset = i % wefts(draft.drawdown);\n      let row = pattern.getWeft(i% wefts(draft.drawdown));\n      extended_pattern.pushWeftSequence(row);\n\n      let ending_row = pattern.getWeft(wefts(draft.drawdown) -1 - offset);\n      extended_pattern.unshiftWeftSequence(ending_row);\n\n      weft_mats.push(draft.rowShuttleMapping[i]);\n      weft_sys.push(draft.rowSystemMapping[i]);\n      weft_mats.unshift(draft.rowShuttleMapping[wefts(draft.drawdown) -1 - offset]);\n      weft_sys.unshift(draft.rowSystemMapping[wefts(draft.drawdown) -1 - offset]);\n\n\n    }\n  \n    const expanded_draft = initDraftFromDrawdown(extended_pattern.export());\n    expanded_draft.colShuttleMapping = warp_mats.val();\n    expanded_draft.colSystemMapping = warp_sys.val();\n    expanded_draft.rowShuttleMapping = weft_mats.val();\n    expanded_draft.rowSystemMapping = weft_sys.val();\n\n    return Promise.resolve(expanded_draft);\n  }\n\n\n  /**\n   * generates a new simulation with the given draft and simulation parameters\n   * @param draft \n   * @param sim \n   * @returns promise for simulation data\n   */\n  public generateSimulationData(draft: Draft, sim: SimulationVars) : Promise<SimulationData>{\n\n    const currentSim:SimulationData  = {\n      draft: draft, \n     bounds: {topleft: {x: sim.boundary, y: sim.boundary}, width: warps(draft.drawdown), height: wefts(draft.drawdown)},\n      sim: sim,\n      topo: null,\n      vtxs: null, \n      layer_maps: null\n    };\n\n    return this.tileDraft(draft, sim.boundary).then(expandeddraft => {\n      currentSim.draft = expandeddraft;\n       return getDraftTopology(currentSim.draft, sim);\n     })\n    .then(\n      topology => {\n      currentSim.topo = topology;\n      return createLayerMaps(currentSim.draft, topology, sim);\n      }\n    )\n    .then(lm => {\n      currentSim.layer_maps = lm;\n      return translateTopologyToPoints(currentSim.draft,  currentSim.topo, lm, sim);\n\n\n    }).then(vtxs => {\n      currentSim.vtxs = vtxs;\n      return currentSim;\n    });\n\n  }\n\n  public setupSimulation(draft: Draft, renderer, scene, camera, layer_threshold: number, warp_range: number, warp_spacing: number, layer_spacing: number, max_interlacement_width: number, max_interlacement_height: number, boundary: number, radius:number, ms: MaterialsService) : Promise<SimulationData> {\n\n    camera = new THREE.PerspectiveCamera( 75, 1, 0.1, 1000 );\n    const controls = new OrbitControls( camera, renderer.domElement );\n    \n    const animate = function(){\n      requestAnimationFrame( animate );\n      renderer.render( scene, camera );\n      controls.update();\n\n    };\n    scene.background = new THREE.Color( 0xf0f0f0 );\n\n    camera.position.set( 20, 0, 200 );\n    camera.lookAt( 0, 0, 0 );  \n    controls.update();\n    animate();\n\n    const sim:SimulationVars= {\n      warp_spacing, \n      layer_spacing, \n      ms,\n      layer_threshold,\n      max_interlacement_width,\n      max_interlacement_height,\n      boundary,\n      radius\n    }\n    \n    return this.generateSimulationData(draft, sim)\n    .then(simdata => {\n      this.currentSim = simdata;\n      return simdata;\n    })\n\n   \n\n  }\n\n  public recalcSimData(scene, draft: Draft, warp_spacing:number, layer_spacing:number, layer_threshold:number,max_interlacement_width: number, max_interlacement_height: number, boundary: number, radius: number, ms: MaterialsService) : Promise<SimulationData>{\n\n    const sim:SimulationVars= {\n      warp_spacing, \n      layer_spacing, \n      layer_threshold,\n      max_interlacement_width,\n      max_interlacement_height,\n      boundary,\n      radius,\n      ms\n    };\n    this.currentSim.sim = sim;\n    \n    return this.generateSimulationData(draft, sim)\n    .then(simdata => {\n      this.currentSim = simdata;\n      return simdata\n    })\n  }\n\n  public renderSimdata(scene, simdata: SimulationData, warps: boolean, wefts: boolean, warp_layer: boolean,weft_layers: boolean, topo: boolean, show_draft: boolean){\n    this.hasSimulation = true;\n\n    if(this.currentSim.draft == null) return;\n\n    scene.clear();\n\n    const light = new THREE.DirectionalLight( 0xffffff, 1.0);\n    const back_light = new THREE.DirectionalLight( 0xffffff, 1.0);\n    scene.add( light );\n    scene.add( back_light );\n\n    light.position.set( 20, 0, 50 );\n    back_light.position.set( 20, 0, -50 );\n\n\n\n\n    const boundary_vtx = this.getBoundaryVtxs(simdata);\n\n   \n    this.drawAxis(scene, simdata, boundary_vtx);\n    this.drawYarns(scene, simdata, boundary_vtx);\n    this.drawEndCaps(scene, simdata, boundary_vtx);\n    this.drawWarpLayerMap(scene, boundary_vtx);\n    this.drawWeftLayerMap(scene, boundary_vtx);\n    this.drawTopology(scene, boundary_vtx);\n    this.drawDraft(scene, this.currentSim.draft, this.currentSim.sim, boundary_vtx);\n\n\n    if(!wefts) this.hideWefts();\n    if(!warps) this.hideWarps();\n    if(!warp_layer) this.hideWarpLayerMap();\n    if(!weft_layers) this.hideWeftLayerMap();\n    if(!topo) this.hideTopo();\n    if(!show_draft) this.hideDraft();\n\n  }\n\n  drawAxis(scene, simdata: SimulationData, boundary_vtx: any){\n\n    this.axis_scene =  new THREE.Group();\n   \n    //X AXIS \n    const material = new THREE.LineBasicMaterial( { color: 0x0000ff } );\n    const points = [];\n    points.push(new THREE.Vector3(boundary_vtx.min_x-20, boundary_vtx.min_y-20, 0));\n    points.push(new THREE.Vector3(boundary_vtx.max_x+20, boundary_vtx.min_y-20, 0));\n    \n    const geometry = new THREE.BufferGeometry().setFromPoints( points );\n    const line = new THREE.Line( geometry, material );\n    this.axis_scene.add( line );\n\n\n    /**Y AXIS */\n    const y_points = [];\n    y_points.push(new THREE.Vector3(boundary_vtx.min_x-20, boundary_vtx.min_y-20, 0));\n    y_points.push(new THREE.Vector3(boundary_vtx.min_x-20, boundary_vtx.max_y+20, 0));\n    \n    const y_geometry = new THREE.BufferGeometry().setFromPoints( y_points );\n    const y_line = new THREE.Line( y_geometry, material );\n    this.axis_scene.add( y_line );\n\n      /**Z AXIS */\n      const z_points = [];\n      z_points.push(new THREE.Vector3(boundary_vtx.min_x-20, boundary_vtx.min_y-20, 0));\n      z_points.push(new THREE.Vector3(boundary_vtx.min_x-20, boundary_vtx.min_y-20, 100));\n\n\n      const z_geometry = new THREE.BufferGeometry().setFromPoints( z_points );\n      const z_line = new THREE.Line( z_geometry, material );\n      this.axis_scene.add( z_line );\n      \n    \n    \n    \n    this.axis_scene = this.applyOrientationConversion(this.axis_scene, boundary_vtx);\n    scene.add(this.axis_scene);\n   \n\n  }\n\n  /**\n   * given the vtx data and a boundary, this function returns the min/max values for wefts and warps to be used to position the start and end of the warp and weft data. \n   * @param simdata \n   * @returns \n   */\n  getBoundaryVtxs(simdata: SimulationData) : {min_x: number, max_x: number, min_y: number, max_y: number}{\n    const vtxs = simdata.vtxs;\n    const bounds = simdata.bounds;\n\n\n    //get the weft boundary, draw warps from this data\n    let in_bound_wefts = vtxs.wefts.filter((el, ndx)=> (ndx >= bounds.topleft.y && ndx < bounds.topleft.y + bounds.height));\n\n    let min_y = in_bound_wefts.reduce((acc, row) => {\n      let min_in_row = row.filter((vtx) => vtx.j >= bounds.topleft.x && vtx.j < bounds.topleft.x + bounds.width).reduce((subacc, vtx) => {\n        if(vtx.y < subacc) return vtx.y;\n        return subacc;\n      }, 10000);\n\n      if(min_in_row < acc) return min_in_row;\n      return acc;\n    }, 100000);\n\n    let max_y = in_bound_wefts.reduce((acc, row) => {\n      let max_in_row = row.filter((vtx) => vtx.j >= bounds.topleft.x && vtx.j < bounds.topleft.x + bounds.width).reduce((subacc, vtx) => {\n        if(vtx.y > subacc) return vtx.y;\n        return subacc;\n      }, 0);\n\n      if(max_in_row > acc) return max_in_row;\n      return acc;\n    }, 0);\n\n    let min_x = in_bound_wefts.reduce((acc, row) => {\n      let min_in_row = row.filter((vtx) => vtx.j >= bounds.topleft.x && vtx.j < bounds.topleft.x + bounds.width).reduce((subacc, vtx) => {\n        if(vtx.x < subacc) return vtx.x;\n        return subacc;\n      }, 10000);\n\n      if(min_in_row < acc) return min_in_row;\n      return acc;\n    }, 100000);\n\n    let max_x = in_bound_wefts.reduce((acc, row) => {\n      let max_in_row = row.filter((vtx) => vtx.j >= bounds.topleft.x && vtx.j < bounds.topleft.x + bounds.width).reduce((subacc, vtx) => {\n        if(vtx.x > subacc) return vtx.x;\n        return subacc;\n      }, 0);\n\n      if(max_in_row > acc) return max_in_row;\n      return acc;\n    }, 0);\n\n    return {min_x, max_x, min_y, max_y};\n\n\n    \n\n  }\n\n  getClosestVtx(simdata: SimulationData, warp: boolean, i: number, j: number) : YarnVertex {\n\n    if(warp){\n      let vtxs = simdata.vtxs.warps[j];\n      let closest_ndx = vtxs.reduce((acc, vtx, ndx) => {\n        if(Math.abs(vtx.i - i) < acc.dist) return {dist: Math.abs(vtx.i - i), ndx};\n        return acc;\n      }, {dist: 10000, ndx: -1});\n      if(closest_ndx.ndx == -1) return null;\n      return vtxs[closest_ndx.ndx]\n    }else{\n\n      //on wefts \n      let vtxs = simdata.vtxs.wefts[i];\n      let closest_ndx = vtxs.reduce((acc, vtx, ndx) => {\n        if(vtx.j >= simdata.bounds.topleft.x && vtx.j < (simdata.bounds.topleft.x + simdata.bounds.width) && Math.abs(vtx.j - j) < acc.dist) return {dist: Math.abs(vtx.j - j), ndx};\n        return acc;\n      }, {dist: 10000, ndx: -1});\n      if(closest_ndx.ndx == -1) return null;\n      return vtxs[closest_ndx.ndx]\n    }\n  }\n\n  /**\n   * this renders the imagery of the yarns. It uses the boundary provided by \n   * @param scene \n   * @param simdata \n   */\n  drawYarns(scene, simdata: SimulationData, boundary_vtx: any){\n\n    this.warp_scene =  new THREE.Group();\n    this.weft_scene =  new THREE.Group();\n\n    const vtxs = simdata.vtxs;\n    const draft = simdata.draft;\n\n    \n    //DRAW THE WARPS\n    for(let j = simdata.bounds.topleft.x; j < simdata.bounds.width + simdata.bounds.topleft.x; j++){\n      const pts = [];\n\n      if(vtxs.warps[j].length > 0 && vtxs.warps[j] !== undefined){\n      const material_id = draft.colShuttleMapping[j];\n      let diameter = this.ms.getDiameter(material_id);\n      let color = this.ms.getColor(material_id);\n\n\n      let in_bounds_vxts = simdata.vtxs.warps[j].filter(el => el.i >= simdata.bounds.topleft.y && el.i < simdata.bounds.topleft.y + simdata.bounds.height);\n\n      let start_vtx = this.getClosestVtx(simdata, true, simdata.bounds.topleft.y, j);\n      let end_vtx = this.getClosestVtx(simdata, true, simdata.bounds.topleft.y + simdata.bounds.height, j);\n\n      \n     if(start_vtx !== null) pts.push(new THREE.Vector3(start_vtx.x, boundary_vtx.min_y-10, start_vtx.z));\n     in_bounds_vxts.slice().forEach(vtx => {\n        if(vtx.x !== undefined) pts.push(new THREE.Vector3(vtx.x, vtx.y, vtx.z));\n      });\n      if(end_vtx !== null) pts.push(new THREE.Vector3(end_vtx.x, boundary_vtx.max_y+10, end_vtx.z));\n\n      const curve = new THREE.CatmullRomCurve3(pts, false, 'catmullrom', .1);\n      const geometry = new THREE.TubeGeometry( curve, 100, diameter/2, 6, false );\n      const material = new THREE.MeshPhysicalMaterial( {\n        color: color,\n        depthTest: true,\n        emissive: 0x000000,\n        metalness: 0,\n        roughness: 0.5,\n        clearcoat: 1.0,\n        clearcoatRoughness: 1.0,\n        reflectivity: 0.0\n        } );     \n      \n      let curveObject = new THREE.Mesh( geometry, material );\n\n\n      this.warp_scene.add(curveObject);\n      }\n    };\n\n    this.warp_scene = this.applyOrientationConversion(this.warp_scene, boundary_vtx);\n    scene.add(this.warp_scene);\n\n\n\n\n    //draw wefts\n    for(let i = simdata.bounds.topleft.y; i < simdata.bounds.height + simdata.bounds.topleft.y; i++){\n      \n      let weft_vtx_list = vtxs.wefts[i];\n      \n      let in_bound_vtxs = weft_vtx_list.filter(el => el.j >= simdata.bounds.topleft.x && el.j <  simdata.bounds.width + simdata.bounds.topleft.x);\n\n      const pts = [];\n      let start_vtx = this.getClosestVtx(simdata, false, i, simdata.bounds.topleft.x);\n      let end_vtx = this.getClosestVtx(simdata, false, i, simdata.bounds.topleft.x + simdata.bounds.width);\n\n\n      if(start_vtx !== null)  pts.push(new THREE.Vector3(boundary_vtx.min_x-10, start_vtx.y,start_vtx.z));\n\n      in_bound_vtxs.forEach(vtx => {\n        if(vtx.x !== undefined){\n          pts.push(new THREE.Vector3(vtx.x, vtx.y, vtx.z));\n        } \n      });\n\n      if(end_vtx !== null) pts.push(new THREE.Vector3(boundary_vtx.max_x+10, end_vtx.y, end_vtx.z));\n\n\n      const material_id = draft.rowShuttleMapping[i];\n      let diameter = this.ms.getDiameter(material_id);\n      let color = this.ms.getColor(material_id)\n\n      const curve = new THREE.CatmullRomCurve3(pts, false, 'catmullrom', .1);\n      const geometry = new THREE.TubeGeometry( curve, 100, diameter/2, 6, false );\n      const material = new THREE.MeshPhysicalMaterial( {\n        color: color,\n        emissive: 0x000000,\n        depthTest: true,\n        metalness: 0,\n        roughness: 0.5,\n        clearcoat: 1.0,\n        clearcoatRoughness: 1.0,\n        reflectivity: 0.0\n        } );        \n        let curveObject = new THREE.Mesh( geometry, material );\n        this.weft_scene.add(curveObject);\n\n          \n      }\n      \n    this.weft_scene = this.applyOrientationConversion(this.weft_scene, boundary_vtx);\n    scene.add(this.weft_scene);\n\n  }\n\n  drawDraft(scene, draft: Draft, sim: SimulationVars, boundary_vtx){\n    this.draft_scene =  new THREE.Group();\n    const geometry = new THREE.BufferGeometry();\n    // const yarn_height = 5;\n    const yarn_height = this.currentSim.sim.warp_spacing;\n\n    let alldata = [];\n    let positions = [];\n    let colors = [];\n    let normals = [];\n    let indicies = [];\n\n    for(let i = 0; i < wefts(draft.drawdown); i++){\n      for(let j = 0; j < warps(draft.drawdown); j++){\n\n       const col = (getCellValue(draft.drawdown[i][j])==true) ? 0 : 1;\n\n\n       alldata.push({\n          pos: [sim.warp_spacing*j, yarn_height*i, 0],\n          norm: [0, 1, 0],\n          color: [col, col, col]\n        });\n    \n        alldata.push({\n          pos: [sim.warp_spacing*(j+1), yarn_height*i, 0],\n          norm: [0, 1, 0],\n          color: [col, col, col]\n        })\n    \n        alldata.push({\n          pos: [sim.warp_spacing*j, yarn_height*(i+1), 0],\n          norm: [0, 1, 0],\n          color: [col, col, col]\n        });\n    \n        alldata.push({\n          pos: [sim.warp_spacing*(j+1), yarn_height*(i+1), 0],\n          norm: [0, 1, 0],\n          color: [col, col, col]\n        });\n\n        let starting_index = ((i*warps(draft.drawdown)) + j) *4;\n\n        indicies =  indicies.concat([\n          starting_index+2,starting_index+0,starting_index+3,starting_index+1,starting_index+3,starting_index+0\n        ]);\n      }\n    }\n\n\n    for (const vertex of alldata) {\n      positions.push(...vertex.pos);\n      normals.push(...vertex.norm);\n      colors.push(...vertex.color);\n    }\n\n    geometry.setIndex(indicies);\n    geometry.setAttribute( 'position', new THREE.Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.setAttribute( 'normal', new THREE.Float32BufferAttribute( normals, 3 ) );\n\t\tgeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( colors, 3 ) );\n    const material = new THREE.MeshBasicMaterial( {\n      side: THREE.DoubleSide,\n      vertexColors: true\n    } );\n\n\n\n    let mesh = new THREE.Mesh( geometry, material );\n    this.draft_scene.add(mesh);\n    this.draft_scene = this.applyOrientationConversion(this.draft_scene, boundary_vtx);\n\t\tscene.add( this.draft_scene );\n\n\n  }\n\n  showDraft(){\n    this.draft_scene.visible = true;\n  }\n\n  hideDraft(){\n    this.draft_scene.visible = false;\n  }\n\n\n  showWarps(){\n    this.warp_scene.visible = true;\n  }\n\n  hideWarps(){\n    this.warp_scene.visible = false;\n  }\n\n  showWefts(){\n    // console.log(\"SHOW WEFTS\");\n    this.weft_scene.visible = true;\n  }\n\n  hideWefts(){\n    this.weft_scene.visible = false;\n  }\n\n\n  hideWarpLayerMap(){\n    this.warp_layer_map_scene.visible = false;\n  }\n\n  showWarpLayerMap(){\n    this.warp_layer_map_scene.visible = true;\n    // console.log(\"SHOW WARP LAYER MAP\", this.warp_layer_map_scene)\n  }\n\n  hideWeftLayerMap(){\n    this.weft_layer_map_scene.visible = false;\n  }\n\n  showWeftLayerMap(){\n    this.weft_layer_map_scene.visible = true;\n    // console.log(\"SHOW LAYER MAP\", this.weft_layer_map_scene)\n  }\n\n  hideTopo(){\n    this.topo_scene.visible = false;\n  }\n\n  showTopo(){\n    this.topo_scene.visible = true;\n    // console.log(\"SHOW LAYER MAP\", this.topo_scene)\n  }\n\n  drawWeftLayerMap(scene, boundary_vtx){\n\n    this.weft_layer_map_scene =  new THREE.Group();\n\n    let z = -20;\n\n    const lm = this.currentSim.layer_maps;\n    const sim = this.currentSim.sim;\n    const draft = this.currentSim.draft;\n\n    let range = lm.weft.reduce((acc, val) => {\n      let max = val.reduce((sub_acc, vtx) => {\n        if(vtx > sub_acc) return vtx;\n        return sub_acc;\n      }, 0);\n\n      if(max > acc) return max;\n      return acc;\n    }, 0);\n\n    if(range == 0) range = 1;\n\n    const lut = new Lut();\n\n    lut.setColorMap( 'rainbow', 512);\n\n  \n    const geometry = new THREE.BufferGeometry();\n    // const yarn_height = 5;\n    const yarn_height = this.currentSim.sim.warp_spacing;\n\n    let alldata = [];\n    let positions = [];\n    let colors = [];\n    let normals = [];\n    let indicies = [];\n\n    for(let i = 0; i < lm.weft.length; i++){\n      for(let j = 0; j < lm.weft[0].length; j++){\n\n        const r = 0.5 + ( lm.weft[i][j] / range );\n        const col = lut.getColor(r);\n       \n\n\n\n       alldata.push({\n          pos: [sim.warp_spacing*j, yarn_height*i, z],\n          norm: [0, 1, 0],\n          color: [col.r, col.g, col.b]\n        });\n    \n        alldata.push({\n          pos: [sim.warp_spacing*(j+1), yarn_height*i, z],\n          norm: [0, 1, 0],\n          color: [col.r, col.g, col.b]\n        })\n    \n        alldata.push({\n          pos: [sim.warp_spacing*j, yarn_height*(i+1), z],\n          norm: [0, 1, 0],\n          color: [col.r, col.g, col.b]\n        });\n    \n        alldata.push({\n          pos: [sim.warp_spacing*(j+1), yarn_height*(i+1), z],\n          norm: [0, 1, 0],\n          color: [col.r, col.g, col.b]\n        });\n\n        let starting_index = ((i*warps(draft.drawdown)) + j) *4;\n\n        indicies =  indicies.concat([\n          starting_index+2,starting_index+0,starting_index+3,starting_index+1,starting_index+3,starting_index+0\n        ]);\n      }\n    }\n\n\n\n    for (const vertex of alldata) {\n      positions.push(...vertex.pos);\n      normals.push(...vertex.norm);\n      colors.push(...vertex.color);\n    }\n\n\n\n\n    geometry.setIndex(indicies);\n    geometry.setAttribute( 'position', new THREE.Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.setAttribute( 'normal', new THREE.Float32BufferAttribute( normals, 3 ) );\n\t\tgeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( colors, 3 ) );\n    const material = new THREE.MeshBasicMaterial( {\n      side: THREE.DoubleSide,\n      transparent: true,\n      vertexColors: true,\n      opacity: .5\n    } );\n\n\n\n    let mesh = new THREE.Mesh( geometry, material );    \n    this.weft_layer_map_scene.add(mesh);\n    this.weft_layer_map_scene = this.applyOrientationConversion( this.weft_layer_map_scene, boundary_vtx);\n\t\tscene.add(  this.weft_layer_map_scene );\n\n  }\n\n\n\n  drawWarpLayerMap(scene, boundary_vtx){\n\n    this.warp_layer_map_scene =  new THREE.Group();\n\n    let z = -20;\n\n    const lm = this.currentSim.layer_maps;\n    const sim = this.currentSim.sim;\n    const draft = this.currentSim.draft;\n\n    let range = lm.warp.reduce((acc, val) => {\n      let max = val.reduce((sub_acc, vtx) => {\n        if(vtx > sub_acc) return vtx;\n        return sub_acc;\n      }, 0);\n\n      if(max > acc) return max;\n      return acc;\n    }, 0);\n\n    if(range == 0) range = 1;\n\n    const lut = new Lut();\n\n    lut.setColorMap( 'rainbow', 512);\n\n  \n    const geometry = new THREE.BufferGeometry();\n    // const yarn_height = 5;\n    const yarn_height = this.currentSim.sim.warp_spacing;\n\n    let alldata = [];\n    let positions = [];\n    let colors = [];\n    let normals = [];\n    let indicies = [];\n\n    for(let i = 0; i < lm.warp.length; i++){\n      for(let j = 0; j < lm.warp[0].length; j++){\n\n        const r = 0.5 + ( lm.warp[i][j] / range );\n        const col = lut.getColor(r);\n       \n\n\n\n       alldata.push({\n          pos: [sim.warp_spacing*j, yarn_height*i, z],\n          norm: [0, 1, 0],\n          color: [col.r, col.g, col.b]\n        });\n    \n        alldata.push({\n          pos: [sim.warp_spacing*(j+1), yarn_height*i, z],\n          norm: [0, 1, 0],\n          color: [col.r, col.g, col.b]\n        })\n    \n        alldata.push({\n          pos: [sim.warp_spacing*j, yarn_height*(i+1), z],\n          norm: [0, 1, 0],\n          color: [col.r, col.g, col.b]\n        });\n    \n        alldata.push({\n          pos: [sim.warp_spacing*(j+1), yarn_height*(i+1), z],\n          norm: [0, 1, 0],\n          color: [col.r, col.g, col.b]\n        });\n\n        let starting_index = ((i*warps(draft.drawdown)) + j) *4;\n\n        indicies =  indicies.concat([\n          starting_index+2,starting_index+0,starting_index+3,starting_index+1,starting_index+3,starting_index+0\n        ]);\n      }\n    }\n\n\n\n    for (const vertex of alldata) {\n      positions.push(...vertex.pos);\n      normals.push(...vertex.norm);\n      colors.push(...vertex.color);\n    }\n\n\n\n\n    geometry.setIndex(indicies);\n    geometry.setAttribute( 'position', new THREE.Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.setAttribute( 'normal', new THREE.Float32BufferAttribute( normals, 3 ) );\n\t\tgeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( colors, 3 ) );\n    const material = new THREE.MeshBasicMaterial( {\n      side: THREE.DoubleSide,\n      transparent: true,\n      vertexColors: true,\n      opacity: .5\n    } );\n\n\n\n    let mesh = new THREE.Mesh( geometry, material );    \n    this.warp_layer_map_scene.add(mesh);\n    this.warp_layer_map_scene = this.applyOrientationConversion( this.warp_layer_map_scene, boundary_vtx);\n\t\tscene.add(  this.warp_layer_map_scene );\n\n  }\n\n  drawTopology(scene, boundary_vtx){\n\n\n    // console.log(\"LAYER MAP DRAWN\")\n    this.topo_scene =  new THREE.Group();\n    const geometry = new THREE.BufferGeometry();\n    let alldata = [];\n    let positions = [];\n    let colors = [];\n    let normals = [];\n    let indicies = [];\n\n\n    const topo = this.currentSim.topo;\n    const sim = this.currentSim.sim;\n    const yarn_height = sim.warp_spacing;\n\n    const lut = new Lut();\n    const range = 10;\n\n    lut.setColorMap( 'rainbow', 10);\n\n    topo.forEach((vtx, x) => {\n      const r = 0.5 + ( vtx.z_pos / range );\n      const col = lut.getColor(r);\n      // let z = vtx.z_pos * sim.layer_spacing;\n\n      // let z = -10 + vtx.z_pos;\n      let z = -1;\n      alldata.push({\n        pos: [sim.warp_spacing*vtx.j_left+2, yarn_height*vtx.i_bot+2, z],\n        norm: [0, 1, 0],\n        color: [col.r, col.g, col.b]\n      });\n  \n      alldata.push({\n        pos: [sim.warp_spacing*vtx.j_right+sim.warp_spacing-2, yarn_height*vtx.i_bot+2, z],\n        norm: [0, 1, 0],\n        color: [col.r, col.g, col.b]\n      })\n  \n      alldata.push({\n        pos: [sim.warp_spacing*vtx.j_left+2,yarn_height*vtx.i_top+yarn_height-2, z],\n        norm: [0, 1, 0],\n        color: [col.r, col.g, col.b]\n      });\n  \n      alldata.push({\n        pos: [sim.warp_spacing*vtx.j_right+sim.warp_spacing-2, yarn_height*vtx.i_top+yarn_height-2, z],\n        norm: [0, 1, 0],\n        color: [col.r, col.g, col.b]\n      });\n\n      let starting_index = x*4;\n\n      indicies =  indicies.concat([\n        starting_index+2,starting_index+0,starting_index+3,starting_index+1,starting_index+3,starting_index+0\n      ]);\n\n    })\n\n\n    for (const vertex of alldata) {\n      positions.push(...vertex.pos);\n      normals.push(...vertex.norm);\n      colors.push(...vertex.color);\n    }\n\n\n    geometry.setIndex(indicies);\n    geometry.setAttribute( 'position', new THREE.Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.setAttribute( 'normal', new THREE.Float32BufferAttribute( normals, 3 ) );\n\t\tgeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( colors, 3 ) );\n    const material = new THREE.MeshBasicMaterial( {\n      side: THREE.DoubleSide,\n      transparent: true,\n      vertexColors: true,\n      opacity: .5,\n      wireframe: true\n    } );\n\n\n\n    let mesh = new THREE.Mesh( geometry, material );\n    this.topo_scene.add(mesh);\n    this.topo_scene = this.applyOrientationConversion(  this.topo_scene, boundary_vtx);\n\t\tscene.add(  this.topo_scene );\n\n  }\n\n\n  applyOrientationConversion(object, boundary_vtx) {\n    const trans = new THREE.Matrix4();\n\n    let width = boundary_vtx.max_x - boundary_vtx.min_x;\n    let height = boundary_vtx.max_y - boundary_vtx.min_y;\n\n    trans.makeTranslation(-(boundary_vtx.min_x + width/2), (boundary_vtx.min_y + height/2), 0);\n    object.applyMatrix4(trans);\n\n\n    const quaternion = new THREE.Quaternion();\n          \n    //rotate around the x axis to match draft orientation in top left\n    quaternion.setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), Math.PI );\n    object.applyQuaternion(quaternion);\n\n              // quaternion.setFromAxisAngle( new THREE.Vector3( 0, 1, 0 ), Math.PI );\n          // curveObject.applyQuaternion(quaternion);\n\n    return object;\n  }\n\n  drawEndCaps(scene,simdata: SimulationData,  boundary_vtx: any ){\n\n    const vtxs = simdata.vtxs;\n    const draft = simdata.draft;\n    const bounds = simdata.bounds;\n    const ms = simdata.sim.ms;\n\n\n\n    if(vtxs.warps.length <= 0) return;\n\n\n    //DRAW WARP ENDS\n    let in_bounds_warps = vtxs.warps.filter(el => el[0].j >= bounds.topleft.x && el[0].j < bounds.topleft.x + bounds.width);\n\n    in_bounds_warps.forEach((warp, ndx) => {\n\n      let j = ndx + bounds.topleft.x;\n\n \n      if(warp.length > 0){\n\n        let start_vtx = this.getClosestVtx(simdata, true, simdata.bounds.topleft.y, j);\n        let end_vtx = this.getClosestVtx(simdata, true, simdata.bounds.topleft.y + simdata.bounds.height, j);\n\n\n      const material_id = draft.colShuttleMapping[j];\n      let diameter = ms.getDiameter(material_id);\n      const color = this.ms.getColor(material_id)\n\n\n      const top_geometry = new THREE.CircleGeometry( diameter/2, 32 );\n      top_geometry.rotateX(Math.PI/2);\n      \n\n\n      if(start_vtx !== null) top_geometry.translate(start_vtx.x, boundary_vtx.min_y-10, start_vtx.z);\n      const material = new THREE.MeshBasicMaterial( { color: color } );\n      let end_circle = new THREE.Mesh( top_geometry, material );\n      this.warp_scene.add(end_circle);\n\n      \n      const bot_geometry = new THREE.CircleGeometry(  diameter/2, 32 );\n      bot_geometry.rotateX(3*Math.PI/2);\n      if(end_vtx !== null) bot_geometry.translate(end_vtx.x, boundary_vtx.max_y+10, end_vtx.z);\n      let top_circle = new THREE.Mesh( bot_geometry, material );\n      // top_circle.tranlsateY(-top/2);\n      // top_circle.tranlsateX(-right/2);\n      this.warp_scene.add( top_circle );\n      }\n\n    })\n\n\n    let in_bounds_wefts = vtxs.wefts.filter((el, ndx) => ndx >= bounds.topleft.y && ndx < bounds.topleft.y + bounds.height);\n\n\n   in_bounds_wefts.forEach((weft, ndx) => {\n\n      let in_range = weft.filter(el => el.j >= bounds.topleft.x && el.j < bounds.topleft.x + bounds.width);\n\n      let i = ndx + bounds.topleft.y;\n  \n      if(weft.length > 0){\n        let start_vtx = this.getClosestVtx(simdata, false, i, simdata.bounds.topleft.x);\n        let end_vtx = this.getClosestVtx(simdata, false, i, simdata.bounds.topleft.x + simdata.bounds.width);\n\n      const material_id = draft.rowShuttleMapping[i];\n      let diameter = ms.getDiameter(material_id);\n      const color = this.ms.getColor(material_id)\n\n      const top_geometry = new THREE.CircleGeometry(  diameter/2, 32 );\n      top_geometry.rotateY(3*Math.PI/2);\n      if(start_vtx !== null) top_geometry.translate(boundary_vtx.min_x-10, start_vtx.y,start_vtx.z);\n      const material = new THREE.MeshBasicMaterial( { color: color } );\n      let end_circle = new THREE.Mesh( top_geometry, material );\n\n      this.weft_scene.add(end_circle);\n      \n      const bot_geometry = new THREE.CircleGeometry( diameter/2, 32 );\n      bot_geometry.rotateY(Math.PI/2);\n      if(end_vtx !== null) bot_geometry.translate(boundary_vtx.max_x+10, end_vtx.y, end_vtx.z);\n      let top_circle = new THREE.Mesh( bot_geometry, material );\n      this.weft_scene.add(top_circle);\n\n      }\n\n    })\n  \n\n  }\n\n\n    \n\n}\n\n","import { Injectable } from '@angular/core';\nimport { getAuth } from '@angular/fire/auth';\nimport { Observable } from 'rxjs';\nimport { Draft, SaveObj } from '../model/datatypes';\nimport { copyDraft } from '../model/drafts';\nimport { FilesystemService } from './filesystem.service';\n/**\n * stores a state within the undo/redo timeline\n * weaver uses draft, mixer uses ada\n */\n interface HistoryState {\n  draft: Draft;\n  ada: SaveObj;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n\n  public readonly testDocValue$: Observable<any>;\n\n  active_id = 0;\n  max_size = 10;\n  last_saved_time: string = \"\";\n  undo_disabled: boolean;\n  redo_disabled: boolean;\n  timeline: Array<HistoryState>; //new states are always pushed to front of draft\n  // private itemDoc: AngularFirestoreDocument<Item>;\n  \n  constructor(private files: FilesystemService) {\n\n\n    this.active_id = 0;\n    this.timeline = [];\n\n\n  }\n\n  clearTimeline(){\n    this.active_id = 0;\n    this.undo_disabled = true;\n    this.redo_disabled = true;\n    this.timeline = [];\n\n  }\n\n  printValue(value: any){\n    console.log(\"printing\", value);\n  }\n\n\n  validateWriteData(cur_state: any) : any {\n    return cur_state;\n  }\n\n \n\n/**\n * used in weaver - adds a draft to the history state\n * @param draft \n */\n  public addHistoryState(draft:Draft):void{\n\n\n    var state = {\n      draft: copyDraft(draft),\n      ada: null\n    }\n\n    //we are looking at the most recent state\n    if(this.active_id > 0){\n\n\n      //erase all states until you get to the active row\n      this.timeline.splice(0, this.active_id);\n      this.active_id = 0;\n      this.redo_disabled = true;\n\n    }\n\n    //add the new element to position 0\n    var len = this.timeline.unshift(state);\n    if(len > this.max_size) this.timeline.pop();\n\n    if(this.timeline.length > 1) this.undo_disabled = false;\n\n\n  }\n\n/**\n * used in mixer - adds an ada file to the history state\n * @param ada \n */\n  public addMixerHistoryState(ada:{json: string, file: SaveObj}):void{\n\n\n    var state = {\n      draft: null,\n      ada: {\n        version: ada.file.version,\n        workspace: ada.file.workspace,\n        type: ada.file.type,\n        nodes: ada.file.nodes.slice(),\n        tree: ada.file.tree.slice(),\n        draft_nodes: ada.file.draft_nodes.slice(),\n        ops: ada.file.ops.slice(),\n        notes: ada.file.notes.slice(),\n        materials: ada.file.materials.slice(),\n        scale: ada.file.scale\n      }\n    }\n\n    //write this to database, overwritting what was previously there\n    //this.files.writeUserData(ada.file);\n\n    const auth = getAuth();\n    const user = auth.currentUser;\n\n    if(user !== null){\n      this.files.writeFileData(user.uid, this.files.current_file_id, ada.file)\n    } \n\n    //we are looking at the most recent state\n    if(this.active_id > 0){\n\n\n      //erase all states until you get to the active row\n      this.timeline.splice(0, this.active_id);\n      this.active_id = 0;\n      this.redo_disabled = true;\n\n    }\n\n    //add the new element to position 0\n    var len = this.timeline.unshift(state);\n    if(len > this.max_size) this.timeline.pop();\n\n    if(this.timeline.length > 1) this.undo_disabled = false;\n\n    //this.logState(ada);\n\n  }\n\n  \n/**\n * called on redo in weaver\n * @returns returns the draft to reload\n */\n  public restoreNextHistoryState(): Draft{\n\n    if(this.active_id == 0) return; \n\n  \tthis.active_id--;\n\n    if(this.active_id == 0) this.redo_disabled = true;\n\n    return this.timeline[this.active_id].draft;\n    \n\n  }\n\n/**\n * called on redo in mixer\n * @returns returns the ada file to reload\n */  \npublic restoreNextMixerHistoryState(): SaveObj{\n\n    if(this.active_id == 0) return; \n\n  \tthis.active_id--;\n\n    if(this.active_id == 0) this.redo_disabled = true;\n\n    return this.timeline[this.active_id].ada;\n    \n\n  }\n\n  /**\n   * called on undo in weaver\n   * @returns returns the draft to load\n   */\n   public restorePreviousHistoryState():Draft{\n\n     this.active_id++;\n\n      //you've hit the end of available states to restore\n     if(this.active_id >= this.timeline.length){\n        this.active_id--;\n        this.undo_disabled = true;\n        return null; \n     } \n\n     this.redo_disabled = false;\n     return this.timeline[this.active_id].draft;\n      \n  }\n\n    /**\n   * called on undo in mixer\n   * @returns returns the draft to load\n   */\n     public restorePreviousMixerHistoryState():SaveObj{\n\n      this.active_id++;\n \n       //you've hit the end of available states to restore\n      if(this.active_id >= this.timeline.length){\n         this.active_id--;\n         this.undo_disabled = true;\n         return null; \n      } \n \n      this.redo_disabled = false;\n      return this.timeline[this.active_id].ada;\n       \n   }\n\n\n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport { Draft, System } from '../model/datatypes';\nimport { createSystem } from '../model/system';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * stores global information about the number of warp systems in use. \n */\nexport class SystemsService {\n\n  \n  weft_systems: Array<System> = [];\n  warp_systems: Array<System> = [];\n\n  constructor() { \n\n    for(let i = 0; i < 26; i++){\n      const weft = createSystem();\n      weft.id = i; \n      weft.name = String.fromCharCode(i+97);\n      this.weft_systems.push(weft);\n\n      const warp = createSystem();\n      warp.id = i; \n      warp.name = \"\"+(i+1);\n      this.warp_systems.push(warp);\n    }\n\n    this.weft_systems[0].in_use = true;\n    this.warp_systems[0].in_use = true;\n\n  }\n\n  reset() {\n\n    this.weft_systems.forEach(el => {\n      el.in_use = false;\n      el.visible = true;\n    })\n\n    this.warp_systems.forEach(el => {\n      el.in_use = false;\n      el.visible = true;\n    })\n\n    this.weft_systems[0].in_use = true;\n    this.warp_systems[0].in_use = true;\n\n  }\n\n  getWeftSystem(id: number) : System{\n    return this.weft_systems[id];\n  }\n\n  getWarpSystem(id: number) : System{\n    return this.warp_systems[id];\n  }\n\n  getFirstWarpSystem() : System {\n    return this.warp_systems[0];\n  }\n\n  getFirstWeftSystem() : System {\n    return this.weft_systems[0];\n  }\n\n  addWeftSystemFromId(id: number) {\n    this.weft_systems[id].in_use = true;\n\n  }\n\n  addWarpSystemFromId(id: number) {\n    this.warp_systems[id].in_use = true;\n\n  }\n\n  weftSystemIsVisible(id: number){\n    return this.weft_systems[id].visible;\n  }\n\n  warpSystemIsVisible(id: number){\n    return this.warp_systems[id].visible;\n  }\n\n    /**\n   * looks for the next in use system after the ndx submitted.\n   * @param ndx \n   */\n    getNextWarpSystemFrom(ndx: number): number{\n      return ndx + 1 ;\n      // const in_use = this.warp_systems.filter(el => el.in_use);\n      // let use_ndx = in_use.findIndex(el => el.id === ndx);\n      // use_ndx++;\n  \n      // if(use_ndx < in_use.length){\n      //   return in_use[use_ndx].id;\n      // }else{\n      //   //get the last used number an dincrement one\n      //   this.warp_systems[use_ndx].in_use = true;\n      //   return use_ndx;\n      // }\n\n    }\n  \n\n  /**\n   * looks for the next in use system after the ndx submitted.\n   * @param ndx \n   */\n  getNextWeftSystemFrom(ndx: number): number{\n    return ndx + 1;\n    // const in_use = this.weft_systems.filter(el => el.in_use);\n    // let use_ndx = in_use.findIndex(el => el.id == ndx);\n    // use_ndx++;\n\n    // if(use_ndx < in_use.length){\n    //   return in_use[use_ndx].id;\n    // }else{\n    //   //get the last used number an dincrement one\n    //   this.weft_systems[use_ndx].in_use = true;\n    //   return use_ndx;\n    // }\n  }\n\n  /**\n   * checks if we should move to the next system id or create a new empty system.\n   * @returns the id of the created or empty system to add to\n  */\n   getNextWarpSystem(ndx: number, draft: Draft): number{\n\n    var system_id = draft.colSystemMapping[ndx];\n    // //are any other rows assigned to this system or is this the first\n    const count: number = draft.colSystemMapping.reduce((acc,val) => {\n      if(val === system_id){\n        acc = acc + 1;\n      } \n      return acc;\n    }, 0);\n\n    //this is the only one assigned\n    if(count === 1){\n      return 0; // return the starting index\n    }else{\n      return this.getNextWarpSystemFrom(system_id);\n    }\n\n  }\n\n  /**\n   * checks if we should move to the next system id or create a new empty system.\n   * @returns the id of the created or empty system to add to\n  */\n   getNextWeftSystem(ndx: number, draft: Draft): number{\n\n    var system_id = draft.rowSystemMapping[ndx];\n    //are any other rows assigned to this system or is this the first\n    const count: number = draft.rowSystemMapping.reduce((acc,val) => {\n      if(val === system_id){\n        acc = acc + 1;\n      } \n      return acc;\n    }, 0);\n\n\n    //this is the only one assigned\n    if(count === 1){\n      return 0; // return the starting index\n    }else{\n      return this.getNextWeftSystemFrom(system_id);\n    }\n\n  }\n\n  getWeftSystemCode(id: number) : string {\n    var system = this.getWeftSystem(id);\n    if(system === undefined) return \"err\";\n    return system.name;\n  }\n\n  getWarpSystemCode(id: number) {\n\n    var system = this.getWarpSystem(id);\n    if(system === undefined) return \"err\";\n   return  system.name;\n }\n\n\n\n}\n","import { Injectable, ViewRef } from '@angular/core';\nimport { boolean } from 'mathjs';\nimport { BoolParam, Draft, DraftNode, DraftNodeProxy, Drawdown, DynamicOperation, IOTuple, Loom, LoomSettings, Node, NodeComponentProxy, NotationTypeParam, OpComponentProxy, Operation, OpInput, OpNode, OpParamVal, StringParam, TreeNode, TreeNodeProxy } from '../../core/model/datatypes';\nimport { copyDraft, createDraft, flipDraft, getDraftName, initDraftWithParams, warps, wefts } from '../../core/model/drafts';\nimport { copyLoom, flipLoom, getLoomUtilByType } from '../../core/model/looms';\nimport utilInstance from '../../core/model/util';\nimport { SystemsService } from '../../core/provider/systems.service';\nimport { WorkspaceService } from '../../core/provider/workspace.service';\nimport { ConnectionComponent } from '../../mixer/palette/connection/connection.component';\nimport { OperationComponent } from '../../mixer/palette/operation/operation.component';\nimport { SubdraftComponent } from '../../mixer/palette/subdraft/subdraft.component';\nimport { createCell } from '../model/cell';\nimport { ImageService } from './image.service';\nimport { OperationService } from './operation.service';\n\n\n/**\n * this class registers the relationships between subdrafts, operations, and connections\n */\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TreeService {\n\n  nodes: Array<Node> = []; //an unordered list of all the nodes\n  tree: Array<TreeNode> = []; //a representation of the node relationships\n  private open_connection: number = -1; //represents a node that is currently seeking a conneciton, used for checking which nodes it is able to connect to\n  preview: DraftNode; //references the specially identified component that is a preview (but does not exist in tree)\n\n  constructor(\n    private ws: WorkspaceService,\n    private ops: OperationService,\n    private imageservice: ImageService,\n    private systemsservice: SystemsService) { \n  }\n\n\n  /**\n   * generates an id from the timestamp and random number (to offset effects to two functions running in the same ms)\n   */\n  getUniqueId() : number {\n    \n    return utilInstance.generateId(8);\n\n\n  }\n\n    /**\n     * go through the list of nodes being loaded and replace any with names that have been outdated.  \n     * **/\n    \n    async replaceOutdatedOps(nodes: Array<any>) : Promise<Array<any>>{\n\n      const correctedNodes = nodes.map(node => {\n        if(this.ops.getOp(node.name) === null){\n          const op =  this.ops.getOpByOldName(node.name);\n          node.name = op.name\n          node.inlets = op.inlets;\n        }\n        return node;\n      });\n\n            return Promise.resolve(correctedNodes);\n    }\n\n\n\n  /** scan through nodes and return all that our valid */\n  async validateNodes() : Promise<boolean>{\n\n\n    const err_ops: Array<Node> = this.nodes\n            .filter(el => el.type === \"op\")\n            .filter(el => this.ops.getOp((<OpNode> el).name) === undefined)\n\n    //console.error(\"found invalid op nodes\", err_ops);\n\n\n    err_ops.forEach(node => {\n      this.removeOperationNode(node.id);\n    });\n\n    ///also check to see that all connections exist\n    const cxns = this.getUnusuedConnections();\n\n   // console.log(\"unusued connections found\", cxns);\n    cxns.forEach(el => this.removeNode(el));\n  \n\n    return (err_ops.length === 0);\n\n  }\n\n\n  setOpParams(id: number, params: Array<any>, inlets: Array<any>){\n    this.getOpNode(id).params = params.slice();\n    this.getOpNode(id).inlets = inlets.slice();\n  }\n\n  /**\n   * this is called when a dynamic operation's parameter updates and therefore, must change inlet values\n   * @param node_id an object containing the id of hte parameter that has changed\n   * @param param_id the id of the parameter that changed\n   * @param value the value at that parameter\n   * @returns a list of inlet values to add.\n   */\n   onDynanmicOperationParamChange(opid: number, name: string, inlets: Array<any>, param_id: number, param_val: any) : Array<any>{\n\n    console.log(\"ON DYNAMIC PARAM CHANGE \", opid, param_id, param_val)\n\n      const op = <DynamicOperation> this.ops.getOp(name);\n      const param_type = op.params[param_id].type\n      const opnode = this.getOpNode(opid);\n\n      if(!this.ops.isDynamic(name)) return;\n\n      if(op.dynamic_param_id != param_id && param_type !== 'notation_toggle') return;\n\n\n      let param_vals:Array<OpParamVal> = opnode.params.map((el, ndx) =>  {\n       return  { op_name: name, param: op.params[ndx], val: el}\n      });\n\n\n      inlets = op.onParamChange(param_vals, op.inlets, inlets, param_id, param_val);\n\n\n      return inlets;\n  }\n\n//   onDynanmicOperationParamChange(opid: number, name: string, inlets: Array<any>, param_id: number, param_val: any) : Array<any>{\n\n\n\n//     const op = this.ops.getOp(name);\n//     const opnode = this.getOpNode(opid);\n\n//     let param_type = op.params[param_id].type;\n\n\n//     if(param_id === (<DynamicOperation>op).dynamic_param_id || param_type == 'notation_toggle'){\n//       const type = (<DynamicOperation>op).dynamic_param_type;\n      \n//       let static_inputs = op.inlets.filter(el => el.type === 'static');\n//       let num_dynamic_inlets = inlets.length - static_inputs.length;\n//       let matches = [];\n\n//       switch(type){\n\n\n\n//         case 'notation':\n\n//           const system_parsing_regex = /.*?(.*?[a-xA-Z]+[\\d]+).*?/i;\n\n//           if(param_id == 1 && param_val == 0){\n//             const string_to_parse = op.params[0].value;\n//             matches = utilInstance.parseRegex(opnode.params[0], (<StringParam> op.params[0]).regex);\n//             matches = matches.map(el => el.slice(1, -1))\n//             matches = matches.reduce((acc, val) => {\n//               const sub_match = utilInstance.parseRegex(val, system_parsing_regex);\n//               return acc.concat(sub_match);\n//             }, []);\n\n//             inlets = inlets.slice(0,static_inputs.length);\n//             matches.forEach(el => {\n//               inlets.push(el);\n//             })\n//           }else if(param_id == 1 && param_val == 1){\n//             matches = utilInstance.parseRegex(opnode.params[0],(<StringParam> op.params[0]).regex);\n//             matches = matches.map(el => el.slice(1, -1))\n//             inlets = inlets.slice(0,static_inputs.length);\n//             matches.forEach(el => {\n//               inlets.push(el);\n//             })\n//           }else{\n  \n\n//             matches = utilInstance.parseRegex(param_val, (<StringParam> op.params[0]).regex);\n//             matches = matches.map(el => el.slice(1, -1))\n//             if(opnode.params[1] == 0){\n//               matches = matches.reduce((acc, val) => {\n//                 const sub_match = utilInstance.parseRegex(val, system_parsing_regex);\n//                 return acc.concat(sub_match);\n//               }, []);\n//             }  \n\n//             inlets = inlets.slice(0,static_inputs.length);\n//             matches.forEach(el => {\n//               inlets.push(el);\n//             })\n//           }\n          \n//         break;\n\n//         case 'profile':\n//           matches = utilInstance.parseRegex(param_val, (<StringParam>op.params[0]).regex);\n//           inlets = inlets.slice(0,static_inputs.length);\n//           matches.forEach(el => {\n//             if(inlets.find(inletval => inletval == el.charAt(0)) === undefined) inlets.push(el.charAt(0));\n//           })\n//         break;\n\n//         case 'draft':\n//           if(param_val !== -1){\n//             const draftNode = <DraftNode> this.getNode(param_val);\n//             const uniqueVals = utilInstance.filterToUniqueValues(draftNode.loom.threading);\n//             const inlet_nums = uniqueVals.length;\n//             inlets = inlets.slice(0,static_inputs.length);\n//             for(let i = 0; i < inlet_nums; i++){\n//               inlets.push(i+1);\n//             }\n//           }\n//         break;\n\n        \n//         case 'number':\n\n//         if(param_type === 'number'){\n//           if(param_val > num_dynamic_inlets){\n//             for(let i = num_dynamic_inlets; i < param_val; i++){\n//                 inlets.push(i+1);\n//             }\n//           }else if(param_val < num_dynamic_inlets){\n//             const delete_num = num_dynamic_inlets - param_val;\n//             inlets = inlets.slice(0, -delete_num);\n//           }\n//         }else if(param_type == 'string'){\n//           const all_inputs = param_val.split(' ');\n//           const unique_values = utilInstance.filterToUniqueValues(all_inputs);\n//           inlets = inlets.slice(0,static_inputs.length);\n//           unique_values.forEach(el => {\n//             inlets.push(el);\n//           })\n//         }\n\n//         break;\n//         case 'system':\n//            static_inputs = op.inlets.filter(el => el.type === 'static');\n//            num_dynamic_inlets = inlets.length - static_inputs.length;\n\n//           if(param_val > num_dynamic_inlets){\n//             for(let i = num_dynamic_inlets; i < param_val; i++){\n//                 this.systemsservice.weft_systems[i].in_use = true;\n//                 inlets.push(i);  \n//             }\n//           }else if(param_val < num_dynamic_inlets){\n//             inlets = inlets.slice(0, param_val+static_inputs);\n//           }\n//         break;\n\n          \n\n//       }\n//     }\n//   return inlets;\n// }\n\n\n\n\n  /**\n   * loads data into an operation node from a file load, or when an operation is first instantiated,  or undo/redo event\n   * @param entry the upload entry associated with this node or null if there was no upload associated\n   * @param name the name of the operation\n   * @param params the parameters to input\n   * @param inlets an array containing the paramteres that get mapped to inputs at each inlets\n   * @returns the node and the entry\n   */\n   loadOpData(entry: {prev_id: number, cur_id: number}, name: string, params:Array<any>, inlets: Array<any>) : Promise<{on: OpNode, entry:{prev_id: number, cur_id: number}}>{\n    \n\n    const nodes = this.nodes.filter(el => el.id === entry.cur_id);\n    let op = this.ops.getOp(name);\n\n    if(nodes.length !== 1){\n      return Promise.reject(\"found 0 or more than 1 nodes at id \"+entry.cur_id);\n    } \n\n    const node = nodes[0];\n\n    if(op === undefined || op === null){\n       return Promise.reject(\"no op of name:\"+name+\" exists\");\n\n    }  \n\n\n\n    if(params === undefined){\n      params = [];\n    }\n\n    if(params === undefined){\n      inlets = [];\n    }\n\n    const param_types = op.params.map(el => el.type);\n\n\n      const formatted_params = param_types.map((type, ndx) => {\n        switch(type){\n          case \"boolean\":\n            return (params[ndx]) ? 1 : 0;\n          \n            case \"file\":\n              const id_and_data = this.imageservice.getImageData(params[ndx]);\n              if(id_and_data === undefined  || id_and_data.data === undefined) return {id: params[ndx], data: null}\n              else return {id: params[ndx], data: id_and_data.data};\n        \n            default:\n              return params[ndx];\n        }\n      });\n  \n      const default_param_values = this.ops.getOp(name).params.map(el => el.value);\n  \n      //this gets teh default values for the opration\n      //this overwrites some of those with any value that has been previous added\n      const params_out = default_param_values.map((p, ndx) => {\n        if(ndx < params.length) return formatted_params[ndx];\n        else return p;\n      });\n\n      const default_inlet_values = this.ops.getOp(name).inlets.map(el => el.value);\n\n      if(inlets === undefined || inlets.length == 0){\n        inlets = default_inlet_values.slice();\n        if(this.ops.isDynamic(name)){\n          const op = <DynamicOperation> this.ops.getOp(name);\n          (<OpNode> node).params = params_out.slice()\n          let dynamic_inlets = this.onDynanmicOperationParamChange(node.id, name, inlets, op.dynamic_param_id, op.params[op.dynamic_param_id].value);\n          \n          inlets = dynamic_inlets.slice();\n        }\n      }\n\n       inlets = inlets.map(el => (el === null) ? 0 : el); \n\n  \n      node.dirty = false;\n      (<OpNode> node).name = name;\n      (<OpNode> node).params = params_out.slice();\n      (<OpNode> node).inlets = inlets.slice();\n  \n     return Promise.resolve({on:<OpNode> nodes[0], entry});\n  \n\n\n  \n  }\n\n  /**\n   * recomputes the value of every loom. \n   */\n  updateLooms(){\n\n    this.getDraftNodes().forEach(dn => {\n    \n      const loom_utils = getLoomUtilByType(dn.loom_settings.type);\n      loom_utils.computeLoomFromDrawdown(dn.draft.drawdown, dn.loom_settings, this.ws.selected_origin_option).then(loom => {\n        dn.loom = loom;\n      });\n    });\n\n  }\n\n\n  /**\n   * a preview is a temporary object that is created when two drafts overlap in drawing mode\n   * it just needs to contain a draft (and no loom as it will be deleted when the active operation ends)\n   * @param sd \n   * @param draft \n   * @returns \n   */\n  setPreview(sd: any, draft: Draft) : Promise<DraftNode>{\n    this.preview = {\n      id: -1,\n      type: \"draft\",\n      ref: sd.hostView,\n      component: <SubdraftComponent> sd.instance,\n      dirty: true, \n      draft: copyDraft(draft),\n      loom: null,\n      loom_settings: null,\n      render_colors: false\n    }\n\n    sd.dirty = true;\n\n    return Promise.resolve(this.preview);\n  \n  }\n\n  setPreviewDraft(draft: Draft) : Promise<DraftNode>{\n    if(this.preview === undefined) return Promise.reject(\"preview undefined\");\n      this.preview.draft = copyDraft(draft);\n      this.preview.dirty = true;\n      (<SubdraftComponent> this.preview.component).draft = draft;\n      return Promise.resolve(this.preview);\n  }\n\n\n\n  unsetPreview(){\n    this.preview = undefined;\n  }\n\n  hasPreview():boolean{\n      if(this.preview === undefined) return false;\n      return true;\n  }\n\n\n  getPreview() : DraftNode{\n    return this.preview;\n  }\n\n  getPreviewComponent() : SubdraftComponent{\n    return <SubdraftComponent> this.preview.component;\n  }\n\n  /**\n   * returns a list of all the node ids of drafts that are dirty (including preview)\n   */\n  getDirtyDrafts() : Array<number> {\n\n    return this.nodes.filter(el => el.type === \"draft\")\n      .concat(this.preview)\n      .filter(el => el.dirty)\n      .map(el => el.id);\n  }\n\n\n /**\n  * load the data into the draft node\n  * @param entry the map entry associated with this node, null if not supplied\n  * @param id the id of this node, which should match the component\n  * @param draft the draft to associate with this node\n  * @param loom the loom to associate with this node\n  * @returns the created draft node and the entry associated with this\n  */\n  loadDraftData(entry: {prev_id: number, cur_id: number}, draft: Draft, loom: Loom, loom_settings: LoomSettings, render_colors: boolean) : Promise<{dn: DraftNode, entry:{prev_id: number, cur_id: number}}>{\n\n    const nodes = this.nodes.filter(el => el.id === entry.cur_id);\n\n    if(nodes.length !== 1) return Promise.reject(\"found 0 or more than 1 nodes at id \"+entry.cur_id);\n\n    nodes[0].dirty = true;\n\n    draft.id = entry.cur_id;\n   (<DraftNode> nodes[0]).draft = copyDraft(draft);\n\n\n\n   if(loom_settings === null || loom_settings == undefined){\n    (<DraftNode> nodes[0]).loom_settings = {\n      type: this.ws.type,\n      epi: this.ws.epi,\n      units: this.ws.units,\n      frames: this.ws.min_frames,\n      treadles: this.ws.min_treadles\n    }\n\n   }else{\n    (<DraftNode> nodes[0]).loom_settings = loom_settings;\n   }\n\n   if(loom === null){\n    const loom_utils = getLoomUtilByType( (<DraftNode> nodes[0]).loom_settings.type);\n   loom_utils.computeLoomFromDrawdown(draft.drawdown,(<DraftNode> nodes[0]).loom_settings,  this.ws.selected_origin_option).then(loom => {\n      (<DraftNode> nodes[0]).loom = loom;\n    });\n   }else{\n    (<DraftNode> nodes[0]).loom = copyLoom(loom);\n\n   }\n\n   if(render_colors === undefined || render_colors === null)  (<DraftNode> nodes[0]).render_colors = false;\n   else (<DraftNode> nodes[0]).render_colors = render_colors;\n   //console.log(\"DRAFT NODE LOADED:\",_.cloneDeep(<DraftNode> nodes[0]))\n   return Promise.resolve({dn: <DraftNode> nodes[0], entry});\n\n  }\n\n\n  /**\n   * loads in data to the nodes, from undo/redo or new file additions.\n   * when loading new files or states, the tree will have been previously cleared. \\\n   * when loading new nodes from a file into an existing workspace,new ids must be assigned to ensure they are unique\n   * nodes are loaded before the view has been inititialized \n   * when new data is loaded, it makes sure each of the ids generated is unique\n   * @param type the type of node to create\n   * @param id the current id of the \n   * @returns a map representating any id changes\n   */\n  loadNode(type: 'draft'|'op'|'cxn', id: number):{prev_id: number, cur_id: number}{\n\n    let node: Node;\n\n  \n    switch(type){\n      case 'draft':\n        node = <DraftNode> {\n          type: type,\n          ref: null,\n          id: this.getUniqueId(),\n          component: null,\n          dirty: false,\n          draft: null,\n          loom:null,\n          loom_settings: null\n        }\n\n\n        break;\n      case 'op': \n\n      node = <OpNode> {\n        type: type,\n        ref: null,\n        id: this.getUniqueId(),\n        component: null,\n        dirty: false,\n        params: [],\n        inlets: [],\n        name: ''\n      }\n      break;\n      default: \n       node = {\n        type: type,\n        ref: null,\n        id: this.getUniqueId(),\n        component: null,\n        dirty: false,\n      }\n      break;\n    }\n\n\n    this.nodes.push(node);\n\n      this.tree.push({\n        node: node,\n        parent: null,\n        outputs: [],\n        inputs: []\n      });\n\n\n  \n    return {prev_id: id, cur_id: node.id};\n  }\n\n\n\n\n\n  getConnectionsInvolving(node_id: number) : {from: number, to: number}{\n\n    const tn = this.getTreeNode(node_id);\n    if(tn.outputs.length !== 1) console.error(\"connection node has more than one to\");\n    if(tn.inputs.length !== 1) console.error(\"connection node has more than one from\");\n\n    return {from: tn.inputs[0].tn.node.id, to: tn.outputs[0].tn.node.id};\n\n\n  }\n\n\n  /**\n   * given an operation and a connection, return the inlet to which this connection inserts \n   * @param op_id \n   * @param cxn_id \n   * @param returns the position index of the cxn or -1 if not found\n   */\n  getInletOfCxn(op_id: number, cxn_id) : number {\n    const inputs = this.getInputsWithNdx(op_id);\n    const ndx:Array<number> = inputs\n      .filter(el => el.tn.node.id === cxn_id)\n      .map(el => el.ndx);\n\n    if(ndx.length === 0 ) return -1;\n    if(ndx.length === 1) return ndx[0];\n\n    console.error(\"connection found at more than one inlet\");\n    return -1;\n      \n  }\n\n  /**\n   * before performing a dynamic op, make sure that their are no connections that are pointing to an inlet that nolonger exists\n   * @param id - the object id we are checking\n   * @returns an array of viewRefs for Connections to remove.\n   */\n  sweepInlets(id: number) : Promise<Array<ViewRef>>{\n\n     const opnode: OpNode = this.getOpNode(id);\n     const op: Operation = this.ops.getOp(opnode.name);\n     const inputs_to_op:Array<IOTuple> = this.getInputsWithNdx(id);\n\n    const num_constant_inlets = op.inlets.length;\n\n    //filter out inputs that are matched to an index highter than what we offer\n    const missing_inlets: Array<IOTuple> = inputs_to_op\n      .filter((el) => el.ndx >= opnode.inlets.length)\n\n    const viewRefs = missing_inlets.map(el => el.tn.node.ref);\n\n    \n    missing_inlets.forEach(el => {\n        this.removeConnectionNode(el.tn.inputs[0].tn.node.id, el.tn.outputs[0].tn.node.id, el.ndx);\n    });\n\n    return Promise.resolve(viewRefs);\n\n  }\n    \n\n  /**\n   * sets the open connection\n   * @param id the value to set the open connection to\n   * @returns  true if the id maps to a subdraft\n   */\n  setOpenConnection(id: number) : boolean {\n    if(this.getType(id) !== 'draft') return false;\n    this.open_connection = id; \n    console.log(\"set open connection\", id)\n    return true;\n  }\n\n  hasOpenConnection():boolean{\n    return this.open_connection !== -1;\n  }\n\n  getOpenConnection(): SubdraftComponent{\n    return <SubdraftComponent> this.getComponent(this.open_connection);\n  }\n\n  /**\n   * TEMP DISABLE DUE TO CAUSING PROBLEMS \n   * unsets the open connection\n   * @returns  true if it indeed changed the value\n   */\n  unsetOpenConnection() : boolean{\n    this.open_connection = -1;\n      return true;\n  }\n\n  setNodeComponent(id: number, c: SubdraftComponent | OperationComponent | ConnectionComponent){\n    const node: Node = this.getNode(id);\n    node.component = c;\n  }\n\n  setNodeViewRef(id: number, v: ViewRef){\n    const node: Node = this.getNode(id);\n    node.ref = v;\n  }\n\n  /** clears all the data associated with this tree */\n  clear(){\n    this.tree = [];\n    this.nodes = [];\n  }\n\n\n  /** depends on having nodes created first so that all tree nodes are present */\n\n\n  /**\n   * this function is called from the mixer when processing file data. It depends on having all nodes created first. \n   * @param id_map this is a map created on upload that maps uploaded ids to the current ids. \n   * @param node_id the current node_id\n   * @param parent_id the current treenode id of the parent node\n   * @param inputs the current treenode ids for all inputs\n   * @param outputs the current treenode ids for all outputs\n   * @returns an object that holds the tree node as well as its associated map entry\n   */\n  async loadTreeNodeData(id_map: any, node_id: number, parent_id: number, inputs:Array<{tn: number, ndx: number}>,  outputs:Array<{tn: number, ndx: number}>): Promise<{tn: TreeNode, entry: {prev_id: number, cur_id: number}}>{\n\n    const entry = id_map.find(el => el.cur_id === node_id);\n  \n    const tn: TreeNode = this.getTreeNode(node_id);\n    tn.parent = (parent_id === -1) ? null : this.getTreeNode(parent_id);\n    tn.inputs = inputs\n      .filter(input => input !== undefined)\n      .map(input => {return {tn: this.getTreeNode(input.tn), ndx: input.ndx}});\n    tn.outputs = outputs\n      .filter(output => output !== undefined)\n      .map(output => {\n      return {tn: this.getTreeNode(output.tn), ndx: output.ndx}\n    });\n    return Promise.resolve({tn, entry});\n\n\n  }\n\n\n\n  /**\n   * create an node and add it to the tree (without relationships)\n   * @param id a unique id for this component, ideally created by the viewCompomentRef \n   * @param type the type of component\n   * @param component the compoenent instance\n   * @returns the id assigned\n   */\n  createNode(type: 'draft'|'op'|'cxn', component: SubdraftComponent | OperationComponent | ConnectionComponent, ref: ViewRef):number{\n\n\n    let node: Node;\n\n    switch(type){\n      case 'draft':\n        node = <DraftNode> {\n          type: type,\n          ref: ref,\n          id: this.getUniqueId(),\n          component: component,\n          dirty: false,\n          draft: null\n        }\n        break;\n      case 'op': \n      node = <OpNode> {\n        type: type,\n        ref: ref,\n        id: this.getUniqueId(),\n        component: component,\n        inlets: [],\n        dirty: false,\n        params: [],\n        name: ''\n      }\n\n\n      break;\n      default: \n       node = {\n        type: type,\n        ref: ref,\n        id: this.getUniqueId(),\n        component: component,\n        dirty: false,\n      }\n      break;\n    }\n\n    this.nodes.push(node);\n\n      this.tree.push({\n        node: node,\n        parent: null,\n        outputs: [],\n        inputs: []\n      });\n    \n\n    return node.id;\n  }\n\n  getComponent(id:number): SubdraftComponent | ConnectionComponent | OperationComponent{\n    const node: Node = this.getNode(id);\n    return node.component; \n  }\n\n  getComponents():Array<any>{\n    return this.nodes.map(node => node.component);\n  }\n\n  getNode(id:number):Node{\n    const ndx: number = this.getNodeIndex(id);\n    if(ndx === -1) return null;\n    return this.nodes[ndx]; \n  }\n\n  getNodeIdList() : Array<number> {\n    return this.nodes.map(node => node.id);\n  }\n\n  getNodeIndex(id:number):number{\n    return this.nodes.findIndex(el => (el.id == id));\n  }\n\n  getType(id:number):string{\n    const node: Node = this.getNode(id);\n    return node.type;\n  }\n\n  getViewRef(id:number):ViewRef{\n    const node: Node = this.getNode(id);\n    return node.ref;\n  }\n\n\n  /**\n   * get's this subdraft's parent\n   * @param sd_id \n   * @returns the parent's id, or -1 if it has no parent\n   */\n  getSubdraftParent(sd_id: number):number{\n    const tn: TreeNode = this.getTreeNode(sd_id);\n    if(tn.parent === null || tn.parent === undefined) return -1;\n    else return tn.parent.node.id;\n  }\n\n  hasParent(sd_id: number) : boolean{\n    return (this.getSubdraftParent(sd_id) === -1) ? false : true;\n  }\n\n  /**\n   * return the connection objects that are immediately attached to this object\n   * @param id - the node id\n   * @returns an array of id's for the immediatly connected connections\n   */\n  getNodeConnections(id: number):Array<number>{\n    const tn: TreeNode = this.getTreeNode(id);\n    const out_node: Array<Node> = tn.outputs.map(el => el.tn.node);\n    const out_cxn: Array<Node> = out_node.filter(el => el.type === 'cxn');\n    const in_node: Array<Node> = tn.inputs.map(el => el.tn.node);\n    const in_cxn: Array<Node> = in_node.filter(el => el.type === 'cxn');\n    const join: Array<Node> = out_cxn.concat(in_cxn);\n    return join.map(el => el.id);\n  }\n\n  /**\n   * gets a list of non-connection nodes that need to be updated if this node moves. \n   * this takes into acccount that some nodes have a parent that will move with them.\n   * @param id \n   * @returns \n   */\n  getNodesToUpdateOnMove(id: number){\n\n    const tn: TreeNode = this.getTreeNode(id);\n    let to_check: Array<number> = [id];\n\n    if(this.isMultipleParent(id) || this.isSibling(id)) return to_check;\n    \n    //the parent if there is one\n    if(tn.parent !== null) to_check.push(tn.parent.node.id);\n\n    //add the child this node generated if there is one. \n    const outputs: Array<TreeNode> = this.getNonCxnOutputs(id).map(el => this.getTreeNode(el));\n\n\n    const has_parents: Array<TreeNode> = outputs.filter(el => (el.parent !== null));\n    const is_child: Array<number> = has_parents.filter(el => (el.parent.node.id === id)).map(el => el.node.id);\n\n    if(is_child.length > 0) to_check = to_check.concat(is_child);\n\n    \n\n    return to_check;\n\n  }\n\n  /**\n   * called on an operation to check if it can accept connections from a given subdraft\n   * @param id - the id of the operation in question\n   * @param inlet - the inlet id we are looking at\n   */\n  canAcceptConnections(id: number, inlet: number) : boolean {\n\n    if(this.open_connection === -1) {\n    console.error(\"no open connection\");\n    return false;    //there is no open connection\n    }\n  \n    const parent_op = this.getSubdraftParent(this.open_connection);\n    \n    if(parent_op === id){\n      return false; //can't be an input to your parent\n    } \n\n    const is_already_connected = this.getInputsAtNdx(id, inlet).length > 0 && this.getInputs(id).find(el => el === this.open_connection) !== undefined;\n    if(is_already_connected){\n     // console.error(\"already connected, draft=\", this.open_connection, \" opid=\", id);\n      return false; //these two things are already directly connected\n    } \n\n    \n\n    const has_room = (this.getInputs(id).length < (<OperationComponent> this.getComponent(id)).op.inlets[inlet].num_drafts || (<OperationComponent> this.getComponent(id)).op.inlets[inlet].num_drafts == -1);\n    if(!has_room) return false;\n\n    if(parent_op === -1 && has_room) return true; //if you don't have a parent and there is room, go for it\n\n    const upstream  = this.getUpstreamOperations(parent_op);\n    const no_circles = upstream.length == 0 || upstream.find(el => el === parent_op) == -1;\n\n    return has_room && no_circles;\n  }\n\n  /**\n   * test if this node has children, as opposed to just zero\n   * @param id \n   * @returns a boolean \n   */\n   isParent(id: number):boolean{\n    const tn: TreeNode = this.getTreeNode(id);\n    return (tn.outputs.length > 0);\n  }\n\n  /**\n   * test if this node is a seed (e.g. has no inputs)\n   * @param id \n   * @returns a boolean \n   */\n    isSeedDraft(id: number):boolean{\n      const tn: TreeNode = this.getTreeNode(id);\n      return (this.getType(id) === \"draft\" && tn.inputs.length === 0);\n    }\n\n    /**\n   * test if this node has just one child. \n   * @param id \n   * @returns a boolean \n   */\n    hasSingleChild(id: number):boolean{\n        const tn: TreeNode = this.getTreeNode(id);\n        return (tn.outputs.length === 1);\n    }\n\n\n    /**\n     * test if this node has just one child and that child subdraft is currently hidden \n     * @param id \n     * @returns a boolean \n     */\n      opHasHiddenChild(id: number):boolean{\n          const tn: TreeNode = this.getTreeNode(id);\n          const outs = this.getNonCxnOutputs(id);\n\n          if(outs.length === 0) return false;\n\n          const child_id = outs.shift();\n          const sd = <SubdraftComponent> this.getComponent(child_id);\n          return !sd.draft_visible;\n      }\n  \n    \n\n\n  /**\n   * test if this node has many children, as opposed to just one\n   * @param id \n   * @returns a boolean \n   */\n  isMultipleParent(id: number):boolean{\n    const tn: TreeNode = this.getTreeNode(id);\n    return (tn.outputs.length > 1);\n  }\n\n  /**\n   * test if two components are siblings (e.g. they have the same parent). \n   * if we pass the same id in for both, it will return false\n   * @param id \n   * @returns a boolean \n   */\n   areSiblings(a_id: number, b_id: number):boolean{\n\n    if(a_id === b_id) return false; \n\n    const atn: TreeNode = this.getTreeNode(a_id);\n    const btn: TreeNode = this.getTreeNode(b_id);\n    if(atn.parent == null || btn.parent == null) return false;\n    return (atn.parent.node.id === btn.parent.node.id);\n  }\n\n    /**\n   * test if this node is a sibling of the one provided\n   * @param id \n   * @returns a boolean \n   */\n    isSibling(id: number):boolean{\n    const tn: TreeNode = this.getTreeNode(id);\n    if(tn.parent == null) return false;\n    return (this.getTreeNode(tn.parent.node.id).outputs.length > 1);\n  }\n  \n\n\n  /**\n   * given a node, recusively walks the tree and returns a list of all the operations that are affected\n   * @param id \n   * @returns an array of operation ids for nodes that need recalculating\n   */\n  getDownstreamOperations(id: number):Array<number>{\n\n    let ops: Array<number> = [];\n    const tn: TreeNode = this.getTreeNode(id);\n    if(tn.outputs.length > 0){\n\n      tn.outputs.forEach(el => {\n        if(el.tn.node.type == 'op'){\n          ops.push(el.tn.node.id);  \n        }\n        ops = ops.concat(this.getDownstreamOperations(el.tn.node.id));\n      });\n    }\n    return ops;\n  }\n\n    /**\n   * given a node, recusively walks the tree and returns a list of all the operations that are linked up the chain to this component\n   * @param id \n   * @returns an array of operation ids that influence this draft\n   */\n     getUpstreamOperations(id: number):Array<number>{\n\n      let ops: Array<number> = [];\n      const tn: TreeNode = this.getTreeNode(id);\n\n      if(tn.inputs.length > 0){\n        tn.inputs.forEach(el => {\n          if(el.tn.node.type === 'op'){\n            ops.push(el.tn.node.id);  \n          }\n          ops = ops.concat(this.getUpstreamOperations(el.tn.node.id));\n        });\n      }\n      return ops;\n    }\n\n\n    /**\n   * given a node, recusively walks the tree and returns a list of all the drafts that are linked up the chain to this component\n   * @param id \n   * @returns an array of draft ids that influence this draft\n   */\n     getUpstreamDrafts(id: number):Array<number>{\n      let ops: Array<number> = [];\n      const tn: TreeNode = this.getTreeNode(id);\n      \n      if(tn.inputs.length > 0){\n        tn.inputs.forEach(el => {\n          if(el.tn.node.type == 'draft'){\n            ops.push(el.tn.node.id);  \n          }\n          ops = ops.concat(this.getUpstreamDrafts(el.tn.node.id));\n        });\n      }\n      return ops;\n    }\n\n/**\n   * removes a subdraft and all associated connections from the tree, returns the nodes\n   * @param id {number}  \n\n   */\n removeSubdraftNode(id: number) : Array<Node>{\n\n\n  const deleted:Array<Node> = []; \n  if(id === undefined) return;\n\n\n\n\n  //get any input ops and connections\n  const ops_in: Array<number> = this.getNonCxnInputs(id);\n  const cxns_in: Array<number> = this.getInputs(id);\n\n  //get output connections and subdrafts\n  const cxns_out: Array<number> = this.getOutputs(id); //the connection between the op and child subdrafts\n  const ops_out: Array<number> = this.getNonCxnOutputs(id); //get all \n  \n  //get all the output connections of those subdrafts\n  const op_in_cxns: Array<number> = ops_in.reduce((acc, el) => {\n    return acc.concat(this.getInputs(el))\n  }, []);\n\n  // console.log(\"Ops in\", ops_in);\n  // console.log(\"CXNs in\", cxns_in);\n  // console.log(\"CXNs out\", cxns_out);\n  // console.log(\"OPSs out\", ops_out);\n  // console.log(\"op connections in\", op_in_cxns);\n\n  deleted.push(this.removeNode(id));\n\n  cxns_in.forEach(el => {\n    deleted.push( this.removeNode(el));\n  });\n\n  cxns_out.forEach(el => {\n    deleted.push( this.removeNode(el));\n  });\n\n\n  ops_in.forEach(el => {\n    deleted.push( this.removeNode(el));\n  });\n\n\n  op_in_cxns.forEach(el => {\n    deleted.push( this.removeNode(el));\n  });\n // deleted.concat(sds_in.map(el => this.removeNode(el)));\n // deleted.concat(cxns_in.map(el => {return this.removeNode(el)}));\n // deleted.concat(cxns_out.map(el => {return this.removeNode(el)}));\n  //deleted.concat(sds_out.map(el => {return this.removeNode(el)}));\n  //deleted.concat(sds_out_cxns.map(el => {return this.removeNode(el)}));\n  \n  return deleted;\n\n}\n\n/**\n * deletes an operation node and any associated subdrafts and connections\n * @param id - the operation to remove\n * @returns a list of all nodes removed as a result of this action\n */\nremoveOperationNode(id:number) : Array<Node>{\n\n\n  const deleted:Array<Node> = []; \n  if(id === undefined) return;\n\n\n  //get any input subdrafts and connections\n  const sds_in: Array<number> = this.getNonCxnInputs(id);\n  \n  const cxns_in: Array<number> = this.getInputs(id);\n\n  //get output connections and subdrafts\n  const cxns_out: Array<number> = this.getOutputs(id); //the connection between the op and child subdrafts\n  const sds_out: Array<number> = this.getNonCxnOutputs(id); //get all \n  \n  //get all the output connections of those subdrafts\n  const sds_out_cxns: Array<number> = sds_out.reduce((acc, el) => {\n    return acc.concat(this.getOutputs(el))\n  }, []);\n\n  // console.log(\"SDs in\", sds_in);\n  // console.log(\"CXNs in\", cxns_in);\n  // console.log(\"CXNs out\", cxns_out);\n  // console.log(\"SDs out\", sds_out);\n  // console.log(\"sd connections out\", sds_out_cxns);\n\n  deleted.push(this.removeNode(id));\n\n  cxns_in.forEach(el => {\n    deleted.push( this.removeNode(el));\n  });\n\n  cxns_out.forEach(el => {\n    deleted.push( this.removeNode(el));\n  });\n\n\n  sds_out.forEach(el => {\n    deleted.push( this.removeNode(el));\n  });\n\n\n  sds_out_cxns.forEach(el => {\n    deleted.push( this.removeNode(el));\n  });\n  return deleted;\n    \n}\n\n/**\n * deletes a connection\n * @param id - the connection to remove\n * @returns a list of all nodes removed as a result of this action\n */\n //removeConnectionNode(from:number, to:number, inletid: number) : Array<Node>{\n  removeConnectionNode(from:number, to:number, inletid: number) : Array<Node>{\n\n\n  const cxn_id:number = this.getConnectionAtInlet(from, to, inletid);\n\n  const deleted:Array<Node> = []; \n  if(cxn_id === undefined) return;\n\n  deleted.push(this.removeNode(cxn_id));\n\n  return deleted;\n    \n}\n\nremoveConnectionNodeById(cxn_id: number) : Array<Node>{\n\n\n\n  const deleted:Array<Node> = []; \n  if(cxn_id === undefined) return;\n\n  deleted.push(this.removeNode(cxn_id));\n\n  return deleted;\n    \n}\n\n\n\n/**\n * this removes a node from the list and tree\n * @param id the id of the node to be removed\n * @returns the node it removed\n */\n  removeNode(id: number) : Node{\n\n\n    const deleted: Array<Node> = [];\n\n    const node: Node = this.getNode(id);\n    deleted.push(node);\n    if(node === undefined) return;\n\n\n    this.removeNodeTreeAssociations(node.id);\n   \n    //remove all connections connecting to and from this node\n    const ndx: number = this.getNodeIndex(id);\n    const i: number = this.tree.findIndex(el => (el.node.id == id));\n    this.tree.splice(i, 1);\n    this.nodes.splice(ndx, 1);\n\n    return node;\n  \n  }\n\n\n\n\n  /**\n   * searches within the downstream ops for all opnodes and when a \"dirty\" node has all possible inputs fulfilled\n   * @returns return a list of those nodes\n   */\n  getNodesWithDependenciesSatisfied() : Array<OpNode>{\n\n    const dependency_nodes: Array<OpNode> = this.nodes\n    .filter(el => el.dirty && el.type === \"op\")\n    .map(el => <OpNode> el);\n\n    // const dependency_nodes: Array<OpNode> = ds\n    // .map(el => <OpNode> this.getNode(el))\n    // .filter(el => el.dirty);\n\n    const ready: Array<OpNode> = dependency_nodes.filter((el, ndx) => {\n      const depends_on: Array<number> = this.getUpstreamOperations(el.id);\n      const needs = depends_on.map(id => this.getNode(id).dirty);\n      const find_true = needs.findIndex(el => el === true);\n      if(find_true === -1) return el;\n    });\n  \n    return ready;\n  }\n\n\n/**\n   * given the results of an operation, updates any associated drafts, creating or adding null drafts to no longer needed drafts\n   * since this function cannot delete nodes, it makes nodes that no longer need to exist as null for later collection\n   * @param res the list of results from perform op\n   * @returns a list of the draft nodes touched. \n   */\n async updateDraftsFromResults(parent: number, res: Array<Draft>, inputs: Array<OpInput>) : Promise<Array<number>>{\n  const out = this.getNonCxnOutputs(parent);\n  const touched: Array<number> = [];\n  const opnode:OpNode = this.getOpNode(parent);\n  const op: Operation = this.ops.getOp(opnode.name);\n\n  //console.log(\"updating drafts, there are currently: \", out.length, \"existing ouputs and \", res.length, \"new outputs\");\n\n  if(out.length === res.length){\n\n    out.forEach((output, ndx) => {\n      this.setDraftOnly(output, res[ndx]);\n      touched.push(output);\n    });\n    return Promise.resolve(touched);\n\n  }else if(out.length > res.length){\n    //create a new draft node for each outcome;\n    for(let i = res.length; i < out.length; i++){\n      const dn = <DraftNode> this.getNode(out[i]);\n      if(dn.render_colors === undefined) dn.render_colors = false;\n      dn.draft = initDraftWithParams({wefts: 1, warps: 1});\n      dn.loom_settings = {\n        type: this.ws.type,\n        units: this.ws.units,\n        epi: this.ws.epi,\n        frames: this.ws.min_frames,\n        treadles: this.ws.min_treadles\n      }\n\n      const loom_utils = getLoomUtilByType(dn.loom_settings.type);\n      loom_utils.computeLoomFromDrawdown(dn.draft.drawdown, dn.loom_settings, this.ws.selected_origin_option)\n      .then(loom => {\n        dn.loom = loom;\n        dn.dirty = true;\n        touched.push(out[i]);\n        return Promise.resolve(touched);\n      })\n\n    }\n   \n  }else{\n    const fns:Array<any> = [];\n    for(let i = out.length; i < res.length; i++){\n      const id = this.createNode('draft', null, null);\n      const cxn = this.createNode('cxn', null, null);\n      this.addConnection(parent, 0,  id, 0,  cxn);\n      fns.push(this.loadDraftData({prev_id: -1, cur_id: id}, res[i], null, null, true)); //add loom as null for now as it assumes that downstream drafts do not have custom loom settings (e.g. they can be generated from drawdown)\n    }\n\n    return Promise.all(fns)\n    .then(drafts_loaded => {\n\n    const param_vals = op.params.map((param, ndx) => {\n      return {\n        param: param,\n        val: opnode.params[ndx]\n      }\n    })\n\n     const ids = drafts_loaded.map(el => el.entry.cur_id);\n     ids.forEach((id, ndx) => {\n      let d = this.getDraft(id);\n       d.gen_name = op.generateName(param_vals, inputs, ndx);\n     })\n\n\n     return Promise.resolve(ids);\n    });\n    \n  \n\n  }\n\n}\n\n\n\n\n\n\n/**\n * deteremines which ops are \"top level\" meaning there is no op above them \n * @returns \n */\n  async performTopLevelOps(): Promise<any> {\n\n\n\n    //mark all ops as dirty to start\n    this.nodes.forEach(el => {\n      if(el.type === \"op\") el.dirty = true;\n    })\n\n    const top_level_nodes = \n      this.nodes\n      .filter(el => el.type === 'op')\n      .filter(el => this.getUpstreamOperations(el.id).length === 0)\n      .map(el => el.id);\n\n\n    return this.performGenerationOps(top_level_nodes);\n\n  }\n\n  /**\n   * given a list of operations to perform, recursively performs all on nodes that have dependencies satisified\n   * only after entire generation has been calculated\n   * @param op_fn_list \n   * @returns //need a way to get this to return any drafts that it touched along the way\n   */\n  performGenerationOps(op_node_list: Array<number>) : Promise<any> {\n\n\n    const needs_computing = op_node_list.filter(el => this.getOpNode(el).dirty);\n\n    if(needs_computing.length == 0) return Promise.resolve([]);\n\n    const op_fn_list = needs_computing.map(el => this.performOp(el));\n   \n    \n    return Promise.all(op_fn_list).then( out => {\n      const flat:Array<number> = out.reduce((acc, el, ndx)=>{\n        return acc.concat(el);\n      }, []);\n\n      return this.getNodesWithDependenciesSatisfied();\n\n    }).then(needs_performing => {\n      const fns = needs_performing.filter(el => el.dirty).map(el => el.id);\n      if(needs_performing.length === 0) return [];\n      return  this.performGenerationOps(fns);    \n    });\n\n    \n  }\n\n\n\nisValidIOTuple(io: IOTuple) : boolean {\n  if(io === null || io === undefined) return false;\n  const draft_tn = io.tn.inputs[0].tn;\n  const cxn_tn = io.tn;\n  const type = draft_tn.node.type;  \n  const draft: Draft = (<DraftNode>draft_tn.node).draft;\n  if(draft === null || draft === undefined) return false;\n  if(wefts(draft.drawdown) == 0 || warps(draft.drawdown) == 0) return false;\n  return true;\n}\n\n\n\n/**\n * performs the given operation\n * returns the list of draft ids affected by this calculation\n * @param op_id the operation triggering this series of update\n */\n async performOp(id:number) : Promise<Array<number>> {\n\n  const opnode = <OpNode> this.getNode(id);\n  const op = this.ops.getOp(opnode.name);\n  const all_inputs = this.getInputsWithNdx(id);\n\n  \n  if(op === null || op === undefined) return Promise.reject(\"Operation is null\")\n\n  let inputs: Array<OpInput> = [];\n  //if(this.ops.isDynamic(opnode.name)){\n    \n  const param_vals = op.params.map((param, ndx) => {\n    return {\n      param: param,\n      val: opnode.params[ndx]\n    }\n  })\n\n\n    const flip_fns = [];\n    const draft_id_to_ndx = [];\n    const flips = utilInstance.getFlips(this.ws.selected_origin_option, 3);\n\n   \n    all_inputs.filter(el => this.isValidIOTuple(el))\n    .forEach((el) => {\n      \n      const draft_tn = el.tn.inputs[0].tn;\n      const cxn_tn = el.tn;\n      const type = draft_tn.node.type;\n\n      if(type === 'draft'){\n        draft_id_to_ndx.push({ndx: el.ndx, node_id: draft_tn.node.id, cxn: cxn_tn.node.id})\n        flip_fns.push(flipDraft((<DraftNode>draft_tn.node).draft, flips.horiz, flips.vert));\n      }\n    });\n\n\n   \n    return Promise.all(flip_fns)\n    .then(flipped_drafts => {\n       \n      const paraminputs = draft_id_to_ndx.map(el => {\n          const draft = flipped_drafts.find(draft => draft.id === el.node_id);\n          if(draft === undefined){\n            console.error(\"Draft not found in flipped\", flipped_drafts,draft_id_to_ndx, el);\n            return undefined;\n          } \n          else return {drafts: [draft], inlet_id: el.ndx, params: [opnode.inlets[el.ndx]]}\n        })\n      \n      const cleaned_inputs: Array<OpInput> = paraminputs.filter(el => el != undefined);\n\n      inputs = inputs.concat(cleaned_inputs);\n      return op.perform(param_vals, inputs);\n\n    })\n    .then(res => {\n          \n          const flips = utilInstance.getFlips(this.ws.selected_origin_option, 3);\n          return Promise.all(res.map(el => flipDraft(el,  flips.horiz, flips.vert)));\n      })\n    .then(flipped => {\n        opnode.dirty = false;\n        \n        return this.updateDraftsFromResults(id, flipped, inputs);\n      })\n\n        \n\n  \n\n  }\n\n\n\n\n  getDraftNodes():Array<DraftNode>{\n    return this.nodes.filter(el => el.type === 'draft').map(el => <DraftNode> el);\n  }\n\n  getDrafts():Array<SubdraftComponent>{\n    const draft_nodes: Array<Node> = this.nodes.filter(el => el.type == 'draft');\n    const draft_comps: Array<SubdraftComponent> = draft_nodes.map(el => <SubdraftComponent>el.component);\n    return draft_comps;\n  }\n\n  getLoom(id: number):Loom{\n    if(id === -1) return null;\n    const dn: DraftNode = <DraftNode> this.getNode(id);\n    if(dn === null || dn === undefined) return null;\n    return dn.loom;\n  }\n\n  setLoom(id: number, loom:Loom){\n    const dn: DraftNode = <DraftNode> this.getNode(id);\n    if(dn !== null && dn !== undefined) dn.loom = copyLoom(loom);\n  }\n\n  setLoomAndRecomputeDrawdown(id: number, loom:Loom, loom_settings:LoomSettings) : Promise<Draft>{\n    const dn: DraftNode = <DraftNode> this.getNode(id);\n    if(dn !== null && dn !== undefined) dn.loom = copyLoom(loom);\n\n    const utils = getLoomUtilByType(loom_settings.type);\n    return utils.computeDrawdownFromLoom(loom, this.ws.selected_origin_option)\n    .then(drawdown => {\n      dn.draft.drawdown = drawdown;\n      return Promise.resolve(dn.draft);\n    })\n  }\n\n  getLoomSettings(id: number):LoomSettings{\n    if(id === -1) return null;\n    const dn: DraftNode = <DraftNode> this.getNode(id);\n    if(dn === null || dn === undefined) return null;\n    return dn.loom_settings;\n  }\n\n  setLoomSettings(id: number, loom_settings:LoomSettings){\n    const dn: DraftNode = <DraftNode> this.getNode(id);\n    if(dn !== null && dn !== undefined) dn.loom_settings = loom_settings;\n  }\n\n\n  getLooms():Array<Loom>{\n    const dns = this.getDraftNodes();\n    return dns.map(el => el.loom);\n  }\n\n  getDraft(id: number):Draft{\n    if(id === -1) return this.preview.draft;\n    const dn: DraftNode = <DraftNode> this.getNode(id);\n    if(dn === null || dn === undefined) return null;\n    return dn.draft;\n  }\n\n  getDraftName(id: number):string{\n    if(id === -1) return this.preview.draft.ud_name;\n    const dn: DraftNode = <DraftNode> this.getNode(id);\n    if(dn === null || dn === undefined || dn.draft === null) return \"null draft\";\n    return (dn.draft.ud_name === \"\") ?  dn.draft.gen_name : dn.draft.ud_name; \n  }\n\n\n  getConnections():Array<ConnectionComponent>{\n    const draft_nodes: Array<Node> = this.nodes.filter(el => el.type === 'cxn');\n    const draft_comps: Array<ConnectionComponent> = draft_nodes.map(el => <ConnectionComponent>el.component);\n    return draft_comps;\n  }\n\n  getOperations():Array<OperationComponent>{\n    const draft_nodes: Array<Node> = this.nodes.filter(el => el.type === 'op');\n    const draft_comps: Array<OperationComponent> = draft_nodes.map(el => <OperationComponent>el.component);\n    return draft_comps;\n  }\n\n  getOpNodes():Array<OpNode>{\n    return this.nodes.filter(el => el.type === 'op').map(el => (<OpNode> el));\n  }\n\n  /**\n   * @todo update this to handle clear nodes whole input indexes no longer exist\n   * scans the connections and checks that the to and from nodes AND INDEXES still exist\n   * @returns an array of connections to delete\n   */\n\n  getUnusuedConnections():Array<number>{\n    const comps: Array<Node> = this.nodes.filter(el => el.type === 'cxn');\n    const nodes: Array<TreeNode> = comps.map(el => this.getTreeNode(el.id));\n    const to_delete: Array<TreeNode> = [];\n    \n\n    nodes.forEach(el =>{\n      if(el.inputs.length === 0 || el.outputs.length === 0){\n        to_delete.push(el);\n        return;\n      } \n      \n      const null_inputs = el.inputs.filter(el => el.tn.node === null || el.tn.node === undefined);\n      null_inputs.forEach(el => {\n        to_delete.push(el.tn);\n      })\n\n      const null_outputs = el.outputs.filter(el => el.tn.node === null || el.tn.node === undefined);\n      null_outputs.forEach(el => {\n        to_delete.push(el.tn);\n      })\n    });\n\n    return to_delete.map(el => el.node.id);\n  }\n\n\n  /**\n   * gets the tree node associated with a given Node \n   * @param id the idea of the node (not the tree node id) \n   * @returns \n   */\n  getTreeNode(id:number): TreeNode{\n    const found =  this.tree.find(el => el.node.id === id);\n    if(found === undefined){\n      console.error(\"Tree node for \", id, \"not found\");\n      return undefined;\n    }\n    return found;\n  }\n\n  /**\n   * adds a connection from subddraft to operation. connections can be of the type \n   * subdraft -> op (input to op)\n   * op -> subdraft (output generatedd by op)\n   * @returns an array of the ids of the elements connected to this op\n\n   */\n  addConnection(from:number, from_ndx: number, to:number, to_ndx: number, cxn:number): Array<number>{\n\n\n    let from_tn: TreeNode = this.getTreeNode(from);\n    let to_tn: TreeNode = this.getTreeNode(to);\n    const cxn_tn: TreeNode = this.getTreeNode(cxn);\n\n    from_tn.outputs.push({tn:cxn_tn, ndx: from_ndx});\n    cxn_tn.inputs = [{tn: from_tn, ndx: 0}];\n    cxn_tn.outputs = [{tn: to_tn, ndx: 0}];\n    to_tn.inputs.push({tn: cxn_tn, ndx: to_ndx});\n\n    if(from_tn.node.type === 'op') to_tn.parent = from_tn;\n    return this.getNonCxnInputs(to);\n\n  }\n\n  /**\n   * this sets the parent of a subdraft to the operation that created iit\n   * @returns an array of the subdraft ids connected to this operation\n   */\n   setSubdraftParent(sd:number, op:number){\n    const sd_tn: TreeNode = this.getTreeNode(sd);\n    const op_tn: TreeNode = this.getTreeNode(op);\n    sd_tn.parent = op_tn;\n\n  }\n\n\n\n  /**\n   * this removes the given id from the tree\n   * given the structure of the code, this will never be called on a connection node, as only ops and subdrafts can be \n   * explicitly deleted.\n   * @param id the id to delete \n   */\n  private removeNodeTreeAssociations(id:number){\n    const tn:TreeNode = this.getTreeNode(id);\n    if(tn === undefined) return;\n\n    //travel to all the trreenode's inputs, and erase this from their output\n    tn.inputs.forEach(el => {\n      const cxn_ndx_output:number = el.tn.outputs.findIndex(out => (out.tn.node.id == id)); \n      el.tn.outputs.splice(cxn_ndx_output, 1);\n    });\n\n    tn.outputs.forEach(el => {\n      const cxn_ndx_input:number = el.tn.inputs.findIndex(i => (i.tn.node.id == id)); \n      el.tn.inputs.splice(cxn_ndx_input, 1);\n    });\n\n    tn.outputs = [];\n    tn.inputs = [];\n  }\n\n  //finds the connection compoment associated with the subdraft sd\n  getConnectionComponentFromSubdraft(sd_id: number): ConnectionComponent{\n    \n    const sd_node:TreeNode = this.getTreeNode(sd_id);\n    if(sd_node.outputs.length == 0){\n      console.log(\"Error: subdraft node did not have outputs\");\n      return null;\n    } else if(sd_node.outputs.length > 1){\n      console.log(\"Error: subdraft node had more than one output\");\n      return null;\n    } \n\n    const cxn_node = sd_node.outputs[0].tn.node;\n    return <ConnectionComponent> cxn_node.component;\n\n  }\n\n   /**\n   * given a from, to, and inlet index, return the connection id \n   * @param from\n   * @returns the node id of the connection, or -1 if that connection is not found\n   */\n  getConnectionAtInlet(from: number, to:number, ndx: number) : number{\n    let found = -1;\n\n    const inputs:Array<IOTuple> = this.getInputsWithNdx(to);\n    const connection: Array<IOTuple> = inputs.filter(el => el.ndx == ndx);\n    if(connection === undefined) return -1;\n\n    if(connection.length == 1) return connection[0].tn.node.id;\n    else{\n      connection.forEach(connectionAtInlet => {\n        const non_cnx_inputs = this.getInputs(connectionAtInlet.tn.node.id);\n        const match_from = non_cnx_inputs.find(el => el === from);\n        if(match_from !== undefined) found =  connectionAtInlet.tn.node.id;\n      });\n    }\n\n    return found;\n   \n   }\n\n  /**\n   * given two nodes, returns the id of the connection node connecting them\n   * @param a one node\n   * @param b the otehr node node\n   * @returns the node id of the connection, or -1 if that connection is not found\n   */\n  getConnection(a: number, b:number) : number{\n\n\n     const set_a = this.nodes\n     .filter(el => el.type === 'cxn')\n     .filter(el => (this.getOutputs(el.id).find(treenode_id => this.getTreeNode(treenode_id).node.id === a)))\n     .filter(el => (this.getInputsWithNdx(el.id).find(ip => ip.tn.node.id === b )));\n\n     const set_b = this.nodes\n     .filter(el => el.type === 'cxn')\n     .filter(el => (this.getOutputs(el.id).find(treenode_id => this.getTreeNode(treenode_id).node.id === b)))\n     .filter(el => (this.getInputsWithNdx(el.id).find(ip => ip.tn.node.id === a )));\n\n     const combined = set_a.concat(set_b);\n\n    if(combined.length === 0){\n      //console.error(\"No connection found between\", a, b);\n      return -1;\n    } \n\n    if(combined.length > 1){\n      console.error(\"more than one connection found\");\n    }\n\n    return combined[0].id;\n  \n  }\n\n  /**\n   * checks if this node receives any input values\n   * @param id the node id\n   * @returns a boolean describing if an input exists\n   */\n  hasInput(id: number) : boolean {\n    const tn: TreeNode = this.getTreeNode(id);\n    return (tn.inputs.length > 0)\n  }\n\n/**\n * returns the ids of all nodes connected to the input node that are not connection nodes\n * @param op_id \n */\n getNonCxnInputs(id: number):Array<number>{\n    const inputs: Array<number> = this.getInputs(id);\n    const id_list:Array<number> = inputs\n    .map(id => (this.getNode(id)))\n    .filter(node => node.type === 'cxn')\n    .map(node => this.getConnectionInput(node.id))\n   // const id_list:Array<number> = node_list.map(node => (node.type === 'cxn') ? this.getConnectionInput(node.id): -1);\n    return id_list;\n  }\n\n\n  hasNdx(stored_input: number, input_to_function: number){\n    if(input_to_function === -1) return false;\n    if(stored_input === -1) return false;\n    else return true;\n  }\n\n  /**\n * returns the ids of all nodes connected to the input node that are not connection nodes\n * in the case of dynamic ops, also provide the input index\n * @param op_id \n */\n getOpComponentInputs(op_id: number, ndx: number):Array<number>{\n  const inputs: Array<IOTuple> = this.getInputsWithNdx(op_id);\n  const id_list:Array<number> = inputs\n  .filter(param => param.ndx === ndx)\n  .map(param => (param.tn.node))\n  .filter(node => node.type === 'cxn')\n  .map(node => this.getConnectionInput(node.id));\n // const id_list:Array<number> = node_list.map(node => (node.type === 'cxn') ? this.getConnectionInput(node.id): -1);\n  return id_list;\n}\n\n/**\n * returns the ids of all nodes connected to the input node that are op nodes\n * @param op_id \n */\n getOpInputs(id: number):Array<number>{\n  const inputs: Array<number> = this.getInputs(id);\n  const node_list:Array<Node> = inputs.map(id => (this.getNode(id)));\n  //const id_list:Array<number> = node_list.map(node => (node.type === 'cxn') ? this.getConnectionInput(node.id): node.id);\n  const id_list: Array<number> = node_list\n      .filter(node => node.type === 'cxn')\n      .map(node => this.getNode(this.getConnectionInput(node.id)))\n      .filter(node => node.type === 'op')\n      .map(node => node.id)\n  return id_list;\n}\n\n/**\n * returns the ids of all nodes connected to the input node that are draft nodes\n * @param op_id \n */\n getDraftInputs(id: number):Array<number>{\n  const inputs: Array<number> = this.getInputs(id);\n  const node_list:Array<Node> = inputs.map(id => (this.getNode(id)));\n  //const id_list:Array<number> = node_list.map(node => (node.type === 'cxn') ? this.getConnectionInput(node.id): node.id);\n  const id_list: Array<number> = node_list\n      .filter(node => node.type === 'cxn')\n      .map(node => this.getNode(this.getConnectionInput(node.id)))\n      .filter(node => node.type === 'draft')\n      .map(node => node.id)\n  return id_list;\n}\n\n  /**\n * returns the ids of all nodes connected to the output node that are not connection nodes\n * @param op_id \n */\n getNonCxnOutputs(id: number):Array<number>{\n  const outputs: Array<number> = this.getOutputs(id);\n  const node_list:Array<Node> = outputs.map(id => (this.getNode(id)));\n  const id_list:Array<number> = node_list\n    .map(node => (this.getNode(node.id)))\n    .filter(node => node.type === 'cxn')\n    .map(node => this.getConnectionOutput(node.id))\n    return id_list;\n}\n\n  /**\n * returns the ids of all nodes connected to the output node that are not connection nodes\n * @param op_id \n */\n   getDraftOutputs(id: number):Array<number>{\n    const outputs: Array<number> = this.getOutputs(id);\n    const node_list:Array<Node> = outputs.map(id => (this.getNode(id)));\n    const id_list:Array<number> = node_list\n      .map(node => (this.getNode(node.id)))\n      .filter(node => node.type === 'cxn')\n      .map(node => this.getConnectionOutput(node.id))\n      .filter(node => this.getType(node) === 'draft');\n      return id_list;\n  }\n  \n\n  getInputs(node_id: number):Array<number>{\n    const tn = this.getTreeNode(node_id);\n    if(tn === undefined) return [];\n    const input_ids: Array<number> = tn.inputs.map(child => child.tn.node.id);\n    return input_ids;\n  }\n\n  getInputsWithNdx(node_id: number):Array<IOTuple>{\n    const tn = this.getTreeNode(node_id);\n    if(tn === undefined) return [];\n    return tn.inputs;\n  }\n\n  getInputsAtNdx(node_id: number, inlet_ndx: number):Array<IOTuple>{\n    const tn = this.getTreeNode(node_id);\n    if(tn === undefined) return [];\n    return tn.inputs.filter(el => el.ndx == inlet_ndx);\n  }\n\n  getConnectionInput(node_id: number):number{\n    const tn = this.getTreeNode(node_id);\n    const input_ids: Array<number> = tn.inputs.map(child => child.tn.node.id);\n    if(input_ids.length  > 1) console.log(\"Error: more than one input\");\n    return input_ids[0];\n  }\n\n  getOutputs(node_id: number):Array<number>{\n    const tn = this.getTreeNode(node_id);\n    if(tn === undefined) return [];\n    const ids: Array<number> = tn.outputs.map(child => child.tn.node.id);\n    return ids;\n  }\n\n\n  getConnectionOutput(node_id: number):number{\n    const tn = this.getTreeNode(node_id);\n    const output_ids: Array<number> = tn.outputs.map(child => child.tn.node.id);\n    if(output_ids.length  > 1) console.log(\"Error: more than one output\");\n    return output_ids.pop();\n  }\n\n\n  /**\n   * returns the ids of the total set of operations that, when performed, will chain down to the other operations\n   */\n  getTopLevelOps() : Array<number> {\n\n    return this.nodes\n    .filter(el => el.type === \"op\")\n    .filter(el => this.getUpstreamOperations(el.id).length === 0)\n    .map(el => el.id);\n  }\n\n  /**\n   * returns a list of any drafts that have no parents\n   */\n  getTopLevelDrafts() : Array<number>{\n    \n    return this.nodes\n    .filter(el => el.type === \"draft\")\n    .map(el => this.getTreeNode(el.id))\n    .filter(el => el.parent === null)\n    .map(el => el.node.id);\n\n    \n\n  }\n\n\n  \n\n  getGenerationChildren(parents: Array<number>) : Array<number> {\n\n    let children: Array<number> = [];\n    parents.forEach(parent => {\n      const tn: TreeNode =  this.getTreeNode(parent);\n      children = children.concat(tn.outputs.map(io => io.tn.node.id));\n    });\n\n    return children;\n  }\n\n  /**\n   * for degugging, this \"prints\" a list of the tree by generations\n   */\n  print(){\n    const gens: Array<Array<number>> = this.convertTreeToGenerations();\n    gens.forEach((el,ndx) =>{\n      console.log(\"****  geneation \", ndx, \"****\");\n      el.forEach(subel => {\n        const type = this.getType(subel);\n        console.log(\"(\", subel, ',',type,')');\n      });\n    });\n\n    console.log(\"tree: \", this.tree);\n\n\n  }\n\n  /**\n   * converts the tree into an array where each element belongs to a similar \"generation\" meaning the first generation had no parents/inputs, and the subsequent generations are descending from that. \n   * returns a list of ids referencing the element ids belonging to each generation\n   * should return an array that has the same number of elements as the tree overall\n   */\n  convertTreeToGenerations() : Array<Array<number>>{\n\n    const gens: Array<Array<number>> = [];\n    let parents: Array<number> = this.tree.filter(tn => tn.inputs.length == 0).map(tn => tn.node.id);\n\n    \n    while(parents.length > 0){\n      gens.push(parents);\n      parents = this.getGenerationChildren(parents);\n    }\n\n    return gens;\n  }\n\n  /**\n   * converts all of the nodes in this tree for saving. \n   * @returns an array of objects that describe nodes\n   */\n  exportNodesForSaving(current_scale: number) : Array<NodeComponentProxy> {\n\n    const objs: Array<any> = []; \n\n    this.nodes.forEach(node => {\n      const savable: NodeComponentProxy = {\n        node_id: node.id,\n        type: node.type,\n        topleft: (node.component !== null) ? node.component.topleft : {x: 0, y: 0},\n      }\n      objs.push(savable);\n\n    })\n\n    return objs;\n\n  }\n\n  adjustTreadlingForSaving(tread: Array<Array<number>>) : Array<Array<number>> {\n\n    if(tread == null || tread == undefined ) return [];\n    \n    const adjusted: Array<Array<number>> = [];\n    tread.forEach((row, i) => {\n      if(row.length === 0){\n        adjusted.push([-1])\n      }else{\n         adjusted.push(row.slice())\n      }  \n     \n    })\n\n    return adjusted;\n  }\n\n   /**\n   * converts draft nodes into a form suited for export. \n   * drafts with parents are not saved, as their data is generated from operations on load. \n   * @returns an array of objects that describe nodes\n   */\n    exportDraftNodeProxiesForSaving() : Promise<Array<DraftNodeProxy>> {\n      const objs: Array<any> = []; \n  \n      this.getDraftNodes().forEach(node => {\n\n        let loom_export = null;\n        if((<DraftNode>node).loom !== null && (<DraftNode>node).loom !== undefined){\n          loom_export = {\n            threading:  (<DraftNode>node).loom.threading.slice(),\n            tieup:  (<DraftNode>node).loom.tieup.slice(),\n            treadling: this.adjustTreadlingForSaving(  (<DraftNode>node).loom.treadling)\n          }\n        }\n        if((<DraftNode>node).draft !== null && (<DraftNode>node).draft !== undefined){\n        const savable: DraftNodeProxy = {\n          node_id: node.id,\n          draft_id: (<DraftNode>node).draft.id,\n          draft_name: getDraftName((<DraftNode>node).draft),\n          draft: (this.hasParent(node.id)) ? null : (<DraftNode>node).draft,\n          draft_visible: (node.component !== null) ? (<SubdraftComponent>node.component).draft_visible : true,\n          loom:  (this.hasParent(node.id)) ? null :loom_export,\n          loom_settings: node.loom_settings,\n          render_colors: ((<DraftNode>node).render_colors == undefined ) ? true :  (<DraftNode>node).render_colors\n        }\n        objs.push(savable);\n      }\n  \n      })\n\n\n      //MAKE SURE ALL DRAFTS ARE ORIENTED TO TOP LEFT ON SAVE\n      let flip_fs = [];\n      let ids = [];\n      const flips = utilInstance.getFlips(this.ws.selected_origin_option, 3);\n      objs.forEach((obj, i) => {\n        if(obj.draft !== null){\n          flip_fs.push(flipDraft(obj.draft, flips.horiz, flips.vert));\n          ids.push(i);\n        }\n      });\n\n     return  Promise.all(flip_fs)\n      .then(drafts => {\n        drafts.forEach((draft, i) => {\n          objs[i].draft = draft;\n        })\n        let ids = [];\n        let flip_fs = [];\n        objs.forEach((obj, i) => {\n          if(obj.loom !== null){\n            flip_fs.push(flipLoom(obj.loom, flips.horiz, flips.vert));\n            ids.push(i);\n          }\n        });\n\n        return Promise.all(flip_fs);\n\n      })\n      .then(looms => {\n        looms.forEach((loom, i) => {\n          objs[i].loom = loom;\n        })\n\n        return objs;\n\n      })\n     \n\n  \n    }\n\n  /**\n   * this function is used when the file loader needs to create a template for an object that doesn't yet exist in the tree\n   * but will be loaded into the tree.\n   * @param draft : the draft that will be loaded into this node\n   * @param preloaded : a list of preloaded node ids to factor in when creating this new id.  \n   */\n  getNewDraftProxies(draft: Draft, preloaded: Array<number>){\n\n    const id =  this.getUniqueId();\n    const node: NodeComponentProxy = {\n      node_id: id, \n      type: 'draft',\n      topleft: null\n    }\n    \n    const draft_node: DraftNodeProxy = {\n      node_id: id,\n      draft_id: draft.id,\n      draft_name: '',\n      draft: null,\n      draft_visible: true,\n      loom: null, \n      loom_settings:null,\n      render_colors: true\n    };\n\n    const treenode: TreeNodeProxy = {\n      node: node.node_id,\n      parent: -1, \n      inputs:[],\n      outputs:[]\n    };\n\n    return {node, treenode, draft_node}\n  }\n\n  setNodesClear(){\n    this.nodes.forEach(node => node.dirty = false);\n  }\n\n  setDirty(id: number){\n    this.getNode(id).dirty = true;\n\n  }\n\n  setDraftClean(id: number){\n    if(id === -1){\n      this.preview.dirty = false;\n      return;\n    } \n\n    const node = this.getNode(id);\n    if(node === undefined){\n      console.error(\"no node found at \", id);\n      return;\n    } \n    node.dirty = false;\n  }\n\n\n  setDraftOnly(id: number, draft: Draft) {\n    const dn = <DraftNode> this.getNode(id);\n    draft.id = id;\n    dn.draft = draft;\n    dn.render_colors = (dn.render_colors === undefined) ? true : dn.render_colors; \n    if(dn.component !== null) (<SubdraftComponent> dn.component).draft = draft;\n\n  }\n\n/**\n * sets a new draft and loom at node specified by id. This occures when an operation that generated a draft has been recomputed\n * @param id the node to update\n * @param temp the draft to add\n * @param loom_settings  the settings that should govern the loom generated\n */\n  setDraftAndRecomputeLoom(id: number, temp: Draft, loom_settings: LoomSettings) : Promise<Loom> {\n\n    const dn = <DraftNode> this.getNode(id);\n    let ud_name = getDraftName(temp);\n\n    if(dn.draft === null){\n      dn.draft = temp;\n    } \n    else{\n      ud_name = dn.draft.ud_name;\n      dn.draft = createDraft(temp.drawdown, temp.gen_name, ud_name, temp.rowShuttleMapping, temp.rowSystemMapping, temp.colShuttleMapping, temp.colSystemMapping);\n    } \n\n    dn.draft.id = id;\n\n    if(loom_settings === null || loom_settings === undefined){\n      dn.loom_settings = {\n        type: this.ws.type,\n        epi: this.ws.epi,\n        units: this.ws.units,\n        frames: this.ws.min_frames,\n        treadles: this.ws.min_treadles\n      }\n    } \n    else dn.loom_settings = loom_settings;\n\n    dn.dirty = true;\n    if(dn.component !== null) (<SubdraftComponent> dn.component).draft = temp;\n\n    const loom_utils = getLoomUtilByType(dn.loom_settings.type);\n    return loom_utils.computeLoomFromDrawdown(temp.drawdown, loom_settings, this.ws.selected_origin_option)\n    .then(loom =>{\n\n      dn.loom = loom;\n      return Promise.resolve(loom);\n    });\n\n  }\n\n\n  /**\n   * sets a new draft\n   * @param temp the draft to set this component to\n   */\n  setDraftPattern(id: number, pattern: Drawdown) {\n\n    const dn = <DraftNode> this.getNode(id);\n    dn.draft.drawdown = pattern.slice();\n    (<SubdraftComponent> dn.component).draft = dn.draft;\n    dn.dirty = true;    \n  }\n\n\n\n  getOpNode(id: number) : OpNode{\n    return <OpNode> this.getNode(id);\n  }\n\n  /**\n   * exports all operation nodes with information that can be reloaded\n   * @returns \n   */\n  exportOpMetaForSaving() : Array<OpComponentProxy> {\n    const objs: Array<any> = []; \n\n    this.getOpNodes().forEach(op_node => {\n      const op = this.ops.getOp(op_node.name);\n\n      let cleaned_params = op.params.map((param_template, ndx) => {\n        if(param_template.type == 'file'){\n          return op_node.params[ndx].id;\n        }else{\n          return op_node.params[ndx];\n        }\n      })\n      \n\n      const savable:OpComponentProxy = {\n        node_id: op_node.id,\n        name: op_node.name,\n        params: cleaned_params,\n        inlets: op_node.inlets\n      }\n\n      \n      objs.push(savable);\n    })\n\n    return objs;\n\n  }\n\n\n  exportTreeForSaving() : Array<TreeNodeProxy> {\n\n    const objs: Array<any> = []; \n\n\n    this.tree.forEach(treenode => {\n\n      const savable:TreeNodeProxy = {\n        node: treenode.node.id,\n        parent: (treenode.parent !== null && treenode.parent !== undefined) ?  treenode.parent.node.id : -1,\n        inputs: treenode.inputs.map(el => {return {tn:el.tn.node.id, ndx: el.ndx}}),\n        outputs: treenode.outputs.map(el => {return {tn:el.tn.node.id, ndx: el.ndx}})\n      }\n      objs.push(savable);\n    })\n\n    return objs;\n\n  }\n\n   /**\n * exports only the drafts that have not been generated by other values\n * @returns an array of objects that describe nodes\n */\n  // exportSeedDraftsForSaving() : Array<DraftNode> {\n\n  //     const objs: Array<any> = []; \n  //     const gens: Array<Array<number>> = this.convertTreeToGenerations(); \n  \n  //     if(gens.length == 0) return objs;\n  \n  //     const seeds: Array<number> = gens.shift();\n  \n  //     return seeds.map(seed => this.getDraftNode(seed));\n  \n  \n  //   }\n  \n     /**\n   * exports TopLevel drafts associated with this tree\n   * @returns an array of Drafts\n   */\n    // exportDraftNodesForSaving() : Array<DraftNode> {\n  \n    //   //make sure the name values are not undefined\n    //   this.getDraftNodes().forEach(node => {\n    //     if(node.draft.ud_name === undefined) node.draft.ud_name = '';\n    //     if(node.loom === undefined) node.loom = null;\n        \n    //   });\n\n    //   const all_nodes = this.getDraftNodes()\n    //   .filter(el => this.getSubdraftParent(el.id) === -1);\n\n    //   return all_nodes;\n\n  \n    // }\n\n\n\n \n}\n","import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { deleteObject, getDownloadURL, getStorage, ref, uploadBytes, getMetadata, uploadBytesResumable, UploadMetadata } from \"firebase/storage\";\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../provider/auth.service';\nimport { Upload } from '../model/datatypes';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n  })\n};\n\n\n\n@Injectable()\nexport class UploadService {\n\n  constructor(private auth: AuthService) { }\n\n  uploadProgress: Observable<number>;\n  progress: number;\n  imageToShow: any;\n\n  createImageFromBlob(image: Blob) {\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n       this.imageToShow = reader.result;\n    }, false);\n\n    if (image) {\n       reader.readAsDataURL(image);\n    }\n  }\n\n\n  getHash(upload: Upload) : Promise<string>{\n    let file = upload.file;\n    \n    return new Promise((resolve, reject) => {\n      let reader = new FileReader();\n     \n      reader.onload = function (event) {\n        let data = event.target.result;\n        console.log(\"GET HASH \", data)\n        let ret: any = data;\n        if (data) {\n          let uintArBuff = new Uint8Array(ret);   //Does an array buffer convert to a Uint8Array?\n            crypto.subtle.digest('SHA-1', uintArBuff).then(data => {\n              var base64 = btoa(\n                new Uint8Array(data)\n                  .reduce((data, byte) => data + String.fromCharCode(byte), '')\n              );\n              console.log(\"RESOLVING WITH \", base64)\n              resolve(base64);\n            }\n          );\n        }else{\n            reject('null')\n        }  \n      }\n      reader.readAsArrayBuffer(file);\n\n      });\n  }\n\n  \n\n  uploadData(id: string, upload: Upload, metadata: UploadMetadata){\n      const storage = getStorage();\n      const storageRef = ref(storage, 'uploads/'+id);\n      \n      const uploadTask = uploadBytesResumable(storageRef, upload.file, metadata);\n\n      uploadTask\n      .on('state_changed', (snapshot) => {\n          // Observe state change events such as progress, pause, and resume\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n          this.progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log('Upload is ' + this.progress + '% done');\n          switch (snapshot.state) {\n            case 'paused':\n              console.log('Upload is paused');\n              break;\n            case 'running':\n              console.log('Upload is running');\n              break;\n          }\n        },\n        (error) => {\n          console.error(error);\n        },\n        () => {\n          \n        });\n\n    return uploadBytes(storageRef, upload.file, metadata).then((snapshot) => {\n      return snapshot;\n    }).catch(console.error); //error on get hash\n  }\n\n  \n\n\n  /**\n   * runs checks and, if cleared, pushes the upload to the firebase storage server\n   * @param upload the upload data\n   * @returns Promise of the result of firebase's upload task, snapshot of the file\n   */\n  pushUpload(upload: Upload) : Promise<any> {\n   \n    //const id = Math.random().toString(36).substring(2);\n    let id = '';\n    let metadata: UploadMetadata = null;\n    return this.getHash(upload)\n    .then(hash => {\n      id = hash;\n      metadata  = {\n        customMetadata: {user: this.auth.uid, filename: upload.name} \n      };\n      upload.name = id;\n\n      return this.alreadyLoaded(id);\n    })\n    .then(already_loaded => {\n      if(!already_loaded){\n        return this.uploadData(id, upload, metadata);\n      }\n    }).catch(console.error);\n     \n  }\n\n  // Get metadata properties\n  getDownloadMetaData(id: string) : Promise<any>{\n\n    const storage = getStorage();\n    return getMetadata(ref(storage, 'uploads/'+id))\n    .then((metadata) => {\n      return Promise.resolve(metadata)\n      // Metadata now contains the metadata for 'images/forest.jpg'\n    })\n    .catch((error) => {\n      // Uh-oh, an error occurred!\n    });\n  }\n \n\n\n  getDownloadData(id: string) : Promise<any> {\n    const storage = getStorage();\n    if(id === 'noinput') return Promise.resolve('');\n\n\n    this.getDownloadMetaData(id);\n\n    return getDownloadURL(ref(storage, 'uploads/'+id))\n      .then((url) => {\n        const xhr = new XMLHttpRequest();\n        xhr.responseType = 'blob';\n        xhr.onload = (event) => {\n          const blob = xhr.response;\n          \n        };\n        xhr.open('GET', url);\n        xhr.send();\n        return Promise.resolve(url);\n      })\n      .catch((error) => {\n        // A full list of error codes is available at\n    // https://firebase.google.com/docs/storage/web/handle-errors\n        switch (error.code) {\n          case 'storage/object-not-found':\n            console.error(\"file does not exist\")\n            Promise.resolve(null);\n            break;\n          case 'storage/unauthorized':\n            console.error(\"not authorized\")\n            // User doesn't have permission to access the object\n            break;\n          case 'storage/canceled':\n            // User canceled the upload\n            console.error(\"canceled\")\n\n            break;\n\n          // ...\n\n          case 'storage/unknown':\n            // Unknown error occurred, inspect the server response\n            console.error('unknown')\n            break;\n\n          default: \n          console.error(\"unhandled error\", error.code);\n      }\n    });\n  }\n\n  alreadyLoaded(id) : Promise<boolean> {\n    const storage = getStorage();\n    if(id === 'noinput') return Promise.resolve(false);\n    \n    return getDownloadURL(ref(storage, 'uploads/'+id))\n      .then((url) => {\n        return Promise.resolve(true);\n      })\n      .catch((error) => {\n        switch (error.code) {\n          case 'storage/object-not-found':\n            console.error(\"file does not exist\")\n            return Promise.resolve(false);\n            break;\n          case 'storage/unauthorized':\n            console.error(\"not authorized\")\n            // User doesn't have permission to access the object\n            return Promise.resolve(false);\n            break;\n          case 'storage/canceled':\n            // User canceled the upload\n            console.error(\"canceled\")\n            return Promise.resolve(false);\n            break;\n\n        \n          case 'storage/unknown':\n            // Unknown error occurred, inspect the server response\n            console.error('unknown')\n            return Promise.resolve(false);\n\n            break;\n\n          default: \n          console.error(\"unhandled error\", error.code);\n          return Promise.resolve(false);\n\n        }\n    });\n  }\n\n\n  deleteUpload(upload: Upload) {\n \n    const storage = getStorage();\n\n    // Create a reference to the file to delete\n    const desertRef = ref(storage, 'uploads/'+upload.name);\n    \n    // Delete the file\n    deleteObject(desertRef).then(() => {\n      console.log(\"file deleted\");\n    }).catch((error) => {\n      // Uh-oh, an error occurred!\n    });\n\n\n  }\n\n  \n\n}\n","// import * as tf from '@tensorflow/tfjs';\nimport { Injectable } from '@angular/core';\nimport { mean, std } from 'mathjs';\n\n\ninterface Model{\n    name: string,\n    decoder: any,\n    encoder_log_var: any, \n    encoder_mean: any\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VaeService {\n  private epsilons: any = [];\n  private batch_size: number = 16;\n  private models: Array<Model> = [];\n  private collections: Array<string> = ['crackle_weave', 'german'];\n  \n  /**\n   * add models on load\n   */\n  constructor() { \n\n\n    // this.collections.forEach(\n    //     collection =>  {\n\n    //         return Promise.all(\n    //             [tf.loadLayersModel('../../../assets/' + collection + '/decoder/model.json'), \n    //             tf.loadLayersModel('../../../assets/' + collection + '/encoder_log_var/model.json'),\n    //             tf.loadLayersModel('../../../assets/' + collection + '/encoder_mean/model.json')\n    //         ]).then(model => {\n    //              this.models.push(<Model> {\n    //                 name: collection,\n    //                 decoder: model[0],\n    //                 encoder_log_var:model [1],\n    //                 encoder_mean: model[2]\n    //             });\n    //             }\n    //         ).catch(console.error);\n\n           \n    //     }\n    // ) \n\n  \n\n \n\n\n\n  }\n\n  getModel(name: string) : Model {\n      const m = this.models.find(el => el.name === name);\n      if(m === undefined) console.error(\"cannot find model with name \", name);\n      return m;\n  }\n\n\nprintDecoder(collection: string){\n    \n    const m: Model = this.getModel(collection);\n    console.log(m.decoder);\n}\n\ncleanDraft(draft) {\n    let std_dev = std(draft);\n    let mean_val = mean(draft);\n    var thresholded_draft = JSON.parse(JSON.stringify(draft)); //making deep copy of the draft\n    \n    for (var weft = 0; weft < draft.length; weft++) {\n        for (var warp = 0; warp < draft[weft].length; warp++) {\n            if (draft[weft][warp] >= mean_val-0.08*std_dev) {\n                thresholded_draft[weft][warp] = 1;\n            } else {\n                thresholded_draft[weft][warp] = 0;\n            }\n        }\n    }\n\n    return thresholded_draft;\n}\n\n// async generateFromSeed(draft, collection) {\n\n//     const m: Model = this.getModel(collection);\n\n//     var newDraft = [];\n//     for (var i = 0; i < draft.length; i++) {\n//         newDraft.push([]);\n//         for (var j = 0; j < draft[i].length; j++) {\n//             newDraft[i].push([draft[i][j]]);\n//         }\n//     }\n\n//     let mean = m.encoder_mean.predict(tf.tensor([newDraft]));\n//     let log_var = m.encoder_log_var.predict(tf.tensor([newDraft]));\n\n//     let epsilon_shape = mean.shape;\n//     this.epsilons.push([]);\n//     for (var i = 0; i < epsilon_shape[0]; i++) {\n//         this.epsilons[this.epsilons.length-1].push([]);\n//         for (var j = 0; j < epsilon_shape[1]; j++) {\n//             this.epsilons[this.epsilons.length-1][i].push(Math.random());\n//         }\n//     }\n    \n//     var z_sample = tf.add(tf.add(mean, tf.exp(log_var)), this.epsilons[this.epsilons.length-1]);\n//     let tile_multiple = [this.batch_size, 1];\n//     let x_decoded = m.decoder.predict(tf.tile(z_sample, tile_multiple), this.batch_size);\n//     var draftSuggestions = [];\n//     await x_decoded.array().then(array => \n//         {\n//             let x_decoded_arr = array;\n//             for (var i = 0; i < x_decoded_arr.length; i++) {\n//                 var unclean_draft = [];\n//                 for (var j = 0; j < x_decoded_arr[i].length; j++) {\n//                     unclean_draft.push([]);\n//                     for (var k = 0; k < x_decoded_arr[i][j].length; k++) {\n//                         unclean_draft[j].push(x_decoded_arr[i][j][k][0]);\n//                     }\n//                 }\n//                 draftSuggestions.push(this.cleanDraft(unclean_draft));\n//             }\n\n\n//             var toDelete = [];\n//             for (var i = 0; i < draftSuggestions.length; i++) {\n//                 for (var j = i+1; j < draftSuggestions.length; j++) {\n//                     if (JSON.stringify(draftSuggestions[i]) === JSON.stringify(draftSuggestions[j])) {\n//                         if (!toDelete.includes(j)) {\n//                             toDelete.push(j);\n//                         }\n//                     } \n//                 }\n//             }\n\n//             for (var i = 0; i < toDelete.length; i++) {\n//                 let idx = toDelete.length-1-i;\n//                 draftSuggestions.splice(idx, 1);\n//             }\n//         });\n//         return draftSuggestions;\n\n// }\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VersionService {\n\n  private version: string = '4.0.0'\n\n  constructor() { }\n\n  currentVersion() : string {\n    return this.version;\n  }  \n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { LoomSettings } from '../model/datatypes';\nimport utilInstance from '../model/util';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * store any global workspace settings here:\n * Sync these with firebase so they are remembered across user sessions\n */\nexport class WorkspaceService {\n\n\n  file_favorites: Array<number> = [];\n  min_frames: number = 8; \n  min_treadles: number = 10;\n  type: string = 'jacquard'; //'rigid', 'direct', 'frame', 'jacquard'\n  show_errors: boolean = true;\n  epi: number = 10;\n  units: 'in' | 'cm' = 'in';\n\n  show_materials: boolean = true;\n  black_cell_up: boolean = true;\n  number_threading: boolean = false;\n\n\n  /**\n   * when looking at the draft viewer, where should the (0, 0) point of the drawdown sit. \n   * 0 top right, 1 bottom right, 2 bottom left, 3 top left\n   */\n  selected_origin_option: number = 3;\n\n  private origin_option_list: Array<{value: number, view: string}> = \n  [\n    {value: 0, view: 'top right'},\n    {value: 1, view: 'bottom right'},\n    {value: 2, view: 'bottom left'},\n    {value: 3, view: 'top left'},\n  ];\n\n  /**\n   * show materials in mixer previews. If false, will default entirely to black and white\n   */\n  use_colors_on_mixer: boolean = true;\n\n  \n\n  constructor() { }\n\n  initDefaultWorkspace(){\n    this.min_frames = 8; \n    this.min_treadles = 10;\n    this.type = 'jacquard'; //'rigid', 'direct', 'frame', 'jacquard'\n    this.show_errors = true;\n    this.epi = 10;\n    this.units = 'in';\n    this.show_materials = true;\n    this.black_cell_up = true;\n    this.number_threading = false;\n    this.use_colors_on_mixer = true;\n    this.selected_origin_option = 3;\n\n  }\n\n  loadWorkspace(data){\n    this.min_frames = data.min_frames; \n    this.min_treadles = data.min_treadles;\n    this.type = data.type;\n    this.show_errors = data.show_errors;\n    this.epi = data.epi;\n    this.units = data.units;\n    this.show_materials = data.show_materials;\n    this.black_cell_up = data.black_cell_up;\n    this.number_threading = data.number_threading;\n    this.use_colors_on_mixer = data.use_colors_on_mixer;\n    this.selected_origin_option = data.selected_origin_option;\n    this.file_favorites = (data.file_favorites === undefined) ? [] : data.file_favorites;\n  }\n\n  getOriginOptions(){\n    return this.origin_option_list;\n  }\n\n  isFrame() : boolean{\n    if(this.type === 'frame') return true;\n    return false;\n  }\n\n\n  /**\n   * given an array of looms, infers the data from what is most commonly used\n   * this assumes that most exports will have common loom data\n   * @param looms \n   */\n  async inferData(loom_settings: Array<LoomSettings>) : Promise<any> {\n    if(loom_settings.length === 0) return Promise.resolve(\"no looms\");\n\n    //filter out null or undefined looms\n    loom_settings = loom_settings.filter(el => !(el === undefined || el === null)); \n\n\n    this.min_frames = utilInstance.getMostCommon(\n      loom_settings.map(el => el.frames)\n    );\n    this.min_treadles = utilInstance.getMostCommon(\n      loom_settings.map(el => el.treadles)\n    );\n    this.type = utilInstance.getMostCommon(\n      loom_settings.map(el => el.type)\n    );\n    this.units = utilInstance.getMostCommon(\n      loom_settings.map(el => el.units)\n    );\n\n    this.epi = utilInstance.getMostCommon(\n      loom_settings.map(el => el.epi)\n    );\n\n    return \"done\";\n  }\n\n  exportWorkspace() : any{\n    return {\n      min_frames: this.min_frames, \n      min_treadles: this.min_treadles,\n      type: this.type,\n      show_errors: this.show_errors,\n      epi: this.epi,\n      units: this.units,\n      show_materials: this.show_materials,\n      black_cell_up: this.black_cell_up,\n      number_threading: this.number_threading,\n      selected_origin_option: this.selected_origin_option,\n      file_favorites: this.file_favorites.slice()\n    }\n  }\n\n  toggleFavorite(id: number){\n    const found = this.file_favorites.find(el => el === id);\n    if(found){\n      this.file_favorites = this.file_favorites.filter(el => el !== id)\n    }else{\n      this.file_favorites.push(id);\n    }\n  }\n\n  isFavorite(id: number):boolean{\n    const found = this.file_favorites.find(el => el === id);\n    if(found === undefined) return false;\n    else return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../provider/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\npassword: string = \"\"\nemail: string = \"\"\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(formData) {\n    // if (formData.valid) {\n    //   console.log(formData.value);\n    //   this.authService.emailSignup(\n    //     formData.value.email,\n    //     formData.value.password\n    //   );\n    // }\n  }\n\n}\n","<div class=\"form-container\">\n    <a routerLink=\"/login\" id=\"goback\">Login</a>\n    <h2>Sign Up</h2>\n    <form #formData='ngForm' (ngSubmit)=\"onSubmit(formData)\">\n      <input type=\"text\" placeholder=\"Email address\" (ngModel)=\"email\" name=\"email\" class=\"input-txt\" required>\n      <input type=\"password\" placeholder=\"Password\" (ngModel)=\"password\" name=\"password\" class=\"input-txt\" required>\n      <button type=\"submit\" [disabled]=\"!formData.valid\" class=\"auth-btn\">Create Account</button>\n    </form>\n  </div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { LoginComponent } from '../login/login.component';\nimport { AboutModal } from '../modal/about/about.modal';\nimport { AuthService } from '../provider/auth.service';\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.scss']\n})\n\n\n\nexport class TopbarComponent implements OnInit {\n  \n\n   @Output() onCollapseSidebar: any = new EventEmitter();\n  \n\n  @Input() drawer;\n  @Input() collapsed;\n\n\n\n  constructor(private dialog: MatDialog, public auth: AuthService, private location: Location) { }\n\n  ngOnInit(){\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n\n\n\n\n  openAboutDialog() {\n    const dialogRef = this.dialog.open(AboutModal);\n\n  }\n  openLoginDialog() {\n      const dialogRef = this.dialog.open(LoginComponent, {\n        width: '600px',\n      });\n  }\n\n  //need to handle this and load the file somehow\n  // openNewFileDialog() {\n\n\n  //   const dialogRef = this.dialog.open(InitModal, {\n  //     data: {loomtypes: this.loomtypes, density_units: this.density_units, source: this.source}\n  //   });\n\n  //   dialogRef.afterClosed().subscribe(loadResponse => {\n  //     if(loadResponse !== undefined) this.onLoadNewFile.emit(loadResponse);\n\n  //  });\n\n\n\n  // }\n\n  collapse(){\n    this.collapsed = !this.collapsed;\n    this.onCollapseSidebar.emit();\n\n  }\n\n  logout(){\n    this.auth.logout();\n  }\n\n  // clear(){\n  // \tthis.onClearScreen.emit();\n  // }\n\n}\n","<mat-toolbar class=\"topbar\" color=\"primary\">\n\n  <div class=\"left\">\n  <button mat-icon-button\n  (click)=\" collapse()\"\n  class=\"collapse\" \n  [class.nav-opened] = \"!collapsed\"\n  value=\"collapsed\">\n  <i class=\"fa\"\n    [class.fa-angle-double-right]=\"collapsed\" \n    [class.fa-angle-double-left]=\"!collapsed\"\n  aria-hidden=\"true\"></i>\n  </button>\n\n     <div class=\"titlebar\">AdaCAD 4.0, <i>beta</i></div>\n\n     <button mat-icon-button\n     (click)=\"openAboutDialog()\"\n     matTooltip =\"about AdaCAD\"\n     >\n     <i class=\"fas fa-info-circle\"></i>\n    </button>\n    </div>\n\n    <div class=\"right\">\n\n\n      <div class=\"auth\" *ngIf=\"(auth.showLogoutButton)\">\n        <span class=\"loggedInUserName\">Hi {{auth.username}} </span>\n        <a mat-icon-button matTooltip=\"logout\" (click)=\"logout()\"><i class=\"fa fa-sign-out\"></i></a>\n      </div>\n  </div>\n\n\n\n  <!-- <button mat-icon-button\n  (click)=\"drawer.toggle(); collapsed = !collapsed\"\n  class=\"collapse\" \n  value=\"collapsed\">\n  <i class=\"fa\"\n    [class.fa-angle-double-right]=\"collapsed\" \n    [class.fa-angle-double-left]=\"!collapsed\"\n  aria-hidden=\"true\"></i>\n</button> -->\n\n\n</mat-toolbar>\n\n<div class=\"betadesc\">\n  <p>\n  This is a new/\"beta\" release of AdaCAD 4.0. This release has more features, including file loading/saving, multiselection, simulation, but has not been tested as extensively as our previous version of AdaCAD. <b>Use at your own risk. and please: </b> \n\n  <a href=\"https://groups.google.com/g/adacad-forum\" class=\"mat-stroked-button stable\" >\n    click here if you find broken things!</a>\n\n  If you would like to use the existing, and stable, version of AdaCAD, you can do so here: \n  <a style=\"color:white\" href=\"https://adacad.org\" >adacad.org</a></p>\n\n  <p>\n    If you would like to use use this version, we reccomend logging in or creating an account and watching our video about how to use this new version. This will allow you to load and save files within AdaCAD: </p>\n    \n    <div class=\"buttonrow\">\n    \n    <div *ngIf=\"!auth.isLoggedIn\">\n      <button mat-stroked-button class=\"example-full-width login\" matTooltip=\"login\" (click) = \"openLoginDialog()\"><i class=\"fa fa-sign-in\"></i> Log in</button>\n    </div>\n\n    <div *ngIf=\"auth.isLoggedIn\">\n      You are already logged in!\n    </div>\n\n\n    <!-- <a href=\"http://adacad.org\" class=\"mat-stroked-button\" >\n      Watch Intro Video\n     </a>\n      -->\n    </div>\n\n\n\n</div>\n\n\n","import { Component, OnInit, ViewChild, ElementRef, Output, Input, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UploadService } from '../../provider/upload.service';\nimport { Draft, Drawdown, Upload } from '../../model/datatypes';\nimport { ImageService } from '../../provider/image.service';\nimport { Sequence } from '../../model/sequence';\nimport { initDraftFromDrawdown } from '../../model/drafts';\n\n@Component({\n  selector: 'upload-form',\n  templateUrl: './upload-form.component.html',\n  styleUrls: ['./upload-form.component.scss']\n})\nexport class UploadFormComponent implements OnInit {\n \n  @Input() type: string; //'single_image', 'ada', or 'bitmap_collection'\n  @Input() multiple: boolean;\n  @Input() accepts: string;\n\n\n  progress:number = 0;\n  selectedFiles: FileList;\n  uploading: boolean = false;\n  imageToShow: any;\n  downloadid: string;\n\n  @ViewChild('uploadImage') canvas: ElementRef;\n\n  @Output() onData: any = new EventEmitter();\n  @Output() onError: any = new EventEmitter();\n\n  constructor(private upSvc: UploadService, private httpClient: HttpClient, private imageService: ImageService) { }\n\n  detectFiles(event) {\n      this.selectedFiles = event.target.files;\n  }\n\n  async uploadAda(upload: Upload, file: File){\n    await this.upSvc.pushUpload(upload).then(snapshot => {\n    return this.upSvc.getDownloadData(upload.name)\n    }).then(url => {  \n      console.log(\"got download\", url)\n      this.httpClient.get(url).toPromise()\n      .then(data => {\n        var obj = {\n          name: file.name.split(\".\")[0],\n          data: data,\n          type: 'ada',\n        }\n        this.onData.emit(obj);\n        this.uploading = false;\n        this.selectedFiles = null;\n        this.upSvc.deleteUpload(upload);\n\n      })\n        \n     \n\n\n            \n    });\n  \n  }\n\n   uploadImage(upload: Upload, file: File) : Promise<any> {\n\n    return this.upSvc.pushUpload(upload).then(snapshot => {\n      return  this.imageService.loadFiles([upload.name]);\n    }).then(uploaded => {\n\n\n      this.onData.emit(uploaded);\n      this.uploading = false;\n      this.selectedFiles = null;\n\n    }).catch(e => {\n      this.onError.emit(e);\n      this.uploading = false;\n      this.selectedFiles = null;\n    }); \n  }\n\n\n\n  uploadBitmap(upload: Upload, file: File) : Promise<any> {\n    \n    return this.upSvc.pushUpload(upload).then(snapshot => {\n     return  this.imageService.loadFiles([upload.name]);\n   }).catch(e => {\n      this.onError.emit(e);\n      this.uploading = false;\n      this.selectedFiles = null;\n   }); \n }\n\n\n\n  \n  upload() {\n    console.log(\"UPLOAD SINGLE\", this.type)\n\n    this.uploading = true;\n\n    let file:File = this.selectedFiles.item(0)\n    let fileType = file.name.split(\".\").pop();\n    let fileName = file.name.split(\".\")[0];\n\n    const upload:Upload = {\n          $key: '',\n          file:file,\n          name:fileName,\n          url:'',\n          progress:0,\n          createdAt: new Date()\n      };\n\n\n    switch(this.type){\n      case 'ada':\n        this.uploadAda(upload, file);\n      break;\n\n      case 'single_image':\n          this.uploadImage(upload, file)\n     \n      break;\n\n      case 'bitmap_collection':\n        this.uploadBitmaps();\n        break;\n\n\n      default: \n      break;\n    }\n\n\n\n  }\n\n  /**\n   * used when handling the upload of multiple images (bitmaps) that should be converted into a drfat\n   */\n  uploadBitmaps() {\n    \n      this.uploading = true;\n\n        const uploads= [];\n        const fns = [];\n        for(let i = 0; i < this.selectedFiles.length; i++){\n\n          let file:File = this.selectedFiles.item(i)\n          let fileName = file.name.split(\".\")[0];\n\n          const upload:Upload = {\n            $key: '',\n            file:file,\n            name:fileName,\n            url:'',\n            progress:0,\n            createdAt: new Date()\n        };\n        uploads.push(upload);\n        fns.push(this.uploadBitmap(upload, file));\n\n        }\n\n       Promise.all(fns).then(res => {\n        let drafts = [];\n        res.forEach(upload_arr => {\n          \n          let upload = upload_arr[0];\n\n          const twod: Sequence.TwoD = new Sequence.TwoD();\n          let bw_ndx = upload.colors_to_bw.map(el => el.black);\n\n          for(let i = 0; i < upload.height; i++){\n            const oned: Sequence.OneD = new Sequence.OneD();\n            for(let j = 0; j < upload.width; j++){\n              const ndx = upload.image_map[i][j];\n              let val:boolean = (ndx < bw_ndx.length) ? bw_ndx[ndx] : null;\n              oned.push(val);\n            }\n            twod.pushWeftSequence(oned.val());\n          }\n          const d: Draft = initDraftFromDrawdown(twod.export());\n          d.gen_name = upload.name;\n          drafts.push(d);\n        })\n\n        this.onData.emit({type: this.type, drafts: drafts});\n        this.uploading = false;\n        this.selectedFiles = null;\n        return [];\n       }).then(res => {\n          let functions = uploads.map(el => this.upSvc.deleteUpload(el));\n          return Promise.all(functions);\n       }).catch(e => {\n\n        this.onError.emit('one of the files you uploaded was not a bitmap (and had more than 100 colors, so it could not be converted to black and white), please try again');\n        this.uploading = false;\n        this.selectedFiles = null;\n       });\n\n\n    \n\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"upload-container\">\n\n   <label>\n      <input type=\"file\" [multiple]=\"multiple\" [accept]=\"accepts\" (change)=\"detectFiles($event)\">\n   </label>\n\n   <div *ngIf=\"!uploading\" class=\"upload-button\">\n      <button mat-raised-button\n            color=\"accent\"\n            [disabled]=\"!selectedFiles\"\n            (click)=\"upload();\">\n            Upload\n      </button>\n   </div>\n   <div *ngIf=\"uploading\" class=\"progress-bar\">\n      <mat-progress-bar mode=\"determinate\" [value]=\"upSvc.progress\"></mat-progress-bar>\n   </div>\n</div>\n<canvas #uploadImage class=\"hidden\"></canvas>","import { Component, Output, EventEmitter, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {ElementRef, ViewChild} from '@angular/core';\nimport {UntypedFormControl} from '@angular/forms';\nimport {MatAutocompleteSelectedEvent, MatAutocomplete} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport { MaterialsService } from '../../core/provider/materials.service';\nimport { SystemsService } from '../../core/provider/systems.service';\nimport { System } from '../../core/model/datatypes';\nimport { defaults } from '../../core/model/defaults';\n\n@Component({\n  selector: 'app-actions',\n  templateUrl: './actions.component.html',\n  styleUrls: ['./actions.component.scss']\n})\n\n\n\nexport class ActionsComponent implements OnInit {\n\n  id:number;\n\n  rowSystemMapping: Array<number>;\n  colSystemMapping: Array<number>;\n  rowShuttleMapping: Array<number>;\n  colShuttleMapping: Array<number>;\n\n  //chip params\n  visible = true;\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  system_codes = defaults.weft_system_codes;\n\n\n  warpSystemCtrl = new UntypedFormControl();\n  // warp_systems_pattern_strings: string[] = [];\n  // allWarpSystems: string[] = [];\n\n\n  weftSystemCtrl = new UntypedFormControl();\n  // weft_systems_pattern_strings: string[] = [];\n  // allWeftSystems: string[] = [];\n\n  warpShuttleCtrl = new UntypedFormControl();\n  // warp_shuttles_pattern_strings: any[] = [];\n  // allWarpShuttles: any[] = [];\n\n  weftShuttleCtrl = new UntypedFormControl();\n  // weft_shuttles_pattern_strings: any[] = [];\n  // allWeftShuttles: any[] = [];\n\n  // fruits: string[] = ['Lemon'];\n  // allFruits: string[] = ['Apple', 'Lemon', 'Lime', 'Orange', 'Strawberry'];\n\n  @ViewChild('warpSystemInput') warpSystemInput: ElementRef<HTMLInputElement>;\n  @ViewChild('weftSystemInput') weftSystemInput: ElementRef<HTMLInputElement>;\n  @ViewChild('warpShuttleInput') warpShuttleInput: ElementRef<HTMLInputElement>;\n  @ViewChild('weftShuttleInput') weftShuttleInput: ElementRef<HTMLInputElement>;\n  \n  @ViewChild('auto_wasy') matAutocompleteWasy: MatAutocomplete;\n  @ViewChild('auto_wesy') matAutocompleteWesy: MatAutocomplete;\n  @ViewChild('auto_wash') matAutocompleteWash: MatAutocomplete;\n  @ViewChild('auto_wesh') matAutocompleteWesh: MatAutocomplete;\n\n\n   @Output() onUpdateWarpSystems: any = new EventEmitter();\n   @Output() onUpdateWeftSystems: any = new EventEmitter();\n   @Output() onUpdateWarpShuttles: any = new EventEmitter();\n   @Output() onUpdateWeftShuttles: any = new EventEmitter();\n\n\n  constructor(\n    public ms: MaterialsService, \n    public ss: SystemsService,\n    private dialogRef: MatDialogRef<ActionsComponent>,\n             @Inject(MAT_DIALOG_DATA) public data: any) {\n\n              this.id = data.id;\n\n\n  }\n\n  ngOnInit() {\n\n\n    this.colShuttleMapping = this.ms.getShuttles().map(el => el.id);\n    this.rowShuttleMapping = this.ms.getShuttles().map(el => el.id);\n\n    this.rowSystemMapping = this.ss.weft_systems\n      .filter(el => el.in_use)\n      .map(el => el.id);\n    \n      this.colSystemMapping = this.ss.warp_systems\n      .filter(el => el.in_use)\n      .map(el => el.id);\n\n    \n  }\n\n  getWarpSystems() : Array<System> {\n    return this.ss.warp_systems;\n  }\n  \n  idFromString(s: string){\n    console.log(s);\n    return s.charCodeAt(0)-97;\n  }\n\n  shuttleIdFromName(s: string):number{\n\n\n    for(var i = 0; i < this.ms.getShuttles().length; i++){\n      let s_name = this.ms.getShuttle(i).name.toLowerCase();\n      if(s_name.localeCompare(s.toLowerCase()) === 0) return i;\n    }\n    return -1;\n  }\n\n  add(event: MatChipInputEvent): void {\n\n\n    const input = event.input;\n    const value = event.value;\n    const name = input.name;\n\n    console.log(\"adding to \", name);\n    let shuttle_id = this.shuttleIdFromName((value || '').trim());\n\n\n    switch(name){\n      case 'wasy':\n\n        let warp_sys_id = parseInt(value) -1;\n        console.log(\"value is \", warp_sys_id);\n        if (warp_sys_id >= 0 && warp_sys_id < this.ss.warp_systems.length) {\n          console.log(\"adding \", warp_sys_id, \"to\", this.colSystemMapping)\n          this.colSystemMapping.push(warp_sys_id);\n          console.log(\"now \",  this.colSystemMapping)\n\n        }\n        this.warpSystemCtrl.setValue(null);\n      \n      break;\n\n      case 'wash':\n        console.log(\"value is \", this.shuttleIdFromName(value.trim()));\n\n        if ((value || '').trim() && shuttle_id != -1) {\n          // let all = {\n          //   id: shuttle_id,\n          //   color: this.shuttles[shuttle_id].getColor(),\n          //   name: this.shuttles[shuttle_id].getName()\n          // }\n          this.colShuttleMapping.push(shuttle_id);\n        }\n        this.warpShuttleCtrl.setValue(null);\n\n      break;\n\n      case 'wesy':\n\n        let weft_sys_id = this.idFromString((value || '').trim());\n        if (weft_sys_id >= 0 && weft_sys_id < this.ss.warp_systems.length) {\n          this.rowSystemMapping.push(weft_sys_id);\n        }\n        this.weftSystemCtrl.setValue(null);\n      break;\n\n      case 'wesh':\n        console.log(\"value is \", this.shuttleIdFromName(value.trim()));\n\n        if ((value || '').trim() && shuttle_id != -1) {\n          // let all = {\n          //   id: shuttle_id,\n          //   color: this.shuttles[shuttle_id].getColor(),\n          //   name: this.shuttles[shuttle_id].getName()\n          // }\n         this.rowShuttleMapping.push(shuttle_id);\n        }\n        this.weftShuttleCtrl.setValue(null);\n\n\n      break;\n    }\n\n    \n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n\n\n    //this.onUpdateWarpSystems.emit(this.warp_systems_pattern_strings);\n\n  }\n\n  remove(caller: string, index: number): void {\n\n    switch(caller){\n      case 'wasy':\n\n        if (index >= 0 && this.colSystemMapping.length > 1) {\n          this.colSystemMapping.splice(index, 1);\n        }\n          \n      \n      break;\n\n      case 'wash':\n\n        if (index >= 0 && this.colShuttleMapping.length > 1) {\n          this.colShuttleMapping.splice(index, 1);\n        }\n      \n\n      break;\n\n      case 'wesy':\n        \n\n        if (index >= 0 && this.rowSystemMapping.length > 1) {\n          this.rowSystemMapping.splice(index, 1);\n        }\n     \n      break;\n\n      case 'wesh':\n\n        if (index >= 0 && this.rowShuttleMapping.length > 1) {\n          this.rowShuttleMapping.splice(index, 1);\n        }\n      break;\n    }\n\n  }\n\n  sendUpdates(source: string){\n    console.log(\"send updates\", source);\n    switch(source){\n      case 'wasy':\n      this.onUpdateWarpSystems.emit(this.colSystemMapping);\n      break;\n\n      case 'wash':\n      this.onUpdateWarpShuttles.emit(this.colShuttleMapping);\n      break;\n\n      case 'wesy':\n      this.onUpdateWeftSystems.emit(this.rowSystemMapping);\n      break;\n\n      case 'wesh':\n        this.onUpdateWeftShuttles.emit(this.rowShuttleMapping);\n      break;\n    }\n\n  }\n\n  selected(source: string, event: MatAutocompleteSelectedEvent): void {\n    console.log(\"selected\", source);\n     switch(source){\n      case 'wasy':\n      let warp_sys_id = parseInt(event.option.viewValue) -1;\n\n      this.colSystemMapping.push(warp_sys_id);\n      this.warpSystemCtrl.setValue(null);\n      break;\n\n      case 'wash':\n\n      let warp_id =  this.shuttleIdFromName(event.option.viewValue);\n\n      // let warp_obj = {\n      //   id: warp_id, \n      //   name: this.shuttles[warp_id].getName(), \n      //   color: this.shuttles[warp_id].getColor()\n      // };\n\n      this.colShuttleMapping.push(warp_id);\n      this.warpShuttleCtrl.setValue(null);\n      \n      break;\n\n      case 'wesy':\n      let weft_sys_id = this.idFromString(event.option.viewValue);\n      this.rowSystemMapping.push(weft_sys_id);\n      this.weftSystemCtrl.setValue(null);\n      break;\n\n      case 'wesh':\n\n\n      let weft_id =  this.shuttleIdFromName(event.option.viewValue);\n\n      // let weft_obj = {\n      //   id: weft_id, \n      //   name: this.shuttles[weft_id].getName(), \n      //   color: this.shuttles[weft_id].getColor()\n      // };\n\n      this.rowShuttleMapping.push(weft_id);\n      this.weftShuttleCtrl.setValue(null);\n      break;\n    }\n\n\n    \n  \n  }\n\n  close() {\n    this.dialogRef.close(null);\n  }\n\n  \n\n\n\n}\n","<div class=\"toprow\">\n  <button mat-icon-button (click)=\"close()\"><i class=\"fas fa-times\"></i></button>\n  \n  <p mat-dialog-title\n    cdkDrag\n     cdkDragRootElement=\".cdk-overlay-pane\" \n     cdkDragHandle>Apply Repeats</p>\n</div>\n\n\n<mat-dialog-content>\n\n\n<div *ngIf=\"ss.warp_systems.length >1\" class='pattern-container'>\n  <div class=\"upload\">\n\n   <button mat-mini-fab matTooltip=\"apply this pattern to the warp systems\"  (click)=\"sendUpdates('wasy')\" color=\"primary\" aria-label=\"Add Warp Systems Pattern to Weave\">\n        <mat-icon><i class=\"fas fa-magic\"></i></mat-icon>\n  </button>\n</div>\n<div class=\"chips\">\n<mat-form-field class=\"example-chip-list\">\n  <mat-label>\n    Warp System Repeat Pattern\n</mat-label>\n  <mat-chip-list  class=\"mat-chip-list-stacked\" #chipListWasy aria-label=\"Warp System Repeat\">\n    <mat-chip\n      *ngFor=\"let sys of colSystemMapping; let j = index;\"\n      [removable]=\"removable\"\n      (removed)=\"remove('wasy', j)\">\n      {{ss.warp_systems[sys].id+1}}\n      <mat-icon matChipRemove *ngIf=\"removable\"><i class=\"fas fa-times-circle\"></i></mat-icon>\n    </mat-chip>\n    <input\n      name=\"wasy\"\n      placeholder=\"Add System to Pattern...\"\n      #wasy\n      [formControl]=\"warpSystemCtrl\"\n      [matAutocomplete]=\"auto_wasy\"\n      [matChipInputFor]=\"chipListWasy\"\n      [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n      (matChipInputTokenEnd)=\"add($event)\">\n  </mat-chip-list>\n  <mat-autocomplete  #auto_wasy=\"matAutocomplete\" (optionSelected)=\"selected('wasy', $event)\">\n    <mat-option *ngFor=\"let sys of ss.warp_systems\" [value]=\"warp_system\">\n      {{sys.id+1}}\n    </mat-option>\n  </mat-autocomplete>\n</mat-form-field>\n</div>\n</div>\n\n<div *ngIf=\"ms.materials.length >1 \" class='pattern-container'>\n  <div class=\"upload\">\n   <button mat-mini-fab (click)=\"sendUpdates('wash')\" matTooltip=\"apply this pattern to the warp materials\" color=\"primary\" aria-label=\"Add Warp Materials Pattern to Weave\">\n        <mat-icon><i class=\"fas fa-magic\"></i></mat-icon>\n  </button>\n</div>\n<div class=\"chips\">\n<mat-form-field class=\"example-chip-list\">\n  <mat-label>\n    Warp Materials Repeat\n</mat-label>\n  <mat-chip-list  class=\"mat-chip-list-stacked\" #chipListWash aria-label=\"Warp Material Repeat\">\n    <mat-chip\n      *ngFor=\"let sys of colShuttleMapping; let j = index;\"\n      [selectable]=\"selectable\"\n      [removable]=\"removable\"\n      (removed)=\"remove('wash', j)\">\n      <i class=\"fas fa-square-full\" [style.color]=\"ms.materials[sys].color\"></i>\n      <mat-icon matChipRemove *ngIf=\"removable\"><i class=\"fas fa-times-circle\"></i></mat-icon>\n    </mat-chip>\n    <input\n      name=\"wash\"\n      placeholder=\"Add Material to Pattern...\"\n      #wash\n      [formControl]=\"warpShuttleCtrl\"\n      [matAutocomplete]=\"auto_wash\"\n      [matChipInputFor]=\"chipListWash\"\n      [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n      (matChipInputTokenEnd)=\"add($event)\">\n  </mat-chip-list>\n  <mat-autocomplete #auto_wash=\"matAutocomplete\" (optionSelected)=\"selected('wash', $event)\">\n    <mat-option *ngFor=\"let sys of ms.materials\" [value]=\"system\">\n      <i class=\"fas fa-square-full\" [style.color]=\"sys.color\"></i>\n      {{sys.name}}\n    </mat-option>\n  </mat-autocomplete>\n</mat-form-field>\n</div>\n</div>\n\n\n\n\n\n\n<div *ngIf=\"ss.weft_systems.length >1\" class='pattern-container'>\n  <div class=\"upload\">\n   <button mat-mini-fab (click)=\"sendUpdates('wesy')\" matTooltip=\"apply this pattern to the weft systems\" color=\"primary\" aria-label=\"Add Weft Systems Pattern to Weave\">\n        <mat-icon><i class=\"fas fa-magic\"></i></mat-icon>\n  </button>\n</div>\n<div class=\"chips\">\n<mat-form-field class=\"example-chip-list\">\n  <mat-label>\n    Weft System Repeat Pattern\n</mat-label>\n  <mat-chip-list  class=\"mat-chip-list-stacked\" #chipListWesy aria-label=\"Weft System Repeat\">\n    <mat-chip\n      *ngFor=\"let sys of rowSystemMapping; let j = index;\"\n      [selectable]=\"selectable\"\n      [removable]=\"removable\"\n      (removed)=\"remove('wesy', j)\">\n      {{system_codes[sys]}}\n      <mat-icon matChipRemove *ngIf=\"removable\"><i class=\"fas fa-times-circle\"></i></mat-icon>\n    </mat-chip>\n    <input\n      name=\"wesy\"\n      placeholder=\"Add System to Pattern...\"\n      #wesy\n      [formControl]=\"weftSystemCtrl\"\n      [matAutocomplete]=\"auto_wesy\"\n      [matChipInputFor]=\"chipListWesy\"\n      [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n      (matChipInputTokenEnd)=\"add($event)\">\n  </mat-chip-list>\n  <mat-autocomplete #auto_wesy=\"matAutocomplete\" (optionSelected)=\"selected('wesy', $event)\">\n    <mat-option *ngFor=\"let sys of system_codes\" [value]=\"system\">\n      {{sys}}\n    </mat-option>\n  </mat-autocomplete>\n</mat-form-field>\n</div>\n</div>\n\n<div *ngIf=\"ms.materials.length >1 \" class='pattern-container'>\n  <div class=\"upload\">\n   <button mat-mini-fab \n   (click)=\"sendUpdates('wesh')\" \n   color=\"primary\" \n   matTooltip=\"apply this pattern to the weft materials\" \n   aria-label=\"Add Weft Materials Pattern to Weave\">\n        <mat-icon><i class=\"fas fa-magic\"></i></mat-icon>\n  </button>\n</div>\n<div class=\"chips\">\n<mat-form-field class=\"example-chip-list\">\n  <mat-label>\n    Weft Materials Repeat\n</mat-label>\n  <mat-chip-list  class=\"mat-chip-list-stacked\" #chipListWesh aria-label=\"Weft Material Repeat\">\n    <mat-chip\n      *ngFor=\"let sys of rowShuttleMapping; let j = index; \"\n      [selectable]=\"selectable\"\n      [removable]=\"removable\"\n      (removed)=\"remove('wesh', j)\">\n      <i class=\"fas fa-square-full\" [style.color]=\"ms.materials[sys].color\"></i>\n      <mat-icon matChipRemove *ngIf=\"removable\"><i class=\"fas fa-times-circle\"></i></mat-icon>\n    </mat-chip>\n    <input\n      name=\"wesh\"\n      placeholder=\"Add Shuttle to Pattern...\"\n      #wesh\n      [formControl]=\"weftShuttleCtrl\"\n      [matAutocomplete]=\"auto_wesh\"\n      [matChipInputFor]=\"chipListWesh\"\n      [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n      (matChipInputTokenEnd)=\"add($event)\">\n  </mat-chip-list>\n  <mat-autocomplete #auto_wesh=\"matAutocomplete\" (optionSelected)=\"selected('wesh', $event)\">\n    <mat-option *ngFor=\"let sys of ms.materials\" [value]=\"system\">\n      <i class=\"fas fa-square-full\" [style.color]=\"sys.color\"></i>\n      {{sys.name}}\n    </mat-option>\n  </mat-autocomplete>\n</mat-form-field>\n</div>\n</div>\n\n\n\n\n\n\n</mat-dialog-content>\n<!-- <mat-dialog-actions>\n  <button class=\"mat-raised-button\"(click)=\"close()\">Close</button>\n</mat-dialog-actions> -->\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { Draft, Interlacement } from '../../core/model/datatypes';\nimport * as THREE from 'three';\nimport { MaterialsService } from '../../core/provider/materials.service';\n\n@Component({\n  selector: 'app-crosssection',\n  templateUrl: './crosssection.component.html',\n  styleUrls: ['./crosssection.component.scss']\n})\nexport class CrosssectionComponent implements AfterViewInit{\n\n\n  hasSelection: boolean = false;\n  isInit: boolean = false;\n\n\n  constructor(private ms: MaterialsService){\n\n\n  }\n\n  ngAfterViewInit(){\n\n  }\n\n  onLeaveTab(){\n\n  }\n\n\n  \n\n\n\n\n  updateSelection(draft: Draft, start: Interlacement, end: Interlacement){\n\n    // console.log(\"Update Selection\")\n    // if(!this.isInit) return;\n\n\n    // const topo = getDraftTopology(draft.drawdown);\n    // const vtxs = evaluateVerticies(topo.warps, [], 2, 1);\n\n    // console.log(\"INIT\")\n    // const renderer = new THREE.WebGLRenderer();\n    // const size = 3;\n    \n    // const scene = new THREE.Scene();\n    // scene.background = new THREE.Color( 0xf0f0f0 );\n\n    // const div = document.getElementById('crosssection_viewer');\n\n    // const camera = new THREE.PerspectiveCamera( 75, (div.offsetWidth/div.offsetHeight), 0.1, 1000 );\n\n    // // light\n\n    // const light = new THREE.DirectionalLight( 0xffffff );\n    // light.position.set( 0, 0, 1 );\n    // scene.add( light );\n\n\n    // renderer.setSize(div.offsetWidth, div.offsetHeight);\n    // div.appendChild(renderer.domElement);\n\n  \n    // // const geometry = new THREE.BoxGeometry( 1, 1, 1 );\n    // // const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n    // // const cube = new THREE.Mesh( geometry, material );\n\n\n    // vtxs.warps.forEach((warp_vtx_list, j) => {\n    //   const pts = [];\n    //   warp_vtx_list.forEach(vtx => {\n    //     pts.push(new THREE.Vector3(vtx.x, vtx.y, vtx.z));\n    //   });\n\n    //   const material_id = draft.colShuttleMapping[j];\n    //   const color = this.ms.getColor(material_id)\n    //   const curve = new THREE.CatmullRomCurve3(pts, false, 'catmullrom', .5);\n    //   const geometry = new THREE.TubeGeometry( curve, 20, size/3, 8, false );\n    //   const material = new THREE.MeshMatcapMaterial( {color: color, opacity: 0.84} );\n    //   const curveObject = new THREE.Mesh( geometry, material );\n    //   scene.add(curveObject);\n    // });\n\n\n\n\n\n  //wefts aligned to wy\n    // for(let i = 0; i < end.i - start.i; i++){\n\n    //   const y = i*-size;\n\n    //   const draft_line = draft.drawdown[i+start.i];\n    //   const pts = [];\n    //   draft_line.forEach((cell, j) => {\n    //     let z = cell.getHeddle() ? -size : size;\n    //     pts.push(new THREE.Vector3(j*size, y, z));\n    //   });\n\n    //   const curve = new THREE.CatmullRomCurve3(pts, false, 'catmullrom', .5);\n    //   const geometry = new THREE.TubeGeometry( curve, 20, size/3, 8, false );\n    //   const material = new THREE.MeshMatcapMaterial( {opacity: 0.84} );\n    //   const curveObject = new THREE.Mesh( geometry, material );\n\n    \n    //    scene.add(curveObject);\n\n    // }\n\n\n\n\n\n\n    // camera.position.set( 20, 0, 50 );\n    // camera.lookAt( 20, 0, 0 );  \n\n    // animate();\n\n    // function animate() {\n    //   requestAnimationFrame( animate );\n\n    //   //  line.rotation.x += 0.01;\n    //   //  line.rotation.y += 0.01;\n\n    //   renderer.render( scene, camera );\n    // }\n  \n\n  }\n\n  onDraftUpdated(draft: Draft, start: Interlacement, end: Interlacement){\n\n  }\n\n  initScene(){\n    this.isInit = true;\n\n\n  }\n\n  \n\n  redraw(){\n  }\n\n\n\n}\n","<!-- <p *ngIf=\"!hasSelection\">Select a region on the draft to view the cross section</p> -->\n<div id=\"crosssection_viewer\">\n\n</div>","import { Component, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { CdkScrollable, ScrollDispatcher } from '@angular/cdk/overlay';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Subject } from 'rxjs';\nimport { Draft, Drawdown, Loom, LoomSettings, Cell } from '../core/model/datatypes';\nimport { copyDraft, createDraft, generateMappingFromPattern } from '../core/model/drafts';\nimport { copyLoom, isFrame } from '../core/model/looms';\nimport { RenderService } from './provider/render.service';\nimport { DesignmodesService } from '../core/provider/designmodes.service';\nimport { FileService } from '../core/provider/file.service';\nimport { MaterialsService } from '../core/provider/materials.service';\nimport { SystemsService } from '../core/provider/systems.service';\nimport { TreeService } from '../core/provider/tree.service';\nimport { WorkspaceService } from '../core/provider/workspace.service';\nimport { SubdraftComponent } from '../mixer/palette/subdraft/subdraft.component';\nimport { DraftviewerComponent } from './draftviewer/draftviewer.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { CrosssectionComponent } from './crosssection/crosssection.component';\nimport { SimulationComponent } from './simulation/simulation.component';\nimport { createCell } from '../core/model/cell';\nimport utilInstance from '../core/model/util';\n\n\n\n@Component({\n  selector: 'app-draftdetail',\n  templateUrl: './draftdetail.component.html',\n  styleUrls: ['./draftdetail.component.scss']\n})\nexport class DraftDetailComponent implements OnInit {\n \n  /**\n   * The reference to the weave directive.\n   * @property {WeaveDirective}\n   */\n  @ViewChild(DraftviewerComponent, {static: true}) weaveRef;\n  @ViewChild(SimulationComponent, {static: true}) simRef;\n  @ViewChild(SidebarComponent, {static: true}) sidebar;\n  @ViewChild(CrosssectionComponent, {static: false}) crosssection: CrosssectionComponent;\n  \n\n  @Output() closeDrawer: any = new EventEmitter();\n\n  id: number = -1;  \n  \n  viewonly: boolean; \n\n  /**\n  The current selection, as a Pattern \n  **/\n  copy: Drawdown;\n\n  draft: Draft;\n\n  loom: Loom;\n\n  loom_settings: LoomSettings;\n\n  selected;\n\n  collapsed: boolean = false;\n\n  private unsubscribe$ = new Subject();\n\n  dims:any;\n\n  draftelement:any;\n\n  scrollingSubscription: any;\n\n  warp_locked: boolean = false;\n\n\n  layer_threshold: number = 2;\n\n  warp_threshold: number = 3;\n\n  layer_spacing: number = 10;\n\n  sim_expanded: boolean = false;\n  viewer_expanded: boolean = false;\n\n  clone_id: number = -1;\n\n\n  /// ANGULAR FUNCTIONS\n  /**\n   * @constructor\n   * ps - pattern service (variable name is initials). Subscribes to the patterns and used\n   * to get and update stitches.\n   * dialog - Anglar Material dialog module. Used to control the popup modals.\n   */\n  constructor(\n    private dialog: MatDialog, \n    private fs: FileService,\n    public dm: DesignmodesService,\n    public scroll: ScrollDispatcher,\n    private ms: MaterialsService,\n    private ss: SystemsService,\n    private ws: WorkspaceService,\n    private tree: TreeService,\n    public render: RenderService) {\n\n    this.scrollingSubscription = this.scroll\n          .scrolled()\n          .subscribe((data: any) => {\n            this.onWindowScroll(data);\n    });\n\n\n    this.copy = [[createCell(false)]];\n    this.dm.selectDesignMode('draw', 'design_modes');\n    this.dm.selectDesignMode('toggle', 'draw_modes');\n\n\n\n  }\n\n  private onWindowScroll(data: CdkScrollable) {\n    const scrollTop:number = data.measureScrollOffset(\"top\");\n    const scrollLeft:number = data.measureScrollOffset(\"left\");\n    this.weaveRef.reposition(scrollTop, scrollLeft);\n  }\n  \n  ngOnInit(){\n\n\n  }\n\n  ngAfterViewInit() {\n\n    \n\n  \n    \n  }\n\n\n  tabChange(event: any){\n    // if(event.index == 2){\n    //   this.crosssection.initScene();\n    // }\n  }\n\n  expandSimulation(){\n    this.sim_expanded = !this.sim_expanded;\n\n    if(this.sim_expanded){\n      const sbdiv = document.getElementById('sidebar');\n      sbdiv.style.display = 'none';\n      const dvdiv = document.getElementById('draft_viewer');\n      dvdiv.style.display = 'none';\n    }else{\n      const sbdiv = document.getElementById('sidebar');\n      sbdiv.style.display = 'flex';\n      const dvdiv = document.getElementById('draft_viewer');\n      dvdiv.style.display = 'flex';\n    }\n\n  }\n\n  expandViewer(){\n    this.viewer_expanded = !this.viewer_expanded;\n\n    if(this.viewer_expanded){\n      const dvdiv = document.getElementById('simulation_container');\n      dvdiv.style.display = 'none';\n    }else{\n      const dvdiv = document.getElementById('simulation_container');\n      dvdiv.style.display = 'flex';\n    }\n\n  }\n\n\n  /**\n   * create a new object \n   * @param id \n   */\n  loadDraft(id: number){\n\n    if(!this.tree.hasParent(id)){\n      this.id = id;\n      this.clone_id = -1;\n      this.draft = this.tree.getDraft(id);\n      this.loom = this.tree.getLoom(id);\n      this.loom_settings = this.tree.getLoomSettings(id);\n      this.viewonly = this.tree.hasParent(id);\n      this.render.loadNewDraft(this.draft);\n      this.weaveRef.onNewDraftLoaded(this.draft, this.loom, this.loom_settings);\n      this.simRef.drawSimulation(this.draft, this.loom_settings);\n    }else{\n      this.clone_id  = id;\n      const newid = this.tree.createNode('draft', null, null);\n\n      let d = this.tree.getDraft(id);\n      this.draft= copyDraft(d);\n      this.draft.id =newid;\n      this.id = newid;\n\n      const loom_settings:LoomSettings = this.tree.getLoomSettings(id);\n      this.id = this.draft.id;\n\n      this.loom_settings = {\n        type: loom_settings.type,\n        epi: loom_settings.epi,\n        units: loom_settings.units,\n        frames: loom_settings.frames,\n        treadles: loom_settings.treadles\n      }\n      this.loom = copyLoom(this.tree.getLoom(id));\n\n      return this.tree.loadDraftData({prev_id: -1, cur_id: this.id}, this.draft, this.loom, this.loom_settings, false)\n      .then(d => {\n        this.viewonly = this.tree.hasParent(id);\n\n        this.render.loadNewDraft(this.draft);\n    \n        this.weaveRef.onNewDraftLoaded(this.draft, this.loom, this.loom_settings);\n      \n        this.simRef.drawSimulation(this.draft, this.loom_settings);\n\n        })\n    }\n   \n  }\n\n  windowClosed(){\n    this.draft = null;\n    this.id = null;\n    this.loom_settings = null;\n    this.simRef.endSimulation();\n  }\n\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n    this.simRef.endSimulation();\n\n  }\n\n\n\n\n\n  public closeAllModals(){\n    this.sidebar.closeWeaverModals();\n  }\n\n  /**\n   * Updates the canvas based on the weave view.\n   * @extends WeaveComponent\n   * @param {Event} e - view change event from design component.\n   * @returns {void}\n   */\n  public viewChange(value: any) {\n    \n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getDraft(this.id);\n    const loom_settings = this.tree.getDraft(this.id);\n\n    this.dm.selectDesignMode(value, 'view_modes');\n    this.render.setCurrentView(value);\n\n\n    this.weaveRef.redraw(draft, loom, loom_settings,  {\n      drawdown: true\n    });\n  }\n\n  public onCloseDrawer(){\n    this.closeDrawer.emit({id: this.id, clone_id: this.clone_id, dirty: this.weaveRef.is_dirty});\n  }\n\n  /**\n   * Change the name of the brush to reflect selected brush.\n   * @extends WeaveComponent\n   * @param {Event} e - brush change event from design component.\n   * @returns {void}\n   */\n  public designModeChange(e:any) {\n\n\n    this.weaveRef.unsetSelection();\n\n  }\n\n  \n  public redrawSimulation(e: any){\n    let draft = this.tree.getDraft(this.id);\n    let loom_settings = this.tree.getLoomSettings(this.id);\n    this.simRef.updateSimulation(draft, loom_settings);\n  }\n\n  \n\n\n  public onScroll(){\n  }\n\n  /**\n   * Weave reference masks pattern over selected area.\n   * @extends WeaveComponent\n   * @param {Event} e - mask event from design component.\n   * @returns {void}\n   */\n  public onMask(e) {\n    // console.log(e);\n    // var p = this.draft.patterns[e.id].pattern;\n    // this.weaveRef.maskArea(p);\n    // this.redraw();\n  }\n\n  \n\n\n\n\n\n  /// PUBLIC FUNCTIONS\n  /**\n   * \n   * @extends WeaveComponent\n   * @returns {void}\n   */\n  public print(e) {\n    console.log(e);\n  }\n\n\n  /**\n   */\n   public materialChange() {\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    this.weaveRef.redraw(draft, loom, loom_settings, {drawdown: true, warp_materials:true,  weft_materials:true});\n    //this.timeline.addHistoryState(this.draft);\n  }\n\n\n\n\n\n  /**\n   * Inserts an empty row on system, system\n   */\n  public shuttleColorChange() {\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    this.weaveRef.redraw(draft, loom, loom_settings, {drawdown: true, warp_materials:true,  weft_materials:true});\n   // this.timeline.addHistoryState(this.draft);\n  }\n\n  public updateWarpSystems(pattern: Array<number>) {\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    draft.colSystemMapping = generateMappingFromPattern(draft.drawdown, pattern, 'col', this.ws.selected_origin_option);\n    this.tree.setDraftOnly(this.id, draft);\n    this.weaveRef.redraw(draft, loom, loom_settings, {drawdown: true, warp_systems: true});\n  }\n\n  public updateWeftSystems(pattern: Array<number>) {\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    draft.rowSystemMapping =  generateMappingFromPattern(draft.drawdown, pattern, 'row', this.ws.selected_origin_option);\n    this.tree.setDraftOnly(this.id, draft);\n    this.weaveRef.redraw(draft, loom, loom_settings, {drawdown: true, weft_systems: true});\n  }\n\n  public updateWarpShuttles(pattern: Array<number>) {\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    \n    draft.colShuttleMapping = generateMappingFromPattern(draft.drawdown, pattern, 'col', this.ws.selected_origin_option);\n    this.tree.setDraftOnly(this.id, draft);\n\n    this.weaveRef.redraw(draft, loom, loom_settings,{drawdown: true, warp_materials: true});\n  }\n\n  public updateWeftShuttles(pattern: Array<number>) {\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    draft.rowShuttleMapping = generateMappingFromPattern(draft.drawdown, pattern, 'row', this.ws.selected_origin_option);\n    this.tree.setDraftOnly(this.id, draft);\n\n    this.weaveRef.redraw(draft, loom, loom_settings,{drawdown: true, weft_materials: true});\n  }\n\n\n  public createShuttle(e: any) {\n    this.ms.addShuttle(e.shuttle); \n  }\n\n  // public createWarpSystem(e: any) {\n  //   this.draft.addWarpSystem(e.system);\n  // }\n\n  // public createWeftSystem(e: any) {\n  //   this.draft.addWarpSystem(e.system);\n  // }\n\n  public hideWarpSystem(e:any) {\n    \n    //this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n  }\n\n  public showWarpSystem(e:any) {\n\n   // this.weaveRef.redraw({drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n  }  \n\n  public hideWeftSystem(e:any) {\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    \n    this.render.updateVisible(draft);\n    \n    this.weaveRef.redraw(draft, loom, loom_settings, {drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n  }\n\n  public showWeftSystem(e:any) {\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    \n    this.render.updateVisible(draft);\n\n    this.weaveRef.redraw(draft, loom, loom_settings,{drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n  }\n\n\n  public redrawLoomAndDraft(){\n\n    const draft = this.tree.getDraft(this.id)\n    const loom = this.tree.getLoom(this.id)\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    this.render.updateVisible(draft);\n\n    const is_frame = isFrame(loom_settings);\n    if(is_frame){\n      this.weaveRef.isFrame = true;\n    }else{\n      this.weaveRef.isFrame = false;\n    }\n    this.weaveRef.colShuttleMapping = draft.colShuttleMapping.slice();\n    this.weaveRef.rowShuttleMapping = draft.rowShuttleMapping.slice();\n    this.weaveRef.redraw(draft, loom, loom_settings,{drawdown: true, loom:true, warp_systems: true, warp_materials: true, weft_systems: true, weft_materials:true});\n  }\n\n  /**\n   * when a change happens to the defaults for looms, we must update all looms on screen\n   */\n\n  public globalLoomChange(e: any){\n\n    const dn = this.tree.getDraftNodes();\n    dn.forEach(node => {\n      const draft = this.tree.getDraft(node.id)\n      const loom = this.tree.getLoom(node.id)\n      const loom_settings = this.tree.getLoomSettings(node.id);\n      (<SubdraftComponent> node.component).drawDraft(draft);\n      if(node.id == this.id){\n        this.weaveRef.redraw(draft, loom, loom_settings, {\n          drawdown: true, \n          loom:true, \n          warp_systems: true, \n          weft_systems: true, \n          warp_materials: true,\n          weft_materials:true\n        });\n      } \n\n    });\n\n\n  }\n\n  public notesChanged(e:any) {\n\n  //   console.log(e);\n  //  this.draft.notes = e;\n  }\n\n  // public hideShuttle(e:any) {\n  //   this.draft.updateVisible();\n  //   this.weaveRef.redraw();\n  //   this.weaveRef.redrawLoom();\n  // }\n\n  // public showShuttle(e:any) {\n  //   this.draft.updateVisible();\n  //   this.weaveRef.redraw();\n  //   this.weaveRef.redrawLoom();\n  // }\n\n\n\n\n\n\n  public updateSelection(e:any){\n    if(e.copy !== undefined) this.copy = e;\n    if(e.id !== undefined) this.simRef.updateSelection(e.start, e.end);\n  }\n\n\n\n\n  public renderChange(e: any){\n\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n     \n     if(e.source === \"slider\"){\n        this.render.setZoom(e.value);\n        this.weaveRef.rescale(this.render.getZoom());\n\n     } \n\n     if(e.source === \"in\"){\n        this.render.zoomIn();\n        this.weaveRef.rescale(this.render.getZoom());\n\n\n     } \n\n     if(e.source === \"out\"){\n        this.render.zoomOut();\n        this.weaveRef.rescale(this.render.getZoom());\n\n\n     } \n     if(e.source === \"front\"){\n        this.render.setFront(!e.checked);\n        this.weaveRef.flip();\n        this.weaveRef.redraw(draft, loom, loom_settings, {drawdown:true});\n     }      \n  }\n\n  public toggleCollapsed(){\n    this.collapsed = !this.collapsed;\n  }\n\n\n /**\n   *\n   * tranfers on save from header to draft viewer\n   */\n  public onSave(e: any) {\n\n    this.weaveRef.onSave(e);\n\n  }\n\n\n   //HELPER FUNCTIONS TO AID VARIABLES CALLED FROM HTML\n\n\n\n\nlayerThresholdChange(){\n  console.log(\"layer threshold\", this.layer_threshold);\n  this.simRef.changeLayerThreshold(this.layer_threshold)\n}\n\nwarpThresholdChange(){\n  console.log(\"this.warp threshold\", this.warp_threshold);\n  this.simRef.changeWarpThreshold(this.warp_threshold)\n}\n\n// layerSpacingChange(e: any){\n//   console.log(\"layer spacing change \", this.layer_spacing, e);\n//   this.simRef.changeLayerSpacing(this.layer_spacing)\n// }\n\n\n\n\n\n\n\n\n}\n","<!-- <mat-drawer-container  style=\"background: #3d3d3d;\" #container class=\"mat-drawer-container\" cdkScrollable>\n  \n  <mat-drawer #drawer class=\"example-sidenav\" mode=\"top\" position=\"start\" opened>   -->\n\n      <div class =\"design-container\" id=\"expanded-container\">\n       \n        <!-- <app-tab\n        (onGenerativeModeChange)=\"onGenerativeModeChange($event)\"\n        (onDraftSelected)=\"loadGeneratedDraft($event)\"\n        ></app-tab>  -->\n\n        <app-sidebar id=\"sidebar\"\n         #sidebar\n        (onDesignModeChange)='designModeChange($event)'\n        (onZoomChange) =\"renderChange($event);\"\n        (onViewChange) =\"viewChange($event);\"\n        (onViewFront) =\"renderChange($event);\"\n        (onHideWeftSystem)=\"hideWeftSystem($event);\"\n        (onShowWeftSystem)=\"showWeftSystem($event);\"\n        (onHideWarpSystem)=\"hideWarpSystem($event);\"\n        (onShowWarpSystem)=\"showWarpSystem($event);\"\n        (onGlobalLoomChange)=\"globalLoomChange($event)\"\n        (onLocalLoomNeedsRedraw)=\"redrawLoomAndDraft()\"\n        (onUpdateWarpSystems) = \"updateWarpSystems($event)\"\n        (onUpdateWeftSystems) = \"updateWeftSystems($event)\"\n        (onUpdateWarpShuttles) = \"updateWarpShuttles($event)\"\n        (onUpdateWeftShuttles) = \"updateWeftShuttles($event)\"\n        (closeDrawer) = \"onCloseDrawer()\"\n        ></app-sidebar>\n\n\n   \n    <!-- <div class=\"generative-options\" *ngIf=\"weaveRef.selected==false\">\n      <h1>testing</h1>\n      <button matTooltip=\"start making changes\" \n      [name]='changesFromGenerative'\n      class=\"button material is-small is-primary fas fa-square\"\n      >\n    </button>\n    </div> -->\n  <!-- </mat-drawer> -->\n\n    <div class=\"viewers\">\n      <app-draftviewer id=\"draft_viewer\"\n      [id]=\"id\"\n      [class.expanded]=\"viewer_expanded\"\n      source = \"weaver\"\n      (onNewSelection) = \"updateSelection($event)\"\n      (onDrawdownUpdated)=\"redrawSimulation($event)\"\n      (onViewerExpanded)=\"expandViewer()\">\n      </app-draftviewer>\n\n      \n\n      <app-simulation style= 'width: 50%'\n      [id]=\"id\"\n      (onExpanded)=\"expandSimulation()\"\n      >\n      </app-simulation>\n    </div>\n\n    <!-- <div class=\"detail_data\" *ngIf=\"id !== -1\">\n\n\n  \n   </div> -->\n\n   </div>\n<!-- </mat-drawer-container> -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { ScrollingModule} from '@angular/cdk/scrolling';\nimport { CoreModule } from '../core/core.module';\nimport { DraftDetailComponent } from './draftdetail.component';\nimport { CrosssectionComponent } from './crosssection/crosssection.component';\nimport { DraftviewerComponent } from './draftviewer/draftviewer.component';\nimport { ActionsComponent } from './actions/actions.component';\nimport { WeaverViewComponent } from './weaverview/weaverview.component';\nimport { RenderService } from './provider/render.service';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { SelectionComponent } from './draftviewer/selection/selection.component';\nimport { SimulationComponent } from './simulation/simulation.component';\n\n@NgModule({\n    declarations: [\n        DraftDetailComponent,\n        CrosssectionComponent,\n        DraftviewerComponent,\n        ActionsComponent,\n        WeaverViewComponent,\n        SidebarComponent,\n        SelectionComponent,\n        SimulationComponent\n    ],\n    imports: [\n        CommonModule,\n        CoreModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatSlideToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        ColorPickerModule,\n        MatChipsModule,\n        ScrollingModule\n        \n    ],\n    exports:[\n        DraftDetailComponent\n    ],\n    providers: [\n        RenderService\n    ]\n})\nexport class DraftDetailModule { }\n","import { Component, EventEmitter, Input, OnInit, HostListener, Output, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { Subscription, Subject, fromEvent } from 'rxjs';\nimport { DesignMode, Draft, Drawdown, Interlacement, Loom, LoomSettings, LoomUtil, Material, Operation, OpInput, Cell } from '../../core/model/datatypes';\nimport { FileService } from '../../core/provider/file.service';\nimport { DesignmodesService } from '../../core/provider/designmodes.service';\nimport { MaterialsService } from '../../core/provider/materials.service';\nimport { SystemsService } from '../../core/provider/systems.service';\nimport { StateService } from '../../core/provider/state.service';\nimport { WorkspaceService } from '../../core/provider/workspace.service';\nimport { hasCell, insertDrawdownRow, deleteDrawdownRow, insertDrawdownCol, deleteDrawdownCol, isSet, isUp, setHeddle, warps, wefts, pasteIntoDrawdown, initDraftWithParams, createBlankDrawdown, insertMappingRow, insertMappingCol, deleteMappingCol, deleteMappingRow, generateMappingFromPattern, flipDraft, copyDraft } from '../../core/model/drafts';\nimport { generateDirectTieup, getLoomUtilByType, isFrame, isInThreadingRange, isInTreadlingRange, isInUserThreadingRange, isInUserTieupRange, isInUserTreadlingRange, numFrames, numTreadles } from '../../core/model/looms';\nimport { TreeService } from '../../core/provider/tree.service';\nimport utilInstance from '../../core/model/util';\nimport { OperationService } from '../../core/provider/operation.service';\nimport { RenderService } from '../provider/render.service';\nimport { SelectionComponent } from './selection/selection.component';\nimport { NgForm } from '@angular/forms';\nimport { createCell, getCellValue, setCellValue } from '../../core/model/cell';\nimport {defaults} from '../../core/model/defaults'\nimport { K } from '@angular/cdk/keycodes';\n\n@Component({\n  selector: 'app-draftviewer',\n  templateUrl: './draftviewer.component.html',\n  styleUrls: ['./draftviewer.component.scss']\n})\nexport class DraftviewerComponent implements OnInit {\n\n  @ViewChild('bitmapImage') bitmap;\n\n  @ViewChild('selection', {read: SelectionComponent, static: true}) selection: SelectionComponent;\n\n\n  @Input('id') id = -1;\n\n  /**\n   * a descriptor of the parent who generated this window\n   * @property {string} will be \"weaver\" or \"mixer\"\n   */\n   @Input('source') source: string;\n\n \n /**\n    * The Timeline object containing state histories for undo and redo\n    * @property {Timeline}\n   */\n  //  @Input('timeline') timeline: any;\n \n   @Input() viewonly: boolean;\n\n \n \n   @Output() onNewSelection = new EventEmitter();\n   @Output() onDrawdownUpdated = new EventEmitter();\n   @Output() onViewerExpanded = new EventEmitter();\n \n  hold_copy_for_paste: boolean = false;\n\n  //store this here as you need it to draw the view\n  colShuttleMapping: Array<number> = [];\n  rowShuttleMapping: Array<number>= [];\n  colSystemMapping: Array<number>= [];\n  rowSystemMapping: Array<number>= [];\n\n /**\n    * The HTML canvas element within the weave draft.\n    * @property {HTMLCanvasElement}\n   */ \n   canvasEl: HTMLCanvasElement;\n \n /**\n    * the window holding the draft.\n    * @property {HTMLCanvasElement}\n   */ \n   draftContainer: HTMLElement;\n \n \n   /**\n    * flag defining if there needs to be a recomputation of the draft on Mouse Up\n    */\n   flag_recompute: boolean;\n \n \n   /**\n    * flag defining if there needs to be a recomputation of the draft on Mouse Up\n    */\n   flag_history: boolean;\n \n \n   /**\n    * The 2D context of the canvas\n    * @property {any}\n    */\n   cx: any;\n \n   /**\n    * The 2D context of the threading canvas\n    * @property {any}\n    */\n   cxThreading: any;\n \n   /**\n    * The 2D context of the treadling canvas\n    * @property {any}\n    */\n   cxTreadling: any;\n \n   /**\n    * The 2D context of the treadling canvas\n    * @property {any}\n    */\n   cxTieups: any;\n \n   /**\n    * The 2D context of the weft_systems canvas\n    * @property {any}\n    */\n   cxWeftSystems: any;\n \n   /**\n    * The 2D context of the warp_systems canvas\n    * @property {any}\n    */\n   cxWarpSystems: any;\n \n \n   cxWarpMaterials: any;\n \n \n   cxWeftMaterials: any;\n\n\n   copy: Drawdown;\n\n   is_dirty: boolean = false;\n \n \n   /**\n    * Subscribes to move event after a touch event is started.\n    * @property {Subscription}\n    */\n   moveSubscription: Subscription;\n \n \n   /**\n    * The HTML div element used to show the weft-systems text.\n    * @property {HTMLElement}\n    */\n   divWesy: HTMLElement;\n \n   /**\n    * The HTML div element used to show the warp-systems text.\n    * @property {HTMLElement}\n    */\n   divWasy: HTMLElement;\n \n \n   /**\n    * The HTML div element used to show and hide the frames.\n    * @property {HTMLElement}\n    */\n   divViewFrames: HTMLElement;\n \n \n  /**\n    * The HTML SVG element used to show the row\n    * @property {HTMLElement}\n    */\n   svgSelectRow: HTMLElement;\n \n \n  /**\n    * The HTML SVG element used to show the row\n    * @property {HTMLElement}\n    */\n   svgSelectCol: HTMLElement;\n \n \n   /**\n    * The HTML canvas element within the weave draft for threading.\n    * @property {HTMLCanvasElement}\n    * \n    */\n   threadingCanvas: HTMLCanvasElement;\n \n     /**\n    * The HTML canvas element within the weave draft for treadling.\n    * @property {HTMLCanvasElement}\n    * \n    */\n   treadlingCanvas: HTMLCanvasElement;\n \n   /**\n    * The HTML canvas element within the weave draft for tieups.\n    * @property {HTMLCanvasElement}\n    * \n    */\n   tieupsCanvas: HTMLCanvasElement;\n \n \n \n \n  //  weftMaterialsCanvas: HTMLCanvasElement;\n  //  warpMaterialsCanvas: HTMLCanvasElement;\n \n   private tempPattern: Array<Array<Cell>>;\n   private unsubscribe$ = new Subject();\n\n \n   private lastPos: Interlacement;\n \n\n   /** USED ONLY FOR FORM UPDATES */\n   isFrame: boolean;\n   treadles: number;\n   frames: number;\n   warps: number; \n   wefts: number;\n   width: number;\n   loom_settings: LoomSettings;\n   epi: number;\n\n   loomtypes:Array<DesignMode>  = [];\n\n   density_units: Array<DesignMode> = [];\n    units: string;\n\n  /** VIEW OPTIONS */\n\n  expanded: boolean = false;\n\n  cell_size: number = 10;\n\n  system_codes: Array<string> = [];\n\n \n   /// ANGULAR FUNCTIONS\n   /**\n    * Creates the element reference.\n    * @constructor\n    */\n\n  constructor(\n    private fs: FileService,\n    public dm: DesignmodesService,\n    private ms: MaterialsService,\n    private ss: SystemsService,\n    public ws: WorkspaceService,\n    public timeline: StateService,\n    private tree:TreeService,\n    private ops: OperationService,\n    public render: RenderService\n  ) { \n\n    this.flag_recompute = false;\n    this.flag_history = false;\n    this.loomtypes = dm.getOptionSet('loom_types');\n    this.density_units = dm.getOptionSet('density_units');\n    this.cell_size = defaults.draft_detail_cell_size;\n    this.system_codes = defaults.weft_system_codes;\n\n  }\n\n  ngOnInit() {\n\n\n    // let draft: Draft = this.tree.getDraft(this.id);\n    // const loom = this.tree.getLoom(this.id);\n    // const loom_settings = this.tree.getLoomSettings(this.id);\n\n    // this.isFrame = isFrame(loom_settings);\n   //this.viewonly = !this.tree.isSeedDraft(this.id);\n     this.viewonly = false;\n    // this.colShuttleMapping = draft.colShuttleMapping;\n    // this.rowShuttleMapping = draft.rowShuttleMapping;\n\n\n\n  }\n\n  ngAfterViewInit(){\n\n    // define the elements and context of the weave draft, threading, treadling, and tieups.\n    this.canvasEl = <HTMLCanvasElement> document.getElementById('drawdown');\n    this.draftContainer = <HTMLElement> document.getElementById('draft-container');\n\n\n  \n    // this.svgSelectRow = el.nativeElement.children[12];\n    // this.svgSelectCol = el.nativeElement.children[13];\n    this.divWesy =  document.getElementById('weft-systems-text');\n    this.divWasy =  document.getElementById('warp-systems-text');\n    this.divViewFrames = document.getElementById('view_frames');\n\n    this.threadingCanvas = <HTMLCanvasElement> document.getElementById('threading');\n    this.tieupsCanvas = <HTMLCanvasElement> document.getElementById('tieups');\n    this.treadlingCanvas = <HTMLCanvasElement> document.getElementById('treadling');\n\n    this.cx = this.canvasEl.getContext('2d');\n    this.cxThreading = this.threadingCanvas.getContext('2d');\n    this.cxTreadling = this.treadlingCanvas.getContext('2d');\n    this.cxTieups = this.tieupsCanvas.getContext('2d');\n\n    // set the width and height\n\n    this.rescale(this.render.getZoom());\n\n  }\n\n  getFlippedWarpNum(j: number) : number{\n    let draft = this.tree.getDraft(this.id);\n    if(draft == null) return;\n    let warpnum = warps(draft.drawdown);\n\n    return warpnum - j;\n  }\n\n  getFlippedWeftNum(i: number) : number{\n    let draft = this.tree.getDraft(this.id);\n    if(draft == null) return;\n\n    let weftnum = wefts(draft.drawdown);\n\n    return weftnum - i;\n  }\n\n  expand(){\n    this.expanded = !this.expanded;\n    this.onViewerExpanded.emit();\n  }\n\n  //this is called anytime a new draft object is loaded. \n  onNewDraftLoaded(draft: Draft, loom:Loom, loom_settings:LoomSettings) {  \n\n    console.log(\"LOADING NEW DRAFT \", draft.id, draft.drawdown)\n    \n    \n    this.loom_settings = loom_settings;\n    const frames = Math.max(numFrames(loom), loom_settings.frames);\n    const treadles = Math.max(numTreadles(loom), loom_settings.treadles);\n\n    this.warps = warps(draft.drawdown);\n    this.wefts = wefts(draft.drawdown);\n    this.width = warps(draft.drawdown) / loom_settings.epi;\n    if(loom_settings.units = 'cm') this.width *= 10;\n    this.units = loom_settings.units;\n\n    const warp_num:number = warps(draft.drawdown);\n    const weft_num:number = wefts(draft.drawdown);\n\n    this.colShuttleMapping = draft.colShuttleMapping;\n    this.colSystemMapping = draft.colSystemMapping;\n    this.rowShuttleMapping = draft.rowShuttleMapping;\n    this.rowSystemMapping = draft.rowSystemMapping;\n\n    var dims = this.render.getCellDims(\"base\");\n    this.canvasEl.width = warp_num * dims.w;\n    this.canvasEl.height = weft_num * dims.h;\n    this.threadingCanvas.width = warp_num * dims.w;\n    this.threadingCanvas.height = frames * dims.h;\n    this.treadlingCanvas.height = weft_num * dims.h;\n    this.treadlingCanvas.width = treadles * dims.w;\n    this.tieupsCanvas.width = treadles*dims.w;\n    this.tieupsCanvas.height = frames * dims.h;\n\n    // this.cdRef.detectChanges();\n\n     this.redraw(draft, loom, loom_settings, {\n      drawdown: true, \n      loom:true, \n      warp_systems: true, \n      weft_systems: true, \n      warp_materials: true,\n      weft_materials:true\n    });\n\n  }\n\n  clearSelection(){\n        this.selection.unsetParameters();\n        // d3.select(this.svgSelectCol).style('display', 'none');\n        // d3.select(this.svgSelectRow).style('display', 'none');\n  }\n\n  ngOnDestroy() {\n     this.removeSubscription();\n  }\n\n\n  /**\n   *  takes an event from mouse event and determines how to handle it \n   * @param target the dom target of the mouse click\n   * @param shift whether or not the shift key is being held\n   * @param currentPos the position of the click within the target\n   */\n  setPosAndDraw(target:HTMLElement, shift: boolean, currentPos:Interlacement){\n      const draft = this.tree.getDraft(this.id);\n      const loom = this.tree.getLoom(this.id);\n      const loom_settings = this.tree.getLoomSettings(this.id);\n      \n      const editing_style = this.dm.getSelectedDesignMode('drawdown_editing_style').value;\n\n\n      if (target && target.id =='treadling') {\n        if(this.viewonly) return;\n        currentPos.i = this.render.visibleRows[currentPos.i];\n        if(editing_style == \"loom\") this.drawOnTreadling(loom, loom_settings, currentPos);\n      } else if (target && target.id === 'tieups') {\n        if(this.viewonly || loom_settings.type === \"direct\") return;\n        if(editing_style == \"loom\") this.drawOnTieups(loom, loom_settings, currentPos);\n      } else if (target && target.id === ('threading')) {\n        if(this.viewonly) return;\n        //currentPos.i = this.loom.frame_mapping[currentPos.i];\n        if(editing_style == \"loom\")  this.drawOnThreading(loom, loom_settings, currentPos);\n    } else{\n        if(this.viewonly) return;\n        currentPos.i = this.render.visibleRows[currentPos.i];\n        if(editing_style == \"drawdown\")  this.drawOnDrawdown(draft, loom_settings, currentPos, shift);\n      }\n\n      this.flag_history = true;\n    }\n\n\n\n  /**\n   * Touch start event. Subscribes to the move event.\n   * @extends WeaveDirective\n   * @param {Event} event - The mousedown event.\n   * @returns {void}\n   */\n  @HostListener('mousedown', ['$event'])\n  private onStart(event) {\n\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    const draft = this.tree.getDraft(this.id);\n\n    const frames = loom_settings.frames;\n    const treadles =loom_settings.treadles;\n  \n\n  // console.log(\"DIV COORDS\", )\n\n\n    //get dimis based on zoom.\n    // let dims ={\n    //   w:  el.offsetWidth / warps(draft.drawdown),\n    //   h:  el.offsetHeight / this.render.visibleRows.length\n    // }\n\n    let dims = this.render.getCellDims(\"base\");\n    var screen_row = Math.floor(event.offsetY / dims.h);\n    var screen_col = Math.floor(event.offsetX / dims.w);\n\n    const currentPos: Interlacement = {\n      si: screen_row,\n      i: screen_row, //row\n      j: screen_col, //col\n    };\n\n\n    if (event.target.localName === 'canvas') {\n    \n      this.removeSubscription();    \n      \n      this.moveSubscription = \n        fromEvent(event.target, 'mousemove').subscribe(e => this.onMove(e));   \n\n      // set up the Point to be used.\n\n\n\n      if(!event.target) return;\n\n      //reject out of bounds requests\n      switch(event.target.id){\n        case 'drawdown':\n\n          currentPos.i -= 1;\n          currentPos.j -= 1;\n          currentPos.si -=1;\n\n          if(currentPos.i < 0 || currentPos.i >= this.render.visibleRows.length) return;\n          if(currentPos.j < 0 || currentPos.j >= warps(draft.drawdown)) return;    \n          break;\n\n        case 'threading':\n          if(currentPos.i < 0 || currentPos.i >= frames) return;\n          if(currentPos.j < 0 || currentPos.j >= warps(draft.drawdown)) return;    \n          break; \n\n        case 'treadling':\n          if(currentPos.i < 0 || currentPos.i >= this.render.visibleRows.length) return;\n          if(currentPos.j < 0 || currentPos.j >= treadles) return;    \n          break;\n\n        case 'tieups':\n          if(currentPos.i < 0 || currentPos.i >= frames) return;\n          if(currentPos.j < 0 || currentPos.j >= treadles) return;    \n        break;\n\n        case 'warp-materials':\n        case 'warp-systems':\n          if(currentPos.j < 0 || currentPos.j >= warps(draft.drawdown)) return;    \n          break;\n\n        case 'weft-materials':\n        case 'weft-systems':\n          if(currentPos.i < 0 || currentPos.i >= this.render.visibleRows.length) return;\n          break;\n      }\n\n\n\n\n\n      // Save temp pattern\n      this.tempPattern = draft.drawdown.slice();\n      const selected: DesignMode = this.dm.getSelectedDesignMode('design_modes');\n      \n\n      switch (selected.value) {\n\n        case 'draw':\n\n          switch(this.dm.getSelectedDesignMode('draw_modes').value){\n\n            case 'toggle':\n              this.setPosAndDraw(event.target, event.shiftKey, currentPos);\n            break;\n    \n            case 'up':\n            case 'down':\n            case 'unset':\n            case 'material':\n              this.setPosAndDraw(event.target, event.shiftKey, currentPos);\n              this.flag_recompute = true;\n    \n              break;\n          }\n\n\n        \n        break;\n        case 'select':\n        case 'copy':\n\n            if(event.shiftKey){\n              this.selection.onSelectDrag(currentPos);\n              this.selection.onSelectStop();\n            }   \n            else this.selection.onSelectStart(event.target, currentPos);\n\n          break;\n          default:\n          break;\n      }\n\n      this.lastPos = {\n        si: currentPos.si,\n        i: currentPos.i, //row\n        j: currentPos.j //col\n      };\n\n    }\n  }\n\n  private isSame(p1: Interlacement, p2:Interlacement){\n    if(p1 === undefined || p2 === undefined ) return false\n    return (p1.i == p2.i && p1.j === p2.j);\n\n  }\n\n\n\n  /**\n   * Event called when mouse down and moved within the canvas.\n   * @extends WeaveDirective\n   * @param {Event} event - The mousemove event.\n   * @returns {void}\n   */\n  private onMove(event) {\n\n    const draft = this.tree.getDraft(this.id);\n\n\n    let dims = this.render.getCellDims(\"base\");\n    // var screen_row = Math.floor(event.offsetY / dims.h);\n    // var screen_col = Math.floor(event.offsetX / dims.w);\n\n    // let dims ={\n    //   w: this.canvasEl.width / warps(draft.drawdown),\n    //   h:  this.canvasEl.height /this.render.visibleRows.length\n    // };    \n\n    \n\n    var offset = this.render.getCellDims(this.dm.getSelectedDesignMode('design_modes').value);\n\n    // set up the point based on touched square.\n    //var screen_row = Math.floor((event.offsetY + offset.y) / dims.h);\n     var screen_row = Math.floor(event.offsetY / dims.h);\n     var screen_col = Math.floor(event.offsetX / dims.w);\n\n    const currentPos: Interlacement = {\n      si: screen_row,\n      i:  screen_row,\n      j:  screen_col\n    };\n\n   \n\n\n    if(event.target && event.target.id===\"drawdown\"){\n      currentPos.si -=1;\n      currentPos.i -=1;\n      currentPos.j -=1;\n    }\n\n   \n\n    //don't call unless you've moved to a new spot\n    if(this.isSame(currentPos, this.lastPos)) return;\n\n    // determine action based on brush type. invert inactive on move.\n    switch (this.dm.getSelectedDesignMode('design_modes').value) {\n      case 'draw':\n        switch(this.dm.getSelectedDesignMode('draw_modes').value){\n          case 'up':\n          case 'down':\n          case 'unset':\n          case 'material':\n          //this.unsetSelection();\n\n          if(currentPos.i < 0 || currentPos.i >= this.render.visibleRows.length) return;\n          if(currentPos.j < 0 || currentPos.j >= warps(draft.drawdown)) return;\n\n\n          this.setPosAndDraw(event.target, event.shiftKey, currentPos);\n          this.flag_recompute = true;\n\n\n        \n        break;\n        }\n\n      break;\n      \n\n\n      case 'select':\n      case 'copy':\n\n        this.selection.onSelectDrag(currentPos);\n\n        break;\n      case 'invert':\n      default:\n        break;\n    }\n\n    this.lastPos = {\n        si: currentPos.si,\n        i: currentPos.i, //row\n        j: currentPos.j //col\n      };\n  }\n\n  /**\n   * Event removes subscription when touch has ended.\n   * @extends WeaveDirective\n   * @param {Event} event - The mouseleave or mouseup event.\n   * @returns {void}\n   */\n  @HostListener('mouseleave', ['$event'])\n  @HostListener('mouseup', ['$event'])\n  private onEnd(event) {\n    const draft = this.tree.getDraft(this.id);\n\n\n     this.lastPos = {\n      si: -1,\n      i: -1,\n      j: -1\n     }\n\n     if(this.flag_history && event.type == 'mouseup'){\n        this.timeline.addHistoryState(draft);\n        this.flag_history = false;\n      } \n\n\n     if(this.flag_recompute && event.type == 'mouseup'){\n      this.flag_recompute = false;\n     }\n\n\n\n    // remove subscription unless it is leave event with select.\n    if (!(event.type === 'mouseleave' && (this.dm.isSelected('select','design_modes') || this.dm.isSelected('copy','design_actions')))){\n      this.removeSubscription();\n      this.selection.onSelectStop();\n    }\n\n  }\n\n  /**\n   * This is emitted from the selection\n   */\n  onSelectionEnd(){\n    if(!this.hold_copy_for_paste) this.copyArea();\n    this.onNewSelection.emit(\n      { \n        id: this.id, \n        start: {i: this.selection.getStartingRowScreenIndex(), j: this.selection.getStartingColIndex()}, \n        end: {i: this.selection.getEndingRowScreenIndex(), j: this.selection.getEndingColIndex()}})\n  }\n\n  /**\n   * Remove the subscription from the move event.\n   * @extends WeaveDirective\n   * @returns {void}\n   */\n private removeSubscription() {    \n    if (this.moveSubscription) {\n      this.moveSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Creates the copied pattern. Hack for warp and weft shuttles is that it creates a 2d arrray representing the \n   * threading or treadling with \"true\" in the frame/threadle associated with that col/row. \n   * @extends WeaveDirective\n   * @returns {void}\n   */\n  private copyArea() {\n\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n\n   const screen_i = this.selection.getStartingRowScreenIndex();    \n   const draft_j = this.selection.getStartingColIndex();\n  \n    var w = this.selection.getWidth();\n    var h = this.selection.getHeight();\n\n    this.copy = initDraftWithParams({wefts: h, warps: w, drawdown: [[createCell(false)]]}).drawdown;\n    const temp_copy: Array<Array<boolean>> = [];\n\n    if(this.selection.getTargetId() === 'weft-systems'){\n      for(var i = 0; i < h; i++){\n        temp_copy.push([]);\n        for(var j = 0; j < this.ss.weft_systems.length; j++){\n          temp_copy[i].push(false);\n        }\n      }\n    }else if(this.selection.getTargetId()=== 'warp-systems'){\n      for(var i = 0; i < this.ss.warp_systems.length; i++){\n        temp_copy.push([]);\n        for(var j = 0; j < w; j++){\n          temp_copy[i].push(false);\n        }\n      }\n    }else if(this.selection.getTargetId()=== 'weft-materials'){\n      for(var i = 0; i < h; i++){\n        temp_copy.push([]);\n        for(var j = 0; j < this.ms.getShuttles().length; j++){\n          temp_copy[i].push(false);\n        }\n      }\n    }else if(this.selection.getTargetId() === 'warp-materials'){\n      for(var i = 0; i < this.ms.getShuttles().length; i++){\n        temp_copy.push([]);\n        for(var j = 0; j < w; j++){\n          temp_copy[i].push(false);\n        }\n      }\n    }else{\n       for (var i = 0; i < h; i++){\n        temp_copy.push([]);\n        for (var j = 0; j < w; j++){\n          temp_copy[i].push(false);\n        }\n       }\n    }\n\n\n\n    //iterate through the selection\n    for (var i = 0; i < temp_copy.length; i++) {\n      for(var j = 0; j < temp_copy[0].length; j++) {\n\n        var screen_row = screen_i + i;\n        var draft_row = this.render.visibleRows[screen_row];\n        var col = draft_j + j;\n\n        switch(this.selection.getTargetId()){\n          case 'drawdown':\n            temp_copy[i][j]= isUp(draft.drawdown, draft_row, col);\n          break;\n          case 'threading':\n            //  var frame = this.loom.frame_mapping[screen_row];\n            //  temp_copy[i][j]= this.loom.isInFrame(col,frame);\n             temp_copy[i][j]= (loom.threading[col] === screen_row);\n\n          break;\n          case 'treadling':\n            temp_copy[i][j] = (loom.treadling[screen_row].find(el => el === col) !== undefined);;\n          break;\n          case 'tieups':\n              //var frame = this.loom.frame_mapping[screen_row];\n              //temp_copy[i][j] = this.loom.hasTieup({i: frame, j: col, si: screen_row});\n              temp_copy[i][j] = loom.tieup[screen_row][col];\n\n\n          break;  \n          case 'warp-systems':\n            temp_copy[i][j]= (draft.colSystemMapping[col] == i);\n          break;\n          case 'weft-systems':\n            temp_copy[i][j]= (draft.rowSystemMapping[draft_row] == j);\n          break;\n          case 'warp-materials':\n            temp_copy[i][j]= (draft.colShuttleMapping[col] == i);\n          break;\n          case 'weft-materials':\n            temp_copy[i][j]= (draft.rowShuttleMapping[draft_row] == j);\n          break;\n          default:\n          break;\n        }\n\n      }\n    }\n\n    if(temp_copy.length == 0) return;\n\n    const temp_dd: Drawdown = createBlankDrawdown(temp_copy.length, temp_copy[0].length);\n     temp_copy.forEach((row,i) => {\n      row.forEach((cell, j) => {\n        temp_dd[i][j] = setCellValue( temp_dd[i][j], cell);\n      })\n    })\n\n    this.copy = initDraftWithParams({warps: warps(temp_dd), wefts: wefts(temp_dd), drawdown: temp_dd}).drawdown;\n\n\n\n    this.onNewSelection.emit({copy: this.copy});\n\n\n\n  }\n\n\n\n  // private drawWeftMaterialCell(draft:Draft, cx:any, i:number){\n           \n\n  //   var dims = this.render.getCellDims(\"base\");\n  //   var margin = this.render.zoom*2;\n\n  //   const ndx: number = draft.rowShuttleMapping[i];\n  //   cx.fillStyle = this.ms.getColor(ndx);\n  //   cx.strokeStyle = '#000000';\n  //   cx.lineWidth = '1';\n\n  //    cx.fillRect(margin, (dims.h*i)+margin, dims.w-margin, dims.h-(margin));\n  //    cx.strokeRect(margin, (dims.h*i)+margin, dims.w-margin, dims.h-(margin));\n\n\n  // }\n\n\n  // private drawWeftMaterials(draft:Draft, cx:any, canvas:any){\n\n  //     var dims = this.render.getCellDims(\"base\");\n  //     var margin = this.render.zoom;\n  //     var top = dims.h;\n\n  //     cx.clearRect(0,0, cx.canvas.width, cx.canvas.height);\n\n\n  //     canvas.width =  dims.w;\n  //     canvas.height = this.render.visibleRows.length * dims.h;\n\n  //     cx.fillStyle = \"white\";\n  //     cx.fillRect(0,0,canvas.width,this.render.visibleRows.length*dims.h);\n\n  //     for(var i = 0 ; i < this.render.visibleRows.length; i++){\n  //         this.drawWeftMaterialCell(draft, cx, i);        \n  //     }\n\n\n  // }\n\n  private drawWarpMaterialCell(draft:Draft, cx:any, j:number){\n      console.log(\"THIS CX \", cx)\n\n        var dims = this.render.getCellDims(\"base\");\n        var margin = this.render.zoom*2;\n       const ndx: number = draft.colShuttleMapping[j];\n        cx.fillStyle = this.ms.getColor(ndx);\n        cx.strokeStyle = \"#000000\";\n        cx.lineWidth = '1';\n\n      //  if(j == warps(draft.drawdown)-1) cx.fillRect((dims.w*j)+margin, 0, dims.w-(margin*2), (dims.h) - margin);\n      //  else cx.fillRect( (dims.w*j)+margin, 0, dims.w-margin, (dims.h) - margin);\n      cx.fillRect( (dims.w*j)+margin, 0, dims.w-margin, (dims.h) - margin);\n      cx.strokeRect( (dims.w*j)+margin, 0, dims.w-margin, (dims.h) - margin);\n  }\n\n\n  // private drawWarpMaterials(draft:Draft, cx:any,canvas:any){\n\n  //   var dims = this.render.getCellDims(\"base\");\n  //   var margin = this.render.zoom;\n\n  //   this.warpMaterialsCanvas.width =  warps(draft.drawdown) * dims.w;\n  //   this.warpMaterialsCanvas.height = dims.h;\n\n  //   cx.fillStyle = \"white\";\n  //   cx.fillRect(0,0,canvas.width,canvas.height);\n  \n\n  //   for(var j = 0; j < warps(draft.drawdown); j++){\n  //     this.drawWarpMaterialCell(draft, cx, j);\n  //   } \n\n  // }\n\n\n\n\n  // private drawWeftSelectorCell(draft:Draft, cx:any, i:number){\n\n  //       var dims = this.render.getCellDims(\"base\");\n  //       var margin = this.render.zoom;\n\n  //       cx.fillStyle = \"#ffffff\";\n  //       if(i == wefts(draft.drawdown)-1) cx.fillRect(margin, (dims.h*i)+margin, dims.w, dims.h-(margin*2));\n  //       else cx.fillRect(margin, (dims.h*i)+margin, dims.w, dims.h-(margin));\n         \n  //        cx.fillStyle = \"#000000\";  \n  //        cx.font = \"10px Arial\";\n\n  //        const sys = draft.rowSystemMapping[i];\n  //        cx.fillText(this.ss.getWeftSystemCode(sys), dims.w/3, (dims.h*i)+3*dims.h/4);\n\n  // }\n\n\n  // private drawWeftSystems(draft:Draft, cx:any, canvas:HTMLCanvasElement){\n\n  //     var dims = this.render.getCellDims(\"base\");\n  //     var top = dims.h;\n\n  //     cx.clearRect(0,0, cx.canvas.width, cx.canvas.height);\n\n\n  //     canvas.width =  dims.w;\n  //     canvas.height = this.render.visibleRows.length * dims.h;\n\n  //     cx.fillStyle = \"white\";\n  //     cx.fillRect(0,0,canvas.width,this.render.visibleRows.length*dims.h);\n\n  //     for(var i = 0 ; i < this.render.visibleRows.length; i++){\n  //         this.drawWeftSelectorCell(draft,cx, i);        \n  //     }\n\n\n  // }\n\n  private drawWarpSelectorCell(draft:Draft, cx:any, j:number){\n\n        var dims = this.render.getCellDims(\"base\");\n        var margin = this.render.zoom;\n        cx.fillStyle = \"#ffffff\";\n\n        if(j == warps(draft.drawdown)-1) cx.fillRect((dims.w*j)+margin, 0, dims.w-(margin*2), (dims.h) - margin);\n        else cx.fillRect( (dims.w*j)+margin, 0, dims.w-margin, (dims.h) - margin);\n  \n         cx.fillStyle = \"#000000\";  \n         cx.font = \"10px Arial\";\n\n         const sys = draft.colSystemMapping[j];\n         cx.fillText(this.ss.getWarpSystemCode(sys),(dims.w*j)+dims.w/3, dims.w-(margin*3));\n\n\n  }\n\n\n  private drawWarpSystems(draft:Draft, cx:any,canvas:HTMLCanvasElement){\n\n    // var dims = this.render.getCellDims(\"base\");\n\n    // this.warpSystemsCanvas.width =  warps(draft.drawdown) * dims.w;\n    // this.warpSystemsCanvas.height = dims.h;\n\n    // cx.fillStyle = \"white\";\n    // cx.fillRect(0,0,canvas.width,canvas.height);\n  \n\n    // for(var j = 0; j < warps(draft.drawdown); j++){\n    //   this.drawWarpSelectorCell(draft, cx, j);\n    // } \n\n  }\n\n\n  /**\n   * Draws the grid lines onto the canvas.\n   * @extends WeaveDirective\n   * @returns {void}\n   */\n  private drawBlank(cx,canvas) {\n\n    cx.fillStyle = \"#3d3d3d\";\n    cx.fillRect(0,0,canvas.width,canvas.height);\n   \n  }\n\n  /**\n   * Draws the grid lines onto the canvas.\n   * @extends WeaveDirective\n   * @returns {void}\n   */\n  private drawGrid(loom: Loom, loom_settings: LoomSettings, cx:any,canvas:HTMLCanvasElement) {\n    var i,j;\n\n    var dims = this.render.getCellDims(\"base\");\n\n    if(canvas.id=== \"threading\"){\n      cx.fillStyle = \"white\";\n      cx.fillRect(0,0,canvas.width,canvas.height);\n      // cx.fillStyle = \"#cccccc\";\n      // cx.fillRect(0, 0, canvas.width, (frames - loom_settings.frames)*dims.h);\n    }\n    else if (canvas.id=== \"treadling\"){\n      cx.fillStyle = \"white\";\n      cx.fillRect(0,0,canvas.width,canvas.height);\n      // cx.fillStyle = \"#cccccc\";\n      // var start = loom_settings.frames * dims.w;\n      // cx.fillRect(start, 0, canvas.width - start, canvas.height);\n\n    }\n    else if (canvas.id=== \"tieups\"){\n      cx.fillStyle = \"white\";\n      cx.fillRect(0,0,canvas.width,canvas.height);\n      // cx.fillStyle = \"#cccccc\";\n      // var start = loom_settings.treadles * dims.w;\n      // cx.fillRect(start, 0, canvas.width - start, canvas.height);\n      // cx.fillRect(0, 0, canvas.width, (frames -loom_settings.frames)*dims.h);\n\n    }\n\n\n    cx.fillStyle=\"black\";\n    cx.lineWidth = .5;\n    cx.lineCap = 'round';\n    cx.strokeStyle = '#000';\n\n    //only draw the lines if the zoom is big enough to render them well\n\n      // draw vertical lines\n      for (i = 0; i <= canvas.width; i += dims.w) {\n        \n          if(canvas.id == 'drawdown'){\n            if(i > dims.w && i < canvas.width - dims.w){\n            cx.beginPath();\n            cx.moveTo(i, dims.h);\n            cx.lineTo(i, canvas.height-dims.h);\n            cx.stroke();\n            }\n          }else{\n            cx.beginPath();\n            cx.moveTo(i, 0);\n            cx.lineTo(i, canvas.height);\n            cx.stroke();\n          }\n        \n\n      }\n\n      // draw horizontal lines\n      for (i = 0; i <= canvas.height; i += dims.h) {\n\n        if(canvas.id == \"drawdown\"){\n          if(i > dims.h && i < canvas.height - dims.h){\n          cx.beginPath();\n          cx.moveTo(dims.w, i);\n          cx.lineTo(canvas.width-dims.w, i);\n          cx.stroke();\n          }\n        }else{\n          cx.beginPath();\n          cx.moveTo(0, i);\n          cx.lineTo(canvas.width, i);\n          cx.stroke();\n        }\n      }\n\n\n      // reset the line dash.\n      //cx.setLineDash([0]);\n    \n  }\n\n\n\n\n \n\n  public incrementWeftSystem(i: number){\n    this.is_dirty = true;\n\n    const draft = this.tree.getDraft(this.id);\n    let weft = this.render.visibleRows[i];\n    var newSystem = this.ss.getNextWeftSystem(weft, draft);\n    draft.rowSystemMapping[weft] = newSystem;\n    this.tree.setDraftOnly(this.id, draft);\n\n\n  }\n\n\n  \n  incrementWeftMaterial(si: number){\n    this.is_dirty = true;\n\n    const weft = this.render.visibleRows[si];\n    const draft = this.tree.getDraft(this.id);\n    if(this.dm.isSelected('material', 'draw_modes')){\n      const material_id:string = this.dm.getSelectedDesignMode('draw_modes').children[0].value;\n      draft.rowShuttleMapping[weft] = parseInt(material_id);\n    }else{\n      const len = this.ms.getShuttles().length;\n      var shuttle_id = draft.rowShuttleMapping[weft];\n      var newShuttle = (shuttle_id + 1) % len;\n      draft.rowShuttleMapping[weft] = newShuttle;\n    }\n\n    this.tree.setDraftOnly(this.id, draft);\n    this.rowShuttleMapping = draft.rowShuttleMapping;\n    this.onDrawdownUpdated.emit(draft);\n\n  }\n\n\n\n  public incrementWarpSystem(j: number){\n    this.is_dirty = true;\n\n    const draft = this.tree.getDraft(this.id);\n    var newSystem = this.ss.getNextWarpSystem(j,draft);\n    console.log(newSystem, j);\n    draft.colSystemMapping[j] = newSystem;\n    this.tree.setDraftOnly(this.id, draft);\n    // this.cdRef.detectChanges();\n\n  }\n\n  incrementWarpMaterial(col: number){\n    this.is_dirty = true;\n    const warp = col;\n\n    const draft = this.tree.getDraft(this.id);\n    if(this.dm.isSelected('material', 'draw_modes')){\n      const material_id:string = this.dm.getSelectedDesignMode('draw_modes').children[0].value;\n      draft.colShuttleMapping[warp] = parseInt(material_id);\n    }else{\n      const len = this.ms.getShuttles().length;\n      var shuttle_id = draft.colShuttleMapping[warp];\n      var newShuttle = (shuttle_id + 1) % len;\n      draft.colShuttleMapping[warp] = newShuttle;\n    }\n\n    this.tree.setDraftOnly(this.id, draft);\n    this.colShuttleMapping = draft.colShuttleMapping;\n    this.onDrawdownUpdated.emit(draft);\n\n\n   \n  }\n\n\n\n\n\n\n  /**\n   * Called when a single point \"draw\" event is called on the\n   * @param {Point} currentPos - the current position of the mouse within draft.\n   * @param shift - boolean for if the shift key was being held when this operation was called\n   * @returns {void}\n   */\n\n  private drawOnDrawdown(draft:Draft, loom_settings: LoomSettings,  currentPos: Interlacement, shift: boolean) {\n\n\n    var updates;\n    var val  = false;\n\n\n    if (!this.cx || !currentPos) { return; }\n\n\n    \n    if(hasCell(draft.drawdown, currentPos.i, currentPos.j)){\n      this.is_dirty = true;\n\n      // Set the heddles based on the brush.\n      switch (this.dm.getSelectedDesignMode('draw_modes').value) {\n        case 'up':\n          val = true;\n          draft.drawdown = setHeddle(draft.drawdown, currentPos.i,currentPos.j,val);\n          break;\n        case 'down':\n          val = false;\n          draft.drawdown = setHeddle(draft.drawdown, currentPos.i,currentPos.j,val);\n          break;\n        case 'toggle':\n          if(shift){\n            val = null;\n          } \n          else val = !isUp(draft.drawdown, currentPos.i,currentPos.j);\n          draft.drawdown = setHeddle(draft.drawdown, currentPos.i,currentPos.j,val);\n\n          break;\n\n        case 'unset':\n          draft.drawdown = setHeddle(draft.drawdown, currentPos.i,currentPos.j,null);\n\n \n        break;\n        case 'material':\n          // this.drawOnWeftMaterials(draft, currentPos);\n          // this.drawOnWarpMaterials(draft, currentPos)\n        break;        \n        default:\n          break;\n      }\n\n\n      // if(this.render.getCurrentView() == 'pattern'){\n      //   this.drawCell(this.cx,currentPos.si, currentPos.j, \"drawdown\");\n      // }else{\n      //   this.drawYarn(currentPos.si, currentPos.j, val);\n      // }\n\n\n      this.tree.setDraftAndRecomputeLoom(this.id, draft, this.tree.getLoomSettings(this.id))\n      .then(loom => {\n        this.redraw(draft, loom, loom_settings, {drawdown:true, loom:true});\n        this.onDrawdownUpdated.emit(draft);\n      })\n      .catch(console.error);\n    \n    }\n    \n  }\n\n  /**\n   * Draws or erases a single rectangle on the canvas. Updates the tieups.\n   * @extends WeaveDirective\n   * @param {Point} currentPos - the current position of the mouse within draft.\n   * @returns {void}\n   */\n  private drawOnTieups(loom: Loom, loom_settings:LoomSettings, currentPos: Interlacement ) {\n    var updates;\n    var val = false;\n    const frames = numFrames(loom);\n    const treadles = numFrames(loom);\n\n    if (!this.cxTieups || !currentPos) { return; }\n\n\n    if (isInUserTieupRange(loom, loom_settings,  currentPos)){\n      this.is_dirty = true;\n\n      switch (this.dm.getSelectedDesignMode('draw_modes').value) {\n        case 'up':\n            val = true;\n          break;\n        case 'down':\n          val = false;\n          break;\n        case 'toggle':\n          val = !loom.tieup[currentPos.i][currentPos.j];\n          break;\n        default:\n          break;\n      }\n\n    const utils = getLoomUtilByType(loom_settings.type);\n    loom = utils.updateTieup(loom, {i:currentPos.i,j: currentPos.j, val:val});\n    this.tree.setLoomAndRecomputeDrawdown(this.id, loom,loom_settings)\n    .then(draft => {\n      this.redraw(draft, loom, loom_settings, {drawdown:true, loom:true});\n      this.tree.setDraftOnly(this.id, draft);\n      this.onDrawdownUpdated.emit(draft);\n    })\n     \n    }\n  }\n\n  /**\n   * Draws or erases a single rectangle on the canvas. Updates the threading.\n   * @extends WeaveDirective\n   * @param {Point} currentPos - the current position of the mouse within draft.\n   * @returns {void}\n   */\n  private drawOnThreading(loom:Loom, loom_settings: LoomSettings, currentPos: Interlacement ) {\n    \n\n    if (!this.cxThreading || !currentPos) { return; }\n    \n    \n\n    if (isInUserThreadingRange(loom, loom_settings, currentPos)){\n      var val = false;\n      this.is_dirty = true;\n\n      //modify based on the current view \n       // currentPos.i = this.translateThreadingRowForView(loom, loom_settings,currentPos.i)\n\n\n      switch (this.dm.getSelectedDesignMode('draw_modes').value) {\n        case 'up':\n          val = true;\n          break;\n        case 'down':\n          val = false;\n          break;\n        case 'toggle':\n          val = !(loom.threading[currentPos.j] == currentPos.i);\n          break;\n        default:\n          break;\n      }\n\n      const utils = getLoomUtilByType(loom_settings.type);\n      loom = utils.updateThreading(loom, {i:currentPos.i, j:currentPos.j, val:val});\n      this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n      .then(draft => {\n        this.redraw(draft, loom, loom_settings, {drawdown:true, loom:true});\n        this.tree.setDraftOnly(this.id, draft);\n        this.onDrawdownUpdated.emit(draft);\n      });\n    }\n  }\n\n\n  /**\n   * Draws or erases a single rectangle on the canvas. Updates the treadling.\n   * @extends WeaveDirective\n   * @param {Point} currentPos - the current position of the mouse within draft.\n   * @returns {void}\n   */\n  private drawOnTreadling(loom: Loom, loom_settings: LoomSettings, currentPos: Interlacement ) {\n\n    if (!this.cxTreadling || !currentPos) { return; }\n    this.is_dirty = true;\n\n    var val = false;\n\n    if(isInUserTreadlingRange(loom, loom_settings, currentPos)){\n      switch (this.dm.getSelectedDesignMode('draw_modes').value) {\n        case 'up':\n          val = true;\n          break;\n        case 'down':\n          val = false;\n          break;\n        case 'toggle':\n          val = !(loom.treadling[currentPos.i].find(el => el === currentPos.j) !== undefined);\n          break;\n        default:\n          break;\n      }\n    \n\n\n      //this updates the value in the treadling\n      const utils = getLoomUtilByType(loom_settings.type);\n      loom = utils.updateTreadling(loom, {i:currentPos.i, j:currentPos.j, val:val});\n      this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n      .then(draft => {\n        this.redraw(draft, loom, loom_settings, {drawdown:true, loom:true});\n        this.tree.setDraftOnly(this.id, draft);\n        this.onDrawdownUpdated.emit(draft);\n      })\n    }\n   }\n\n\n\n\n\n\n//This function draws whatever the current value is at screen coordinates cell i, J\n  private drawCell(draft: Draft, loom: Loom, loom_settings: LoomSettings, cx:any, i:number, j:number, type:string){\n\n    var base_dims = this.render.getCellDims(\"base\");\n    var base_fill = this.render.getCellDims(\"base_fill\");\n    var is_up = false;\n    var is_set = false;\n    var color = \"#FFFFFF\";\n    var beyond = false;\n\n    var top = 0; \n    var left = 0;\n\n\n\n    switch(type){\n      case 'drawdown':\n        var row = this.render.visibleRows[i];\n        \n        is_up = isUp(draft.drawdown, row,j);\n        is_set = isSet(draft.drawdown, row,j);\n\n        if(!this.render.isFront()) is_up = !is_up;\n\n        if(!is_set){\n          color = \"#cccccc\";\n        }\n        else {\n          if(is_up) color = \"#333333\";\n        }\n\n        top = base_dims.h;\n        left = base_dims.w;\n\n      break;\n      case 'threading':\n        var frame = loom.threading[j];\n        is_up = (frame == i);\n        beyond = frame > loom_settings.frames; \n        //i = this.translateThreadingRowForView(loom, loom_settings, i);\n        \n        if(is_up)  color = \"#333333\";\n        //i = this.loom.frame_mapping[frame];\n\n      break;\n      case 'tieup':\n        is_up = (loom.tieup[i][j]);\n        beyond = i > loom_settings.frames; \n        if(is_up) color = \"#333333\";\n        //i = this.loom.frame_mapping[i];\n\n      break;\n      case 'treadling':\n        //i and j is going to come from the UI which is only showing visible rows\n        var row = this.render.visibleRows[i];\n        is_up = (loom.treadling[row].find(el => el == j)) !== undefined;\n        if(is_up)  color = \"#333333\";\n\n      break;\n\n    }\n\n     //cx.fillStyle = color;\n     cx.fillStyle = color;\n     cx.fillRect(left+j*base_dims.w + base_fill.x, top+i*base_dims.h + base_fill.y, base_fill.w, base_fill.h);\n\n    // if(type =='threading'){\n    //   cx.font = \"10px Arial\";\n    //   cx.fillStyle = \"white\";\n    //   let thread_val = loom.threading[j]+1;\n    //   //if(this.ws.selected_origin_option == 1 || this.ws.selected_origin_option == 2) thread_val = numFrames(loom) - loom.threading[j];\n    //   //cx.fillText(thread_val, 2+ left+j*base_dims.w + base_fill.x, top+i*base_dims.h + base_fill.y + base_fill.h);\n      \n    // }\n\n  }\n\n  /**This view renders cells based on the relationships with their neighbords */\n  drawCrossingCell(draft:Draft, cx: any, i:number, i_next:number, j:number, type:string){\n    var base_dims = this.render.getCellDims(\"base\");\n    var base_fill = this.render.getCellDims(\"base_fill\");\n    var top = 0; \n    var left = 0;\n\n    var right_edge: boolean;\n    var right_bot_to_top: boolean;\n    var bottom_edge: boolean;\n    var bottom_bot_to_top: boolean;\n\n\n    right_edge = (isUp(draft.drawdown, i, j) !== isUp(draft.drawdown, i, j+1)) ? true : false;\n\n    if(right_edge){\n      right_bot_to_top = (isUp(draft.drawdown, i, j) && !isUp(draft.drawdown, i, j+1)) ? true : false;\n    }\n\n\n    bottom_edge = (isUp(draft.drawdown, i, j) !== isUp(draft.drawdown, i_next, j)) ? true : false;\n    if(bottom_edge){\n      bottom_bot_to_top = (isUp(draft.drawdown, i, j) && !isUp(draft.drawdown, i_next, j)) ? true : false;\n    }\n\n    j++;\n    i++;\n    \n    if(right_edge){\n      cx.strokeStyle = (right_bot_to_top) ? \"#FF0000\" : \"#00FF00\";\n      cx.beginPath();\n      cx.moveTo(left+j*base_dims.w + base_fill.w , top+i*base_dims.h);\n      cx.lineTo(left+j*base_dims.w + base_fill.w , top+i*base_dims.h + base_fill.h);\n      cx.stroke();\n    }\n\n    if(bottom_edge){\n      cx.strokeStyle = (bottom_bot_to_top) ? \"#0000FF\" : \"#FFA500\";\n      cx.beginPath();\n      cx.moveTo(left+j*base_dims.w , top+i*base_dims.h + base_fill.h);\n      cx.lineTo(left+j*base_dims.w+ base_fill.w, top+i*base_dims.h + base_fill.h);\n      cx.stroke();\n    }\n  }\n\n  /**\n   * Redraws one row to avoid drawing the entire canvas.\n   * @extends WeaveDirective\n   * @returns {void}\n   */\n  private redrawRow(draft: Draft, loom: Loom, loom_settings: LoomSettings, y:number, i:number, cx:any) {\n \n    for (var j = 0; j < warps(draft.drawdown); j++) {\n      //get the system at this warp\n      const sys_id = draft.colSystemMapping[j];\n      const sys = this.ss.getWarpSystem(sys_id)\n    \n      if(sys !== undefined && sys.visible){\n        this.drawCell(draft, loom, loom_settings, this.cx, i, j, \"drawdown\");\n      }else{\n\n      } \n    }\n  }\n\n\n\n\n  /**\n   * called on scroll\n   * @param scroll_top \n   * @param scroll_left \n   */\n  public reposition(scroll_top: number, scroll_left: number){\n\n  }\n\n  //flips the view from front to back\n  public flip(){\n    const container: HTMLElement = document.getElementById('draft-scale-container');\n    container.style.transformOrigin = '50% 50%';\n    if(this.render.view_front) container.style.transform = \"matrix(1, 0, 0, 1, 0, 0) scale(\" + this.render.getZoom() + ')';\n    else container.style.transform = \"matrix(-1, 0, 0, 1, 0, 0) scale(\" + this.render.getZoom() + ')';\n\n  }\n\n  /**\n   * this rescales the canvas and updates the view from scroll events\n   * receives offset of the scroll from the CDKScrollable created when the scroll was initiated\n   */\n  //this does not draw on canvas but just rescales the canvas\n  public rescale(zoom: number){\n  //   //var dims = this.render.getCellDims(\"base\");\n    const container: HTMLElement = document.getElementById('draft-scale-container');\n    container.style.transformOrigin = 'top center';\n    container.style.transform = 'scale(' + zoom + ')';\n\n   \n   }\n\n\n\n  \n\n  \n\n\n\n  //public redrawYarnView(){\n\n    //draw from bottom to top \n\n\n  //   //first, just draw all the wefts \n  //  const shuttles: Array<number> =  this.render.visibleRows.map(el => this.weave.rowShuttleMapping[el]);\n\n  //  shuttles.forEach((shuttle, i) => {\n  //     this.drawWeft(i, this.ms.getShuttle(shuttle));\n  //  });\n\n  //   const crossings: Array<Array<Crossing>> = this.weave.getRelationalDraft();\n  //   const visible_crossings = crossings.filter((el, i) => this.render.visibleRows.find(el => el == i) !== -1);\n\n  //   visible_crossings.forEach((row, i) =>{\n\n  //     let cur_j = 0;\n  //     let cur_state: boolean = false;\n\n  //     row.forEach(crossing => {\n\n  //       if(cur_j < crossing.j){\n  //         cur_state = crossing.type.t;\n  //       }\n\n  //     });\n\n\n  //   });  \n\n\n\n    // let started:boolean = false;\n\n    // for(let i = 0; i < this.render.visibleRows.length; i++){\n\n    //   let index_row = this.render.visibleRows[i];\n\n    //   let row_values = this.weave.drawdown[index_row];\n\n    //   let shuttle_id = this.weave.rowShuttleMapping[index_row];\n\n    //   let s = this.ms.getShuttle(shuttle_id);\n\n    //   //iterate through the rows\n    //   for(let j = 0; j < row_values.length; j++){\n        \n    //     let p = row_values[j];\n\n    //   //   if(p.isEastWest())  this.drawWeftOver(i,j,s);\n    //   //   if(p.isSouthWest()) this.drawWeftBottomLeft(i,j,s);\n    //   //  // if(p.isNorthSouth())this.drawWeftUp(i, j, s);\n    //   //   if(p.isSouthEast()) this.drawWeftBottomRight(i,j,s);\n    //   //   if(p.isNorthWest()) this.drawWeftLeftUp(i,j,s);\n    //   //   if(p.isNorthEast()) this.drawWeftRightUp(i, j, s);\n\n    //   }\n    // }\n\n  //}\n\n\n\n\n  /**\n   * redraws the loom provided into the video\n   * @returns \n   */\n  public redrawLoom(draft:Draft, loom:Loom, loom_settings:LoomSettings) {\n\n\n    this.isFrame = isFrame(loom_settings);\n\n    if(loom === null || loom === undefined){\n      return;\n    }\n\n    const frames = Math.max(numFrames(loom), loom_settings.frames);\n    const treadles = Math.max(numTreadles(loom), loom_settings.treadles);\n\n    var base_dims = this.render.getCellDims(\"base\");\n    var front = this.render.isFront();\n\n    this.cxThreading.clearRect(0,0, this.cxThreading.canvas.width, this.cxThreading.canvas.height);\n    this.cxTreadling.clearRect(0,0, this.cxTreadling.canvas.width, this.cxTreadling.canvas.height);\n    this.cxTieups.clearRect(0,0, this.cxTieups.canvas.width, this.cxTieups.canvas.height);\n\n    this.cxThreading.canvas.width = base_dims.w * loom.threading.length;\n    this.cxThreading.canvas.height = base_dims.h * frames;\n    this.drawGrid(loom, loom_settings, this.cxThreading,this.threadingCanvas);\n   // else this.drawBlank(this.cxThreading,this.threadingCanvas);\n\n\n    this.cxTreadling.canvas.width = base_dims.w * treadles;\n    this.cxTreadling.canvas.height = base_dims.h * this.render.visibleRows.length;\n    this.drawGrid(loom, loom_settings, this.cxTreadling,this.treadlingCanvas);\n    //else this.drawBlank(this.cxTreadling,this.treadlingCanvas);\n\n    this.cxTieups.canvas.width = base_dims.w * treadles;\n    this.cxTieups.canvas.height = base_dims.h *frames;\n    this.drawGrid(loom, loom_settings, this.cxTieups,this.tieupsCanvas);\n    //else this.drawBlank(this.cxTieups,this.tieupsCanvas);\n    \n\n    for (var j = 0; j < loom.threading.length; j++) {\n      this.drawCell(draft, loom, loom_settings, this.cxThreading, loom.threading[j], j, \"threading\");\n    }\n\n    //only cycle through the visible rows\n    for (var i = 0; i < this.render.visibleRows.length; i++) {\n      if(this.render.visibleRows[i] < loom.treadling.length){\n        loom.treadling[this.render.visibleRows[i]].forEach(cell => {\n          this.drawCell(draft, loom, loom_settings, this.cxTreadling, i, cell, \"treadling\");\n        })\n      }\n      \n    }\n\n    for (var i = 0; i < loom.tieup.length; i++) {\n      for(var j = 0; j < loom.tieup[i].length; j++){\n        if(loom.tieup[i][j]){\n          this.drawCell(draft, loom, loom_settings, this.cxTieups, i, j, \"tieup\");\n        }\n      }\n    }\n\n  }\n\n/**\n * callled when frames become visible or drawdown without frame info is loaded\n */\n  public recomputeLoom(draft: Draft, loom_settings:LoomSettings){\n    this.tree.setDraftAndRecomputeLoom(this.id, draft, loom_settings);\n  }\n\n\n  public unsetSelection(){\n    this.selection.unsetParameters();\n  }\n\npublic drawDrawdown(draft: Draft, loom:Loom, loom_settings: LoomSettings){\n\n   switch(this.render.getCurrentView()){\n      case 'pattern':\n      this.redrawDraft(draft, loom, loom_settings);\n      break;\n\n      case 'crossing':\n      this.redrawCrossings(draft);\n      break;\n    }\n}\n\n//takes inputs about what, exactly to redraw\npublic redraw(draft:Draft, loom: Loom, loom_settings:LoomSettings,  flags:any){\n\n    var base_dims = this.render.getCellDims(\"base\");\n    this.colSystemMapping = draft.colSystemMapping;\n    this.rowSystemMapping = draft.rowSystemMapping;\n\n    if(flags.drawdown !== undefined){\n        this.cx.clearRect(0,0, this.canvasEl.width, this.canvasEl.height);   \n        this.cx.canvas.width = base_dims.w * (warps(draft.drawdown)+2);\n        this.cx.canvas.height = base_dims.h * (this.render.visibleRows.length+2);\n        this.cx.strokeStyle = \"#3d3d3d\";\n        this.cx.fillStyle = \"#ffffff\";\n        this.cx.fillRect(0,0,this.canvasEl.width,this.canvasEl.height);\n        this.cx.strokeRect(0,0,this.canvasEl.width,this.canvasEl.height);\n        this.drawDrawdown(draft, loom, loom_settings);\n    }\n\n    // if(flags.weft_systems !== undefined && this.source == \"weaver\"){\n    //   this.drawWeftSystems(draft, this.cxWeftSystems, this.weftSystemsCanvas);\n    // }\n\n   \n\n  \n    if(flags.loom !== undefined){\n       this.redrawLoom(draft, loom, loom_settings);\n    }\n\n  }\n  \n\n  /**\n   * Redraws the entire canvas based on weave pattern.\n   * @extends WeaveDirective\n   * @returns {void}\n   */\n  public redrawDraft(draft: Draft, loom: Loom, loom_settings: LoomSettings) {\n    \n    var base_dims = this.render.getCellDims(\"base\");\n    this.cx.fillStyle = \"white\";\n    this.cx.fillRect(0,0,this.canvasEl.width,this.canvasEl.height);\n\n    var i,j;\n\n    \n\n    var color = '#000000';\n    this.cx.fillStyle = color;\n    for (i = 0; i < this.render.visibleRows.length; i++) {\n      this.redrawRow(draft, loom, loom_settings, i * base_dims.h, i, this.cx);\n    }\n \n\n    this.drawGrid(loom, loom_settings, this.cx,this.canvasEl);\n\n  }\n\n\n\n\n\n\n  public drawWarps(draft: Draft, cx:any){\n    //draw all the warps\n\n    var base_dims = this.render.getCellDims(\"base\");\n    var schematic = (this.render.getCurrentView() === \"yarn\");\n    for (var x = 0; x < draft.colShuttleMapping.length; x++) {\n     \n      let system;\n      var id = draft.colShuttleMapping[x];\n      if(id === undefined) system = this.ss.getFirstWarpSystem();\n      else system = this.ss.getWarpSystem(id);\n\n      var shuttle = this.ms.getShuttle(id);\n\n      if(system !== undefined && system.visible){\n          var c = shuttle.color;\n          var t = shuttle.thickness;\n          var center = base_dims.w/2;\n\n\n          cx.lineWidth = t/100 * .9*base_dims.w;\n          cx.strokeStyle = (shuttle.type > 0 || !schematic) ? c : c+\"10\";\n          cx.shadowColor = 'white';\n          cx.shadowOffsetX = 0.5;\n          cx.shadowOffsetY = 0;\n\n          cx.beginPath();\n          cx.moveTo((x+1)*base_dims.w + center, 0);\n          cx.lineTo((x+1)*base_dims.w + center, base_dims.h*(this.render.visibleRows.length+2));\n          cx.stroke();\n\n      }\n    }\n  }\n\n\n /**\n   * Highlights intersections between yarns, when they cross from front to back\n   * @extends WeaveDirective\n   * @returns {void}\n   */\n  public redrawCrossings(draft: Draft) {\n\n\n    var base_dims = this.render.getCellDims(\"base\");\n    this.cx.fillStyle = \"white\";\n    this.cx.fillRect(0,0,this.canvasEl.width,this.canvasEl.height);\n\n    var i,j;\n\n    var color = '#000000';\n    this.cx.fillStyle = color;\n    for (i = 0; i < this.render.visibleRows.length; i++) {\n      for(j = 0; j < warps(draft.drawdown); j ++){\n        this.drawCrossingCell(draft, this.cx, this.render.visibleRows[i], this.render.getNextVisibleRow(i), j, 'crossings');\n      }\n    }\n  }\n\n\n\n  /**\n   * Prints the pattern to the console.\n   * @extends WeaveDirective\n   * @param {Array<Array<boolean>>} pattern - 2D pattern array.\n   * @returns {void}\n   */\n  public printPattern(pattern) {\n    for (var i = 0; i < pattern.length; i++) {\n      var s = \"\";\n      for (var j = 0; j < pattern[0].length; j++) {\n        if (pattern[i][j]) {\n          s += 'x';\n        } else {\n          s += 'o'\n        }\n      }\n      console.log(s);\n    }\n  }\n\n\n  //  /**\n  //  * Saves the draft as a bitmap file\n  //  * @extends WeaveDirective\n  //  * @param {string} fileName - name to save file as\n  //  * @returns {void}\n  //  */\n  // public getPrintableCanvas(obj) : HTMLCanvasElement {\n\n  //   const frames = numFrames(this.loom);\n  //   const treadles = numTreadles(this.loom);\n\n  //   let dims = this.render.getCellDims(\"base\");\n\n  //   let b = obj.bitmap.nativeElement;\n  //   let context = b.getContext('2d');\n\n  //   b.width = (warps(this.weave.drawdown) + treadles + 6) * dims.w;\n  //   b.height = (wefts(this.weave.drawdown) + frames + 6) * dims.h;\n    \n  //   context.fillStyle = \"white\";\n  //   context.fillRect(0,0,b.width,b.height);\n    \n  //   //use this to solve 0 width errors on drawIMage\n  //   if(this.loom_settings.type !== 'jacquard'){\n\n  //     context.drawImage(this.threadingCanvas, 0, dims.h*3);\n  //     context.drawImage(this.tieupsCanvas, (warps(this.weave.drawdown) +1)* dims.w, 3*dims.h);\n  //     context.drawImage(this.treadlingCanvas, (warps(this.weave.drawdown) +1)* dims.w, (frames + 4)*dims.h);\n\n  //   }\n\n  //   //systems\n  //   context.drawImage(this.warpSystemsCanvas, 0, 0);\n  //   context.drawImage(this.warpMaterialsCanvas, 0, dims.h);\n\n  //   context.drawImage(this.canvasEl, -dims.w, (frames+3)*dims.h);\n   \n  //   context.drawImage(this.weftMaterialsCanvas,(warps(this.weave.drawdown)+ treadles +1)* dims.w, (frames + 4)*dims.h);\n  //   context.drawImage(this.weftSystemsCanvas,(warps(this.weave.drawdown)+ treadles +2)* dims.w, (frames + 4)*dims.h);\n  //   return b;\n  // }\n\n  /**\n   * Saves the draft as a bitmap file\n   * @extends WeaveDirective\n   * @param {string} fileName - name to save file as\n   * @returns {void}\n   */\n  // public getBMPCanvas(obj) : HTMLCanvasElement {\n  //   let b = obj.bitmap.nativeElement;\n  //   let context = b.getContext('2d');\n  //   let draft = this.weave.drawdown;\n  //   var i,j;\n\n  //   b.width = warps(this.weave.drawdown);\n  //   b.height = wefts(this.weave.drawdown);\n  //   context.fillStyle = \"white\";\n  //   context.fillRect(0,0,b.width,b.height);\n\n  //   context.fillStyle = \"black\";\n\n  //   for( i = 0; i < b.height; i++) {\n  //     for( j=0; j < b.width; j++) {\n  //       let up = draft[i][j].isUp();\n  //       if(up) {\n  //         context.fillRect(j,i,1,1)\n  //       }\n  //     }\n  //   }\n  //   return b;\n  // }\n\n   /**\n   *\n   *\n   */\n    // public onSave(e: any) {\n\n    //   e.bitmap = this.bitmap;\n  \n    //   if (e.type === \"bmp\"){\n    //     let link = e.downloadLink.nativeElement;\n    //     link.href = this.fs.saver.bmp(this.getBMPCanvas(e));\n    //     link.download = e.name + \".jpg\"; //Canvas2Bitmap  seems to be broken now\n    //   } \n    //   else if (e.type === \"ada\"){\n    //     let link = e.downloadLink.nativeElement;\n    //     link.href = this.fs.saver.ada('draft', [this.weave], [this.loom],  false, 5);\n    //     link.download = e.name + \".ada\";\n    //   } \n    //   else if (e.type === \"wif\"){\n    //     let link = e.downloadLink.nativeElement;\n    //     link.href= this.fs.saver.wif(this.weave, this.loom);\n    //     link.download = e.filename +\".wif\";\n  \n    //   } \n    //   else if (e.type === \"jpg\"){\n    //     let link = e.downloadLink.nativeElement;\n    //     link.href = this.fs.saver.jpg(this.getPrintableCanvas(e));\n    //     link.download = e.name + \".jpg\";\n    //   } \n      \n    // }\n\n    public translateThreadingRowForView(loom: Loom, loom_settings: LoomSettings, i:number) : number{\n      const opt = this.ws.selected_origin_option;\n      const frames = Math.max(numFrames(loom), loom_settings.frames);\n\n      if(opt == 0 || opt == 3){\n        return (frames - 1 -i)\n      }else{\n        return i;\n      }\n\n    }\n\n\n    public translateDrawdownRowForView(draft: Draft, i:number) : number{\n      const opt = this.ws.selected_origin_option;\n\n      if(opt == 1 || opt == 2){\n        return (wefts(draft.drawdown) - 1 -i)\n      }else{\n        return i;\n      }\n\n    }\n\n    public translateDrawdownColForView(draft: Draft, j:number){\n      const opt = this.ws.selected_origin_option;\n\n      if(opt > 2 ){\n        return (j)\n      }else{\n        return (warps(draft.drawdown) ) - j;\n      }\n    }\n\n    /**\n   * inserts an empty row just below the clicked row\n   * @param si the screen index of the row we'll insert\n   * @param i the absolute (not screen) index of the row we'll insert\n   */\n  public insertRow(si:number) {\n\n    const draft = this.tree.getDraft(this.id);\n    let loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n\n    si = this.translateDrawdownRowForView(draft, si);\n    let index = this.render.visibleRows[si];\n\n\n    draft.drawdown = insertDrawdownRow(draft.drawdown, index, null);\n    draft.rowShuttleMapping = insertMappingRow(draft.rowShuttleMapping, index, 1);\n    draft.rowSystemMapping = insertMappingRow(draft.rowSystemMapping, index, 0);\n    const utils = getLoomUtilByType(loom_settings.type);\n    loom = utils.insertIntoTreadling(loom, index, []);\n\n    if(this.dm.getSelectedDesignMode('drawdown_editing_style').value == 'drawdown'){\n      this.tree.setDraftAndRecomputeLoom(this.id, draft, loom_settings)\n      .then(loom => {\n        this.render.updateVisible(draft);\n        this.redraw(draft, loom, loom_settings, {drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n        this.timeline.addHistoryState(draft);\n        this.rowShuttleMapping = draft.rowShuttleMapping;\n        this.onDrawdownUpdated.emit(draft);\n      })\n    }else{\n      this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n      .then(draft => {\n        this.render.updateVisible(draft);\n        this.redraw(draft, loom, loom_settings, {drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n        this.timeline.addHistoryState(draft);\n        this.rowShuttleMapping = draft.rowShuttleMapping;\n        this.onDrawdownUpdated.emit(draft);\n\n      })\n    }\n\n   \n\n  }\n    /**\n   * clones the selected row and pastes into next visible row\n   * @param si the screen index of the row we'll insert\n   * @param i the absolute (not screen) index of the row we'll insert\n   */\n  public cloneRow(si: number) {\n    const draft = this.tree.getDraft(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    let loom = this.tree.getLoom(this.id);\n\n    si = this.translateDrawdownRowForView(draft, si);\n    let index = this.render.visibleRows[si];\n\n    draft.drawdown = insertDrawdownRow(draft.drawdown, index, draft.drawdown[index].slice());\n    draft.rowShuttleMapping = insertMappingRow(draft.rowShuttleMapping, index,draft.rowShuttleMapping[index]);\n    draft.rowSystemMapping = insertMappingRow(draft.rowSystemMapping, index,draft.rowSystemMapping[index]);\n    const utils = getLoomUtilByType(loom_settings.type);\n\n\n    if(this.dm.getSelectedDesignMode('drawdown_editing_style').value == 'drawdown'){\n      this.tree.setDraftAndRecomputeLoom(this.id, draft, loom_settings)\n      .then(loom => {\n        this.render.updateVisible(draft);\n        this.redraw(draft, loom, loom_settings, {drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n        this.timeline.addHistoryState(draft);\n        this.rowShuttleMapping = draft.rowShuttleMapping;\n        this.onDrawdownUpdated.emit(draft);\n\n      })\n    }else{\n      loom = utils.insertIntoTreadling(loom, index, loom.treadling[index].slice());\n\n      this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n      .then(draft => {\n        this.render.updateVisible(draft);\n        this.redraw(draft, loom, loom_settings, {drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n        this.timeline.addHistoryState(draft);\n        this.rowShuttleMapping = draft.rowShuttleMapping;\n        this.onDrawdownUpdated.emit(draft);\n\n      })\n    }\n\n  }\n\n  public deleteRow(si:number) {\n\n    const draft = this.tree.getDraft(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    let loom = this.tree.getLoom(this.id);\n\n    si = this.translateDrawdownRowForView(draft, si);\n    let index = this.render.visibleRows[si];\n\n\n    draft.drawdown = deleteDrawdownRow(draft.drawdown, index);\n    draft.rowShuttleMapping = deleteMappingRow(draft.rowShuttleMapping, index)\n    draft.rowSystemMapping = deleteMappingRow(draft.rowSystemMapping, index)\n    const utils = getLoomUtilByType(loom_settings.type);\n    loom = utils.deleteFromTreadling(loom, index);\n\n\n    if(this.dm.getSelectedDesignMode('drawdown_editing_style').value == 'drawdown'){\n      this.tree.setDraftAndRecomputeLoom(this.id, draft, loom_settings)\n      .then(loom => {\n        this.render.updateVisible(draft);\n        this.redraw(draft, loom, loom_settings, {drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n        this.timeline.addHistoryState(draft);\n        this.rowShuttleMapping = draft.rowShuttleMapping;\n        this.onDrawdownUpdated.emit(draft);\n\n      })\n    }else{\n      this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n      .then(draft => {\n        this.render.updateVisible(draft);\n        this.redraw(draft, loom, loom_settings, {drawdown: true, loom:true, weft_systems: true, weft_materials:true});\n        this.timeline.addHistoryState(draft);\n        this.rowShuttleMapping = draft.rowShuttleMapping;\n        this.onDrawdownUpdated.emit(draft);\n\n      })\n    }\n  }\n\n    /**\n   * In\n   * @extends WeaveComponent\n   * @returns {void}\n   */\n  public insertCol(j: number) {\n    const draft = this.tree.getDraft(this.id);\n    let loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n\n    j = this.translateDrawdownColForView(draft, j);\n\n    draft.drawdown = insertDrawdownCol(draft.drawdown, j, null);\n    draft.colShuttleMapping = insertMappingCol(draft.colShuttleMapping, j, 0);\n    draft.colSystemMapping = insertMappingCol(draft.colSystemMapping, j, 0);\n    const utils = getLoomUtilByType(loom_settings.type);\n    loom = utils.insertIntoThreading(loom, j, -1);\n\n    if(this.dm.getSelectedDesignMode('drawdown_editing_style').value == 'drawdown'){\n      this.tree.setDraftAndRecomputeLoom(this.id, draft, loom_settings)\n      .then(loom => {\n        this.redraw(draft, loom, loom_settings, {drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n        this.timeline.addHistoryState(draft);\n        this.colShuttleMapping = draft.colShuttleMapping;\n        this.onDrawdownUpdated.emit(draft);\n\n      })\n\n    }else{\n\n      this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n      .then(draft => {\n        this.redraw(draft, loom, loom_settings, {drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n        this.timeline.addHistoryState(draft);\n        this.colShuttleMapping = draft.colShuttleMapping;\n        this.onDrawdownUpdated.emit(draft);\n\n      })\n\n    }\n\n  }\n\n  public cloneCol(j: number) {\n    const draft = this.tree.getDraft(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    let loom = this.tree.getLoom(this.id);\n\n    //flip the index based on the flipped view\n    j = this.translateDrawdownColForView(draft, j);\n\n    const col:Array<Cell> =draft.drawdown.reduce((acc, el) => {\n      acc.push(el[j]);\n      return acc;\n    }, []); \n    \n    draft.drawdown = insertDrawdownCol(draft.drawdown, j, col);\n    draft.colShuttleMapping = insertMappingCol(draft.colShuttleMapping, j, draft.colShuttleMapping[j]);\n    draft.colSystemMapping = insertMappingCol(draft.colSystemMapping, j, draft.colSystemMapping[j]);\n    const utils = getLoomUtilByType(loom_settings.type);\n\n\n    if(this.dm.getSelectedDesignMode('drawdown_editing_style').value == 'drawdown'){\n      this.tree.setDraftAndRecomputeLoom(this.id, draft, loom_settings)\n      .then(loom => {\n        this.redraw(draft, loom, loom_settings, {drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n        this.timeline.addHistoryState(draft);\n        this.colShuttleMapping = draft.colShuttleMapping;\n        this.onDrawdownUpdated.emit(draft);\n\n      })\n\n    }else{\n      loom = utils.insertIntoThreading(loom, j, loom.threading[j]);\n\n      this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n      .then(draft => {\n        this.redraw(draft, loom, loom_settings, {drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n        this.timeline.addHistoryState(draft);\n        this.colShuttleMapping = draft.colShuttleMapping;\n        this.onDrawdownUpdated.emit(draft);\n\n      })\n\n    }\n\n  }\n\n\n  public deleteCol(j: number) {\n    const draft = this.tree.getDraft(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    let loom = this.tree.getLoom(this.id);\n\n    j = this.translateDrawdownColForView(draft, j);\n\n    \n      draft.drawdown = deleteDrawdownCol(draft.drawdown, j);\n      draft.colShuttleMapping = deleteMappingCol(draft.colShuttleMapping, j);\n      draft.colSystemMapping = deleteMappingCol(draft.colSystemMapping, j);\n      const utils = getLoomUtilByType(loom_settings.type);\n      loom = utils.deleteFromThreading(loom, j);\n  \n    \n      if(this.dm.getSelectedDesignMode('drawdown_editing_style').value == 'drawdown'){\n        this.tree.setDraftAndRecomputeLoom(this.id, draft, loom_settings)\n        .then(loom => {\n          this.redraw(draft, loom, loom_settings, {drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n          this.timeline.addHistoryState(draft);\n          this.colShuttleMapping = draft.colShuttleMapping;\n          this.onDrawdownUpdated.emit(draft);\n\n        })\n  \n      }else{\n        this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n        .then(draft => {\n          this.redraw(draft, loom, loom_settings, {drawdown: true, loom:true, warp_systems: true, warp_materials:true});\n          this.timeline.addHistoryState(draft);\n          this.colShuttleMapping = draft.colShuttleMapping;\n          this.onDrawdownUpdated.emit(draft);\n\n        })\n  \n      }\n  }\n\n  isLastCol(j: number) : boolean {\n    const draft = this.tree.getDraft(this.id);\n    return (j+1 === warps(draft.drawdown));\n  }\n\n  isLastRow(i: number) : boolean {\n    const draft = this.tree.getDraft(this.id);\n    return (i+1 ===wefts(draft.drawdown))\n  }\n\n\n\n  /**\n   * Tell the weave directive to fill selection with pattern.\n   * @extends WeaveComponent\n   * @param {Event} e - fill event from design component.\n   * @returns {void}\n   */\n  //  public onFill(e) {\n    \n  //   let p:Pattern = this.ps.getPattern(e.id);\n    \n  //   this.weave.fillArea(this.selection, p, 'original', this.render.visibleRows, this.loom);\n\n  //   this.loom.recomputeLoom(this.weave, this.loom.type);\n\n  //   if(this.render.isYarnBasedView()) this.weave.computeYarnPaths(this.ms.getShuttles());\n    \n  //   this.copyArea();\n\n  //   this.redraw({drawdown:true, loom:true});\n\n  //   this.timeline.addHistoryState(this.weave);\n    \n  // }\n\n  // /**\n  //  * Tell weave reference to clear selection.\n  //  * @extends WeaveComponent\n  //  * @param {Event} Delte - clear event from design component.\n  //  * @returns {void}\n  //  */\n  public onClear(b:boolean) {\n\n    const draft = this.tree.getDraft(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    const loom = this.tree.getLoom(this.id);\n\n    let width = this.selection.getWidth();\n    let height = this.selection.getHeight();\n    draft.drawdown = pasteIntoDrawdown(draft.drawdown,[[createCell(b)]],this.selection.getStartingRowScreenIndex(),this.selection.getStartingColIndex(), width, height);\n    \n    switch(this.selection.getTargetId()){    \n      case 'drawdown':\n        this.tree.setDraftAndRecomputeLoom(this.id, draft, loom_settings)\n        .then(loom => {\n          this.redraw(draft, loom, loom_settings, {drawdown:true, loom:true, weft_materials: true, warp_materials:true, weft_systems:true, warp_systems:true});\n\n        });\n       break;\n\n      case 'treading':\n      case 'tieup':\n      case 'treadling':\n        this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n        .then(draft => {\n          this.redraw(draft, loom, loom_settings, {drawdown:true, loom:true, weft_materials: true, warp_materials:true, weft_systems:true, warp_systems:true});\n\n        });\n\n      break;\n    }\n\n  \n    this.copyArea();\n\n  }\n\n\n\n  public pasteViaOperation(type){\n\n    const draft =  this.tree.getDraft(this.id);\n    const copy_draft = initDraftWithParams({warps: warps(this.copy), wefts: wefts(this.copy), drawdown: this.copy});\n    const loom_settings = this.tree.getLoomSettings(this.id);\n\n    const adj_start_i = this.render.visibleRows[this.selection.getStartingRowScreenIndex()];\n    const adj_end_i = this.render.visibleRows[this.selection.getEndingRowScreenIndex()];\n    const height = adj_end_i - adj_start_i;\n    let op: Operation;\n\n    let inputs: Array<OpInput> = [];\n  \n  \n      const flips = utilInstance.getFlips(this.ws.selected_origin_option, 3);\n      \n\n\n      return flipDraft(copy_draft, flips.horiz, flips.vert)\n      .then(flipped_draft => {\n\n        // switch(type){\n        //   case 'invert':\n        //     op = this.ops.getOp('invert');\n        //     inputs.push({op_name: op.name, drafts: [], inlet: -1, params: []});\n        //     inputs.push({op_name:'child', drafts: [flipped_draft], inlet: 0, params: []});\n        //   break;\n        //   case 'mirrorX':\n        //     op = this.ops.getOp('flip horiz');\n        //     inputs.push({op_name: op.name, drafts: [], inlet: -1, params: []});\n        //     inputs.push({op_name:'child', drafts: [flipped_draft], inlet: 0, params: []});\n        //     break;\n        //   case 'mirrorY':\n        //     op = this.ops.getOp('flip vert');\n        //     inputs.push({op_name: op.name, drafts: [], inlet: -1, params: []});\n        //     inputs.push({op_name:'child', drafts: [flipped_draft], inlet: 0, params: []});\n        //     break;\n        //   case 'shiftLeft':\n        //     op = this.ops.getOp('shift left');\n        //     inputs.push({op_name: op.name, drafts: [], inlet: -1, params: [1]});\n        //     inputs.push({op_name:'child', drafts: [flipped_draft], inlet: 0, params: []});\n        //     break;\n        //   case 'shiftUp':\n        //     op = this.ops.getOp('shift up');\n        //     inputs.push({op_name: op.name, drafts: [], inlet: -1, params: [1]});\n        //     inputs.push({op_name:'child', drafts: [flipped_draft], inlet: 0, params: []});\n        //     break;\n        // }\n        // return op.perform(inputs);\n      })\n      .then(res => {\n        return flipDraft(res[0], flips.horiz, flips.vert);\n      })\n      .then(finalres => {\n        draft.drawdown = pasteIntoDrawdown(\n          draft.drawdown, \n          finalres.drawdown, \n          adj_start_i, \n          this.selection.getStartingColIndex(),\n          this.selection.getWidth(),\n          height);\n    \n        this.tree.setDraftAndRecomputeLoom(this.id, draft, loom_settings).then(loom => {\n          this.redraw(draft, loom, loom_settings, {drawdown:true, loom:true, weft_materials: true, warp_materials:true, weft_systems:true, warp_systems:true});\n\n        })\n\n      })\n     \n\n  \n  \n     \n    \n  }\n\n  /**\n   * Tells weave reference to paste copied pattern.\n   * @extends WeaveComponent\n   * @param {Event} e - paste event from design component.\n   * @returns {void}\n   */\n   public onPaste(e) {\n\n\n\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    const loom_util = getLoomUtilByType(loom_settings.type);\n    let pattern:Array<number> = [];\n    let mapping:Array<number> = [];\n\n    this.hold_copy_for_paste = false;\n\n    var type;\n\n    if(e.type === undefined) type = \"original\";\n    else type =  e.type;\n\n    if(type !== 'original'){\n      this.pasteViaOperation(type);\n    }\n\n\n    const adj_start_i = this.render.visibleRows[this.selection.getStartingRowScreenIndex()];\n    const adj_end_i = this.render.visibleRows[this.selection.getEndingRowScreenIndex()];\n    const height = adj_end_i - adj_start_i;\n\n\n    switch(this.selection.getTargetId()){    \n      case 'drawdown':\n\n        draft.drawdown = pasteIntoDrawdown(\n          draft.drawdown, \n          this.copy, \n          adj_start_i, \n          this.selection.getStartingColIndex(),\n          this.selection.getWidth(),\n          height);\n    \n\n        //if you do this when updates come from loom, it will erase those updates\n        this.tree.setDraftAndRecomputeLoom(this.id, draft, loom_settings)\n        .then(loom => {\n          this.redraw(draft, loom, loom_settings, {drawdown:true, loom:true, weft_materials: true, warp_materials:true, weft_systems:true, warp_systems:true});\n\n        });\n       break;\n\n      case 'threading':\n        loom_util.pasteThreading(loom, this.copy, {i: adj_start_i, j: this.selection.getStartingColIndex(), val: null}, this.selection.getWidth(), height);\n        this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n        .then(draft => {\n          this.redraw(draft, loom, loom_settings, {drawdown:true, loom:true, weft_materials: true, warp_materials:true, weft_systems:true, warp_systems:true});\n        });\n        break;\n      case 'tieup':\n        loom_util.pasteTieup(loom,this.copy, {i: adj_start_i, j: this.selection.getStartingColIndex(), val: null}, this.selection.getWidth(), height);\n        this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n        .then(draft => {\n          this.redraw(draft, loom, loom_settings, {drawdown:true, loom:true, weft_materials: true, warp_materials:true, weft_systems:true, warp_systems:true});\n        });\n        break;\n      case 'treadling':\n        loom_util.pasteTreadling(loom, this.copy, {i: adj_start_i, j: this.selection.getStartingColIndex(), val: null}, this.selection.getWidth(), height);\n        this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n        .then(draft => {\n          this.redraw(draft, loom, loom_settings, {drawdown:true, loom:true, weft_materials: true, warp_materials:true, weft_systems:true, warp_systems:true});\n        });\n        break;\n\n      case 'warp-systems':\n\n         pattern = []; \n          for(let j = 0; j < this.copy[0].length; j++){\n              const assigned_to = this.copy.findIndex(sys => getCellValue(sys[j]) == true);\n              pattern.push(assigned_to);\n           }\n            mapping = generateMappingFromPattern(draft.drawdown, pattern, 'col', this.ws.selected_origin_option);\n\n           draft.colSystemMapping = mapping.map((el, ndx) => {\n              if(ndx >= this.selection.getStartingColIndex() && ndx < this.selection.getStartingColIndex() + this.selection.getWidth()){\n                return el;\n              }else{\n                return draft.colSystemMapping[ndx];\n              }\n            });\n\n            this.redraw(draft, loom, loom_settings, {drawdown:true, loom:true, weft_materials: true, warp_materials:true, weft_systems:true, warp_systems:true});\n\n          break;\n      case 'warp-materials':\n\n        pattern = []; \n        for(let j = 0; j < this.copy[0].length; j++){\n            const assigned_to = this.copy.findIndex(sys => getCellValue(sys[j]) == true);\n            pattern.push(assigned_to);\n         }\n          mapping = generateMappingFromPattern(draft.drawdown, pattern, 'col', this.ws.selected_origin_option);\n\n         draft.colShuttleMapping = mapping.map((el, ndx) => {\n            if(ndx >= this.selection.getStartingColIndex() && ndx < this.selection.getStartingColIndex() + this.selection.getWidth()){\n              return el;\n            }else{\n              return draft.colShuttleMapping[ndx];\n            }\n          });\n\n          this.redraw(draft, loom, loom_settings, {drawdown:true, loom:true, weft_materials: true, warp_materials:true, weft_systems:true, warp_systems:true});\n\n\n        break;\n\n        case 'weft-systems':\n\n          pattern = []; \n          for(let i = 0; i < this.copy.length; i++){\n              const assigned_to = this.copy[i].findIndex(sys => getCellValue(sys) == true);\n              pattern.push(assigned_to);\n           }\n            mapping = generateMappingFromPattern(draft.drawdown, pattern, 'row', this.ws.selected_origin_option);\n\n           draft.rowSystemMapping = mapping.map((el, ndx) => {\n              if(ndx >= adj_start_i && ndx < adj_start_i + height){\n                return el;\n              }else{\n                return draft.rowSystemMapping[ndx];\n              }\n            });\n\n            this.redraw(draft, loom, loom_settings, {drawdown:true, loom:true, weft_materials: true, warp_materials:true, weft_systems:true, warp_systems:true});\n\n          break;\n\n          case 'weft-materials':\n          \n            pattern = []; \n            for(let i = 0; i < this.copy.length; i++){\n                const assigned_to = this.copy[i].findIndex(sys => getCellValue(sys) == true);\n                pattern.push(assigned_to);\n             }\n              mapping = generateMappingFromPattern(draft.drawdown, pattern, 'row', this.ws.selected_origin_option);\n  \n             draft.rowShuttleMapping = mapping.map((el, ndx) => {\n                if(ndx >= adj_start_i && ndx < adj_start_i + height){\n                  return el;\n                }else{\n                  return draft.rowShuttleMapping[ndx];\n                }\n              });\n  \n              this.redraw(draft, loom, loom_settings, {drawdown:true, loom:true, weft_materials: true, warp_materials:true, weft_systems:true, warp_systems:true});\n  \n            break;\n    }\n\n  \n    this.copyArea();\n\n \n\n  }\n\n  onCopy(){\n    this.copyArea();\n    this.hold_copy_for_paste = true;\n  }\n\n \n\n\n\n  swapEditingStyle(){\n    if(this.dm.getSelectedDesignMode('drawdown_editing_style').value === 'drawdown'){\n      this.dm.selectDesignMode('loom', 'drawdown_editing_style')\n    }else{\n      this.dm.selectDesignMode('drawdown', 'drawdown_editing_style')\n    }\n  \n  }\n  \n  \n  loomChange(e:any){\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n  \n    let utils:LoomUtil = null;\n  \n      const new_settings:LoomSettings = {\n        type: e.value.loomtype,\n        epi: loom_settings.epi,\n        units: loom_settings.units,\n        frames: loom_settings.frames,\n        treadles: loom_settings.treadles\n      }\n  \n      if(loom_settings.type == 'direct'){\n        new_settings.frames = Math.max(loom_settings.treadles, loom_settings.frames);\n        new_settings.treadles = Math.max(loom_settings.treadles, loom_settings.frames);\n        this.treadles = Math.max(loom_settings.treadles, loom_settings.frames);\n        this.frames = Math.max(loom_settings.treadles, loom_settings.frames);\n  \n      }\n  \n      //if we are changing from null or jacquard to a frame type loom \n      if((loom_settings.type === null || loom_settings.type === 'jacquard')){\n       //from jacquard to frame\n  \n        utils = getLoomUtilByType(new_settings.type);\n        utils.computeLoomFromDrawdown(draft.drawdown, loom_settings, this.ws.selected_origin_option)\n        .then(loom => {\n          this.tree.setLoom(this.id, loom);\n          this.redraw(draft, loom, loom_settings, {loom: true});\n        });\n      }else if(isFrame(loom_settings) && new_settings.type == 'jacquard'){\n      //from a frame loom to jacquard\n  \n       utils = getLoomUtilByType(new_settings.type);\n       utils.computeDrawdownFromLoom(loom,this.ws.selected_origin_option)\n        .then(drawdown => {\n          draft.drawdown = drawdown;\n          this.tree.setDraftOnly(this.id, draft);\n          this.redraw(draft, loom, loom_settings, {loom: true});\n  \n        });\n      \n      }else if(isFrame(loom_settings) && isFrame(new_settings)){\n        //from one frame loom to another\n        const utils = getLoomUtilByType(new_settings.type);\n        if(this.dm.getSelectedDesignMode('drawdown_editing_style').value == 'drawdown'){\n          utils.computeLoomFromDrawdown(draft.drawdown, loom_settings, this.ws.selected_origin_option)\n          .then(loom => {\n            this.tree.setLoom(this.id, loom);\n            this.redraw(draft, loom, loom_settings, {loom: true});\n  \n          })\n        }else{\n          utils.recomputeLoomFromThreadingAndDrawdown(loom,new_settings, draft.drawdown, this.ws.selected_origin_option)\n          .then(loom => {\n            this.tree.setLoom(this.id, loom);\n            this.redraw(draft, loom, loom_settings, {loom: true});\n          });\n  \n        }\n  \n  \n      }\n  \n      \n      if (loom_settings.type === 'jacquard') this.dm.selectDesignMode('drawdown', 'drawdown_editing_style')\n      else this.dm.selectDesignMode('loom', 'drawdown_editing_style');\n  \n      this.tree.setLoomSettings(this.id, new_settings);\n  \n  \n  \n    } \n  \n  \n  public unitChange(e:any){\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    loom_settings.units = e.value.units;\n    this.tree.setLoomSettings(this.id, loom_settings);\n    this.redraw(draft, loom, loom_settings, {loom: true});\n  \n  }\n  \n  \n  \n  /**\n   * recomputes warps and epi if the width of the loom is changed\n   * @param f \n   */\n  widthChange(f: NgForm) {\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n  \n    if(!f.value.width){\n      f.value.width = 1;\n      this.width = f.value.width;\n    } \n  \n    // if(this.warp_locked){\n      var new_epi = (loom_settings.units == \"in\") ? f.value.warps / f.value.width : (10 * f.value.warps / f.value.width);   \n      loom_settings.epi = new_epi;\n      f.value.epi = new_epi;\n      this.tree.setLoomSettings(this.id, loom_settings);\n      this.redraw(draft, loom, loom_settings, {loom: true});\n    // }else{\n    //   var new_warps = (loom_settings.units === \"in\") \n    //   ? Math.ceil(f.value.width * f.value.epi) : \n    //   Math.ceil((10 * f.value.warps / f.value.width));\n  \n    //   this.warpNumChange({warps: new_warps});\n    // }\n  }\n  \n  public warpNumChange(e:any) {\n  \n    if(e.warps == \"\") return;\n  \n    const draft = this.tree.getDraft(this.id);\n    let loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n  \n  \n    if(e.warps > warps(draft.drawdown)){\n      var diff = e.warps -  warps(draft.drawdown);\n      for(var i = 0; i < diff; i++){  \n  \n        let ndx = warps(draft.drawdown);\n        const utils = getLoomUtilByType(loom_settings.type);\n        loom = utils.insertIntoThreading(loom, ndx, -1);\n  \n        draft.drawdown = insertDrawdownCol(draft.drawdown,ndx, null);\n        draft.colShuttleMapping = insertMappingCol(draft.colShuttleMapping,ndx, 0);\n        draft.colSystemMapping = insertMappingCol(draft.colSystemMapping,ndx, 0);\n        \n      }\n    }else{\n  \n      var diff = warps(draft.drawdown) - e.warps;\n      for(var i = 0; i < diff; i++){  \n        let ndx = warps(draft.drawdown)-1;\n  \n        const utils = getLoomUtilByType(loom_settings.type);\n        loom = utils.deleteFromThreading(loom, ndx);\n        draft.drawdown = deleteDrawdownCol(draft.drawdown, ndx);\n        draft.colShuttleMapping = deleteMappingCol(draft.colShuttleMapping,ndx);\n        draft.colSystemMapping = deleteMappingCol(draft.colSystemMapping,ndx);\n  \n      }\n  \n    }\n  \n    if(this.dm.getSelectedDesignMode('drawdown_editing_style').value == 'drawdown'){\n      this.tree.setDraftAndRecomputeLoom(this.id, draft, loom_settings)\n      .then(loom => {\n          this.redraw(draft, loom, loom_settings, {\n            drawdown: true, \n            loom:true, \n            warp_systems: true, \n            warp_materials: true,\n          });\n        })\n  \n    }else{\n      this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n      .then(draft => {\n        this.redraw(draft, loom, loom_settings, {\n          drawdown: true, \n          loom:true, \n          warp_systems: true, \n          warp_materials: true,\n        });\n      })\n  \n    }\n  \n  \n  }\n  \n  \n  warpChange(f: NgForm) {\n  \n    const loom_settings = this.tree.getLoomSettings(this.id);\n  \n    if(!f.value.warps){\n     f.value.warps = 2;\n     this.warps = f.value.warps;\n    }\n    this.warpNumChange({warps: f.value.warps})\n    this.width = (loom_settings.units =='cm') ? f.value.warps / loom_settings.epi * 10 : f.value.warps / loom_settings.epi;\n    f.value.width = this.width;\n  \n  }\n  \n  weftChange(f: NgForm) {\n    if(!f.value.wefts){\n      f.value.wefts = 2;\n      this.wefts = 2;\n    } \n    this.weftNumChange({wefts: f.value.wefts})\n  \n  }\n  \n  public weftNumChange(e:any) {\n  \n    if(e.wefts === \"\" || e.wefts ==\"null\") return;\n  \n  \n    const draft = this.tree.getDraft(this.id);\n    let loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n  \n  \n    if(e.wefts > wefts(draft.drawdown)){\n      var diff = e.wefts - wefts(draft.drawdown);\n  \n      for(var i = 0; i < diff; i++){  \n        let ndx = wefts(draft.drawdown);\n  \n        draft.drawdown = insertDrawdownRow(draft.drawdown,ndx, null);\n        draft.rowShuttleMapping = insertMappingRow(draft.rowShuttleMapping,  ndx, 1)\n        draft.rowSystemMapping = insertMappingRow(draft.rowSystemMapping,  ndx, 0);\n        this.render.updateVisible(draft);\n        const utils = getLoomUtilByType(loom_settings.type);\n        loom = utils.insertIntoTreadling(loom, ndx, []);\n      }\n    }else{\n      var diff = wefts(draft.drawdown) - e.wefts;\n      for(var i = 0; i < diff; i++){  \n        let ndx = wefts(draft.drawdown)-1;\n        draft.drawdown = deleteDrawdownRow(draft.drawdown, ndx);\n        draft.rowShuttleMapping = deleteMappingRow(draft.rowShuttleMapping, ndx)\n        draft.rowSystemMapping = deleteMappingRow(draft.rowSystemMapping,  ndx)\n        const utils = getLoomUtilByType(loom_settings.type);\n        loom =  utils.deleteFromTreadling(loom, ndx);\n        this.render.updateVisible(draft);\n\n      }\n    }\n  \n    if(this.dm.getSelectedDesignMode('drawdown_editing_style').value == 'drawdown'){\n  \n      this.tree.setDraftAndRecomputeLoom(this.id, draft, loom_settings)\n      .then(loom => {\n        this.redraw(draft, loom, loom_settings, {\n          drawdown: true, \n          loom:true, \n          weft_systems: true, \n          weft_materials: true,\n        });\n      })\n    }else{\n      this.tree.setLoomAndRecomputeDrawdown(this.id, loom, loom_settings)\n      .then(draft => {\n\n        this.redraw(draft, loom, loom_settings, {\n          drawdown: true, \n          loom:true, \n          weft_systems: true, \n          weft_materials: true,\n        });    \n      })\n    }\n   \n  }\n\n\n\n  public frameChange(e:any){\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    loom_settings.frames = e.value;\n    this.tree.setLoomSettings(this.id, loom_settings);\n    this.redraw(draft, loom, loom_settings, {loom: true});\n  }\n\n  public treadleChange(e:any){\n    const draft = this.tree.getDraft(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    this.tree.setLoomSettings(this.id, loom_settings);\n    this.redraw(draft, loom, loom_settings, {loom: true});\n  }\n\n\n  updateMinTreadles(f: NgForm){\n    //validate the input\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const draft = this.tree.getDraft(this.id);\n\n    if(!f.value.treadles){\n      f.value.treadles = 2; \n      this.treadles = f.value.treadles;\n    } \n\n    f.value.treadles = Math.ceil(f.value.treadles);\n   \n\n      loom_settings.treadles = f.value.treadles;\n\n      if(loom_settings.type == 'direct'){\n        this.frames = f.value.treadles;\n        this.treadles = f.value.treadles;\n        loom_settings.frames = this.frames;\n        loom_settings.treadles = this.treadles;\n        loom.tieup = generateDirectTieup(f.value.treadles);\n        this.tree.setLoom(this.id, loom);\n\n      }\n\n      this.tree.setLoomSettings(this.id, loom_settings);\n      this.redraw(draft, loom, loom_settings, {\n        loom:true, \n      });\n    \n\n  }\n\n  updateMinFrames(f: NgForm){\n    const loom_settings = this.tree.getLoomSettings(this.id);\n    const loom = this.tree.getLoom(this.id);\n    const draft = this.tree.getDraft(this.id);\n\n    if(!f.value.frames){\n      f.value.frames = 2; \n      this.frames = f.value.frames;\n\n    }\n     \n\n    f.value.frames = Math.ceil(f.value.frames);\n    \n\n      loom_settings.frames = f.value.frames;\n\n      if(loom_settings.type == 'direct'){\n        this.frames = f.value.frames;\n        this.treadles = f.value.frames;\n        loom_settings.frames = this.frames;\n        loom_settings.treadles = this.treadles;\n        loom.tieup = generateDirectTieup(f.value.frames);\n        this.tree.setLoom(this.id, loom);\n      }\n\n      this.tree.setLoomSettings(this.id, loom_settings);      \n      this.redraw(draft, loom, loom_settings, {\n        loom:true, \n      });\n    \n  }\n\n\nepiChange(f: NgForm) {\n\n  const loom_settings = this.tree.getLoomSettings(this.id);\n  const draft = this.tree.getDraft(this.id);\n\n  if(!f.value.epi){\n    f.value.epi = 1;\n    loom_settings.epi = f.value.epi;\n    this.tree.setLoomSettings(this.id, loom_settings);\n  } \n  \n  //this.loom.overloadEpi(f.value.epi);\n  this.ws.epi = f.value.epi;\n\n  this.width = (loom_settings.units =='cm') ? f.value.warps / loom_settings.epi * 10 : f.value.warps / loom_settings.epi;\n  f.value.width = this.width;\n  \n  this.onDrawdownUpdated.emit(draft);\n\n\n  }\n\n\n\n\n\n \n\n\n\n\n\n}\n","<div class=\"draft-container {{source}}\"  [class.expanded] =\"expanded\" id=\"draft-container\">\n\n  <div class=\"expand\"      \n   [class.expanded] =\"expanded\"\n  >\n    <button mat-icon-button color=\"primary\" (click)=\"expand()\" aria-label=\"expand to view simuation full screen\">\n      <i *ngIf='!expanded' class=\"fa-solid fa-maximize\"></i>\n      <i *ngIf='expanded' class=\"fa-solid fa-minimize\"></i>\n        </button>\n  </div>\n  \n    <div id = 'draft-scale-container' class=\"origin{{ws.selected_origin_option}}\" [class.hide]=\"render.current_view == 'simulate'\">\n\n      <app-selection \n      #selection\n      [id]=\"id\"\n      (onCopy)=\"onCopy()\"\n      (onClear)=\"onClear($event)\"\n      (onPaste)=\"onPaste($event)\"\n      (onSelectionEnd)=\"onSelectionEnd()\"\n      ></app-selection>\n     \n      \n      \n\n      <div class=\"warp-systems-container origin{{ws.selected_origin_option}} \">\n        <div class=\"warp-systems-text origin{{ws.selected_origin_option}}\"  id=\"warp-systems-text\">\n         \n          <div class=\"warp-system-col origin{{ws.selected_origin_option}}\" \n          [style.width.px] = \"cell_size\"\n          *ngFor=\"let i of colSystemMapping; let j = index;\" >\n          <a class=\"warp-material\" \n          [style.background-color]=\"this.ms.getColor(colShuttleMapping[j])\" \n          [style.width.px]=\"cell_size-1\"\n          [style.height.px]=\"cell_size-1\"\n          (click)=\"incrementWarpMaterial(j)\">   \n          </a>\n            <a class=\"warp-system\" (click)=\"incrementWarpSystem(j)\"> {{i+1}}</a>\n     \n          <div class=\"warp-number-container\">\n            <span *ngIf=\"j % render?.getTextInterval() == 0\" class=\"warp_number origin{{ws.selected_origin_option}}\">\n              <ng-container *ngIf='ws.selected_origin_option == 2 || ws.selected_origin_option == 3'>{{j}}</ng-container>\n              <ng-container *ngIf='ws.selected_origin_option == 0 || ws.selected_origin_option == 1'>{{getFlippedWarpNum(j)}}</ng-container>\n            </span>      \n          \n            <!-- <span *ngIf=\"isLastCol(j)\" class=\"warp_number_last origin{{ws.selected_origin_option}}\">\n              <ng-container *ngIf='ws.selected_origin_option == 2 || ws.selected_origin_option == 3'>{{j+1}}</ng-container>\n              <ng-container *ngIf='ws.selected_origin_option == 0 || ws.selected_origin_option == 1'>{{getFlippedWarpNum(j) - 1}}</ng-container>\n              \n            </span>       -->\n          </div>\n            <div  class=\"warp_selectors\">\n            <span *ngIf=\"!viewonly\"class=\"warp_delete\" (click)=\"deleteCol(j);\"><i class=\"fa fa-trash\"></i>\n              </span>\n      \n            <span *ngIf=\"!viewonly\" class=\"warp_clone\"\n            (click)=\"cloneCol(j);\">\n              <i class=\"fa fa-clone\"></i>\n            </span>\n      \n      \n            <span *ngIf=\"!viewonly\" class=\"warp_insert\" \n            (click)=\"insertCol(j + 1);\">\n            <i class=\"fa fa-plus-circle\"></i></span>\n            </div>\n         \n          </div>\n\n            <!-- <div class=\"warp-system-col\" >\n              <span class=\"last-warp\">{{draft?.warps}}</span>\n            </div>  -->\n\n          </div>  \n\n      </div>\n      <div [class.hidden]=\"!isFrame\" class=\"threading-tieup-container origin{{ws.selected_origin_option}} editable-{{dm.getSelectedDesignMode('drawdown_editing_style').value}}\">\n        <canvas id=\"threading\" class=\"\"></canvas>\n        <div class=\"threading-tieup-spacer origin{{ws.selected_origin_option}}\"></div>\n        <canvas id=\"tieups\" #tieups ></canvas>\n      </div>\n\n      <div class=\"drawdown-container origin{{ws.selected_origin_option}} editable-{{dm.getSelectedDesignMode('drawdown_editing_style').value}}\" >\n        <canvas id=\"drawdown\" #drawdown  >  </canvas>\n        <canvas [class.hidden]=\"!isFrame\" id=\"treadling\" #treadling></canvas>\n        \n        <div class=\"weft-systems-container origin{{ws.selected_origin_option}}\">\n          <div class=\"weft-systems-text origin{{ws.selected_origin_option}}\" id=\"weft-systems-text\">\n            <div class=\"weft-system-row origin{{ws.selected_origin_option}}\" \n            [style.height.px]=\"cell_size\"\n            *ngFor=\"let i of (render?.visibleRows); let j = index;\" >\n               \n            <a class=\"weft-material\" \n            [style.background-color]=\"this.ms.getColor(rowShuttleMapping[i])\" \n            [style.width.px]=\"cell_size-1\"\n            [style.height.px]=\"cell_size-1\"\n            (click)=\"incrementWeftMaterial(j)\"> \n            </a>\n            \n            <a class=\"weft-system\" (click)=\"incrementWeftSystem(j)\"> \n                  {{ system_codes[rowSystemMapping[i]]}}</a>\n\n               \n\n\n                <div class=\"weft_indicies\">\n\n                <ng-container *ngIf=\"ws.selected_origin_option == 1 || ws.selected_origin_option == 2\">\n                  <span *ngIf=\"(i % render?.getTextInterval() == 0)\" class=\"weft_number origin{{ws.selected_origin_option}}\">{{getFlippedWeftNum(j)}}</span>      \n                  <!-- <span *ngIf=\"(isLastRow(i))\" class=\"weft_number_last origin{{ws.selected_origin_option}}\">{{getFlippedWeftNum(j)-1}}</span>       -->\n                </ng-container>  \n                <ng-container *ngIf=\"ws.selected_origin_option == 0 || ws.selected_origin_option == 3\">\n\n                <span *ngIf=\"i % render?.getTextInterval() == 0\" class=\"weft_number origin{{ws.selected_origin_option}}\">{{j}}</span>      \n                <!-- <span *ngIf=\"(isLastRow(i))\" class=\"weft_number_last origin{{ws.selected_origin_option}}\">{{i+1}}</span>       -->\n              </ng-container>  \n                </div>\n\n                <div class=\"weft_actions\">\n                  <span *ngIf=\"!viewonly\" class = \"weft_insert\" \n                  (click)=\"insertRow(j, i)\">\n                  <i class=\"fa fa-plus-circle\"></i>\n                  </span>\n        \n                  <span *ngIf=\"!viewonly\"class = \"weft_clone\" \n                  (click)=\"cloneRow(j, i);\">\n                  <i class=\"fa fa-clone\"></i>\n                  </span>\n                  \n                  <span *ngIf=\"!viewonly\"class=\"weft_delete\" \n                   (click)=\"deleteRow(i);\">\n                   <i class=\"fa fa-trash\"></i>\n                  </span>\n                </div>\n            </div> <!-- end weft system row-->\n          </div> \n        </div>\n      </div>\n\n\n    \n    \n    \n    \n          \n\n    \n    \n    </div>\n\n\n \n \n \n\n \n          \n  \n \n \n   \n     <!-- <svg #activeRow class=\"active_row\">\n     </svg>\n \n     <svg #activeCol class=\"active_col\">\n     </svg>\n                -->\n \n \n     <canvas #bitmapImage hidden></canvas>\n    </div>\n\n      <div class=\"controls\" \n      [style.display]=\"(expanded) ? 'flex' : 'none'\" \n      *ngIf=\"id !== -1\">\n\n        <div class=\"left-side\">\n        <form #envt=\"ngForm\" novalidate>\n\n          <mat-form-field class=\"fullwidth\">\n  \n          <mat-label>Loom Type</mat-label>\n          <mat-select  (selectionChange) =\"loomChange(envt)\" [(value)]=\"loom_settings.type\" [(ngModel)]=\"loom_settings.type\" name=\"loomtype\">\n            <mat-option *ngFor=\"let loomtype of loomtypes\" [value]=\"loomtype.value\">\n              {{loomtype.viewValue}}\n            </mat-option>\n          </mat-select>\n          </mat-form-field>\n  \n           \n          <mat-form-field class=\"fullwidth\">\n            <input matInput name=\"warps\" \n            [(ngModel)]=\"warps\" \n            type=\"number\" \n            min=\"2\" \n            placeholder=\"Warp Ends\" \n            (change)=\"warpChange(envt)\"\n            (blur)=\"warpChange(envt)\"> \n            \n         \n          </mat-form-field>\n  \n          <mat-form-field class=\"fullwidth\">\n            <input matInput name=\"wefts\" \n            [(ngModel)]=\"wefts\" \n            type=\"number\" \n            min=\"2\" \n            placeholder=\"Weft Pics\" \n            (change)=\"weftChange(envt)\"\n            (blur)=\"weftChange(envt)\"> \n         \n          </mat-form-field>\n  \n          <mat-form-field class=\"fullwidth\">\n            <mat-label>Density Units</mat-label>            \n            <mat-select [(value)]=\"units\" [(ngModel)]=\"loom_settings.units\" name=\"units\" (selectionChange) =\"unitChange(envt)\">\n              <mat-option *ngFor=\"let unit of density_units\" [value]=\"unit.value\">\n                {{unit.viewValue}}\n              </mat-option>\n            </mat-select>\n            </mat-form-field>\n  \n            <mat-form-field class=\"fullwidth\">\n            <mat-label>Density</mat-label>    \n            <input matInput  \n            name=\"epi\" \n            [(ngModel)]=\"loom_settings.epi\" \n            type=\"number\" \n            min= \"0\" \n            (change)=\"epiChange(envt)\"\n            (blur)=\"epiChange(envt)\">  \n    \n            <ng-container *ngIf=\"loom_settings.units === 'cm'\">\n              <span matSuffix>ends / 10cm</span>\n            </ng-container>\n            <ng-container *ngIf=\"loom_settings.units == 'in'\">\n             <span matSuffix>epi</span> \n            </ng-container>\n          </mat-form-field>\n  \n  \n  \n          <mat-form-field class=\"fullwidth\">\n            <input matInput \n            name=\"width\" \n            [(ngModel)]=\"width\" \n            step=\"0.125\" \n            type=\"number\" \n            min= \"0.25\" \n            max =\"60\" \n            placeholder=\"Width\" \n            (change)=\"widthChange(envt)\"\n            (blur)=\"widthChange(envt)\"> \n  \n            <ng-container *ngIf=\"loom_settings.units === 'in'\">\n              <span matSuffix>inches</span> \n            </ng-container>\n    \n             <ng-container *ngIf=\"loom_settings.units === 'cm'\">\n              <span matSuffix>cm</span> \n           </ng-container>\n    \n          </mat-form-field>\n  \n  \n    \n            <mat-form-field class=\"fullwidth\">\n              <mat-label >Number of Frames</mat-label>    \n              <input matInput \n              name=\"frames\" \n              [disabled]=\"loom_settings.type == 'jacquard'\"\n              [(ngModel)]=\"frames\"  \n              step=\"1\" \n              type=\"number\" \n              min= \"2\" \n              max =\"1000\" \n              (change)=\"updateMinFrames(envt)\" \n              (blur)=\"updateMinFrames(envt)\"> \n               <span matSuffix>frames</span> \n             </mat-form-field>\n      \n      \n            <mat-form-field class=\"fullwidth\">\n              <mat-label>Number of Treadles</mat-label>      \n              <input matInput \n              name=\"treadles\" \n              [disabled]=\"loom_settings.type == 'jacquard'\"\n              [(ngModel)]=\"treadles\" \n              step=\"1\" \n              type=\"number\" \n              min= \"2\" \n              max =\"1000\" \n              (change)=\"updateMinTreadles(envt)\"\n              (blur)=\"updateMinTreadles(envt)\"\n              > \n               <span matSuffix>treadles</span> \n             </mat-form-field>\n    \n\n          </form> \n        </div>\n  \n           <div class=\"right-side fullwidth\" > \n            <mat-label>Editing Mode: </mat-label>\n            <mat-slide-toggle\n            [disabled]=\"loom_settings.type == 'jacquard'\"\n            (click)=\"swapEditingStyle()\">\n            </mat-slide-toggle>\n            <div><mat-label>{{dm.getSelectedDesignMode('drawdown_editing_style').viewValue}}</mat-label></div>\n            </div>\n          \n      </div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { TreeService } from '../../../core/provider/tree.service';\nimport { Interlacement } from '../../../core/model/datatypes';\nimport { numFrames, numTreadles } from '../../../core/model/looms';\nimport { DesignmodesService } from '../../../core/provider/designmodes.service';\nimport { RenderService } from '../../provider/render.service';\nimport { defaults } from '../../../core/model/defaults';\n\n@Component({\n  selector: 'app-selection',\n  templateUrl: './selection.component.html',\n  styleUrls: ['./selection.component.scss']\n})\nexport class SelectionComponent implements OnInit {\n\n  @Input('id') id: number;\n  @Output() onFill: any = new EventEmitter();\n  @Output() onCopy: any = new EventEmitter();\n  @Output() onClear: any = new EventEmitter();\n  @Output() onPaste: any = new EventEmitter();\n  @Output() onSelectionEnd: any = new EventEmitter();\n\n  private start: Interlacement;\n  private end: Interlacement;\n  public width: number;\n  public height: number;\n  private target: any;\n\n  public design_actions: Array<any>;\n\n  screen_width: number;\n  screen_height: number;\n\n  top:number;\n  left: number;\n\n  force_height:boolean;\n  force_width:boolean;\n  \n  hide_parent:boolean;\n  hide_options: boolean;\n  hide_actions: boolean;\n  hide_selection: boolean = false;\n\n  /**\n   * reference to the SVG element edrawing the boundary\n   */\n  selectionEl: HTMLElement;\n  \n  /**\n   * reference to the parent div\n   */\n  parent: HTMLElement;\n\n\n\n  constructor(\n    private dm: DesignmodesService,\n    private tree: TreeService,\n    public render: RenderService\n    ) { \n\n      this.design_actions = dm.getOptionSet('design_actions');\n\n    this.hide_options = true;\n    this.hide_parent = true;\n    this.hide_actions = false;\n    this.force_height = false;\n    this.force_width = false;\n\n    this.start = {i: 0, si:0, j: 0};\n    this.end = {i: 0, si:0, j: 0};\n    this.top = 0;\n    this.left = 0;\n\n    this.screen_height = 0;\n    this.screen_width = 0;\n   \n\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit(){\n    this.selectionEl = document.getElementById('selection');\n    this.parent = document.getElementById('selection-container');\n  }\n\n\n  designActionChange(action : string){\n\n\n    switch(action){\n      case 'up': this.clearEvent(true);\n      break;\n\n      case 'down': this.clearEvent(false);\n      break;\n\n      case 'copy': this.copyEvent();\n      break;\n\n      case 'paste': this.pasteEvent('original');\n      break;\n\n      case 'toggle': this.pasteEvent('invert');\n      break;\n\n      case 'flip_x': this.pasteEvent('mirrorX');\n      break;\n\n      case 'flip_y': this.pasteEvent('mirrorY');\n      break;\n\n      case 'shift_left': this.pasteEvent('shiftLeft');\n      break;\n\n      case 'shift_up': this.pasteEvent('shiftUp');\n      break;\n\n    }\n\n    \n\n\n\n  }\n\n  fillEvent(id) {\n    var obj: any = {};\n    obj.id = id;\n    this.onFill.emit(obj);\n  }\n\n  copyEvent() {\n    this.onCopy.emit();\n  }\n\n  clearEvent(b:boolean) {\n    this.onClear.emit(b);\n  }\n\n  pasteEvent(type) {\n    var obj: any = {};\n    obj.type = type;\n    this.onPaste.emit(obj);\n  }\n\n  /**\n   * set parameters and view when starting a new selections\n   * @param target he HTML target that receieved the mouse down event\n   * @param start the interlacement upon that target that received the mouse click\n   * @returns \n   */\n  onSelectStart(target: HTMLElement, start: Interlacement){\n\n    const loom = this.tree.getLoom(this.id);\n    const loom_settings = this.tree.getLoomSettings(this.id);\n\n    //clear existing params\n    this.unsetParameters();\n\n    if(!target) return;\n    \n    this.target = target;\n    this.start = start;\n    this.hide_parent = false;\n\n    switch(target.id){\n      \n      case 'treadling':    \n        this.start.j = 0;\n        this.width =  Math.max(numTreadles(loom), loom_settings.treadles);\n        this.force_width = true;\n      break;\n\n      case 'threading':\n        this.start.i = 0;\n        this.start.si = 0;\n        this.height = Math.max(numFrames(loom), loom_settings.frames);\n        this.force_height = true;\n      break;\n\n      case 'weft-systems':\n      case 'weft-materials':\n        this.force_width = true;\n        this.width = 1;\n      break;\n\n      case 'warp-systems':\n      case 'warp-materials':\n        this.force_height = true;\n        this.height = 1;\n      break;\n\n      case 'drawdown':\n      case 'tieups':\n      \n      break;\n\n    }\n\n    this.end = start;\n    this.recalculateSize();\n\n    //set view flags\n    this.hide_options = true;\n    this.hide_parent = false;\n\n    this.redraw();\n\n\n\n  }\n\n  /**\n   * updates selectiono parameters when the user drags the selected area\n   * @param pos the mouse position\n   * @returns boolean to specify if the point was in range or not\n   */\n  onSelectDrag(pos: Interlacement): boolean{\n   \n    if(pos.si < 0){\n      pos.si = 0;\n      return false;\n    } \n\n\n    if(pos.si > this.render.visibleRows.length){\n      pos.si = this.render.visibleRows.length;\n      return false\n    } \n  \n\n    this.end = pos;\n\n\n    switch(this.target.id){\n      \n      case 'treadling':    \n        this.end.i = pos.i;\n        this.end.si = pos.si;\n      break;\n\n      case 'threading':\n        this.end.j = pos.j;\n      break;\n\n      case 'weft-systems':\n      case 'weft-materials':\n      case 'warp-systems':\n      case 'warp-materials':\n      case 'drawdown':\n      case 'tieups':\n      \n      break;\n    }\n\n    this.recalculateSize()    \n    this.redraw();\n  }\n\n  /**\n   * triggers view changes when the selection event ends OR mouse leaves valid view\n   */\n  onSelectStop(){\n\n    if(this.target === undefined) return;\n\n    switch(this.target.id){\n      case \"threading\":\n      case \"treadling\":\n      case \"tieups\":\n      case \"warp-materials\":\n      case \"warp-systems\":\n      case \"weft-materials\":\n      case \"weft-systems\":\n        this.hide_actions = true;\n\n        break;\n\n        default:\n          this.hide_actions = false;\n          break;\n    }\n\n\n\n    this.hide_options = false;\n    this.onSelectionEnd.emit();\n\n  }\n\n  onSelectCancel(){\n    this.hide_options = true;\n    this.hide_parent = true;\n    this.unsetParameters();\n  }\n\n  getStartingRowScreenIndex(): number{\n    return  Math.min(this.start.si, this.end.si);    \n  }\n\n  getStartingRowIndex(): number{\n    return  Math.min(this.start.i, this.end.i);    \n  }\n\n  getStartingColIndex(): number{\n    return  Math.min(this.start.j, this.end.j);    \n  }\n\n  getEndingColIndex(): number{\n    return  Math.max(this.start.j, this.end.j);    \n  }\n\n  getEndingRowScreenIndex(): number{\n    return  Math.max(this.start.si, this.end.si);    \n  }\n\n  // getEndingIndex(): number{\n  //   return Math.min(this.start.j, this.end.j);\n  // }\n\n  getWidth():number{\n    return this.width;\n  }\n\n  getHeight():number{\n    return this.height;\n  }\n\n\n\n  setEnd(end: Interlacement){\n    this.end = end;\n    this.recalculateSize();\n  }\n\n  setStart(start: Interlacement){\n    this.hide_parent = false;\n    this.hide_options = true;\n    this.start = start;\n    this.recalculateSize();\n\n    this.top = this.start.i * this.render.getCellDims('base').h;\n    this.left = this.start.j * this.render.getCellDims('base').w;\n  }\n\n  recalculateSize(){\n\n\n    if(!this.force_width) this.width = Math.abs(this.end.j - this.start.j);\n    if(!this.force_height) this.height = Math.abs(this.end.i - this.start.i);\n  \n    this.screen_width = this.width * this.render.getCellDims('base').w;\n    this.screen_height = this.height * this.render.getCellDims('base').h;\n    \n\n  \n  }\n\n\n\n  unsetParameters() {\n    this.width = -1;\n    this.height = -1;\n    this.force_width = false;\n    this.force_height = false;\n    this.hide_parent = true;\n    this.hide_options = true;\n  }\n\n  hasSelection(){\n    return (this.width > 0 && this.height > 0);\n  }\n\n  getTop(){\n    return Math.min(this.start.si, this.end.si);\n  }\n\n  getLeft(){\n    return Math.min(this.start.j, this.end.j);\n  }\n\n  setTarget(t){\n  \tthis.target = t;\n  }\n\n  getTarget(){\n  \treturn this.target;\n  }\n\n\n  getTargetId(){\n    if(this.target !== undefined) return this.target.id;\n    return undefined;\n  }\n\n\n  redraw(){\n\n    if(this.hasSelection() && this.target.id !== 'tieups'){\n\n      this.hide_parent = false;\n      let top_ndx = Math.min(this.start.si, this.end.si);\n      let left_ndx = Math.min(this.start.j, this.end.j);\n\n\n      let in_div_top:number = top_ndx * defaults.draft_detail_cell_size;\n      let in_div_left:number = left_ndx * defaults.draft_detail_cell_size;\n\n      let abs_top = this.target.offsetTop;\n      let abs_left = this.target.offsetLeft;\n\n      if(this.target.id == 'drawdown'){\n        abs_top+=defaults.draft_detail_cell_size;\n        abs_left+=defaults.draft_detail_cell_size;\n      } \n\n\n      this.parent.style.top = abs_top+in_div_top+\"px\";\n      this.parent.style.left = abs_left+in_div_left+\"px\";\n    }else{\n      this.hide_parent = true;\n    }\n\n    \n  }\n\n}\n","<div id=\"selection-container\" \n[style.display]=\"(hide_parent)? 'none' : 'flex'\"\n>\n\n\n<!-- <svg #mySelection class=\"selection\" id=\"selection\">\n    <text x=\"5\" y=\"5\" text-anchor=\"start\"></text>\n</svg> -->\n\n<div class=\"selection-row\">\n\n    <div \n    id=\"selection\" \n    class=\"selection\"\n    [style.width.px]='screen_width'\n    [style.height.px] = 'screen_height'\n    [style.display]=\"(hide_selection)? 'none' : 'block'\">\n    </div>\n\n\n    <div id=\"selection-actions\" class=\"selection-actions\" [style.display]=\"(hide_options)? 'none' : 'flex'\">\n        \n        \n        <ng-container *ngIf=\"!hide_actions\">\n        <button mat-icon-button\n        matTooltip=\"edit design in this region\"\n        [matMenuTriggerFor]=\"actions\"\n        ><i class=\"fas fa-magic\"></i></button>\n        </ng-container>\n\n        <!-- <mat-menu #actions=\"matMenu\">\n        <ng-container *ngFor=\"let action of design_actions\">\n        <button class=\"menu-button\" \n        mat-menu-item \n        (click)=\"designActionChange(action.value)\">\n        <span class=\"{{action.icon}}\"></span>\n        <span>{{action.viewValue}}</span>\n        </button>\n\n        </ng-container>\n         </mat-menu> -->\n\n\n\n        \n        <button mat-icon-button  matTooltip=\"copy this region\" (click)=\"copyEvent()\"><i class=\"fas fa-clipboard\"></i></button>\n        <button mat-icon-button  matTooltip=\"paste into this region\" (click)=\"pasteEvent('original')\"><i class=\"fas fa-paste\"></i></button>\n\n    </div>\n</div>\n\n<div class=\"selection-row\">\n    <span>{{width}} x {{height}} </span>\n\n</div>\n\n</div>","import { Injectable } from '@angular/core';\nimport {defaults} from '../../core/model/defaults'\nimport { Draft } from '../../core/model/datatypes';\nimport { wefts } from '../../core/model/drafts';\nimport { SystemsService } from '../../core/provider/systems.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RenderService {\n// view_frames: boolean;\n\ncurrent_view: string;\n  \nview_front: boolean;\n\nvisibleRows: Array<number>; \n\nzoom: number;\n\nselect:{\n  offset_x: {max: number, min: number},\n  offset_y: {max: number, min: number};\n}\n  constructor(\n    private ss: SystemsService\n    ) { \n //max values\n   this.zoom = defaults.draft_detail_zoom; //zoom can range from .1 to 2\n // this.view_frames = view_frames;\n  this.current_view = 'pattern';\n  this.view_front = true;\n\n\n\n  //renders at min -  expands to max\n//   this.base_cell = {\n//   w: {max: 10, min: 0},\n//   h: {max: 10, min: 0},\n//   margin_fill_x: {max: 1, min: 0},\n//   margin_fill_y: {max: 1, min: 0},\n//   margin_clear_x: {max: 2, min: 0},\n//   margin_clear_y: {max: 2, min: 0},\n// };\n\n//  this.select = {\n//   offset_x: {max: 7, min: 0},\n//   offset_y: {max: 7, min: 0}\n//  }\n  }\n\n\n\n  loadNewDraft(draft: Draft){\n\n    this.visibleRows = [];\n    for(let i = 0; i < wefts(draft.drawdown); i++){\n      this.visibleRows[i] =i;\n    }\n\n\n\n\n  }\n\n  getTextInterval(){\n    if(this.zoom > 1.75) return 1;\n    if(this.zoom > 1.5) return 2;\n    if(this.zoom > 1.25) return 4;\n    if(this.zoom > 1) return 5;\n    if(this.zoom > .75) return 8; \n    if(this.zoom > .5) return 10;\n    if(this.zoom > .25) return 12;\n    return 15;\n  }\n\n  /**\n   * given the ndx, get the next visible row or -1 if there isn't a next\n   * @param ndx \n   */\n  getNextVisibleRow(ndx: number) : number {\n\n    const next: number = ndx ++;\n    if(next >= this.visibleRows.length) return -1;\n\n    return this.visibleRows[next];\n\n  }\n\n  /**SET DEFAULT CELL SIZE */\n  getCellDims(type: string){\n\n    return {\n      x: 0,\n      y: 0,\n      w: defaults.draft_detail_cell_size,\n      h: defaults.draft_detail_cell_size\n    };\n\n    // return {\n    //   x: this.getOffset(type+\"_x\"),\n    //   y: this.getOffset(type+\"_y\"),\n    //   w: this.base_cell.w.min,\n    //   h: this.base_cell.h.min\n    // };\n\n  }\n\n\n  setZoom(z: number){\n    this.zoom = z;\n  }\n\n  getZoom(){\n    return this.zoom;\n  }\n\n   zoomOut(){\n    this.zoom -= .25; \n    if(this.zoom < .1) this.zoom = .1;\n  }\n\n  zoomIn(){\n    this.zoom += .25; \n    if(this.zoom > 2) this.zoom = 2;\n\n  }\n\n  // private getOffset(type) {\n  //   if(type ===\"select_x\") return this.select.offset_x.min;\n  //   if(type ===\"select_y\") return this.select.offset_y.min;\n  //   if(type ===\"base_clear_x\") return this.base_cell.margin_clear_x.min;\n  //   if(type ===\"base_clear_y\") return this.base_cell.margin_clear_y.min;\n  //   if(type ===\"base_fill_x\") return this.base_cell.margin_fill_x.min;\n  //   if(type ===\"base_fill_y\") return this.base_cell.margin_fill_y.min;\n  //   else return 0;\n  // }\n\n\n  isYarnBasedView(): boolean{\n    return (this.current_view == 'visual' || this.current_view == 'yarn');\n  }\n\n  getCurrentView(): string{\n    return this.current_view;\n  }\n\n  setCurrentView(view:string){\n    this.current_view = view;\n  }\n\n  isFront(){\n    return this.view_front;\n  }\n\n  setFront(value:boolean){\n    return this.view_front = value;\n  }\n\n  updateVisible(draft: Draft) {\n\n    this.visibleRows = \n      draft.rowSystemMapping.map((val, ndx) => {\n        return (this.ss.weftSystemIsVisible(val)) ? ndx : -1;  \n      })\n      .filter(el => el !== -1);\n\n  }\n\n\n\n\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { BlankdraftModal } from '../../core/modal/blankdraft/blankdraft.modal';\nimport { Draft, LoomSettings } from '../../core/model/datatypes';\nimport { DesignmodesService } from '../../core/provider/designmodes.service';\nimport { MaterialsService } from '../../core/provider/materials.service';\nimport { TreeService } from '../../core/provider/tree.service';\nimport { InkService } from '../../mixer/provider/ink.service';\nimport { ActionsComponent } from '../actions/actions.component';\nimport { RenderService } from '../provider/render.service';\nimport { WeaverViewComponent } from '../weaverview/weaverview.component';\n\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\n\n\nexport class SidebarComponent implements OnInit {\n\n\n  @Input() timeline;\n  @Input() id;\n\n  @Output() onUndo: any = new EventEmitter();\n  @Output() onRedo: any = new EventEmitter();\n  @Output() onDesignModeChange: any = new EventEmitter();\n  @Output() onZoomChange: any = new EventEmitter();\n  @Output() onViewChange: any = new EventEmitter();\n  @Output() onViewFront: any = new EventEmitter();\n  @Output() onShowWarpSystem: any = new EventEmitter();\n  @Output() onHideWarpSystem: any = new EventEmitter();\n  @Output() onShowWeftSystem: any = new EventEmitter();\n  @Output() onHideWeftSystem: any = new EventEmitter();\n  @Output() onLocalLoomNeedsRedraw: any = new EventEmitter();\n  @Output() onGlobalLoomChange: any = new EventEmitter();\n  @Output() onOperationAdded: any = new EventEmitter();\n  @Output() onImport: any = new EventEmitter();\n  @Output() onViewPortMove: any = new EventEmitter();\n  @Output() onUpdateWarpSystems: any = new EventEmitter();\n  @Output() onUpdateWeftSystems: any = new EventEmitter();\n  @Output() onUpdateWarpShuttles: any = new EventEmitter();\n  @Output() onUpdateWeftShuttles: any = new EventEmitter();\n  @Output() onMaterialChange: any = new EventEmitter();\n  @Output() onNoteCreate: any = new EventEmitter();\n  @Output() onMLChange: any = new EventEmitter();\n  @Output() onNewDraftCreated: any = new EventEmitter();\n  @Output() closeDrawer: any = new EventEmitter();\n\n  \n  draft:Draft;\n  loom_settings:LoomSettings;\n\n  //design mode options\n  mode_draw: any;\n\n  view: string = 'pattern';\n  front: boolean = true;\n\n  weaver_view_modal: MatDialogRef<WeaverViewComponent, any>;\n  actions_modal: MatDialogRef<ActionsComponent, any>;\n\n\n  constructor(\n    public dm: DesignmodesService, \n    private is:InkService,\n    private tree: TreeService,\n    public ms: MaterialsService, \n    private dialog: MatDialog,\n    public render : RenderService) { \n    this.view = this.dm.getSelectedDesignMode('view_modes').value;\n\n  }\n\n  ngOnInit() {\n\n    this.draft = this.tree.getDraft(this.id);\n    this.loom_settings = this.tree.getLoomSettings(this.id);\n    this.front = this.render.view_front;\n\n  }\n\n  select(){\n    var obj: any = {};\n     obj.name = \"select\";\n     obj.target = \"design_modes\";\n     this.dm.selectDesignMode(obj.name, obj.target);\n     this.onDesignModeChange.emit(obj);\n  }\n\n  createNewDraft(){\n\n    const dialogRef = this.dialog.open(BlankdraftModal, {\n    });\n\n    dialogRef.afterClosed().subscribe(obj => {\n      // if(loadResponse !== undefined) this.onLoadNewFile.emit(loadResponse);\n      if(obj !== undefined && obj !== null) this.onNewDraftCreated.emit(obj);\n   });\n  }\n\n  closeDetailView(){\n    this.closeDrawer.emit();\n  }\n\n\n  closeWeaverModals(){\n    if(this.actions_modal != undefined && this.actions_modal.componentInstance != null) this.actions_modal.close();\n    if(this.weaver_view_modal != undefined && this.weaver_view_modal.componentInstance != null) this.weaver_view_modal.close();\n  }\n\n  shapeChange(name:string){\n    var obj: any = {};\n    obj.name = name;\n    obj.target = \"shapes\";\n    console.log('setting shape', name)\n    this.dm.selectDesignMode(obj.name, obj.target);\n    this.onDesignModeChange.emit(obj);\n  }\n\n  drawModeChange(name: string) {\n     var obj: any = {};\n     obj.name = name;\n     obj.target = \"draw_modes\";\n     this.dm.selectDesignMode(obj.name, obj.target);\n     this.onDesignModeChange.emit(obj);\n  }\n\n  drawWithMaterial(material_id: number){\n    console.log(\"draw with material\", material_id)\n    var obj: any = {};\n    obj.name = 'material';\n    obj.target = 'draw_modes';\n    obj.id = material_id;\n\n    this.dm.selectDesignMode(obj.name, obj.target);\n    const mode = this.dm.getDesignMode(obj.name, obj.target);\n    mode.children = [];\n    mode.children.push({value: obj.id, viewValue:\"\", icon:\"\", children:[], selected:false});\n    console.log(\"children\", mode.children);\n    this.onDesignModeChange.emit(obj);\n  }\n\n  zoomChange(e:any, source: string){\n    e.source = source;\n    this.onZoomChange.emit(e);\n  }\n\n\n  zoomIn(){\n    this.onZoomChange.emit({source: 'in', val: -1});\n  }\n\n\n  zoomOut(){\n    this.onZoomChange.emit({source: 'out', val: -1});\n  }\n\n  viewFront(e:any, value:any, source: string){\n    e.source = source;\n    e.value = !value;\n    this.onViewFront.emit(e);\n  }\n\n  viewChange(e:any){\n    if(e.checked){\n      this.onViewChange.emit('visual');\n      this.dm.selectDesignMode('visual', 'view_modes');\n    } else{\n      this.onViewChange.emit('pattern');\n      this.dm.selectDesignMode('pattern', 'view_modes');\n    }     \n\n  }\n\n    \n visibleButton(id, visible, type) {\n  console.log(\"called\", id, visible, type);\n  if(type == \"weft\"){\n    if (visible) {\n      this.onShowWeftSystem.emit({systemId: id});\n    } else {\n      this.onHideWeftSystem.emit({systemId: id});\n    }\n  }else{\n    if (visible) {\n      this.onShowWarpSystem.emit({systemId: id});\n    } else {\n      this.onHideWarpSystem.emit({systemId: id});\n    }\n  }\n\n}\n\n\n\n\n\n\n\n\n\n\n\nopenWeaverView(){\n  if(this.weaver_view_modal != undefined && this.weaver_view_modal.componentInstance != null) return;\n\n  this.weaver_view_modal  =  this.dialog.open(WeaverViewComponent,\n    {disableClose: true,\n      maxWidth:350, \n      hasBackdrop: false,\n      data: {\n        render: this.render,\n        draft: this.draft}});\n\n     \n       this.weaver_view_modal.componentInstance.onZoomChange.subscribe(event => { this.onZoomChange.emit(event)});\n       this.weaver_view_modal.componentInstance.onViewChange.subscribe(event => { this.onViewChange.emit(event)});\n       this.weaver_view_modal.componentInstance.onViewFront.subscribe(event => { this.onViewFront.emit(event)});\n       this.weaver_view_modal.componentInstance.onShowWarpSystem.subscribe(event => { this.onShowWarpSystem.emit(event)});\n       this.weaver_view_modal.componentInstance.onHideWarpSystem.subscribe(event => { this.onHideWarpSystem.emit(event)});\n       this.weaver_view_modal.componentInstance.onShowWeftSystem.subscribe(event => { this.onShowWeftSystem.emit(event)});\n       this.weaver_view_modal.componentInstance.onHideWeftSystem.subscribe(event => { this.onHideWeftSystem.emit(event)});\n\n  \n      this.weaver_view_modal.afterClosed().subscribe(result => {\n        //this.onLoomChange.emit();\n       // dialogRef.componentInstance.onChange.removeSubscription();\n    });\n}\n\n\nopenActions(){\n if(this.actions_modal != undefined && this.actions_modal.componentInstance != null) return;\n\n  this.actions_modal  =  this.dialog.open(ActionsComponent,\n    {disableClose: true,\n      maxWidth:350, \n      hasBackdrop: false,\n      data: {id: this.id}});\n\n\n       this.actions_modal.componentInstance.onUpdateWarpShuttles.subscribe(event => { this.onUpdateWarpShuttles.emit(event)});\n       this.actions_modal.componentInstance.onUpdateWarpSystems.subscribe(event => { this.onUpdateWarpSystems.emit(event)});\n       this.actions_modal.componentInstance.onUpdateWeftShuttles.subscribe(event => { this.onUpdateWeftShuttles.emit(event)});\n       this.actions_modal.componentInstance.onUpdateWeftSystems.subscribe(event => { this.onUpdateWeftSystems.emit(event)});\n\n  \n    //   this.view_modal.afterClosed().subscribe(result => {\n    //     //this.onLoomChange.emit();\n    //    // dialogRef.componentInstance.onChange.removeSubscription();\n    // });\n}\n\n  \n\n\n  undoClicked(e:any) {\n    this.onUndo.emit();\n  }\n\n  redoClicked(e:any) {\n    this.onRedo.emit();\n  }\n\n  inkChanged(value:string){\n    console.log(\"changing to\", value);\n    this.is.select(value);\n    //this.onInkChange.emit(e.target.name);\n  }\n\n\n  designModeChange(name: string) {\n    console.log(\"design mode change\", name);\n    this.dm.selectDesignMode(name, 'design_modes');\n    this.onDesignModeChange.emit(name);\n  }\n\n\n  addNote(){\n    this.onNoteCreate.emit();\n  }\n\n}\n","\n<div class=\"sidebar\">\n    <!--on both weaver and mixer-->\n\n    <div class=\"tool-chunk\" >\n\n        <button \n        mat-icon-button\n        color=\"primary\" \n        (click)=\"closeDetailView()\">\n        <i class=\"fa fa-angle-double-right\"></i> \n        </button>\n\n\n    </div>\n\n\n<!-- WEAVER EDITING TOOLS -->\n    <div class=\"tool-chunk\">\n\n\n        <button \n        mat-icon-button\n        color=\"primary\"\n        matTooltip= \"Edit Draft Cells\"\n        [matMenuTriggerFor]=\"inks\"\n        [class.is-active]=\"dm.isSelected('draw','design_modes')\"        >\n        <i class=\"fas fa-edit\"></i>\n        </button>\n\n        <mat-menu #inks=\"matMenu\">\n            <ng-container *ngFor=\"let mode of dm.draw_modes\">\n                <button *ngIf=\"mode.value !== 'material'\"\n            class=\"menu-button\" \n            mat-menu-item \n            [class.is-active]=\"dm.isSelected(mode.value,'draw_modes')\"\n            [name] = \"mode.value\"\n            [disabled]= \"viewonly\"\n            (click)=\"drawModeChange(mode.value)\">\n                <span class=\"{{mode.icon}}\"></span>\n                <span class=\"menu-item\">{{mode.viewValue}}</span>\n            </button>\n            </ng-container>\n\n\n        </mat-menu>\n\n        <button \n        mat-icon-button\n        color=\"primary\"\n        matTooltip= \"Set Colors\"\n        [matMenuTriggerFor]=\"colors\"\n        [class.is-active]=\"dm.isSelected('draw','design_modes')\"        >\n        <i class=\"fa-solid fa-paintbrush\"></i>\n        </button>\n\n        <mat-menu #colors=\"matMenu\">\n\n            <ng-container *ngFor=\"let shuttle of ms.materials\">\n                <button class=\"menu-button\" \n                mat-menu-item \n                (click)=\"drawWithMaterial(shuttle.id)\">\n                    <span class=\"swatch\"  [style.background]=\"shuttle.color\" ></span>\n                    <span>{{shuttle.name }}</span>\n                </button>\n                </ng-container>\n\n\n        </mat-menu>\n\n        <button \n        mat-icon-button\n        color=\"primary\"\n        matTooltip= \"Select Region\"\n        [class.is-active]=\"dm.isSelected('select','design_modes')\"\n        (click)=\"select()\">\n        <i class=\"fas fa-expand\"></i>\n        </button>\n\n        <button\n        matTooltip= \"Set Repeats\"\n        color=\"primary\"\n        mat-icon-button \n        [class.is-active] = \"actions_modal && actions_modal.componentInstance != null\"\n        (click)='openActions()'><i class=\"fas fa-magic\"></i></button>\n\n        <!-- <button\n            mat-icon-button\n            matTooltip=\"Design with ML\"\n            (click)=\"engageMLMode()\">\n            <i class=\"fas fa-robot\"></i>\n        </button>\n\n        -->\n\n\n        <!-- <button \n        mat-icon-button\n        matTooltip= \"Edit Draft Materials\"\n        [matMenuTriggerFor]=\"set_materials\"\n        [class.is-active]=\"selected_mode === 'material'\"\n        >\n        <i class=\"fas fa-palette\"></i>\n        </button>\n\n        <mat-menu #set_materials=\"matMenu\">\n        <ng-container *ngFor=\"let shuttle of draft.shuttles\">\n        <button class=\"menu-button\" \n        mat-menu-item \n        (click)=\"drawWithMaterial(shuttle.id)\">\n            <span class=\"swatch\"  [style.background]=\"shuttle.color\" ></span>\n            <span>{{shuttle.name }}</span>\n        </button>\n        </ng-container>\n\n        <button class=\"menu-button\" \n        mat-menu-item \n        (click)=\"openMaterialEditor()\">\n        <span class=\"fa fa-plus\"></span>\n        <span>Add / Edit Materials</span>\n        </button>\n        </mat-menu> -->\n\n    </div>\n    \n\n<!-- VIEW TOOLS -->\n\n    <div class=\"tool-chunk slider\" >\n\n        <button color=\"primary\" mat-icon-button (click)=\"zoomIn()\"><i class=\"fas fa-search-plus\"></i></button>\n        \n        <div class=\"view_slider\">\n        <mat-slider \n        tickInterval=\".1\" \n        color=\"primary\"\n        [vertical]=\"true\"\n        step=\".1\"\n        min=\"0\" \n        max=\"2\" \n        value=\"{{render.zoom}}\" \n        (change)=\"zoomChange($event, 'slider')\"></mat-slider>\n    </div> \n\n       <button mat-icon-button color=\"primary\"  (click)=\"zoomOut()\"><i class=\"fas fa-search-minus\"></i></button> \n       \n\n\n    </div>\n\n\n   \n<!-- EQUIPMENT SETTINGS -->\n\n\n \n \n   \n    <!-- <div  class=\"designtools\" *ngIf=\"source==='mixer'\">\n\n        <div class=\"undoredo\">\n        <button #undoEvent \n        mat-stroked-button \n        color=\"primary\"\n        (click)=\"undoClicked($event);\"\n        [disabled]=\"ss.undo_disabled || viewonly\"\n        matTooltip =\"undo\">\n        <i class=\"fas fa-undo\"></i> Undo\n        </button>\n\n        <button #redoEvent \n        mat-stroked-button \n        color=\"primary\"\n        (click)=\"redoClicked($event);\"\n        [disabled]=\"ss.redo_disabled  || viewonly\"\n        matTooltip =\"redo\">\n        <i class=\"fas fa-redo\"></i>Redo\n        </button>\n        </div>\n\n\n    \n        <button \n        mat-stroked-button \n        color=\"primary\"\n        matTooltip= \"Blank Draft\"\n        (click)=\"createNewDraft()\">\n        <i class=\"fas fa-chess-board\"></i> Add Blank Draft to Workspace\n        </button>\n    \n\n  \n        <button \n        mat-stroked-button \n        color=\"primary\"\n        matTooltip= \"Note\"\n        color=\"primary\"\n        (click)=\"addNote()\">\n        <i class=\"fas fa-comment\"></i> Add Comment to Workspace\n        </button>\n\n\n\n        <app-quickop\n            (onOperationAdded)=\"addOperation($event)\"\n        >\n        </app-quickop>\n\n        <button \n        mat-button\n        [class.is-active] = \"op_modal && op_modal.componentInstance != null\"\n        matTooltip= \"Operation\"\n        (click)=\"openOps()\">\n        <i class=\"fas fa-project-diagram\"></i> View All Operations\n        </button>\n    </div> -->\n\n\n</div>","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { TreeService } from '../../core/provider/tree.service';\nimport { SimulationService } from '../../core/provider/simulation.service';\nimport { Draft, Interlacement, LoomSettings, SimulationData } from '../../core/model/datatypes';\nimport * as THREE from 'three';\nimport { convertEPItoMM } from '../../core/model/looms';\nimport { MaterialsService } from '../../core/provider/materials.service';\nimport { createCell, getCellValue } from '../../core/model/cell';\nimport { initDraftFromDrawdown } from '../../core/model/drafts';\n\n@Component({\n  selector: 'app-simulation',\n  templateUrl: './simulation.component.html',\n  styleUrls: ['./simulation.component.scss']\n})\nexport class SimulationComponent implements OnInit {\n\n\n  \n  @Input('id') id;\n  @Output() onExpanded = new EventEmitter();\n\n  renderer;\n  scene;\n  camera;\n  draft: Draft;\n  loom_settings: LoomSettings;\n  sim_expanded: boolean = false;\n  layer_spacing: number = 10;\n  layer_threshold: number = 1;\n  warp_threshold: number = 2;\n  max_interlacement_width: number = 10;\n  max_interlacement_height: number = 10;\n  showing_warp_layer_map: boolean = false;\n  showing_weft_layer_map: boolean = false;\n  showing_warps: boolean = true;\n  showing_wefts: boolean = true;\n  showing_topo: boolean = false;\n  showing_draft: boolean = false;\n  boundary: number = 10;\n  radius: number = 40;\n  current_simdata: SimulationData = null;\n\n\n  constructor(private tree: TreeService, public ms: MaterialsService,  public simulation: SimulationService) {\n\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    \n    this.onWindowResize();\n  }\n\n  ngOnInit(): void {\n\n    \n  }\n\n  ngAfterViewInit(){\n    const div = document.getElementById('simulation_container');\n    this.renderer = new THREE.WebGLRenderer();\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera( 75, 1, 0.1, 1000 );\n    this.renderer.setSize(div.offsetWidth, div.offsetHeight);\n    div.appendChild(this.renderer.domElement);\n  }\n\n  calcDefaultLayerSpacing(draft: Draft){\n\n    let max_weft = draft.rowShuttleMapping.reduce((acc, val) => {\n      let diam = this.ms.getDiameter(val);\n      if(diam > acc) return diam;\n      return acc;\n    }, 0);\n\n    let max_warp = draft.colShuttleMapping.reduce((acc, val) => {\n      let diam = this.ms.getDiameter(val);\n      if(diam > acc) return diam;\n      return acc;\n    }, 0);\n\n    return (max_weft/2 + max_warp/2) * 10;\n\n  }\n\n\n  endSimulation(){\n    this.simulation.endSimulation(this.scene);\n  }\n\n  drawSimulation(draft: Draft, loom_settings: LoomSettings){\n    this.layer_spacing = this.calcDefaultLayerSpacing(draft);\n\n    this.draft = draft;\n    this.loom_settings = loom_settings;\n    this.layer_spacing = this.calcDefaultLayerSpacing(draft);\n  \n    this.simulation.setupSimulation(\n      draft, \n      this.renderer, \n      this.scene, \n      this.camera, \n      this.layer_threshold, \n      this.warp_threshold, convertEPItoMM(loom_settings), \n      this.layer_spacing, \n      this.max_interlacement_width,\n      this.max_interlacement_height, \n      this.boundary,\n      this.radius,\n      this.ms)\n      .then(simdata => {\n        this.current_simdata = simdata;\n      this.simulation.renderSimdata(\n        this.scene, \n        simdata, \n        this.showing_warps, \n        this.showing_wefts, \n        this.showing_warp_layer_map, \n        this.showing_weft_layer_map, \n        this.showing_topo, \n        this.showing_draft);\n\n    })\n\n\n  }\n\n  /**\n   * this passes new information to a current rendering, updating which portion of the data we are visualizing. \n   * @param draft \n   * @param loom_settings \n   * @param start \n   * @param end \n   */\n  updateSelection(start: Interlacement, end: Interlacement){\n\n    let width = end.j - start.j;\n    if(width <= 0) return;\n\n    let height = end.i - start.i;\n    if(height <= 0) return;\n\n    this.current_simdata.bounds = {\n      topleft: {x: start.j, y: start.i},\n      width, height\n    }\n\n    this.simulation.renderSimdata(this.scene, this.current_simdata, this.showing_warps, this.showing_wefts, this.showing_warp_layer_map, this.showing_weft_layer_map, this.showing_topo, this.showing_draft);\n\n  }\n\n  /**\n   * call this when the simulation needs to be updated due to a structural change. \n   * This will recalculate all the simulation data and then redraw it to screen. \n   * @param draft \n   * @param loom_settings \n   */\n  updateSimulation(draft: Draft, loom_settings){\n    this.draft = draft;\n    this.loom_settings = loom_settings;\n    this.simulation.recalcSimData(\n      this.scene, \n      draft, \n      convertEPItoMM(this.loom_settings), \n      this.layer_spacing, \n      this.layer_threshold, \n      this.max_interlacement_width, \n      this.max_interlacement_height,\n      this.boundary,\n      this.radius,\n      this.ms\n      ).then(simdata => {\n      this.simulation.renderSimdata(this.scene, simdata, this.showing_warps, this.showing_wefts, this.showing_warp_layer_map, this.showing_weft_layer_map, this.showing_topo, this.showing_draft);\n    });\n\n  }\n\n  changeLayerThreshold(){\n    this.simulation.recalcSimData(\n      this.scene, \n      this.draft, \n      convertEPItoMM(this.loom_settings), \n      this.layer_spacing, \n      this.layer_threshold, \n      this.max_interlacement_width, \n      this.max_interlacement_height,\n      this.boundary,\n      this.radius,\n      this.ms\n      ).then(simdata => {\n      this.simulation.renderSimdata(this.scene, simdata, this.showing_warps, this.showing_wefts, this.showing_warp_layer_map, this.showing_weft_layer_map, this.showing_topo, this.showing_draft);\n    });\n  }\n\n\n  toggleWefts(){\n    if(!this.showing_wefts) this.simulation.showWefts();\n    else this.simulation.hideWefts();\n  }\n\n  toggleDraft(){\n    if(!this.showing_draft) this.simulation.showDraft();\n    else this.simulation.hideDraft();\n  }\n\n  toggleWarps(){\n    if(!this.showing_warps) this.simulation.showWarps();\n    else this.simulation.hideWarps();\n  }\n\n\n  toggleTopo(){\n    if(!this.showing_topo) this.simulation.showTopo();\n    else this.simulation.hideTopo();\n  }\n\n  toggleWeftLayerView(){\n    if(!this.showing_weft_layer_map) this.simulation.showWeftLayerMap();\n    else this.simulation.hideWeftLayerMap();\n  }\n\n  toggleWarpLayerView(){\n    if(!this.showing_warp_layer_map) this.simulation.showWarpLayerMap();\n    else this.simulation.hideWarpLayerMap();\n  }\n\n\n  changeRadius(e: any){\n\n    this.simulation.recalcSimData(\n      this.scene, \n      this.draft, \n      convertEPItoMM(this.loom_settings), \n      this.layer_spacing, \n      this.layer_threshold, \n      this.max_interlacement_width, \n      this.max_interlacement_height,\n      this.boundary,\n      this.radius,\n      this.ms\n      ).then(simdata => {\n      this.simulation.renderSimdata(this.scene, simdata, this.showing_warps, this.showing_wefts, this.showing_warp_layer_map,this.showing_weft_layer_map,  this.showing_topo, this.showing_draft);\n    });\n  }\n\n  changeLayerSpacing(e: any){\n\n    this.simulation.recalcSimData(\n      this.scene, \n      this.draft, \n      convertEPItoMM(this.loom_settings), \n      this.layer_spacing, \n      this.layer_threshold, \n      this.max_interlacement_width, \n      this.max_interlacement_height,\n      this.boundary,\n      this.radius,\n      this.ms\n      ).then(simdata => {\n      this.simulation.renderSimdata(this.scene, simdata, this.showing_warps, this.showing_wefts, this.showing_warp_layer_map,this.showing_weft_layer_map,  this.showing_topo, this.showing_draft);\n    });\n  }\n\n  changeILaceWidth(){\n\n    this.simulation.recalcSimData(\n      this.scene, \n      this.draft, \n      convertEPItoMM(this.loom_settings), \n      this.layer_spacing, \n      this.layer_threshold, \n      this.max_interlacement_width, \n      this.max_interlacement_height,\n      this.boundary,\n      this.radius,\n      this.ms\n      ).then(simdata => {\n      this.simulation.renderSimdata(this.scene, simdata, this.showing_warps, this.showing_wefts, this.showing_warp_layer_map, this.showing_weft_layer_map,this.showing_topo, this.showing_draft);\n    });\n  }\n\n  changeILaceHeight(){\n\n    this.simulation.recalcSimData(\n      this.scene, \n      this.draft, \n      convertEPItoMM(this.loom_settings), \n      this.layer_spacing, \n      this.layer_threshold, \n      this.max_interlacement_width, \n      this.max_interlacement_height,\n      this.boundary,\n      this.radius, \n      this.ms\n      ).then(simdata => {\n      this.simulation.renderSimdata(this.scene, simdata, this.showing_warps, this.showing_wefts, this.showing_warp_layer_map, this.showing_weft_layer_map,this.showing_topo, this.showing_draft);\n    });\n  }\n\n\n  pageClose(){\n    this.simulation.endSimulation(this.scene);\n  }\n\n  expand(){\n    this.onExpanded.emit();\n    this.sim_expanded = !this.sim_expanded;\n\n\n    if(this.sim_expanded){\n      const ex_div = document.getElementById('expanded-container');\n      this.renderer.setSize( ex_div.offsetWidth, ex_div.offsetHeight );\n      this.camera.aspect = ex_div.offsetWidth /ex_div.offsetHeight ;\n    }else{\n      const small_div = document.getElementById('simulation_container');\n\n      this.renderer.setSize( small_div.offsetWidth, small_div.offsetHeight );\n      this.camera.aspect = small_div.offsetWidth /small_div.offsetHeight ;\n    }\n\n\n\n  \n    this.camera.updateProjectionMatrix();\n\n    this.renderer.render( this.scene, this.camera );\n  }\n\n  onWindowResize() {\n\n\n    if(this.sim_expanded){\n      const ex_div = document.getElementById('expanded-container');\n      this.renderer.setSize( ex_div.offsetWidth, ex_div.offsetHeight );\n      this.camera.aspect = ex_div.offsetWidth /ex_div.offsetHeight ;\n    }else{\n      const small_div = document.getElementById('simulation_container');\n\n      this.renderer.setSize( small_div.offsetWidth, small_div.offsetHeight );\n      this.camera.aspect = small_div.offsetWidth /small_div.offsetHeight ;\n    }\n\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.render( this.scene, this.camera );\n\n  }\n\n\n}\n","\n<div id=\"simulation_container\">\n\n\n  <div class=\"expand\">\n    <button mat-icon-button color=\"primary\" (click)=\"expand()\" aria-label=\"expand to view simuation full screen\">\n      <i *ngIf='!sim_expanded' class=\"fa-solid fa-maximize\"></i>\n      <i *ngIf='sim_expanded' class=\"fa-solid fa-minimize\"></i>\n        </button>\n  </div>\n\n  <div class=\"controls\" [style.display]=\"(sim_expanded) ? 'flex' : 'none'\">\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Space Between Layers</mat-label>\n        <input \n        matInput\n        [(ngModel)] = \"layer_spacing\"\n        type = \"number\"\n        [min]=0\n        [max]=100\n        step = 1\n        (change)= \"changeLayerSpacing($event)\">\n      </mat-form-field>\n      \n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Radius</mat-label>\n        <input \n        matInput\n        [(ngModel)] = \"radius\"\n        type = \"number\"\n        [min]=1\n        [max]=1000\n        step = 1\n        (change)= \"changeRadius($event)\">\n      </mat-form-field>\n\n      <!--this number tells the code how many interlacements with a certain layer need to be observed on a single weft  \n      for it to \"count\" as a real value. For small unit drafts, this number can be really low -->\n     <mat-form-field class=\"example-full-width\">\n        <mat-label>Layer Threshold</mat-label>\n        <input \n        matInput\n        [(ngModel)] = \"layer_threshold\"\n        type = \"number\"\n        [min]=1\n        [max]=\"100\"\n        step = 1\n        (change)= \"changeLayerThreshold()\">\n      </mat-form-field> \n\n      <!--this number considered how close two warps, of contrasting interlacement val, need to be together for them to actually be considered an interlacement -->\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Longest Weft Float</mat-label>\n        <input \n        matInput\n        [(ngModel)] = \"max_interlacement_width\"\n        type = \"number\"\n        [min]=1\n        [max]=\"100\"\n        step = 1\n        (change)= \"changeILaceWidth()\">\n      </mat-form-field>\n\n      <!-- <mat-form-field class=\"example-full-width\">\n        <mat-label>Max Interlacement Height</mat-label>\n        <input \n        matInput\n        [(ngModel)] = \"max_interlacement_height\"\n        type = \"number\"\n        [min]=1\n        [max]=\"100\"\n        step = 1\n        (change)= \"changeILaceHeight()\">\n      </mat-form-field> -->\n\n      <!-- <div class=\"toggle fullwidth\" > \n        <mat-slide-toggle\n        [(ngModel)]=\"showing_warp_layer_map\"\n        (click)=\"toggleWarpLayerView()\">\n        Show Warp Layer Map\n        </mat-slide-toggle>\n      </div> -->\n      <!-- <div class=\"toggle fullwidth\" > \n        <mat-slide-toggle\n        [(ngModel)]=\"showing_weft_layer_map\"\n        (click)=\"toggleWeftLayerView()\">\n        Show Weft Layer Map\n        </mat-slide-toggle>\n      </div> -->\n\n      <!-- <div class=\"toggle fullwidth\" > \n        <mat-slide-toggle\n        [(ngModel)]=\"showing_topo\"\n        (click)=\"toggleTopo()\"> Show Topography\n        </mat-slide-toggle>\n      </div> -->\n\n      <!-- <div class=\"toggle fullwidth\" > \n        <mat-slide-toggle\n        [(ngModel)]=\"showing_draft\"\n        (click)=\"toggleDraft()\"> Show Draft\n        </mat-slide-toggle>\n      </div> -->\n\n      <!-- <div class=\"toggle fullwidth\" > \n        <mat-slide-toggle\n        [(ngModel)]=\"showing_warps\"\n        (click)=\"toggleWarps()\">\n        Show Warps \n        </mat-slide-toggle>\n      </div> -->\n\n\n      <!-- <div class=\"toggle fullwidth\" > \n        <mat-slide-toggle\n        [(ngModel)]=\"showing_wefts\"\n        (click)=\"toggleWefts()\"> Show Wefts\n        </mat-slide-toggle> \n      </div>  -->\n  </div>\n    <!-- <mat-form-field class=\"example-full-width\">\n    \n     <mat-label>Warp Layer Threshold</mat-label>\n    <input \n    matInput\n    [(ngModel)] = \"warp_threshold\"\n    type = \"number\"\n    [min]=0\n    [max]=\"draft.drawdown[0].length\"\n    step = 1\n    (change)= \"warpThresholdChange()\">\n  </mat-form-field>  -->\n \n</div>\n\n<div class=\"cameracontrols\">\n  Press and move to rotate the simulation. Press+Control and move will pan the camera. Scroll in/out will zoom in/out\n</div>\n    \n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { System } from '../../core/model/datatypes';\nimport { DesignmodesService } from '../../core/provider/designmodes.service';\nimport { SystemsService } from '../../core/provider/systems.service';\nimport { RenderService } from '../provider/render.service';\n\n@Component({\n  selector: 'app-weaverview',\n  templateUrl: './weaverview.component.html',\n  styleUrls: ['./weaverview.component.scss']\n})\nexport class WeaverViewComponent implements OnInit {\n  \n  // zoom:number;\n  // @Input() view;\n  // @Input() front;\n  // @Input() view_modes;\n\n  front: boolean = true;\n\n  weft_systems: Array<System>;\n  warp_systems: Array<System>;\n  collective_systems: Array<{id: number, weft: System, warp: System}> = [];\n\n  @Output() onViewChange: any = new EventEmitter();\n  @Output() onViewFront: any = new EventEmitter();\n  @Output() onZoomChange: any = new EventEmitter();\n  @Output() onShowWarpSystem: any = new EventEmitter();\n  @Output() onHideWarpSystem: any = new EventEmitter();\n  @Output() onShowWeftSystem: any = new EventEmitter();\n  @Output() onHideWeftSystem: any = new EventEmitter();\n\n\n constructor(\n   public ss: SystemsService,\n   private dm: DesignmodesService, \n   private dialog: MatDialog,\n   public render: RenderService) { \n\n\n            // console.log(\"unique rows\", utilInstance.filterToUniqueValues(this.draft.rowSystemMapping))\n\n            // this.weft_systems = utilInstance.filterToUniqueValues(this.draft.rowSystemMapping).map(el => this.ss.getWeftSystem(el));\n            // this.warp_systems = utilInstance.filterToUniqueValues(this.draft.colSystemMapping).map(el => this.ss.getWarpSystem(el));;\n            \n            // this.weft_systems.forEach(system => {\n            //   this.collective_systems.push({id: system.id, weft: system, warp: null});\n            // })\n\n            // this.warp_systems.forEach(system => {\n            //   const ndx = this.collective_systems.findIndex(el => el.id === system.id);\n            //   if(ndx !== -1) this.collective_systems[ndx].warp = system;\n            //   else this.collective_systems.push({id: system.id, weft: null, warp: system});\n            // })\n\n\n\n  }\n \n  ngOnInit() {\n  }\n\n  close(){\n  }\n\n  viewChange(e:any){\n    console.log(e);\n    if(e.checked)  this.onViewChange.emit('simulate');\n    else     this.onViewChange.emit('pattern');\n\n  }\n\n  zoomChange(e:any, source: string){\n    e.source = source;\n    this.onZoomChange.emit(e);\n  }\n\n  toggleCrossingView(){\n    this.onViewChange.emit('crossing');\n  }\n\n  viewFront(e:any, value:any, source: string){\n    e.source = source;\n    e.value = !value;\n    this.onViewFront.emit(e);\n  }\n\n\n  /**\n   * assumes layers\n   * hows all weft systems placed upon a given layer\n   * @param id \n   */\n  showOnly(id){\n\n    //need to look down the warps on this system and look for alternating values\n    //if there is an alternating value, then that weft system is part of this. \n    //hilde the other warps\n    // this.collective_systems.forEach(data => {\n    //   if(data.id === id){\n    //     if(data.warp !== null){\n    //       data.warp.visible = true;\n    //       this.onShowWarpSystem.emit({systemId: data.id});\n    //     }  \n      \n    //   }else{\n    //     if(data.warp !== null){\n    //       this.onHideWarpSystem.emit({systemId: data.id});\n    //       data.warp.visible = false;\n    //     }  \n       \n    //   }\n    // });\n\n\n    //   //for each system\n    //   this.collective_systems.forEach(cs => {\n    //     const  system_id = cs.id;\n\n    //     const sys_draft:Array<Array<boolean>> = [];\n    //     this.draft.drawdown.forEach((row, i) => {\n    //       if(this.draft.rowSystemMapping[i] !== system_id) return;\n    //       sys_draft.push([]);\n    //       row.forEach((col, j) => {\n    //         if(this.draft.colSystemMapping[j] !== id) return;\n    //           sys_draft[sys_draft.length-1].push(this.draft.drawdown[i][j].getHeddle());\n    //       });\n    //     });\n\n\n    //     if(sys_draft.length == 0){\n    //       const sys = this.collective_systems.find(el => el.id == system_id);\n    //       if(sys.weft !== null){\n    //         sys.weft.visible = false;\n    //         this.onHideWeftSystem.emit({systemId: sys.id});\n    //       }\n    //     }else{\n    //       //now we have a draft that includes only the layer id and the system id disclosed\n    //       const first_val:boolean = sys_draft[0][0];\n    //       let found: boolean = false; \n    //       for(let i = 0; i < sys_draft.length && !found; i++){\n    //         const diff = sys_draft[i].find(el => el !== first_val);\n    //         if(diff !== undefined){\n    //           found = true;\n    //           const sys = this.collective_systems.find(el => el.id == system_id);\n    //           if(sys.weft !== null){\n    //           sys.weft.visible = true;\n    //           this.onShowWeftSystem.emit({systemId: sys.id});\n    //           }\n    //         }\n    //       }\n\n    //       if(!found){\n    //         const sys = this.collective_systems.find(el => el.id == system_id);\n    //         if(sys.weft !== null){\n    //         sys.weft.visible = false;\n    //         this.onHideWeftSystem.emit({systemId: system_id});\n    //         }\n    //       }\n\n    //     }\n        \n    //   });\n  \n\n  }\n  \n visibleButton(id, visible, type) {\n    if(type == \"weft\"){\n      if (visible) {\n        this.onShowWeftSystem.emit({systemId: id});\n      } else {\n        this.onHideWeftSystem.emit({systemId: id});\n      }\n    }else{\n      if (visible) {\n        this.onShowWarpSystem.emit({systemId: id});\n      } else {\n        this.onHideWarpSystem.emit({systemId: id});\n      }\n    }\n\n  }\n\n\n}\n","<div class=\"toprow\">\n  <button mat-icon-button (click)=\"close()\"><i class=\"fas fa-times\"></i></button>\n  \n  <p mat-dialog-title\n    cdkDrag\n     cdkDragRootElement=\".cdk-overlay-pane\" \n     cdkDragHandle>Draft View</p>\n</div>\n\n\n<mat-dialog-content>\n\n\n  \n  \n    <div class=\"view_slider\">\n      <button mat-icon-button><i class=\"fas fa-search-plus\"></i></button>\n      <mat-slider invert\n    tickInterval=\".1\" \n    step=\".1\"\n    min=\"0\" \n    max=\"2\" \n    value=\"{{render.zoom}}\" \n    (change)=\"zoomChange($event, 'slider')\"></mat-slider>\n    <button mat-icon-button><i class=\"fas fa-search-minus\"></i></button>\n  </div>  \n\n \n  \n   <div class=\"yarns-and-back\">\n      <div class=\"view_slider\">\n        View Yarns\n\n        <mat-slide-toggle\n            [checked]=\"render.current_view !== 'pattern'\"\n            (change)=\"viewChange($event)\">\n        </mat-slide-toggle>\n      </div>\n\n\n\n      <div class=\"view_slider\">\n        View Back\n        <mat-slide-toggle\n            [checked]=\"!render.view_front\"\n            (change)=\"front = !front; viewFront($event, front, 'front')\">\n        </mat-slide-toggle>\n      </div>\n    </div>\n      <!-- <div class=\"view_slider\">\n        View Crossings\n        <mat-slide-toggle\n            [checked]=\"dm.isSelected('crossings', 'view_modes')\"\n            (change)=\"toggleCrossingView()\">\n        </mat-slide-toggle>\n      </div> -->\n\n\n      <!-- <div class = \"system-matrix\">\n\n        <div class=\"system-row\">\n        <div class = \"system-activate\">\n          show weft systems present on layer:\n        </div>\n        <div class = \"warp-system\">\n          warp systems\n         </div>\n        <div class = \"weft-system\">\n          weft systems\n        </div>\n\n      </div>\n\n        <div *ngFor=\"let system_data of collective_systems;\" class = \"system-row\">\n\n\n          <div class = \"system-activate\">\n            <button *ngIf=\"system_data.warp !== null\" mat-stroked-button (click) = \"showOnly(system_data.id)\"> Layer {{system_data.id+1}}</button>\n          </div>\n\n          <div class = \"warp-system\">\n        \n            <mat-slide-toggle *ngIf=\"system_data.warp !== null\"\n            [matTooltip]=  system_data.warp.name\n            [checked]=\"system_data.warp.visible\"\n            (change)=\"system_data.warp.visible = !system_data.warp.visible; visibleButton(system_data.id, system_data.warp.visible, 'warp')\">\n          </mat-slide-toggle>\n          </div>\n\n          <div class = \"weft-system\">\n            <mat-slide-toggle *ngIf=\"system_data.weft !== null\"\n            [matTooltip]=  system_data.weft.name\n            [checked]=\"system_data.weft.visible\"\n            (change)=\"system_data.weft.visible = !system_data.weft.visible; visibleButton(system_data.id, system_data.weft.visible, 'weft')\">\n          </mat-slide-toggle>\n          </div>\n\n      \n\n        </div>\n\n\n      </div> -->\n\n\n    \n\n\n\n</mat-dialog-content>\n<!-- <mat-dialog-actions>\n  <button class=\"mat-raised-button\"(click)=\"close()\">Close</button>\n</mat-dialog-actions> -->\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { BlankdraftModal } from '../../core/modal/blankdraft/blankdraft.modal';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { InitModal } from '../../core/modal/init/init.modal';\nimport { OpsComponent } from '../modal/ops/ops.component';\nimport { StateService } from '../../core/provider/state.service';\nimport { OperationService } from '../../core/provider/operation.service';\nimport { OperationDescriptionsService } from '../../core/provider/operation-descriptions.service';\nimport { OperationClassification } from '../../core/model/datatypes';\nimport { LoadfileComponent } from '../../core/modal/loadfile/loadfile.component';\n\n@Component({\n  selector: 'app-design',\n  templateUrl: './design.component.html',\n  styleUrls: ['./design.component.scss']\n})\nexport class DesignComponent {\n  @Output() onUndo: any = new EventEmitter();\n  @Output() onRedo: any = new EventEmitter();\n  @Output() onNewDraftCreated: any = new EventEmitter();\n  @Output() onOperationAdded: any = new EventEmitter();\n  @Output() onImport: any = new EventEmitter();\n  @Output() onNoteCreate: any = new EventEmitter();\n  @Output() onLoadDrafts: any = new EventEmitter();\n\n  upload_modal: MatDialogRef<InitModal, any>;\n  op_modal: MatDialogRef<OpsComponent, any>;\n  classifications: Array<OperationClassification>;\n\n\n  constructor(\n    public ops: OperationService, \n    public op_desc: OperationDescriptionsService, \n    public ss: StateService, \n    private dialog: MatDialog){\n\n      const allops = this.ops.ops.concat(this.ops.dynamic_ops);\n      this.classifications = this.op_desc.getOpClassifications();\n\n  }\n\n\n  openBitmaps() {\n\n\n    const dialogRef = this.dialog.open(LoadfileComponent, {\n      data: {\n        multiple: true,\n        accepts: '.jpg,.bmp,.png',\n        type: 'bitmap_collection',\n        title: 'Select Bitmap Files to Convert to Drafts'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(drafts => {\n      if(drafts !== undefined){\n        this.onLoadDrafts.emit(drafts);\n\n      } \n      \n   });\n  }\n\n\n\n  createNewDraft(){\n\n    const dialogRef = this.dialog.open(BlankdraftModal, {\n    });\n\n    dialogRef.afterClosed().subscribe(obj => {\n      // if(loadResponse !== undefined) this.onLoadNewFile.emit(loadResponse);\n      if(obj !== undefined && obj !== null) this.onNewDraftCreated.emit(obj);\n   });\n  }\n\n\n\n\nopenOps(){\n\n  if(this.op_modal != undefined && this.op_modal.componentInstance != null) return;\n  \n  this.op_modal =  this.dialog.open(OpsComponent,\n    {disableClose: true,\n      hasBackdrop: false});\n\n\n      this.op_modal.componentInstance.onOperationAdded.subscribe(event => { this.onOperationAdded.emit(event)});\n      this.op_modal.componentInstance.onImport.subscribe(event => { this.onImport.emit(event)});\n\n  \n      this.op_modal.afterClosed().subscribe(result => {\n        //this.onLoomChange.emit();\n       // dialogRef.componentInstance.onChange.removeSubscription();\n    });\n}\n\naddOperation(name: string){\n  this.onOperationAdded.emit(name)\n}\n\naddNote(){\n  this.onNoteCreate.emit();\n}\n\nundoClicked(e:any) {\n  this.onUndo.emit();\n}\n\nredoClicked(e:any) {\n  this.onRedo.emit();\n}\n\n}\n\n\n","\n\n   \n    <div  class=\"designtools\" >\n\n        <div class=\"undoredo\">\n            <button #undoEvent \n            mat-stroked-button \n            color=\"primary\"\n            (click)=\"undoClicked($event);\"\n            [disabled]=\"ss.undo_disabled\"\n            matTooltip =\"undo\">\n            <i class=\"fas fa-undo\"></i> Undo\n            </button>\n\n            <button #redoEvent \n            mat-stroked-button \n            color=\"primary\"\n            (click)=\"redoClicked($event);\"\n            [disabled]=\"ss.redo_disabled \"\n            matTooltip =\"redo\">\n            <i class=\"fas fa-redo\"></i> Redo\n            </button>\n        </div>\n\n\n    \n        <button \n        mat-stroked-button \n        color=\"primary\"\n        matTooltip= \"Blank Draft\"\n        (click)=\"createNewDraft()\">\n        <i class=\"fas fa-chess-board\"></i> Add Blank Draft to Workspace\n        </button>\n    \n        <button \n        mat-stroked-button color=\"primary\"  \n        (click)=\"openBitmaps()\"\n        ><i class=\"fa-solid fa-chess-board\"></i> Import Bitmaps to AdaCAD Drafts</button>\n\n  \n        <button \n        mat-stroked-button \n        color=\"primary\"\n        matTooltip= \"Note\"\n        color=\"primary\"\n        (click)=\"addNote()\">\n        <i class=\"fas fa-comment\"></i> Add Comment to Workspace\n        </button>\n\n\n\n\n\n\n\n\n        <mat-divider></mat-divider>\n\n\n        <!-- <app-quickop\n        (onOperationAdded)=\"addOperation($event)\"\n    >\n        </app-quickop> -->\n\n\n        <h2>Operation Descriptions</h2>\n        <p>You can add operations to the AdaCAD workspace to mathematically describe different relationships within your weave draft. We've organized them into categories that you can browse below  </p>\n\n\n\n        <ng-container *ngFor=\"let class of classifications\">\n\n            <mat-accordion class=\"operation_categories\" multi>\n\n                <mat-expansion-panel>\n                    <mat-expansion-panel-header>\n                      <mat-panel-title class=\"cat_title\">\n                        {{class.category_name}}\n                     </mat-panel-title>\n                      <mat-panel-description>\n\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n                <p class=\"cat_desc\">{{class.description}}</p>\n\n                <mat-accordion class=\"example-headers-align\" multi>\n\n                <ng-container *ngFor=\"let op_name of class.op_names\">\n\n                \n                        <mat-expansion-panel>\n                            <mat-expansion-panel-header>\n                              <mat-panel-title class=\"opname\">\n                                {{op_desc.getDisplayName(op_name)}}\n                             </mat-panel-title>\n                              <mat-panel-description>\n                                         <!-- {{class.description}} -->\n                                         <button mat-button color=\"primary\" class=\"fa-solid fa-plus add\" (click)=\"addOperation(op_name)\">\n                                         </button>\n\n        \n                            </mat-panel-description>\n                        </mat-expansion-panel-header>\n                        <h4> Description </h4>\n                        <p>{{op_desc.getOpDescription(op_name)}}</p>\n\n                        <h4>Application  </h4>\n                        <p> {{op_desc.getOpApplication(op_name)}}</p>\n\n                        <!-- <h4 *ngIf=\"ops.getOp(op_name) !== null && ops.getOp(op_name).params.length > 0\"> Parameters </h4>\n                        <ng-container *ngFor=\"let param of ops.getOp(op_name).params\">\n                            <h5>{{param.name}}</h5>\n                            <p *ngIf=\"param.dx === undefined\">{{op_desc.getParamDescription(param.name)}}</p>\n                            <p *ngIf=\"param.dx !== undefined\">{{param.dx}}</p>\n\n                        </ng-container> -->\n\n\n                        <!-- {{op_desc.getOpApplication(op_name)}}\n                        this.youtube = this.op_desc.getOpYoutube(obj);\n                        this.url = this.createYoutubeEmbedLink(this.youtube)\n                        this.params = this.ops.getOp(obj).params;\n                        this.params = this.params.map(param => {\n                          if(param.dx === undefined) param.dx = this.op_desc.getParamDescription(param.name);\n                          return param;\n                        }) -->\n\n\n                        </mat-expansion-panel>\n                </ng-container>\n\n                 </mat-accordion>\n\n                </mat-expansion-panel>    \n                </mat-accordion>   \n                \n                \n    \n            <!-- <p> {{class.description}}</p> -->\n          \n          </ng-container>\n\n\n          <mat-divider></mat-divider>\n          <h2 class=\"setting_title\"> Keyboard Shortcuts</h2>\n          <mat-list>\n            <mat-list-item>&#8984;x Undo</mat-list-item>\n            <mat-list-item>&#8984;y Redo</mat-list-item>\n            <mat-list-item>&#8984;= Zoom In</mat-list-item>\n            <mat-list-item>&#8984;- Zoom Out</mat-list-item>\n            <mat-list-item>&#8984;s Save</mat-list-item>\n           </mat-list>\n  \n           <h2 class=\"setting_title\">Interaction</h2>\n           <h3>Chain Operations</h3>\n            <p> To connect operations together, click the <i class=\"fa-sharp fa-solid fa-circle-down\"></i> on the bottom of a draft and connect it to the <i class=\"draft-inlet-icon\"></i> on the top of an operation. </p>\n\n            <h3>Highlight an Operation Chain</h3>\n            <p> If you'd like to highlight the chain of operations that generated a particular operation input, you can do so by clicking the  <i class=\"fa-solid fa-eye\"></i> on the input</p>\n\n            <h3>Multiselect Operations</h3>\n             <p>Hold the shift key and click all the operations you would like to select. Once you let go, you can move them all as a group. </p>\n\n            <h3>Add Materials to Drafts</h3>\n            <p> Some operations allow you to add in information about the materials and systems to be used when they compute a new draft. These operations will have a <i class=\"material-inlet-icon\"></i> as one of their inputs. The material and system information from the draft you connect will be used in the resulting draft </p>\n     \n    </div>\n","import { ScrollDispatcher } from '@angular/cdk/overlay';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, enableProdMode, OnInit, Optional, ViewChild } from '@angular/core';\nimport { getAnalytics, logEvent } from '@angular/fire/analytics';\nimport { Auth, authState, User } from '@angular/fire/auth';\nimport { NgForm } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTooltipDefaultOptions, MAT_TOOLTIP_DEFAULT_OPTIONS } from '@angular/material/tooltip';\nimport { Subject } from 'rxjs';\nimport { BlankdraftModal } from '../core/modal/blankdraft/blankdraft.modal';\nimport { createCell } from '../core/model/cell';\nimport { DesignMode, Draft, DraftNode, FileObj, IOTuple, LoadResponse, Loom, LoomSettings, NodeComponentProxy, OpInput, SaveObj, TreeNode, TreeNodeProxy } from '../core/model/datatypes';\nimport { defaults } from '../core/model/defaults';\nimport { copyDraft, flipDraft, initDraftWithParams, warps, wefts } from '../core/model/drafts';\nimport { copyLoom, copyLoomSettings, flipLoom } from '../core/model/looms';\nimport utilInstance from '../core/model/util';\nimport { AuthService } from '../core/provider/auth.service';\nimport { DesignmodesService } from '../core/provider/designmodes.service';\nimport { FileService } from '../core/provider/file.service';\nimport { FilesystemService } from '../core/provider/filesystem.service';\nimport { ImageService } from '../core/provider/image.service';\nimport { MaterialsService } from '../core/provider/materials.service';\nimport { NotesService } from '../core/provider/notes.service';\nimport { OperationService } from '../core/provider/operation.service';\nimport { StateService } from '../core/provider/state.service';\nimport { SystemsService } from '../core/provider/systems.service';\nimport { TreeService } from '../core/provider/tree.service';\nimport { WorkspaceService } from '../core/provider/workspace.service';\nimport { DraftDetailComponent } from '../draftdetail/draftdetail.component';\nimport { RenderService } from '../draftdetail/provider/render.service';\nimport { PaletteComponent } from './palette/palette.component';\nimport { SubdraftComponent } from './palette/subdraft/subdraft.component';\nimport { MultiselectService } from './provider/multiselect.service';\nimport { ViewportService } from './provider/viewport.service';\nimport { ZoomService } from './provider/zoom.service';\n//disables some angular checking mechanisms\nenableProdMode();\n\n\n\n\n/** Custom options the configure the tooltip's default show/hide delays. */\nexport const myCustomTooltipDefaults: MatTooltipDefaultOptions = {\n  showDelay: 1000,\n  hideDelay: 1000,\n  touchendHideDelay: 1000,\n  position: 'right',\n  disableTooltipInteractivity: true,\n\n};\n\n\n@Component({\n  selector: 'app-mixer',\n  templateUrl: './mixer.component.html',\n  styleUrls: ['./mixer.component.scss'],\n  providers: [{provide: MAT_TOOLTIP_DEFAULT_OPTIONS, useValue: myCustomTooltipDefaults}]\n\n})\nexport class MixerComponent implements OnInit {\n\n\n  @ViewChild(PaletteComponent) palette;\n  @ViewChild(DraftDetailComponent) details;\n\n  epi: number = 10;\n  units:string = 'cm';\n  frames:number =  8;\n  treadles:number = 10;\n  loomtype:string = \"jacquard\";\n  loomtypes:Array<DesignMode>  = [];\n  density_units:Array<DesignMode> = [];\n  warp_locked:boolean = false;\n  origin_options: any = null;\n  selected_origin: number = 0;\n  show_viewer: boolean = false;\n  show_details: boolean = false;\n  loading: boolean = false;\n\n\n\n\n\n\n /**\n   * The weave Timeline object.\n   * @property {Timeline}\n   */\n\n   viewonly: boolean = false;\n\n   manual_scroll: boolean = false;\n\n  private unsubscribe$ = new Subject();\n\n  collapsed:boolean = true;\n\n  scrollingSubscription: any;\n\n\n  selected_nodes_copy: any = null;\n\n\n  /// ANGULAR FUNCTIONS\n  /**\n   * @constructor\n   * ps - pattern service (variable name is initials). Subscribes to the patterns and used\n   * to get and update stitches.\n   * dialog - Anglar Material dialog module. Used to control the popup modals.\n   */\n  constructor(public dm: DesignmodesService, \n    private auth: AuthService,\n    private ms: MaterialsService,\n    private sys: SystemsService,\n    private tree: TreeService,\n    public scroll: ScrollDispatcher,\n    private fs: FileService,\n    public ws: WorkspaceService,\n    public vp: ViewportService,\n    private notes: NotesService,\n    private ss: StateService,\n    private dialog: MatDialog,\n    private image: ImageService,\n    private ops: OperationService,\n    private http: HttpClient,\n    private zs: ZoomService,\n    private files: FilesystemService,\n    private render: RenderService,\n    private multiselect: MultiselectService,\n    @Optional() private fbauth: Auth\n    ) {\n\n\n      this.selected_origin = this.ws.selected_origin_option;\n\n      this.origin_options = this.ws.getOriginOptions();\n      this.epi = ws.epi;\n      this.units = ws.units;\n      this.frames = ws.min_frames;\n      this.treadles = ws.min_treadles;\n      this.loomtype = ws.type;\n      this.loomtypes = dm.getOptionSet('loom_types');\n     this.density_units = dm.getOptionSet('density_units');\n    //this.dialog.open(MixerInitComponent, {width: '600px'});\n\n    this.scrollingSubscription = this.scroll\n          .scrolled()\n          .subscribe((data: any) => {\n            this.onWindowScroll(data);\n    });\n    \n    this.vp.setAbsolute(defaults.mixer_canvas_width, defaults.mixer_canvas_height); //max size of canvas, evenly divisible by default cell size\n   \n\n\n\n    //subscribe to the login event and handle what happens in that case \n\n    if (auth) {\n      const success = authState(this.fbauth).subscribe(async user => {\n         this.initLoginLogoutSequence(user) \n          \n      })\n\n   }\n\n\n\n  }\n\n\n  ngOnInit(){\n    \n    const analytics = getAnalytics();\n    logEvent(analytics, 'onload', {\n      items: [{ uid: this.auth.uid }]\n    });\n  }\n\n  ngAfterViewInit() {\n \n  }\n\n\n  private onWindowScroll(data: any) {\n    if(!this.manual_scroll){\n     this.palette.handleWindowScroll(data);\n    // this.view_tool.updateViewPort(data);\n    }else{\n      this.manual_scroll = false;\n    }\n  }\n\n setScroll(delta: any) {\n    this.palette.handleScroll(delta);\n    this.manual_scroll = true;\n   //this.view_tool.updateViewPort(data);\n  }\n\n\n\n  closeDetailViewer(obj: any){\n    console.log(\"OBJ \", obj)\n    this.show_details = false; \n    this.details.windowClosed();\n\n    //the object was never copied\n    if(obj.clone_id == -1){\n      let comp = <SubdraftComponent>this.tree.getComponent(obj.id);\n      comp.redrawExistingDraft();\n\n      this.palette.updateDownstream(obj.id).then(el => {\n        this.palette.addTimelineState();\n      });\n    //reperform all of the ops \n    }else{\n      //this object was copied and we need to keep the copy\n      if(obj.dirty){\n        const parent = this.tree.getComponent(obj.clone_id);\n        let el = document.getElementById('scale-'+parent.id);\n        let width = 0;\n        if(el !== null && el !== undefined) width = el.offsetWidth;\n        this.palette.createSubDraftFromEditedDetail(obj.id).then(sd => {\n          const new_topleft = {\n            x: parent.topleft.x+((width+40)*this.zs.zoom/defaults.mixer_cell_size), \n            y: parent.topleft.y};\n    \n            sd.setPosition(new_topleft);\n        });\n\n       \n      }else{\n        this.tree.removeSubdraftNode(obj.id);\n      }\n    }\n\n\n\n  \n    //refresh all of the subdrafts\n    // let tlds:Array<number> = this.tree.getTopLevelDrafts();\n    // tlds.forEach(tld => {\n    //   let comp: SubdraftComponent = <SubdraftComponent>this.tree.getComponent(tld);\n    //   comp.redrawExistingDraft();\n    // })\n\n\n    // this.palette.updateDownstream(obj).then(el => {\n    //   this.palette.addTimelineState();\n    // });\n    // //reperform all of the ops \n\n\n  }\n\n  detailViewChange(){\n    this.details.weaveRef.rescale(this.render.getZoom());\n\n  }\n\n\n  addOp(event: any){\n    this.palette.addOperation(event)\n  }\n\n\n\n  isBlankWorkspace() : boolean {\n    return this.tree.nodes.length == 0;\n  }\n\n\n  zoomIn(){\n    const old_zoom = this.zs.zoom;\n    this.zs.zoomIn();\n    this.renderChange(old_zoom);\n\n  }\n\n\n  zoomOut(){\n    const old_zoom = this.zs.zoom;\n    this.zs.zoomOut();\n    this.renderChange(old_zoom);\n    \n}\n\ncreateNewDraft(){\n\n  const dialogRef = this.dialog.open(BlankdraftModal, {\n  });\n\n  dialogRef.afterClosed().subscribe(obj => {\n    if(obj !== undefined && obj !== null) this.newDraftCreated(obj);\n });\n}\n \n\nzoomChange(e:any, source: string){\n  \n  const old_zoom = this.zs.zoom;\n  this.zs.setZoom(e.value)\n  this.palette.rescale(old_zoom);\n\n}\n\n\n\n  /**\n   * this is called anytime a user event is fired\n   * @param user \n   */\n  initLoginLogoutSequence(user:User) {\n    console.log(\"IN LOGIN/LOGOUT \", user)\n\n\n    let searchParams = new URLSearchParams(window.location.search);\n    if(searchParams.has('ex')){\n      this.loadExampleAtURL(searchParams.get('ex'));  \n      return;\n    }\n\n\n    if(user === null){\n      //this is a logout event\n      this.files.setCurrentFileInfo(this.files.generateFileId(), 'blank draft','');\n      this.files.clearTree();\n\n\n\n    }else{\n\n      if(this.auth.isFirstSession() || (!this.auth.isFirstSession() && this.isBlankWorkspace())){\n    \n        this.auth.getMostRecentFileIdFromUser(user).then(async fileid => {\n\n          if(fileid !== null){\n\n            const ada = await this.files.getFile(fileid).catch(e => {\n              console.error(\"HI \", e)\n            });\n            const meta = await this.files.getFileMeta(fileid).catch(console.error);           \n             \n\n              if(ada === undefined){\n                this.loadBlankFile();\n\n              }else if(meta === undefined){\n                this.files.setCurrentFileInfo(fileid, 'file name not found', '');\n                this.prepAndLoadFile('file name not found', fileid, '', ada);\n              \n              }else{\n\n                this.files.setCurrentFileInfo(fileid, meta.name, meta.desc);\n                this.prepAndLoadFile(meta.name, fileid, meta.desc, ada);\n              }\n\n          }else{\n              console.log(\"LOOKING FOR ADA FILE\")\n             this.auth.getMostRecentAdaFromUser(user).then(async adafile => {\n                console.log(\"ADA FILE IS \", adafile)\n                if(adafile !== null){\n                    let fileid = await this.files.convertAdaToFile(user.uid, adafile); \n                    console.log(\"convert ada to file id \", fileid)\n            \n                    let ada = await this.files.getFile(fileid);\n                    let meta = await this.files.getFileMeta(fileid);           \n                    \n                    if(ada === undefined){\n                      this.loadBlankFile();\n                    }else if(meta === undefined){\n                      this.files.setCurrentFileInfo(fileid, 'file name not found', '');\n                      this.prepAndLoadFile('file name not found', fileid, '', ada);\n      \n                    }else{\n                      this.files.setCurrentFileInfo(fileid, meta.name, meta.desc);\n                      this.prepAndLoadFile(meta.name, fileid, meta.desc, ada);\n                    }\n\n                }else{\n                  console.log(\"load blank\")\n                  this.loadBlankFile();\n                  return;\n                }\n             });\n          }\n        }) \n\n      }else{\n        \n        //this.loadBlankFile();\n        this.saveFile();\n        this.files.writeNewFileMetaData(user.uid, this.files.current_file_id, this.files.current_file_name, this.files.current_file_desc)\n\n    \n      }\n      \n    }\n  }\n\n    /**\n   * this is called when paste is called and has loaded in the data from the copy event. \n   * @param result \n   */\n    insertPasteFile(result: LoadResponse){\n      this.processFileData(result.data).then(data => {\n        this.palette.changeDesignmode('move');\n        this.saveFile();\n\n      }\n  \n      ).catch(console.error);\n      \n    }\n\n  /**\n   * this gets called when a new file is started from the topbar or a new file is reload via undo/redo\n   * @param result \n   */\n  loadNewFile(result: LoadResponse){\n    this.clearAll();\n\n\n\n    this.files.setCurrentFileInfo(result.id, result.name, result.desc);\n    \n\n    this.processFileData(result.data).then(data => {\n      this.palette.changeDesignmode('move');\n      this.saveFile();\n    }\n\n    ).catch(e => {\n      console.log(\"CAUGHT ERROR through from process file data\")\n    });\n    \n  }\n\n  async loadFromDB(fileid: number){\n    this.clearAll();\n\n\n    const ada = await this.files.getFile(fileid);\n    const meta = await this.files.getFileMeta(fileid);           \n    this.files.setCurrentFileInfo(fileid, meta.name, meta.desc);\n    this.prepAndLoadFile(meta.name, fileid, meta.desc, ada);\n    this.saveFile();\n    \n  }\n\n  loadBlankFile(){\n    this.clearAll();\n    this.files.setCurrentFileInfo(this.files.generateFileId(), 'load blank', '');\n    this.saveFile();\n    \n  }\n\n  deleteCurrentFile(){\n    this.clearAll();\n    if(this.files.file_tree.length > 0){\n      this.loadFromDB(this.files.file_tree[0].id)\n    }else{\n      this.files.setCurrentFileInfo(this.files.generateFileId(), 'new blank file', '');\n    }\n    this.saveFile();\n  }\n\n  saveFile(){\n        //if this user is logged in, write it to the\n        this.fs.saver.ada(\n          'mixer', \n          true,\n          this.zs.zoom)\n          .then(so => {\n            this.ss.addMixerHistoryState(so);\n          });\n  }\n\n\n\n  /**\n   * this gets called when a new file is started from the topbar\n   * @param result \n   */\n   importNewFile(result: LoadResponse){\n    \n    this.processFileData(result.data)\n    .then( data => {\n      this.palette.changeDesignmode('move')\n      this.clearAll();\n\n      console.log(\"imported new file\", result, result.data)\n      })\n      .catch(console.error);\n    \n  }\n\n\n  printTreeStatus(name: string, treenode: Array<TreeNode>){\n\n    treenode.forEach(tn => {\n      if(tn === undefined){\n        console.log(\"Undefined Node\", tn); \n        return;\n      }\n\n      if(tn.inputs === undefined){\n        console.log(\"Undefined Inputs\", tn); \n        return;  \n      }\n\n      if(tn.outputs === undefined){\n        console.log(\"Undefined Outputs\", tn); \n        return;  \n      }\n      \n      switch(tn.node.type){\n        case 'cxn':\n          if(tn.inputs.length !== 1 || tn.outputs.length !== 1)\n          console.log(\"Invalid Number of Inputs/Outputs on Connection\", tn); \n          break;\n\n        case 'draft':\n            if(tn.inputs.length > 1)\n            console.log(\"Invalid Number of Inputs/Outputs on Draft\", tn); \n            break;\n      }\n\n\n    });\n  }\n\n\n\n  /**\n   * this uses the uploaded node data to create new nodes, in addition to any nodes that may already exist\n   * @param nodes the nodes from the upload\n   * @returns an array of uploaded ids mapped to unique ids in this instance\n   */\n  async loadNodes(nodes: Array<NodeComponentProxy>) : Promise<any> {\n\n    const functions = nodes.map(n => this.tree.loadNode(<'draft'|'op'|'cxn'> n.type, n.node_id));\n    return Promise.all(functions);\n\n  }\n\n  /**\n   * uploads the relationships between the nodes as specified in a load file\n   * @param id_map the map from uploaded ids to current ids generated by loadNodes\n   * @param tns the uploaded treenode data\n   * @returns an array of treenodes and the map associated at each tree node\n   */\n  async loadTreeNodes(id_map: Array<{prev_id: number, cur_id:number}>, tns: Array<TreeNodeProxy>) : Promise<Array<{tn:TreeNode,entry:{prev_id: number, cur_id: number}}>> {\n    \n\n    const updated_tnp: Array<TreeNodeProxy> = tns.map(tn => {\n     \n      //we need these here because firebase does not store arrays of size 0\n      if(tn.inputs === undefined) tn.inputs = [];\n      if(tn.outputs === undefined) tn.outputs = [];\n\n\n      const input_list = tn.inputs.map(input => {\n        if(typeof input === 'number'){\n          const input_in_map = id_map.find(el => el.prev_id === input);\n\n          if(input_in_map !== undefined){\n            return {tn: input_in_map.cur_id, ndx: 0};\n          }else{\n            console.error(\"could not find matching node\");\n          }\n\n        }else{\n          const input_in_map = id_map.find(el => el.prev_id === input.tn);\n          if(input_in_map !== undefined){\n            return {tn: input_in_map.cur_id, ndx: input.ndx};\n          }else{\n            console.error(\"could not find matching node\");\n          }\n        } \n\n       \n      });\n\n      const output_list:Array<any> = tn.outputs.map(output => {\n          //handle files of old type, before inputs were broken into two fields\n          if(typeof output === 'number'){\n            const output_map = id_map.find(el => el.prev_id === output);\n            if(output_map !== undefined){\n             return {tn: output_map.cur_id, ndx: 0};\n            }else{\n              console.error(\"could not find matching node\"); \n            }\n          }else{\n            \n            const output_map = id_map.find(el => el.prev_id === output.tn);\n\n            if(output_map !== undefined){\n             return {tn: output_map.cur_id, ndx: output.ndx};\n            }else{\n              console.error(\"could not find matching node\"); \n            }\n          } \n      });\n      \n      const new_tn: TreeNodeProxy = {\n        node: id_map.find(el => el.prev_id === tn.node).cur_id,\n        parent: (tn.parent === null || tn.parent === -1) ? -1 : id_map.find(el => el.prev_id === tn.parent).cur_id,\n        inputs: input_list,\n        outputs: output_list\n      }\n      \n      //console.log(\"new tn is \", new_tn);\n      return new_tn;\n    })\n\n    const functions = updated_tnp.map(tn => this.tree.loadTreeNodeData(id_map, tn.node, tn.parent, tn.inputs, tn.outputs));\n    return Promise.all(functions);\n\n  }\n\n\n  /** \n   * Take a fileObj returned from the fileservice and process\n   */\n   async processFileData(data: FileObj) : Promise<string|void>{\n    this.loading = true;\n\n    let entry_mapping = [];\n\n\n    this.updateOrigin(this.ws.selected_origin_option)\n\n    //start processing images first thing \n    const images_to_load = [];\n   \n    data.ops.forEach(op => {\n      const internal_op = this.ops.getOp(op.name); \n      if(internal_op === undefined || internal_op == null|| internal_op.params === undefined) return;\n      const param_types = internal_op.params.map(el => el.type);\n      param_types.forEach((p, ndx) => {\n        if(p === 'file'){\n          images_to_load.push(op.params[ndx]);\n        } \n      });\n    })\n\n\n\n    return this.image.loadFiles(images_to_load).then(el => {\n      return this.tree.replaceOutdatedOps(data.ops);\n    })\n    .then(correctedOps => {    \n      data.ops = correctedOps; \n      return this.loadNodes(data.nodes)\n    })\n    .then(id_map => {\n        entry_mapping = id_map;\n        return this.loadTreeNodes(id_map, data.treenodes);\n      }\n    ).then(treenodes => {\n\n      const seednodes: Array<{prev_id: number, cur_id: number}> = treenodes\n        .filter(tn => this.tree.isSeedDraft(tn.tn.node.id))\n        .map(tn => tn.entry);\n     \n\n      const seeds: Array<{entry, id, draft, loom, loom_settings, render_colors}> = seednodes\n      .map(sn =>  {\n\n\n         let d:Draft =null;\n         let render_colors = true;\n \n        const draft_node = data.nodes.find(node => node.node_id === sn.prev_id);\n        //let d: Draft = initDraft();\n        let l: Loom = {\n          treadling: [],\n          tieup: [],\n          threading: []\n        }\n\n        let ls: LoomSettings = {\n          frames: this.ws.min_frames,\n          treadles: this.ws.min_treadles,\n          epi: this.ws.epi,\n          units: this.ws.units,\n          type: this.ws.type\n        }\n        if(draft_node !== undefined){\n\n          const located_draft = data.draft_nodes.find(draft => draft.draft_id === draft_node.node_id);\n          if(located_draft === undefined){\n            console.log(\"Looking for \", draft_node.node_id,\"in\", data.draft_nodes.map(el => el.draft_id))\n            console.error(\"could not find draft with id in draft list\");\n          }\n          else{\n            d = copyDraft(located_draft.draft);\n            ls = copyLoomSettings(located_draft.loom_settings);\n            l = copyLoom(located_draft.loom);\n            if(located_draft.render_colors !== undefined) render_colors = located_draft.render_colors; \n          } \n\n        }else{\n          console.error(\"draft node could not be found\")\n        }\n\n  \n        if(d !== null && d !== undefined){\n          d.id = (sn.cur_id); //do this so that all draft ids match the component / node ids\n        }else{\n          d = initDraftWithParams({warps: 1, wefts: 1, drawdown: [[false]]});\n          d.id = (sn.cur_id);\n        }\n\n          return {\n            entry: sn,\n            id: sn.cur_id,\n            draft: d,\n            loom: l,\n            loom_settings: ls,\n            render_colors: render_colors\n            }\n        \n      });\n\n      \n      const seed_fns = seeds.map(seed => this.tree.loadDraftData(seed.entry, seed.draft, seed.loom,seed.loom_settings, seed.render_colors));\n  \n      const op_fns = data.ops.map(op => {\n        const entry = entry_mapping.find(el => el.prev_id == op.node_id);\n        return this.tree.loadOpData(entry, op.name, op.params, op.inlets);\n      });\n\n      return Promise.all([seed_fns, op_fns]);\n\n    })\n    .then(el => {\n        return this.tree.validateNodes();\n    })\n    .then(el => {\n      //console.log(\"performing top level ops\");\n       return  this.tree.performTopLevelOps();\n    })\n    .then(el => {\n      //delete any nodes that no longer need to exist\n      this.tree.getDraftNodes()\n      .filter(el => el.draft === null)\n      .forEach(el => {\n        if(this.tree.hasParent(el.id)){\n          el.draft = initDraftWithParams({warps: 1, wefts: 1, pattern: [[createCell(false)]]});\n          el.draft.id = el.id;\n        } else{\n          console.log(\"removing node \", el.id, el.type, this.tree.hasParent(el.id));\n          this.tree.removeNode(el.id);\n        } \n      })\n    })\n    .then(el => {\n\n      return this.tree.nodes.forEach(node => {\n        \n        if(!(node.component === null || node.component === undefined)) return;\n\n        const entry = entry_mapping.find(el => el.cur_id === node.id);\n        if(entry === undefined) return;\n\n        switch (node.type){\n          case 'draft':\n            \n            this.palette.loadSubDraft(node.id, this.tree.getDraft(node.id), data.nodes.find(el => el.node_id === entry.prev_id), data.draft_nodes.find(el => el.node_id === entry.prev_id), data.scale);\n            break;\n          case 'op':\n            const op = this.tree.getOpNode(node.id);\n            this.palette.loadOperation(op.id, op.name, op.params, op.inlets, data.nodes.find(el => el.node_id === entry.prev_id).topleft, data.scale);\n            break;\n          case 'cxn':\n            this.palette.loadConnection(node.id)\n            break;\n        }\n      })\n\n\n    })\n    // ).then(el => {\n    //   return this.tree.nodes.forEach(node => {\n    //     if(!(node.component === null || node.component === undefined)) return;\n    //     switch (node.type){\n    //       case 'cxn':\n    //         this.palette.loadConnection(node.id)\n    //         break;\n    //     }\n    //   })\n    // })\n    .then(el => {\n\n      //NOW GO THOUGH ALL DRAFT NODES and ADD IN DATA THAT IS REQUIRED\n      data.draft_nodes\n      .forEach(np => {\n        const new_id = entry_mapping.find(el => el.prev_id === np.node_id);\n        const node = this.tree.getNode(new_id.cur_id);\n        if(node === undefined) return;\n\n       (<DraftNode> node).draft.ud_name = np.draft_name;\n       (<DraftNode> node).loom_settings = np.loom_settings; \n      })\n\n      // const dn = this.tree.getDraftNodes();\n      // dn.forEach(node => {\n      //   console.log(\"RES\", node.draft, node.loom, node.loom_settings)\n      // })\n\n      data.notes.forEach(note => {\n        this.palette.createNote(note);\n    });\n  \n\n    })\n    .then(res => {\n      // this.palette.rescale(data.scale);\n      this.loading = false;\n      return Promise.resolve('alldone')\n    })\n    .catch(e => {\n      this.loading = false;\n      console.log(\"ERROR THOWN in process\", e)\n    });\n\n\n    //print out all trees:\n\n\n\n\n  }\n\n \n\n  /**\n   * Called from import bitmaps to drafts features. The drafts have already been imported and sent to this function, \n   * which now needs to draw them to the workspace\n   * @param drafts \n   */\n  loadDrafts(drafts: any){\n    const loom:Loom = {\n      threading:[],\n      tieup:[],\n      treadling: []\n    };\n\n    const loom_settings:LoomSettings = {\n      type:this.ws.type,\n      epi: this.ws.epi,\n      units: this.ws.units,\n      frames: this.ws.min_frames,\n      treadles: this.ws.min_treadles\n      \n    }\n\n    let topleft = this.vp.getTopLeft();\n\n    let max_h = 0;\n    let cur_h = topleft.y + 20; //start offset from top\n    let cur_w = topleft.x + 50;\n    let zoom_factor = defaults.mixer_cell_size / this.zs.zoom;\n    let x_margin = 20 / zoom_factor;\n    let y_margin = 40 / zoom_factor;\n\n    let view_width = this.vp.getWidth() * zoom_factor;\n\n    drafts.forEach(draft => {\n      \n      \n      const id = this.tree.createNode(\"draft\", null, null);\n      this.tree.loadDraftData({prev_id: null, cur_id: id,}, draft, loom, loom_settings, true);\n      this.palette.loadSubDraft(id, draft, null, null, this.zs.zoom);\n\n      //position the drafts so that they don't all overlap. \n       max_h = (wefts(draft.drawdown)*defaults.mixer_cell_size > max_h) ? wefts(draft.drawdown)*defaults.mixer_cell_size : max_h;\n      \n       let approx_w = warps(draft.drawdown);\n\n       //300 because each draft is defined as having min-width of 300pm\n       let w = (approx_w*defaults.mixer_cell_size > 300) ? approx_w *defaults.mixer_cell_size : 300 / zoom_factor;\n\n       let dn = this.tree.getNode(id);\n       dn.component.topleft = {x: cur_w, y: cur_h};\n       \n       cur_w += (w + x_margin);\n       if(cur_w > view_width){\n        cur_w = topleft.x + 50;\n        cur_h += (max_h+y_margin);\n        max_h = 0;\n       }\n\n\n    });\n\n    this.palette.addTimelineState();\n\n    \n  }\n\n\n  loadExampleAtURL(name: string){\n    const analytics = getAnalytics();\n    logEvent(analytics, 'onurl', {\n      items: [{ uid: this.auth.uid, name: name }]\n    });\n\n    this.http.get('assets/examples/'+name+\".ada\", {observe: 'response'}).subscribe((res) => {\n      console.log(res);\n      if(res.status == 404) return;\n\n      this.clearAll();\n      return this.fs.loader.ada(name, -1, '', res.body)\n     .then(loadresponse => {\n       this.loadNewFile(loadresponse)\n     });\n    }); \n  }\n\n\n  prepAndLoadFile(name: string, id: number, desc: string, ada: any) : Promise<any>{\n      return this.fs.loader.ada(name, id,desc, ada).then(lr => {\n        this.loadNewFile(lr);\n      });\n  }\n\n\n\n  clearView() : void {\n    this.palette.clearComponents();\n    this.vp.clear();\n\n  }\n\n  clearAll() : void{\n\n    console.log(\"CLEAR ALL\")\n    this.clearView();\n    this.tree.clear();\n    this.ss.clearTimeline();\n    this.notes.clear();\n\n  }\n\n\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n\n  undo() {\n\n    let so: SaveObj = this.ss.restorePreviousMixerHistoryState();\n    if(so === null || so === undefined) return;\n    this.fs.loader.ada(this.files.current_file_name, this.files.current_file_id, this.files.current_file_desc, so).then(lr => {\n      console.log(\"LOADing FILE \", lr);\n      this.loadNewFile(lr)\n    }\n    \n    );\n\n  \n  }\n\n  redo() {\n\n    let so: SaveObj = this.ss.restoreNextMixerHistoryState();\n    if(so === null || so === undefined) return;\n\n    this.fs.loader.ada(this.files.current_file_name, this.files.current_file_id,this.files.current_file_desc,  so)\n    .then(lr =>  this.loadNewFile(lr));\n\n   \n  }\n\n  onCopySelections(){\n    const selections = this.multiselect.copySelections();\n    this.selected_nodes_copy = selections;\n  }\n\n  onPasteSelections(){\n\n    //check to make sure something has been copied\n    if(this.multiselect.copy == undefined) return;\n\n    this.multiselect.copy.then(ada => {\n\n      return this.fs.loader.paste(ada).then(lr => {\n        this.insertPasteFile(lr);\n      });\n    })\n\n   \n   \n\n    this.multiselect.clearSelections();\n    \n  }\n\n  togglePanMode(){\n    if(this.dm.isSelected('pan', \"design_modes\")){\n      this.dm.selectDesignMode('move', 'design_modes');\n    }else{\n      this.dm.selectDesignMode('pan', 'design_modes');\n    }\n    this.palette.designModeChanged();\n    //this.show_viewer = true;\n\n  }\n\n  toggleSelectMode(){\n    if(this.dm.isSelected('marquee', \"design_modes\")){\n      this.dm.selectDesignMode('move','design_modes');\n\n    }else{\n      this.dm.selectDesignMode('marquee','design_modes');\n\n    }\n\n    this.palette.designModeChanged();\n  }\n\n  \n\n\n    operationAdded(name:string){\n      this.palette.addOperation(name);\n    }\n\n\n  /**\n   * this is called when a user pushes save from the topbar\n   * @param event \n   */\n  public async onSave(e: any) : Promise<any>{\n\n    const link = document.createElement('a')\n\n\n    switch(e.type){\n      case 'jpg': \n\n      return this.fs.saver.jpg(this.palette.getPrintableCanvas(e))\n      .then(href => {\n        link.href= href;\n        link.download = this.files.current_file_name + \".jpg\";\n        this.palette.clearCanvas();\n        link.click();\n      });\n\n      break;\n\n      case 'wif': \n         this.palette.downloadVisibleDraftsAsWif();\n         return Promise.resolve(null);\n      break;\n\n      case 'ada': \n      this.fs.saver.ada(\n        'mixer', \n        false,\n        this.zs.zoom).then(out => {\n          link.href = \"data:application/json;charset=UTF-8,\" + encodeURIComponent(out.json);\n          link.download =  this.files.current_file_name + \".ada\";\n          link.click();\n        })\n      break;\n\n      case 'bmp':\n        this.palette.downloadVisibleDraftsAsBmp();\n        return Promise.resolve(null);\n      break;\n    }\n  }\n\n  /**\n   * Updates the canvas based on the weave view.\n   */\n  public renderChange(old_zoom: number) {\n    this.palette.rescale(old_zoom);\n  }\n\n\n  /**\n   * Updates the canvas based on the weave view.\n   */\n   public zoomChangeExternal(event: any) {\n    this.palette.rescale(event.old_zoom);\n  }\n\n\n\n\n  public notesChanged(e:any) {\n    console.log(e);\n    //this.draft.notes = e;\n  }\n\n \n\n\n  public toggleCollapsed(){\n    this.collapsed = !this.collapsed;\n  }\n\n  public createNote(){\n    this.palette.createNote(null);\n  }\n  /**\n   * called when the user adds a new draft from the sidebar\n   * @param obj \n   */\n  public newDraftCreated(obj: any){\n    const id = this.tree.createNode(\"draft\", null, null);\n    this.tree.loadDraftData({prev_id: null, cur_id: id,}, obj.draft, obj.loom, obj.loom_settings, true);\n    this.palette.loadSubDraft(id, obj.draft, null, null, this.zs.zoom);\n    //id: number, d: Draft, nodep: NodeComponentProxy, draftp: DraftNodeProxy,  saved_scale: number\n  }\n\n\n  /**\n   * something in the materials library changed, check to see if\n   * there is a modal showing materials open and update it if there is\n   */\n   public materialChange() {\n    \n    this.palette.redrawAllSubdrafts();\n\n    if(this.show_details){\n      this.details.redrawSimulation();\n    }\n\n    this.saveFile();\n }\n\n\n /**\n  * the origin must be updated after the file has been loaded. \n  * @param selection \n  */\n updateOrigin(selection: number){\n  this.selected_origin = selection\n  \n }\n\n\n\n/**\n * when the origin changes, all drafts on the canavs should be modified to the new position\n * origin changes can ONLY happen on globals\n * flips must be calculated from the prior state\n * @param e \n */\noriginChange(e:any){\n\n\n  const flips = utilInstance.getFlips(this.selected_origin, e.value);\n  this.selected_origin = e.value;\n  this.ws.selected_origin_option = this.selected_origin;\n  \n  const dn: Array<DraftNode> = this.tree.getDraftNodes();\n  const data = dn.map(node => {\n    return {\n    draft: node.draft, \n    loom: node.loom, \n    horiz: flips.horiz,\n    vert: flips.vert}\n  });\n\n  // dn.forEach(node => {\n  //  if(node.loom !== null) console.log(node.loom.treadling)\n  // })\n\n  const draft_fns = data.map(el => flipDraft(el.draft, el.horiz, el.vert));\n\n  return Promise.all(draft_fns)\n  .then(res => {\n    for(let i = 0; i < dn.length; i++){\n      dn[i].draft = <Draft>{\n        id: res[i].id,\n        gen_name: res[i].gen_name,\n        ud_name: res[i].ud_name,\n        drawdown: res[i].drawdown,\n        rowShuttleMapping: res[i].rowShuttleMapping,\n        rowSystemMapping: res[i].rowSystemMapping,\n        colShuttleMapping: res[i].colShuttleMapping,\n        colSystemMapping: res[i].colSystemMapping\n      };\n    }\n    const loom_fns = data.map(el => flipLoom(el.loom, el.horiz, el.vert))\n    return Promise.all(loom_fns)\n  .then(res => {\n    for(let i = 0; i < dn.length; i++){\n      if(res[i] !== null){\n        dn[i].loom = {\n          threading: res[i].threading.slice(),\n          tieup: res[i].tieup.slice(),\n          treadling: res[i].treadling.slice()\n        }\n      }\n    }\n  }).then(out => {\n    this.saveFile();\n  })\n\n\n\n})\n\n  \n\n\n}\n\nepiChange(f: NgForm) {\n\n\n  if(!f.value.epi){\n    f.value.epi = 1;\n    this.epi = f.value.epi;\n  } \n  \n  //this.loom.overloadEpi(f.value.epi);\n  this.ws.epi = f.value.epi;\n\n\n\n}\n\n\n/**\n * when a user selects a new loom type, the software will pull all subdrafts and update their loom information \n * @param e \n * @returns \n */\nloomChange(e:any){\n\n  console.log(\"e.value.loomtype\", e.value.loomtype)\n   this.ws.type = e.value.loomtype;\n  if(this.ws.type === 'jacquard') this.dm.selectDesignMode('drawdown', 'drawdown_editing_style')\n  else this.dm.selectDesignMode('loom', 'drawdown_editing_style') \n  \n  const dn: Array<DraftNode> = this.tree.getDraftNodes();\n  dn.forEach(node => {\n    node.loom_settings.type = e.value.loomtype; \n  })\n\n\n}\n\n  unitChange(e:any){\n    \n      this.ws.units = e.value.units;\n\n\n  }\n\n  showDraftDetails(id: number){\n    console.log(\"mixer draft details\", id)\n    this.show_details = true;\n    this.details.loadDraft(id);\n    this.dm.selectDesignMode('toggle','draw_modes')\n  }\n}","\n<appKeycodes\n  (onUndo)=\"undo()\"\n  (onRedo)=\"redo()\"\n  (updateMixerView)=\"renderChange($event)\"\n  (updateDetailView)=\"detailViewChange()\"\n  (onCopySelections)=\"onCopySelections()\"\n  (onPasteSelections)=\"onPasteSelections()\"\n\n>\n</appKeycodes>\n\n<mat-drawer-container [hasBackdrop]=\"false\" #container class=\"mat-drawer-container\" cdkScrollable>\n\n\n\n\n  <div class=\"floating_ops\">\n    <app-quickop \n    (onOperationAdded)=\"addOp($event)\"  >\n    </app-quickop>\n  </div>\n\n\n  <!-- THIS IS THE COLLAPSED SIDEBAR -->\n  <mat-drawer *ngIf=\"collapsed\"  [disableClose]=\"true\"  class=\"sidenav_small\" mode=\"over\" position=\"start\"  opened >  \n\n    <div class=\"button_col\">\n      <div class=\"design_opts\">\n\n        <button mat-icon-button\n        (click)=\" collapsed = !collapsed\"\n        class=\"collapse\" \n        [class.nav-opened] = \"!collapsed\"\n        value=\"collapsed\">\n        <i class=\"fa\"\n          [class.fa-angle-double-right]=\"collapsed\" \n          [class.fa-angle-double-left]=\"!collapsed\"\n        aria-hidden=\"true\"></i>\n        </button>\n\n    <button #undoEvent \n    mat-icon-button \n    color=\"primary\"\n    (click)=\"undo();\"\n    [disabled]=\"ss.undo_disabled\"\n    matTooltip =\"undo\">\n    <i class=\"fas fa-undo\"></i>\n    </button>\n\n    <button #redoEvent \n    mat-icon-button \n    color=\"primary\"\n    (click)=\"redo();\"\n    [disabled]=\"ss.redo_disabled \"\n    matTooltip =\"redo\">\n    <i class=\"fas fa-redo\"></i>\n    </button>\n\n    <button \n    mat-icon-button \n    color=\"primary\"\n    matTooltip= \"Note\"\n    color=\"primary\"\n    (click)=\"createNote()\">\n    <i class=\"fas fa-comment\"></i>\n    </button>\n\n    <button \n    mat-icon-button \n    color=\"primary\"\n    matTooltip= \"Blank Draft\"\n    (click)=\"createNewDraft()\">\n    <i class=\"fas fa-chess-board\"></i>\n    </button>\n\n    <button \n    mat-icon-button \n    [color]=\"(dm.isSelected('marquee','design_modes' ))? 'accent' : 'primary'\" \n    matTooltip= \"Select\"\n    (click)=\"toggleSelectMode()\">\n    <i class=\"fas fa-expand\"></i>\n    </button>\n\n\n    <button\n    mat-icon-button color=\"primary\"  \n    (click)=\"onSave({type: 'ada'})\"\n    ><i class=\"fa-solid fa-download\"></i>\n    </button>\n  </div>\n\n    <div class=\"adacad\">\n    <h1>AdaCAD</h1>\n  </div>\n\n  <div class=\"slider-row\">\n    <button  mat-icon-button (click)=\"zoomIn()\" color=\"primary\" class=\"fas fa-search-plus\"></button>\n  \n\n      <mat-slider \n      class=\"slider\"\n      [vertical]=\"true\"\n      color=\"primary\"\n      tickInterval=\"1\" \n      [step]=\"1\" \n      [min]= \"0\"\n      [max]= \"zs.num_steps\"\n      value=\"{{zs.zoom_table_ndx}}\" \n      (change)=\"zoomChange($event, 'slider')\"></mat-slider>\n      \n      <button  mat-icon-button (click)=\"zoomOut()\" color=\"primary\" class=\"fas fa-search-minus\"></button> \n      <button\n      mat-icon-button \n      [color]=\"(dm.isSelected('pan','design_modes' ))? 'accent' : 'primary'\" \n      (click)=\"togglePanMode()\"\n      ><i class=\"fa-solid fa-hand\"></i>\n      </button>\n        </div>\n  </div>\n\n\n\n\n\n\n  </mat-drawer>\n\n  <mat-drawer *ngIf=\"!collapsed\"  [disableClose]=\"true\" class=\"sidenav_opened\" mode=\"over\" position=\"start\" opened>  \n\n  <app-topbar #view_tool\n  [collapsed]=\"collapsed\"\n  [drawer] = \"drawer\"\n  (onCollapseSidebar)=\"collapsed = !collapsed\"\n  source=\"mixer\"\n  >\n  </app-topbar>\n\n\n    <mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"start\" color=\"primary\" backgroundColor=\"primary\">\n      <mat-tab class=\"mat-tab-label-custom\" label=\"Files\">     \n        <app-filebrowser \n        (onLoadNewFile)=\"loadNewFile($event);\"\n        (onLoadFromDB)=\"loadFromDB($event);\"\n        (onClearScreen)=\"loadBlankFile();\"\n        (onCurrentFileDeleted)=\"deleteCurrentFile();\"\n        (onSave)=\"onSave($event);\">\n      </app-filebrowser>\n      </mat-tab>\n      <mat-tab class=\"mat-tab-label-custom\" label=\"Design\"> \n        <app-design #view_tool   \n        (onUndo)=\"undo();\" \n        (onRedo)=\"redo();\"\n        (onOperationAdded) = \"operationAdded($event)\"\n        (onImport) = \"importNewFile($event)\"\n        (onLoadDrafts)=\"loadDrafts($event);\"\n        (onNoteCreate) =\"createNote();\"     \n        (onNewDraftCreated)=\"newDraftCreated($event)\"\n        ></app-design>\n\n\n      </mat-tab>\n      <mat-tab class=\"mat-tab-label-custom\" label=\"Settings\">\n\n        <form class=\"workspace_settings\" #envt=\"ngForm\" novalidate>\n\n          <mat-form-field>\n            <mat-label>When viewing Draft Details, Place the (0,0) point at: </mat-label>\n            <mat-select (selectionChange) =\"originChange($event)\" [value]=\"selected_origin\">\n              <mat-option *ngFor=\"let option of origin_options\" [value]=\"option.value\">\n                {{option.view}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n  \n          <mat-form-field>\n            <mat-label>Loom Type</mat-label>\n            <mat-select (selectionChange) =\"loomChange(envt)\" [(value)]=\"loomtype\" [(ngModel)]=\"loomtype\" name=\"loomtype\">\n              <mat-option *ngFor=\"let loomtype of loomtypes\" [value]=\"loomtype.value\">\n                {{loomtype.viewValue}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n  \n          <mat-form-field>\n            <mat-label>Default Density Units</mat-label>\n            <mat-select [(value)]=\"units\" [(ngModel)]=\"units\" name=\"units\" (selectionChange) =\"unitChange(envt)\">\n              <mat-option *ngFor=\"let unit of density_units\" [value]=\"unit.value\">\n                {{unit.viewValue}}\n              </mat-option>\n            </mat-select>\n            </mat-form-field>\n    \n          <mat-form-field>\n            <mat-label>Default Density</mat-label>\n            <input matInput  \n            name=\"epi\" \n            [(ngModel)]=\"epi\" \n            type=\"number\" \n            min= \"0\" \n            (change)=\"epiChange(envt)\"\n            (blur)=\"epiChange(envt)\">  \n    \n          </mat-form-field>\n  \n    \n  \n          </form>\n\n\n\n      </mat-tab>\n\n      <mat-tab class=\"mat-tab-label-custom\" label=\"Materials\">\n        <app-material-modal\n        (onMaterialChange)=\"materialChange($event)\"\n        ></app-material-modal>\n      </mat-tab>\n\n      <mat-tab class=\"mat-tab-label-custom\" label=\"Examples\">\n        <app-examples\n        (onLoadExample)=\"loadNewFile($event)\">\n       </app-examples>  \n        <app-loadfile></app-loadfile>  \n\n      </mat-tab>\n\n\n    </mat-tab-group>\n\n\n\n\n  </mat-drawer>\n\n  <mat-drawer  #detail_drawer class=\"detail_view\" mode=\"over\" position=\"end\" [opened]=\"show_details\" [@.disabled]=\"true\">  \n\n    <app-draftdetail #details (closeDrawer)=\"closeDetailViewer($event)\"></app-draftdetail>\n    \n     </mat-drawer>\n\n  <!-- <mat-drawer #files class=\"example-sidenav\" mode=\"side\" position=\"start\" opened>  \n\n\n\n</mat-drawer> -->\n\n  <app-palette  \n  class=\"palette mode-{{dm.getSelectedDesignMode('design_modes').value}}\"\n  [style.width.px]='vp.getAbsoluteWidth()' \n  [style.height.px]='vp.getAbsoluteHeight()' \n  #palette  id=\"scrollable-container\"\n  (onRevealDraftDetails)=\"showDraftDetails($event)\" >\n  </app-palette>\n\n\n  <mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n  <canvas id=\"saver\"></canvas>\n\n  <div  id=\"mixerview\" class=\"mixerview\">\n  <app-mixerview\n  [style.display]=\"dm.isSelected('pan','design_modes' ) ? 'block' : 'none'\"\n  (onZoomChange) =\"zoomChangeExternal($event);\"\n  (onViewPortMove) =\"setScroll($event);\"\n  ></app-mixerview>\n  </div>\n\n\n  \n\n\n</mat-drawer-container>\n\n","import { NgModule } from '@angular/core';\nimport { CoreModule } from '../core/core.module';\nimport { MixerComponent} from './mixer.component';\nimport { MixerViewComponent } from './mixerview/mixerview.component';\nimport { SubdraftComponent } from './palette/subdraft/subdraft.component';\nimport { PaletteComponent } from './palette/palette.component';\nimport { SnackbarComponent } from './palette/snackbar/snackbar.component';\nimport { MarqueeComponent } from './palette/marquee/marquee.component';\nimport { OperationComponent } from './palette/operation/operation.component';\nimport { ConnectionComponent } from './palette/connection/connection.component';\nimport { OpsComponent } from './modal/ops/ops.component';\nimport { OpHelpModal } from './modal/ophelp/ophelp.modal';\nimport { ImageComponent } from './palette/image/image.component';\nimport { DraftDetailModule } from '../draftdetail/draftdetail.module';\nimport { NoteComponent } from './palette/note/note.component';\nimport { ParameterComponent } from './palette/operation/parameter/parameter.component';\nimport { InletComponent } from './palette/operation/inlet/inlet.component';\nimport { DesignComponent } from './design/design.component';\nimport { QuickopComponent } from './quickop/quickop.component';\n\n\n\n@NgModule({\n    imports: [\n        CoreModule,\n        DraftDetailModule\n    ],\n    declarations: [\n        MixerComponent,\n        MixerViewComponent,\n        SubdraftComponent,\n        PaletteComponent,\n        SnackbarComponent,\n        MarqueeComponent,\n        OperationComponent,\n        ConnectionComponent,\n        OpsComponent,\n        OpHelpModal,\n        ImageComponent,\n        NoteComponent,\n        ParameterComponent,\n        InletComponent,\n        DesignComponent,\n        QuickopComponent\n        ]\n})\nexport class MixerModule { }\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { Bounds, DesignMode, Point } from '../../core/model/datatypes';\nimport { ViewportService } from '../provider/viewport.service';\nimport { ZoomService } from '../provider/zoom.service';\n\n@Component({\n  selector: 'app-mixerview',\n  templateUrl: './mixerview.component.html',\n  styleUrls: ['./mixerview.component.scss']\n})\nexport class MixerViewComponent implements OnInit {\n  \n  @Output() onZoomChange: any = new EventEmitter();\n  @Output() onViewPortMove: any = new EventEmitter();\n\n  //the bounds of the modal window\n  bounds: Bounds;\n\n  //the bounds of the draggable \"local\" view\n  local_view:Bounds;\n\n  //ratio of the global div to the absolute space\n  factor:number;\n\n  // the number of pixels that represent one cell in the preview space\n  cell_factor: number;\n\n  //the width and height of the global view\n  width: number;\n  height: number;\n\n\n  data = {zoom: 5, default_cell_size: 5};\n  div: Element;\n\n\n constructor(\n  public viewport: ViewportService, \n  public zs:ZoomService) { \n\n    this.viewport.vpchanged$.subscribe(data => {\n      this.updateLocalDims();\n\n    })\n\n  this.local_view = {\n    topleft: {x:0, y:0}, \n    width: 100, \n    height:100\n  };\n\n\n\n}\n \n  ngOnInit() {\n   // console.log('viewport', this.local_view);\n\n  }\n\n\n\n  ngAfterViewInit() {\n\n\n\n  // this.zoom = data.zoom;\n\n  this.bounds = {\n    topleft:{x: 0, y:0},\n    width: 350,\n    height: 100\n  }\n\n\n  const viewwindow = document.getElementById('mixerview');\n  console.log(\"MIXER \", viewwindow.offsetWidth)\n  this.width = viewwindow.offsetWidth;\n  this.height = viewwindow.offsetHeight;\n\n  //ratio of the global space to the total width of the global div\n  this.factor = this.width / this.viewport.getAbsoluteWidth();\n\n  //each cell is rendered cell factor number pixels in the global view\n  //this does not change when zoomed\n  this.cell_factor = this.width / (this.viewport.getAbsoluteWidth() / this.data.default_cell_size);\n \n this.updateLocalDims();\n  }\n\n  getCx(obj: any) : number {\n    return obj.p.x * this.factor;\n  }\n\n\n  \n\n  updateLocalDims(){\n    this.div = document.getElementById('scrollable-container').offsetParent;\n    this.local_view.topleft = {\n      x: this.div.scrollLeft / this.zs.zoom * this.cell_factor, \n      y: this.div.scrollTop  / this.zs.zoom * this.cell_factor};\n  }\n\n\n  updateViewPort(data: any){\n    this.updateLocalDims();\n  }\n\n  updateViewPortFromZoom(){\n    this.updateLocalDims();\n    \n  }\n\n  zoomIn(){\n    const old_zoom = this.zs.zoom;\n    this.zs.zoomIn();\n    this.onZoomChange.emit({old_zoom: old_zoom});\n    const adjusted: Point = {\n      x: this.local_view.topleft.x / this.cell_factor * this.zs.zoom,\n      y: this.local_view.topleft.y / this.cell_factor * this.zs.zoom\n    }\n      this.onViewPortMove.emit(adjusted);\n  }\n  \n\n\n  zoomOut(){\n    const old_zoom = this.zs.zoom;\n    this.zs.zoomOut();\n    this.onZoomChange.emit({old_zoom: old_zoom});\n      const adjusted: Point = {\n       x: this.local_view.topleft.x / this.cell_factor * this.zs.zoom,\n       y: this.local_view.topleft.y / this.cell_factor * this.zs.zoom\n     }\n   \n     this.onViewPortMove.emit(adjusted);\n    \n  \n}\n \n\nzoomChange(e:any, source: string){\n  e.source = source;\n  const old_zoom = this.zs.zoom;\n\n  this.zs.setZoom(e.value);\n // this.updateLocalDims();\n //update the window so that the current point remains at top left\n  this.onZoomChange.emit({old_zoom: old_zoom});\n\n  const adjusted: Point = {\n    x: this.local_view.topleft.x / this.cell_factor * this.zs.zoom,\n    y: this.local_view.topleft.y / this.cell_factor * this.zs.zoom\n  }\n\n  this.onViewPortMove.emit(adjusted);\n\n}\n\n\ndragEnd($event: any) {\n  \n}\n\ndragStart($event: any) {\n\n}\n\ngetMatrix(el: HTMLElement) : Array<number> {\n  const values = el.style.transform.split(/\\w+\\(|\\);?/);\n    if (!values[1] || !values[1].length) {\n        return [];\n    }\n    \n    const text_vals:Array<string> = values[1].split(/,\\s?/g);\n    const numbers: Array<number> = text_vals.map(el => parseInt(el))\n    return numbers;\n}\n\ndragMove($event: any) {\n\n    //this holds the onscreen position of the div\n    const local: HTMLElement = document.getElementById('local_view');\n    const transform: Array<number> = this.getMatrix(local);\n\n  const pointerOffsetInGlobal = {\n    x:  transform[0],\n    y:  transform[1]\n  }\n\n  const adjusted: Point = {\n    x: pointerOffsetInGlobal.x / this.cell_factor * this.zs.zoom,\n    y: pointerOffsetInGlobal.y / this.cell_factor * this.zs.zoom\n  }\n\n  this.onViewPortMove.emit(adjusted);\n}\n\n\n\n\n}\n","\n\n  <div id = \"global\" class=\"global_view\">\n    \n    <svg width=\"250\" height=\"250\">\n      <rect *ngFor=\"let obj of viewport.objs\" [attr.x]='obj.i.j * cell_factor' [attr.y]='obj.i.i * cell_factor' [attr.width]=\"2\" [attr.height]=\"2\" fill=\"grey\" />\n    </svg>\n    <div class=\"local\" id=\"local_view\"\n    [style.width.px] = \" viewport.getWidth() / zs.zoom * cell_factor\"\n    [style.height.px] = \" viewport.getHeight() / zs.zoom * cell_factor\"\n    [cdkDragFreeDragPosition]=\"local_view.topleft\"\n    cdkDragBoundary=\".global_view\"\n    (cdkDragMoved)=\"dragMove($event)\"\n\t  (cdkDragEnded)=\"dragEnd($event)\"\n\t  (cdkDragStarted)=\"dragStart($event)\"\n    cdkDragDisabled = 'false'\n    cdkDrag>\n    </div>\n  </div>\n\n\n\n\n\n  <!-- <div class=\"toggle_materials\">\n    <button mat-stroked-button color=\"primary\" (click)=\"showColors()\">Show Colors</button>\n    <button mat-stroked-button color=\"primary\" (click)=\"showDrafts()\">Show Drafts</button>\n  </div> -->\n\n\n<!-- </mat-dialog-content>\n -->\n\n\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { DynamicOperation } from '../../../core/model/datatypes';\nimport { OperationDescriptionsService } from '../../../core/provider/operation-descriptions.service';\nimport { OperationService } from '../../../core/provider/operation.service';\n\n@Component({\n  selector: 'app-ophelp',\n  templateUrl: './ophelp.modal.html',\n  styleUrls: ['./ophelp.modal.scss']\n})\nexport class OpHelpModal implements OnInit {\n  \n  \n  name: string;\n  is_dynamic_op: boolean;\n  params: Array<any>;\n  dynamic_type: string =\"\";\n  dynamic_param_id: number = 0;\n  dynamic_param_name: string = '';\n  displayname: string = \"\";\n  op_description: string = \"\";\n  op_application: string = \"\";\n  param_descriptions: Array<string>;\n  dynamic_description: string = \"\";\n  youtube: string = \"\";\n\n  constructor(private op_desc:OperationDescriptionsService, private dialogRef: MatDialogRef<OpHelpModal>,\n             @Inject(MAT_DIALOG_DATA) public data: any, private ops:OperationService) { \n        \n        const op = this.ops.getOp(data.op.name);\n        this.name = data.op.name;\n        this.op_description = this.op_desc.getOpDescription(this.name);\n        this.op_application = this.op_desc.getOpApplication(this.name);\n        this.displayname = this.op_desc.getDisplayName(this.name);\n        this.dynamic_description = this.op_desc.getDyanmicText();\n        this.is_dynamic_op = this.ops.isDynamic(this.name);\n        this.youtube = this.op_desc.getYoutube(this.name);\n        if(this.youtube !== undefined) this.youtube = \"https://www.youtube.com/embed/\"+this.youtube;\n     \n        this.params = op.params;\n        this.param_descriptions = op.params.map(el => this.op_desc.getParamDescription(el.name));\n        this.param_descriptions = this.param_descriptions.map((dx, ndx) => (dx === undefined) ? this.params[ndx].dx : dx);\n\n        if(this.is_dynamic_op){\n          this.dynamic_type = (<DynamicOperation> op).dynamic_param_type;\n          this.dynamic_param_id =(<DynamicOperation> op).dynamic_param_id;\n          this.dynamic_param_name = this.params[this.dynamic_param_id].name;\n        }\n        \n\n\n    }\n\n  \n  ngOnInit() {\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>{{displayname}}</h1>\n<mat-dialog-content>\n\n  <div class=\"help-container\">\n\n    <div class=\"doc-container\">\n      <ng-container *ngIf=\"op_description !== undefined\">\n      <h2>Description: </h2>\n  \t  <p>{{op_description}}</p>\n     </ng-container>\n\n     <ng-container *ngIf=\"op_application!== undefined\">\n      <h2>Application: </h2>\n  \t  <p>{{op_application}}</p>\n      </ng-container>\n\n      <div class=\"params\">\n        <ng-container *ngIf=\"data.op.params.length > 0\"><h2> Parameters: </h2></ng-container>\n        <ng-container *ngFor=\"let param of data.op.params; index as i\">\n            <h3>{{param.name}}</h3>\n            <p>{{param_descriptions[i]}}</p>\n            <p>Type: {{param.type}}</p> \n            <p *ngIf=\"param.type == number\"> min/max value of this input: {{param.min}}-{{param.max}}</p>\n\t\t    </ng-container>\n\n        <ng-container *ngIf=\"is_dynamic_op\">\n          <h4>This is a dyanmic operation, meaning that one of the parameters above generates multiple \"inlets\" to the function, each which can accept a draft and associate a particular value with that draft.</h4>\n          <h3>Input that Controls the Inlets: {{dynamic_param_name}}</h3>\n          <p>Inlet type: {{dynamic_type}}</p>\n      </ng-container>\n\n      <ng-container *ngIf=\"youtube !== undefined\">\n        {{youtube}}\n        <iframe width=\"560\" height=\"315\" [src]=\"youtube\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n        </ng-container>\n\n\n      </div>\n\n\n      <!-- <div id=\"docs\" [innerHTML]=\"documentation\"></div>\n      <h2>Documentation</h2> -->\n    \n    </div>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button class=\"mat-raised-button mat-primary\"(click)=\"close()\">Close</button>\n</mat-dialog-actions>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { OperationClassification, OperationInlet, OperationParam } from '../../../core/model/datatypes';\nimport { OperationDescriptionsService } from '../../../core/provider/operation-descriptions.service';\nimport { OperationService } from '../../../core/provider/operation.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-ops',\n  templateUrl: './ops.component.html',\n  styleUrls: ['./ops.component.scss']\n})\nexport class OpsComponent implements OnInit {\n  \n  @Output() onOperationAdded:any = new EventEmitter();\n  @Output() onImport:any = new EventEmitter();\n  \n  opnames:Array<string> = [];\n  displaynames:Array<string> = [];\n  myControl = new UntypedFormControl();\n  filteredOptions: Observable<string[]>;\n  searchOnly: boolean = false;\n  classifications: Array<OperationClassification>;\n  \n  desc: string = \"\";\n  app: string = \"\";\n  name: string = \"\";\n  youtube: string = \"\";\n  url: any;\n  params: Array<OperationParam> = [];\n  inlets: Array<OperationInlet> = [];\n  \n  constructor(\n    public ops: OperationService, \n    public op_desc: OperationDescriptionsService, \n    private sanatizer: DomSanitizer,\n    private dialog: MatDialog,\n    private dialogRef: MatDialogRef<OpsComponent>,\n             @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n    const allops = this.ops.ops.concat(this.ops.dynamic_ops);\n    this.classifications = this.op_desc.getOpClassifications();\n    this.opnames = allops.map(el => el.name);\n    this.displaynames = allops.map(el => this.op_desc.getDisplayName(el.name));\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n\n    if(this.data.searchOnly !== undefined){\n      this.searchOnly = true;\n    }\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.displaynames.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  close() {\n    this.dialogRef.close(null);\n  }\n\n  showDesc(obj){\n    this.name = this.op_desc.getDisplayName(obj);\n    this.desc = this.op_desc.getOpDescription(obj);\n    this.app = this.op_desc.getOpApplication(obj);\n    this.youtube = this.op_desc.getOpYoutube(obj);\n    this.url = this.createYoutubeEmbedLink(this.youtube)\n    this.params = this.ops.getOp(obj).params;\n    this.params = this.params.map(param => {\n      if(param.dx === undefined) param.dx = this.op_desc.getParamDescription(param.name);\n      return param;\n    })\n    this.inlets = this.ops.getOp(obj).inlets;\n\n  }\n\n  showCatDesc(obj){\n    this.name = \"category: \"+this.op_desc.getCatName(obj);\n    this.desc = this.op_desc.getCatDescription(obj);\n    this.app = \"\";\n  }\n\n  createYoutubeEmbedLink(embedcode: string){\n   const prefix = \"https://www.youtube.com/embed/\";\n   if(embedcode === \"\") return \"\";\n   const url = this.sanatizer.bypassSecurityTrustResourceUrl(prefix+embedcode);\n    console.log(this.url);\n    return url\n\n  }\n\n  // getParams(){\n  //   const op = this.op\n  // }\n\n\n  addOp(name: string){\n      this.onOperationAdded.emit(name);  \n  }\n\n  addOpFromSearch(event: any){\n    //need to convert display name toname here\n    const ndx = this.displaynames.findIndex(el => el === event.option.value);\n    if(ndx !== -1){\n      this.onOperationAdded.emit(this.opnames[ndx]);\n    }\n    if(this.searchOnly){\n      this.close();\n    }\n\n\n  }\n\n\n\n\n}\n","  \n<div class=\"toprow\">\n<button mat-icon-button (click)=\"close()\"><i class=\"fas fa-times\"></i></button>\n\n<p mat-dialog-title\n  cdkDrag\n   cdkDragRootElement=\".cdk-overlay-pane\" \n   cdkDragHandle>Operations</p>\n</div>\n  \n\n   <mat-dialog-content>\n\n    <mat-drawer-container class=\"example-container\">\n      <mat-drawer #drawer class=\"example-sidenav\" mode=\"side\" opened>\n        <form  autocomplete=\"off\">\n          <mat-form-field  class=\"full-width\" width='100%' appearance=\"fill\">\n          <mat-label><i class=\"fas fa-search\"></i>   search for action by name</mat-label>\n          <input type=\"text\"\n                 placeholder=\"\"\n                 matInput\n                 [formControl]=\"myControl\"\n                 [matAutocomplete]=\"auto\"\n                 >\n                 <mat-autocomplete \n                 autoActiveFirstOption \n                 #auto=\"matAutocomplete\"\n                 (optionSelected) = addOpFromSearch($event)>\n                  <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                    {{option}}\n                  </mat-option>\n          </mat-autocomplete>\n          </mat-form-field>\n        </form>\n\n        <ng-container *ngIf=\"!searchOnly\">\n          <ng-container *ngFor=\"let class of classifications\">\n            <div class=\"op-group\">\n\n\n      \n              <h3 (mouseover)=\"showCatDesc(class.category_name)\"  >\n                {{class.category_name}}\n              </h3>\n            <!-- <p> {{class.description}}</p> -->\n            <ng-container *ngFor=\"let op_name of class.op_names\">\n                <button mat-stroked-button \n                  [name]=op_name \n                  (click)=\"addOp(op_name)\"\n                  (mouseover)=\"showDesc(op_name)\">\n                  {{op_desc.getDisplayName(op_name)}}\n                </button> \n            </ng-container>\n          </div>  \n          </ng-container>\n          </ng-container>\n      \n      \n      </mat-drawer>\n    \n      <div class=\"example-sidenav-content\">\n\n        <ng-container *ngIf=\"name !== ''\">\n          <h1>{{name}}</h1>\n        </ng-container>\n\n       \n    \n    \n           <ng-container *ngIf=\"desc !== ''\">\n           <p>{{desc}}</p>\n          </ng-container>\n\n          <ng-container *ngIf=\"params.length !== 0\">\n            <h2>Parameters</h2>\n            <ul>\n              \n            <ng-container *ngFor=\"let param of params\">\n              <li>\n                <h3 class=\"param_name\">{{param.name}}</h3>\n                <!-- <h4 class=\"param_type\">{{param.type}}</h4> -->\n                <p class=\"param_desc\">{{param.dx}}</p>\n              </li>\n            </ng-container>\n          </ul>\n\n        </ng-container>\n    \n          <ng-container *ngIf=\"app !== ''\">\n            <h2>Application: </h2>\n           <p>{{app}}</p>\n          </ng-container>\n\n          <ng-container *ngIf=\"youtube !== ''\">\n            <h2>Youtube: </h2>\n           <p><iframe width=\"300\" height=\"169\" [src]=\"url\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n          </ng-container>\n      </div>\n\n    \n    </mat-drawer-container>\n\n\n\n  </mat-dialog-content>\n\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Bounds, DraftNode, OpNode, Point } from '../../../core/model/datatypes';\nimport { TreeService } from '../../../core/provider/tree.service';\nimport { ZoomService } from '../../provider/zoom.service';\nimport { OperationComponent } from '../operation/operation.component';\nimport { SubdraftComponent } from '../subdraft/subdraft.component';\nimport { OperationService } from '../../../core/provider/operation.service';\nimport { defaults } from '../../../core/model/defaults';\n\n@Component({\n  selector: 'app-connection',\n  templateUrl: './connection.component.html',\n  styleUrls: ['./connection.component.scss']\n})\nexport class ConnectionComponent implements OnInit {\n\n\n  @Input() id: number;\n  @Input() scale: number;\n  @Input() default_cell_size: number;\n  @Output() onConnectionRemoved = new EventEmitter <any>();\n\n\n\n  b_from: Point;\n  b_to: Point;\n\n\n  disable_drag:boolean = true;\n  orientation_x: boolean = true;\n  orientation_y: boolean = true;\n\n  topleft: Point = {x: 0, y:0};\n  width: number =  0;\n  height: number = 0;\n\n  svg: HTMLElement;\n  connector: HTMLElement;\n\n  no_draw: boolean;\n\n  path_text: string = '';\n\n  show_path_text: boolean = false;\n  show_disconnect: boolean = true;\n\n  constructor(\n    public tree: TreeService,\n    private ops: OperationService, \n    public zs: ZoomService) { \n\n  }\n\n  ngOnInit() {\n    const treenode = this.tree.getTreeNode(this.id);\n    const from_io = treenode.inputs[0];\n    const to_io = treenode.outputs[0];\n\n    const from = from_io.tn.node.id;\n    const to = to_io.tn.node.id;\n\n    this.no_draw = this.tree.getType(from) === 'op' && this.tree.hasSingleChild(from);\n    this.show_disconnect = !(this.tree.getType(from) === 'op' && !(this.tree.hasSingleChild(from)));\n    // this.path_text = this.id+'';\n    // this.show_path_text = true;\n\n    this.updatePathText()\n\n\n  }\n\n  ngAfterViewInit(){\n\n    this.svg = document.getElementById('svg-'+this.id.toString());\n    this.connector = document.getElementById('connector-'+this.id.toString());\n\n    const to = this.tree.getConnectionOutput(this.id);\n    const from = this.tree.getConnectionInput(this.id);\n\n\n\n\n     this.updateFromPosition(from, this.zs.zoom);\n     this.updateToPosition(to, this.zs.zoom);\n     this.drawConnection(this.zs.zoom)\n\n\n  }\n\n  disconnect(){\n    this.onConnectionRemoved.emit({id: this.id});\n  }\n\n\n  updatePathText(){\n    const treenode = this.tree.getTreeNode(this.id);\n  //  const from_io = treenode.inputs[0];\n    const to_io = treenode.outputs[0];\n  //  const from = from_io.tn.node.id;\n    const to = to_io.tn.node.id;\n    if( this.tree.getNode(to).type ==\"op\" ){\n  //    const from_node = <DraftNode> this.tree.getNode(from);\n      const op_node = <OpNode> this.tree.getNode(to);\n      const op_info =  this.ops.getOp(op_node.name);\n      const inlet = this.tree.getInletOfCxn(op_node.id, this.id);\n      if(op_info.inlets[inlet] !== undefined && op_info.inlets[inlet].uses !== 'draft'){\n        this.path_text = \"inlet uses only \"+op_info.inlets[inlet].uses;\n      } \n      else this.path_text =  \"\";\n\n    }\n  }\n\n\n\n  disableDrag(){\n    this.disable_drag = true;\n  }\n\n  enableDrag(){\n    //there is never a case where this should be enabled so set to true\n    this.disable_drag = true;\n  }\n\n  /**\n   * if every connection goes from one node to another, the to node is always the topleft corner\n   * unless the to node is a dynamic operation, in which case we must move to an inlet. \n   * @param to the id of the component this connection goes to\n   */\n  updateToPosition(to: number, scale: number){\n   \n    const to_comp = <SubdraftComponent | OperationComponent> this.tree.getComponent(to);\n\n    this.b_to = {\n      x:  to_comp.topleft.x + 3*this.scale/this.default_cell_size +  15* this.scale/this.default_cell_size,\n      y: to_comp.topleft.y\n    };\n\n\n    if(this.tree.getType(to_comp.id) === 'op'){\n      // get the inlet value \n      const ndx = this.tree.getInletOfCxn(to_comp.id, this.id);\n      if(ndx !== -1){\n\n        \n        \n        const ndx_in_list = this.tree.getInputsAtNdx(to_comp.id, ndx).findIndex(el => el.tn.node.id === this.id);\n\n\n        const element: HTMLElement = document.getElementById('inlet'+to_comp.id+\"-\"+ndx+\"-\"+ndx_in_list);\n\n        //to get a current position, you need the inlets parent to have a defined position. \n        if( element !== undefined && element !== null && element.offsetParent !== null){\n          const left_offset = element.offsetLeft;\n            this.b_to = {x: to_comp.topleft.x + left_offset*this.scale/this.default_cell_size + 15* this.scale/this.default_cell_size, y: to_comp.topleft.y}\n        }else{\n            const left_offset = (ndx + ndx_in_list)*defaults.inlet_button_width;\n            this.b_to = {x: to_comp.topleft.x + left_offset*this.scale/this.default_cell_size + 15* this.scale/this.default_cell_size, y: to_comp.topleft.y}\n\n        }\n        \n      }\n    }\n\n    this.calculateBounds();\n    this.drawConnection(scale);\n  }\n\n   /**\n   * if every connection goes from one node to another, the to node is always the topleft corner\n   * unless the to node is a dynamic operation, in which case we must move to an inlet. \n   * @param to the id of the component this connection goes to\n   */\n  //  updateInitalToPosition(to: number, inlet_id: number, within_inlet_id: number,  scale: number){\n  //   console.log(\"***UPDATE INITIAL POSITION***\", to, scale)\n   \n  //   const to_comp = <OperationComponent> this.tree.getComponent(to);\n\n  //   this.b_to = {\n  //     x:  to_comp.topleft.x + 3*this.scale/this.default_cell_size +  15* this.scale/this.default_cell_size,\n  //     y: to_comp.topleft.y\n  //   };\n\n\n\n  //   this.b_to = {x: to_comp.topleft.x + (inlet_id*100+15)*this.scale/this.default_cell_size, y: to_comp.topleft.y}\n  //   console.log(\"THIS B TO \", this.b_to)\n  \n\n  //   this.calculateBounds();\n  //   this.drawConnection(scale);\n  // }\n\n\n  /**\n   * if every connection goes from one node to another, the from node depends on the kind of object\n   * @param from the id of the component this connection goes to\n   */\n  updateFromPosition(from: number, scale: number){\n    const from_comp =  <SubdraftComponent | OperationComponent> this.tree.getComponent(from);\n  \n    if(from_comp === null){\n      console.error(\"no from component assigned yet on \", this.id);\n    }\n    \n    if(this.tree.getType(from) === 'op') this.fromOpUpdate(<OperationComponent> from_comp);\n    else this.fromDraftUpdate(<SubdraftComponent> from_comp);\n\n\n    this.calculateBounds();\n    this.drawConnection(scale);\n    \n   }\n\n   //TODO, add positing here\n  fromOpUpdate(op_comp: OperationComponent){\n      const scale = document.getElementById(\"scale-\"+op_comp.id);\n      if(scale === null){\n        // console.log(\"draft not found on update\")\n        // this.b_from = \n        // {x: draft_comp.topleft.x+5, \n        //  y: draft_comp.topleft.y + draft_comp.bounds.height*(this.zs.zoom/this.default_cell_size)};\n      }else{\n        this.b_from = \n        {x: op_comp.topleft.x+5, \n         y: (op_comp.topleft.y) + scale.offsetHeight*(this.zs.zoom/this.default_cell_size)};\n      }\n      \n     \n   \n  }\n\n  fromDraftUpdate(draft_comp: SubdraftComponent){\n\n    if(draft_comp.draft_visible){\n      const scale = document.getElementById(\"scale-\"+draft_comp.id);\n      if(scale === null){\n        // console.log(\"draft not found on update\")\n        // this.b_from = \n        // {x: draft_comp.topleft.x+5, \n        //  y: draft_comp.topleft.y + draft_comp.bounds.height*(this.zs.zoom/this.default_cell_size)};\n      }else{\n        this.b_from = \n        {x: draft_comp.topleft.x+5, \n         y: (draft_comp.topleft.y) + scale.offsetHeight*(this.zs.zoom/this.default_cell_size)};\n      }\n      \n     \n    }else{\n      this.b_from = \n      {x: draft_comp.topleft.x + 3*this.zs.zoom, \n       y: draft_comp.topleft.y + 30};\n    }\n  }\n\n\n  calculateBounds(){\n    \n    let p1: Point = this.b_from;\n    let p2: Point = this.b_to;\n    let bottomright: Point = {x:0, y:0};\n\n    if(p1 === undefined || p2 === undefined) return;\n\n\n    this.orientation_x = true;\n    this.orientation_y = true;\n    \n    if(p2.x < p1.x) this.orientation_x = !this.orientation_x;\n    if(p2.y < p1.y) this.orientation_y = !this.orientation_y;\n\n    bottomright.x = Math.max(p1.x, p2.x);\n    bottomright.y = Math.max(p1.y, p2.y);\n\n    this.topleft = {x: Math.min(p1.x, p2.x), y: Math.min(p1.y, p2.y)};\n    this.width = bottomright.x - this.topleft.x + 2; //add two so a line is drawn when horiz or vert\n    this.height = bottomright.y - this.topleft.y + 2;\n  }\n\n\n\n  \n  drawConnection(scale: number){\n\n\n    const stublength = 15;\n    const connector_opening = 10;\n    const connector_font_size = Math.max((10 - scale) / 10, .75);\n    const text_path_font_size =   Math.max((10 - scale) / 10, .75);\n    const button_margin_left = -20;\n    const button_margin_top = -16;\n    \n    if(this.no_draw) return;\n    if(this.svg === null || this.svg == undefined) return;\n\n    const stroke_width = 4 * this.zs.zoom / this.zs.getZoomMax();\n\n\n    if(this.orientation_x && this.orientation_y){\n      \n      this.svg.innerHTML = ' <path id=\"path-'+this.id+'\" d=\"M 0 0 C 0 50, '+this.width+' '+(this.height-70)+', '+this.width+' '+(this.height-(stublength+connector_opening))+'\" fill=\"transparent\" stroke=\"#ff4081\"  stroke-dasharray=\"4 2\"  stroke-width=\"'+stroke_width+'\"/>' ;\n\n      if(this.show_path_text){\n        this.svg.innerHTML += '<text><textPath startOffset=\"10%\" fill=\"#ff4081\" href=\"#path-'+this.id+'\">'+this.path_text+'</textPath></text> ';\n\n      }\n     \n\n      this.svg.innerHTML += '  <line x1=\"'+this.width+'\" y1=\"'+(this.height-(stublength))+'\" x2='+this.width+' y2=\"'+this.height+'\"  stroke=\"#ff4081\"  stroke-dasharray=\"4 2\"   stroke-width=\"'+stroke_width+'\" />';\n\n      this.connector.style.top = (this.height-(stublength+connector_opening)+button_margin_top)+'px';\n      this.connector.style.left = (this.width+button_margin_left)+'px';\n      this.connector.style.fontSize = connector_font_size+\"em\";\n      this.svg.style.fontSize = text_path_font_size+\"em\";\n      \n  \n\n    }else if(!this.orientation_x && !this.orientation_y){\n      this.svg.innerHTML = ' <path id=\"path-'+this.id+'\" d=\"M 0 '+-(stublength+connector_opening)+' c 0 -50, '+this.width+' '+(this.height+100)+', '+this.width+' '+(this.height+(stublength+connector_opening))+'\" fill=\"transparent\" stroke=\"#ff4081\"  stroke-dasharray=\"4 2\"   stroke-width=\"'+stroke_width+'\"/> ' ;\n\n      if(this.show_path_text){\n        this.svg.innerHTML += ' <text><textPath startOffset=\"60%\" fill=\"#ff4081\" href=\"#path-'+this.id+'\">'+this.path_text+'</textPath></text>';\n      }\n\n      this.svg.innerHTML += '  <line x1=\"0\" y1=\"'+-(stublength )+'\" x2=\"0\" y2=\"0\"  stroke=\"#ff4081\"  stroke-dasharray=\"4 2\"   stroke-width=\"'+stroke_width+'\" />';\n\n      this.connector.style.top = -(stublength+connector_opening)+(button_margin_top)+'px';\n      this.connector.style.left = (button_margin_left)+'px';\n      this.connector.style.fontSize = connector_font_size+\"em\";\n      this.svg.style.fontSize = text_path_font_size+\"em\";\n  \n\n\n    }else if(!this.orientation_x && this.orientation_y){\n\n      // this.svg.innerHTML = ' <path id=\"path-'+this.id+'\" d=\"M '+this.bounds.width+' 0 C '+(this.bounds.width)+' 50, 0 '+(this.bounds.height-70)+', 0 '+(this.bounds.height-(stublength+connector_opening))+'\" fill=\"transparent\" stroke=\"#ff4081\"  stroke-dasharray=\"4 2\"   stroke-width=\"'+stroke_width+'\"/> <text><textPath startOffset=\"50%\" fill=\"#000000\" href=\"#path-'+this.id+'\">'+this.path_text+'</textPath></text> ' ;\n\n\n      this.svg.innerHTML = ' <path id=\"path-'+this.id+'\" d=\" M  0 '+(this.height-(stublength+connector_opening))+' C 0 '+(this.height-(stublength+connector_opening)-50)+', '+this.width+' 50, '+this.width+' 0\" fill=\"transparent\" stroke=\"#ff4081\"  stroke-dasharray=\"4 2\"   stroke-width=\"'+stroke_width+'\"/> ' ;\n\n      if(this.show_path_text){\n        this.svg.innerHTML += '<text><textPath startOffset=\"60%\" fill=\"#ff4081\" href=\"#path-'+this.id+'\">'+this.path_text+'</textPath></text>';\n      }\n\n      this.svg.innerHTML += '  <line x1=\"0\" y1=\"'+(this.height-(stublength))+'\" x2=\"0\" y2=\"'+this.height+'\"  stroke=\"#ff4081\"  stroke-dasharray=\"4 2\"   stroke-width=\"'+stroke_width+'\" />';\n\n\n      this.connector.style.top = (this.height-(stublength+connector_opening)+button_margin_top)+'px';\n      this.connector.style.left =  (button_margin_left)+'px';\n      this.connector.style.fontSize = connector_font_size+\"em\";\n      this.svg.style.fontSize = text_path_font_size+\"em\";\n  \n  \n\n\n    }else{\n\n      this.svg.innerHTML = ' <path id=\"path-'+this.id+'\" d=\"M 0 '+this.height+' C 0 '+(this.height+50)+', '+this.width+' -50, '+this.width+''+-(stublength+connector_opening)+'\" fill=\"transparent\" stroke=\"#ff4081\"  stroke-dasharray=\"4 2\"  stroke-width=\"'+stroke_width+'\"/>' ;\n\n      if(this.show_path_text){\n        this.svg.innerHTML = '<text><textPath startOffset=\"10%\" fill=\"#000000\" href=\"#path-'+this.id+'\">'+this.path_text+'</textPath></text> ';\n      }\n\n      this.svg.innerHTML += '  <line x1=\"'+this.width+'\" y1=\"'+(-(stublength))+'\" x2=\"'+this.width+'\" y2=\"0\"  stroke=\"#ff4081\"  stroke-dasharray=\"4 2\"   stroke-width=\"'+stroke_width+'\" />';\n\n\n      this.connector.style.top = -(stublength+connector_opening)+(button_margin_top)+'px';\n      this.connector.style.left = (this.width+button_margin_left)+'px';\n      this.connector.style.fontSize = connector_font_size+\"em\";\n      this.svg.style.fontSize = text_path_font_size+\"em\";\n  \n\n    }\n  \n\n  }\n\n  drawForPrint(canvas, cx, scale: number) {\n\n    // cx.beginPath();\n    // cx.strokeStyle = \"#ff4081\";\n    // cx.setLineDash([scale, 2]);\n    // cx.lineWidth = 2;\n    // // this.cx.strokeRect(0,0, this.bounds.width, this.bounds.height);\n    // if(this.orientation){\n    //   cx.moveTo(this.bounds.topleft.x, this.bounds.topleft.y);\n    //   cx.lineTo(this.bounds.width + this.bounds.topleft.x, this.bounds.topleft.y + this.bounds.height);\n    // }else{\n    //   cx.moveTo(this.bounds.topleft.x, this.bounds.height+ this.bounds.topleft.y);\n    //   cx.lineTo(this.bounds.width + this.bounds.topleft.x, this.bounds.topleft.y);\n    // }\n    // cx.stroke();\n  }\n\n  /**\n   * rescales this compoment. \n   * Call after the operation and subdraft connections have been updated. \n   * @param scale \n   */\n  rescale(scale:number){\n\n    const to = this.tree.getConnectionOutput(this.id);\n    const from = this.tree.getConnectionInput(this.id);\n\n    this.updateFromPosition(from, scale);\n    this.updateToPosition(to,scale);\n   \n    // this.b_from = {x: from_comp.bounds.topleft.x, y: from_comp.bounds.topleft.y + from_comp.bounds.height};\n    // this.b_to = {x: to_comp.bounds.topleft.x, y: to_comp.bounds.topleft.y};\n     \n    this.scale = scale;\n    this.calculateBounds();\n    this.drawConnection(scale);\n\n    // const container: HTMLElement = document.getElementById('cxn-'+this.id);\n    // container.style.transformOrigin = 'top left';\n    // container.style.transform = 'scale(' + this.scale/5 + ')';\n\n  }\n\n\n}\n","<div *ngIf=\"tree.getNode(id) !== null && !no_draw\" class=\"connection-container selectable-{{!disable_drag}}\" id=\"scale-{{id}}\"\ncdkDrag\n[cdkDragDisabled] = disable_drag\n[style.z-index] = \"zndx\"\n[cdkDragFreeDragPosition]=\"topleft\"\n\n>\n\n<button\nmat-icon-button\ncolor=\"accent\" \nid=\"connector-{{id}}\" \n[class.hidden] = \"!show_disconnect\"\n(click)=\"disconnect()\"\naria-label=\"Example icon button with a menu icon\">\n<i class=\"fas fa-times\"></i></button>\n\n\n<svg id=\"svg-{{id}}\"  xmlns=\"http://www.w3.org/2000/svg\">\n\n  </svg>\n\n\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss']\n})\nexport class ImageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"image-container\">\n    <div class=\"image-preview\">\n\n    </div>\n    <div class=\"params\">\n        <div>colortable</div>\n        <div>number of drafts/color groups</div>\n    </div>\n</div>","import { Directive, OnInit } from '@angular/core';\nimport { Bounds, Draft, Interlacement } from '../../../core/model/datatypes';\nimport { initDraftWithParams } from '../../../core/model/drafts';\n\n@Directive({\n  selector: 'app-marquee'\n})\n\n\nexport class MarqueeComponent implements OnInit{\n\n  id: number;\n  draft: Draft = initDraftWithParams({ud_name: \"selection\"});\n\n  bounds:Bounds = {\n    topleft: {x: 0, y:0},\n    width: 0,\n    height: 0\n  }\n\n  start:Interlacement = {i: 0, j:0, si: 0};\n  active = false;\n  scale: number; \n  filter = \"or\"\n\n  ngOnInit(){\n    console.log(this.draft.id);\n  }\n\n  public getDraftId(){\n    return this.draft.id;\n  }\n\n\n  public setPositionAndSize(bounds: Bounds){\n    this.bounds  = bounds;\n  }\n\n\n\n}\n","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { Bounds, Point, Note } from '../../../core/model/datatypes';\nimport utilInstance from '../../../core/model/util';\nimport { NotesService } from '../../../core/provider/notes.service';\nimport { ViewportService } from '../../provider/viewport.service';\n\n@Component({\n  selector: 'app-note',\n  templateUrl: './note.component.html',\n  styleUrls: ['./note.component.scss']\n})\nexport class NoteComponent implements OnInit {\n\n  //generated by the note service\n  @Input()  id: number;\n  @Input()  default_cell: number;\n\n  @Input()\n  get scale(): number { return this._scale; }\n  set scale(value: number) {\n    this._scale = value;\n    this.rescale();\n  }\n  private _scale:number = 5;\n\n  @Output() deleteNote: any = new EventEmitter();  \n  @Output() saveNoteText: any = new EventEmitter();  \n\n  note: Note;\n  bounds: Bounds = {\n    topleft: {x:0, y:0},\n    width: 200, \n    height: 200\n  };\n\n\n  markdown: string = \"\";\n\n  show_url: boolean = false;\n  canvas: HTMLCanvasElement;\n  cx: any;\n  disable_drag: boolean = false;\n  image_url: string = \"\";\n  moveSubscription: Subscription;\n  constructor(private notes: NotesService,private viewport:ViewportService) { \n\n  }\n\n  ngOnInit() {\n    this.note = this.notes.get(this.id);\n    if(this.note == undefined){\n      this.bounds.topleft = {x: 0, y: 0};\n    }else{\n      this.bounds.topleft = {\n        x: this.note.interlacement.j * this.scale,\n        y: this.note.interlacement.i * this.scale\n      }\n\n    }\n\n   \n  }\n\n  ngAfterViewInit(){\n    this.canvas = <HTMLCanvasElement> document.getElementById(\"notecanvas-\"+this.note.id.toString());\n    this.cx = this.canvas.getContext(\"2d\");\n    this.rescale();\n    \n  }\n\n  /**\n   * called via resize button\n   * @param event \n   */\n  @HostListener('mousedown', ['$event'])\n  private onStart(event) {\n    if(event.target.id == 'resize_button'){\n      this.moveSubscription = \n           fromEvent(document, 'mousemove').subscribe(e => this.onDrag(e)); \n\n    }\n\n  }\n\n  @HostListener('mouseup', ['$event'])\n  private onEnd(event) {\n      if(this.moveSubscription !== undefined) this.moveSubscription.unsubscribe();\n    \n\n  }\n\n  /**\n   * called via drag handler to reset position\n   * @param event \n   */\n  onDrag(event: any){\n    const zoom_factor:number = this.default_cell/this.scale;\n    const pointer:Point = {x: event.clientX, y: event.clientY};  \n    this.note.width =(pointer.x - this.bounds.topleft.x + 10)*zoom_factor;\n    this.note.height = (pointer.y - this.bounds.topleft.y + 10)*zoom_factor;\n  }\n\n\n  delete(){\n    this.deleteNote.emit(this.note.id);\n  }\n    \n\n  dragMove($event: any) {\n    const pointer:Point = $event.pointerPosition;\n    const relative:Point = utilInstance.getAdjustedPointerPosition(pointer, this.viewport.getBounds());\n    const adj:Point = utilInstance.snapToGrid(relative, this.scale);\n    this.bounds.topleft = adj;\n    this.note.interlacement = utilInstance.resolvePointToAbsoluteNdx(adj, this.scale);\n  }\n\n\n  /**\n   * Called when main palette is rescaled and triggers call to rescale this element, and update its position \n   * so it remains at the same coords. \n   * @param scale - the zoom scale of the iterface (e.g. the number of pixels to render each cell)\n   */\n   rescale(){\n    if(this.note === undefined){\n       console.error(\"note is undefined on rescale\");\n       return;\n    }\n\n    const zoom_factor:number = this.scale/this.default_cell;\n\n    //redraw at scale\n    const container: HTMLElement = document.getElementById('scalenote-'+this.note.id);\n    container.style.transformOrigin = 'top left';\n    container.style.transform = 'scale(' + zoom_factor + ')';\n\n\n    this.bounds.topleft = {\n      x: this.note.interlacement.j * this.scale,\n      y: this.note.interlacement.i * this.scale\n    };\n\n  }\n\n  save(){\n    this.saveNoteText.emit();\n  }\n\n\n  /**\n   * draw onto the supplied canvas, to be used when printing\n   * @returns \n   */\n   drawForPrint(canvas, cx, scale: number) {\n\n    if(canvas === undefined) return;\n   \n   \n\n    //draw the supplemental info like size\n    cx.fillStyle = \"#666666\";\n    cx.font = scale*2+\"px Verdana\";\n    cx.fillText(this.note.text,this.bounds.topleft.x, this.bounds.topleft.y+this.bounds.height + 20 );\n\n  }\n\n  disableDrag(){\n    this.disable_drag = true;\n  }\n\n  enableDrag(){\n    this.disable_drag = false;\n  }\n\n  uploadImage(){\n    this.show_url = true;\n\n  }\n\n  enterUrl(){\n    this.show_url = false;\n\n  }\n\n  colorChange(event: any){\n   this.notes.setColor(this.id, event);\n  }\n\n  hidePreview(e) { console.log(e.getContent()); }\n\n\n  // expandDown(event: any){\n  //   console.log(\"EXPAND DOWN\")\n  //   this.moveSubscription = \n  //         fromEvent(event.target, 'mousemove').subscribe(e => this.onDrag(e)); \n  // }\n\n  // expandUp(event: any) {\n  //   console.log(\"EXPAND UP\")\n  //   this.moveSubscription.unsubscribe();\n  // }\n\n\n\n\n\n}\n","\n<!--TODO add z index support here-->\n<div class=\"selectable-{{!disable_drag}}\" \n[cdkDragDisabled] = \"disable_drag\"\ncdkDrag\n[cdkDragFreeDragPosition]=\"bounds.topleft\"\n(cdkDragMoved)=\"dragMove($event)\">\n\n\n<div class=\"note-container\" \n[style.width.px]=\"note.width\"\n[style.min-height.px]=\"note.height\"\n[style.background]=\"note.color\"\nid=\"scalenote-{{note.id}}\">\n\n\n\n\n  <div class=\"note-opts\"> \n\n        <div class=\"align-left\">\n        <div class=\"handle\" cdkDragHandle>\n          <button mat-icon-button class=\"fa-solid fa-up-down-left-right\"></button>\n        </div>\n      </div>\n        \n      <div class=\"align-right\">\n      <button \n          mat-icon-button\n          matTooltip= \"Change Note Color\"\n          (colorPickerChange) = 'colorChange($event)'  \n          class=\"fa-solid fa-palette\" \n          [(colorPicker)]=\"note.color\" \n          [style.background]=\"note.color\" \n          >\n      </button> \n    \n\n        <button *ngIf=\"!show_url\"\n        matTooltip= \"Upload Image\"\n        mat-icon-button\n        class=\"fas fa-image\"\n        (click)=\"uploadImage()\">\n        </button>\n\n \n    \n        <button \n        matTooltip= \"Delete\"\n        mat-icon-button\n        class=\"fas fa-times\"\n        [name]=\"delete\"\n        (click)=\"delete()\">\n        </button>\n      </div>\n    </div>\n    <div class=\"text-entry\">\n\n    <form class=\"example-form\">\n      <mat-form-field class=\"notetitle\" appearance=\"fill\">\n        <input matInput placeholder=\"note title\"  [(ngModel)]=\"note.title\" (focusout)=\"save()\" name=\"title\">\n\n      </mat-form-field>\n      <div *ngIf=\"note.imageurl\">\n        <img [src]=\"note.imageurl\" >     \n       </div>\n    \n\n      <mat-form-field *ngIf=\"show_url\"\n      class=\"url\">\n        <mat-label>url</mat-label>\n        <input type=\"tel\" matInput [(ngModel)]=\"note.imageurl\" [style.width.px]=\"note.width\" placeholder=\"enter the url to your image\">\n        <button \n        matTooltip= \"enter url\"\n        mat-icon-button\n        class=\"fa-solid fa-check\"\n        (click)=\"enterUrl()\">\n        </button>\n      </mat-form-field>\n\n\n  \n        <mat-form-field class=\"textfield\" appearance=\"fill\">\n          <textarea cdkTextareaAutosize resizeToFitContent matInput placeholder=\"add your note text here\" [(ngModel)]=\"note.text\" name=\"text\" (focusout)=\"save()\"></textarea>\n        </mat-form-field>\n    </form>\n\n    </div>\n\n    <div class=\"expand\" >\n       <button mat-icon-button id=\"resize_button\" class=\"expand-icon fa-solid fa-up-right-and-down-left-from-center\"></button>\n       \n    </div>\n\n    <canvas id=\"notecanvas-{{note.id}}\" hidden></canvas>\n</div>\n</div>\n\n\n\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { DynamicOperation, OperationInlet, OpNode } from '../../../../core/model/datatypes';\nimport { getDraftName } from '../../../../core/model/drafts';\nimport { OperationService } from '../../../../core/provider/operation.service';\nimport { SystemsService } from '../../../../core/provider/systems.service';\nimport { TreeService } from '../../../../core/provider/tree.service';\n\n\n@Component({\n  selector: 'app-inlet',\n  templateUrl: './inlet.component.html',\n  styleUrls: ['./inlet.component.scss']\n})\nexport class InletComponent implements OnInit {\n\n  @Input() opid:  number;\n  @Input() inletid:  number;\n  @Input() dynamic: boolean;\n  @Output() onInputSelected = new EventEmitter <any>(); \n  @Output() onInputVisibilityChange = new EventEmitter <any>(); \n  @Output() onConnectionRemoved = new EventEmitter <any>(); \n  @Output() onInletChange = new EventEmitter <any>(); \n  @Output() onInletLoaded = new EventEmitter <any>(); \n\n  fc: UntypedFormControl;\n  textValidate: any;\n  all_system_codes: Array<any>;\n  number_opts: Array<number>;\n  opnode: OpNode;\n  inlet: OperationInlet;\n  selectedValue: number; \n  inlet_desc: string;\n  show_connection_name: number = -1;\n  inlet_open = true;\n  show_inlet_desc = false;\n  inlet_for_drafts = true;\n  inlet_name = \"\";\n  constructor(\n    public tree: TreeService, \n    private systems: SystemsService, \n    private ops: OperationService,\n    ) { \n\n  }\n\n  ngOnInit(): void {    \n    this.opnode = this.tree.getOpNode(this.opid);\n    this.all_system_codes = this.systems.weft_systems.map(el => {return {code: el.name, id: el.id}} );\n    const op = this.ops.getOp(this.opnode.name);\n    \n    this.number_opts = [];\n    for(let i = 1; i < 50; i++){\n      this.number_opts.push(i);\n    }\n    \n    // initalize any dyanmic inlets\n    if(this.opnode.inlets.length > 0 && this.inletid >= op.inlets.length && this.dynamic){\n      const type = (<DynamicOperation> op).dynamic_param_type;\n      this.inlet = <OperationInlet>{\n        type: type,\n        name: '',\n        value: this.parseDefaultInletValue(type, this.opnode.inlets[this.inletid]),\n        uses: 'draft',\n        num_drafts: 1,\n        dx: ''\n      }\n    }else{\n      this.inlet = op.inlets[this.inletid];\n    }\n\n    if(this.inlet === undefined){\n      this.inlet = <OperationInlet>{\n        type: 'null',\n        name: '',\n        value: -1,\n        uses: 'draft',\n        num_drafts: 1,\n        dx: 'input'\n      }\n    }\n\n\n    this.fc = new UntypedFormControl(this.parseDefaultInletValue(this.inlet.type, this.opnode.inlets[this.inletid]));\n    this.inlet_desc = \"input \"+this.inlet.dx;\n    this.inlet_for_drafts = this.inlet.uses === 'draft';\n    this.inlet_name = this.inlet.name;\n\n  }\n\n  ngAfterViewInit(){\n\n    this.onInletLoaded.emit({ndx: this.inletid});\n  }\n\n  checkIfInletIsOpen(){\n    this.inlet_open = this.inlet.num_drafts == -1 || (this.tree.getInputsAtNdx(this.opid, this.inletid).length < this.inlet.num_drafts);\n\n  }\n\n  parseDefaultInletValue(type: string, value: any) : any {\n    switch (type){\n      case 'number':\n      case 'system':\n      case 'draft':\n        return parseInt(value);\n        break;\n      case 'notation':\n      case 'string':\n        return value.slice();\n        break;\n\n      case 'color':\n        return value;\n        break;\n      \n    }\n  }\n\n\n\n  toggleVisibility(input_ndx: number){\n      if(input_ndx == this.show_connection_name){\n        this.onInputVisibilityChange.emit({inletid: this.inletid, ndx_in_inlets: input_ndx, show: false});\n        this.show_connection_name = -1;\n      }  else{\n        this.show_connection_name = input_ndx;\n        this.onInputVisibilityChange.emit({inletid: this.inletid, ndx_in_inlets: input_ndx, show: true});\n\n      }\n      \n  }\n\n\n  inputSelected(){\n\n\n      this.onInputSelected.emit({inletid: this.inletid});\n      this.show_connection_name = -1;\n      \n  }\n\n  removeConnectionTo(sd_id: number){\n    \n    this.onConnectionRemoved.emit({from: sd_id, to: this.opid, inletid: this.inletid});\n    this.checkIfInletIsOpen();\n\n  }\n\n  getInputName(id: number) : string {\n    const sd = this.tree.getDraft(id);\n    if(sd === null || sd === undefined) return \"null draft\"\n    return getDraftName(sd);\n  }\n\n  inletChange(){\n\n    const opnode: OpNode = <OpNode> this.tree.getNode(this.opid);\n\n    // switch(this.inlet.type){\n    //   case 'number':\n    //     this.fc.setValue(value);\n    //     opnode.inlets[this.inletid] = value;\n    //     break;\n    //   case 'system':\n    //    // opnode.inlets[this.inletid] = value;\n    //     break;\n    //   case 'color':\n    //     this.fc.setValue(value);\n    //     opnode.inlets[this.inletid] = value;\n    //     break;\n    //   case 'notation':\n    //     this.fc.setValue(value);\n    //     opnode.inlets[this.inletid] = value;\n    //     break;\n\n    // }\n\n    this.onInletChange.emit({id: this.inletid});\n\n  }\n\n\n\n\n\n\n}\n","<ng-container *ngIf=\"inlet.type !== 'null'\">\n\n\n\n<div class=\"inlet_block\">\n\n\n\n    <ng-container *ngIf=\"inlet.type === 'number' || inlet.type === 'draft'\">\n        <span class=\"inlet-label\">{{opnode.inlets[inletid]}}</span> \n\n            <mat-select matNativeControl\n            matTooltip=\"this will assign this draft to the number you select\" \n            [(ngModel)]=\"opnode.inlets[inletid]\"\n            (selectionChange)=\"inletChange()\">\n            <mat-option *ngFor=\"let num of number_opts\" [value]=\"num\">\n                {{num}}\n            </mat-option>\n         </mat-select>\n\n    </ng-container>\n\n\n\n\n    <ng-container *ngIf=\"inlet.type === 'notation' || inlet.type === 'profile' \">\n\n\n        <span class=\"dynamic_\" *ngIf=\"inlet.type === 'notation'\" class=\"inlet-label\"> ({{opnode.inlets[inletid]}})</span>\n        <span  *ngIf=\"inlet.type === 'profile'\" class=\"inlet-label\"> {{opnode.inlets[inletid]}}</span>\n\n    </ng-container>\n\n\n\n    <ng-container *ngIf=\"inlet.type === 'system'\">\n     \n        <span class=\"inlet-label\">layer {{inletid+1}}, system: </span>\n            <mat-select matNativeControl\n            matTooltip=\"select the system to associate with this layer\" \n            [(ngModel)]=\"opnode.inlets[inletid]\"\n            (selectionChange)=\"inletChange()\">\n            <mat-option *ngFor=\"let sys of all_system_codes\" [value]=\"sys.id\">\n                {{sys.code}}\n            </mat-option>\n        </mat-select>\n\n\n    </ng-container>\n\n    <ng-container *ngIf=\"inlet.type === 'color'\">\n        <div class=\"colorgroup\">\n            \n            <div\n            [matTooltip]=\"fc.value\"\n            [style.background-color] = fc.value\n            class=\"input-color\"></div>\n\n            </div>\n\n    </ng-container>\n \n\n\n\n\n    <!-- draw the first set of inlets that have inputs first. -->\n    <div *ngFor=\"let input of tree.getOpComponentInputs(opid, inletid); let i = index\">\n    \n    \n        <div id = \"inlet{{opid}}-{{inletid}}-{{i}}\" class=\"inlet_connector\">\n\n            <button \n            class=\"toggle_visibility\"\n            [matTooltip]='inlet.dx'\n            (click)=\"toggleVisibility(i)\">\n            <i *ngIf=\"show_connection_name !== i\" class=\"fa-solid fa-eye\"></i>\n            <i *ngIf=\"show_connection_name === i\" class=\"fa-solid fa-eye-slash\"></i>\n            </button>\n            \n        \n            <!-- list everything attached here-->\n        \n        \n            <div class=\"show_connection\" *ngIf=\"show_connection_name == i\">\n                <div><p><b>{{getInputName(input)}}</b> is {{inlet.dx}}</p></div>\n            </div>   \n  \n\n        </div>\n\n    </div>\n\n    <button *ngIf=\"inlet.num_drafts == -1 || (tree.getInputsAtNdx(opid, inletid).length < inlet.num_drafts)\"\n    class=\"open_inlet\"\n    [matTooltip]='inlet.dx'\n    (click)=\"inputSelected()\">\n    <i *ngIf=\"inlet_for_drafts\" class=\"draft-inlet-icon\"></i>\n    <i *ngIf=\"!inlet_for_drafts\" class=\"material-inlet-icon\"></i>\n    <!-- <i class=\"fa-sharp fa-solid fa-circle-down\"></i> -->\n    </button>\n\n    {{inlet_name}}\n\n    <div class=\"show_connection\" *ngIf=\"show_inlet_desc\">\n        <div>inlet description to: <b>{{inlet.dx}}</b></div>\n    </div> \n        \n</div>\n\n</ng-container>","import { Component, EventEmitter, Input, OnInit, Output, QueryList, ViewChildren } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Bounds, DynamicOperation, Interlacement, IOTuple, Operation, OpNode, Point } from '../../../core/model/datatypes';\nimport utilInstance from '../../../core/model/util';\nimport { DesignmodesService } from '../../../core/provider/designmodes.service';\nimport { ImageService } from '../../../core/provider/image.service';\nimport { OperationDescriptionsService } from '../../../core/provider/operation-descriptions.service';\nimport { OperationService } from '../../../core/provider/operation.service';\nimport { SystemsService } from '../../../core/provider/systems.service';\nimport { TreeService } from '../../../core/provider/tree.service';\nimport { OpHelpModal } from '../../modal/ophelp/ophelp.modal';\nimport { MultiselectService } from '../../provider/multiselect.service';\nimport { ViewportService } from '../../provider/viewport.service';\nimport { SubdraftComponent } from '../subdraft/subdraft.component';\nimport { InletComponent } from './inlet/inlet.component';\nimport { ParameterComponent } from './parameter/parameter.component';\n\n\n\n@Component({\n  selector: 'app-operation',\n  templateUrl: './operation.component.html',\n  styleUrls: ['./operation.component.scss']\n})\nexport class OperationComponent implements OnInit {\n\n\n  @ViewChildren(ParameterComponent) paramsComps!: QueryList<ParameterComponent>;\n  @ViewChildren(InletComponent) inletComps!: QueryList<InletComponent>;\n\n   @Input() id: number; //generated from the tree service\n   @Input() name: string;\n\n\n   @Input()\n   get scale(): number { return this._scale; }\n   set scale(value: number) {\n     this._scale = value;\n     this.rescale();\n   }\n   private _scale:number = 5;\n \n /**\n  * handles actions to take when the mouse is down inside of the palette\n  * @param event the mousedown event\n  */\n\n   @Input() default_cell: number;\n   @Input() zndx: number;\n   @Output() onConnectionRemoved = new EventEmitter <any>();\n   @Output() onConnectionMove = new EventEmitter <any>();\n   @Output() onOperationMove = new EventEmitter <any>(); \n   @Output() onOperationMoveEnded = new EventEmitter <any>(); \n   @Output() onOperationParamChange = new EventEmitter <any>(); \n   @Output() deleteOp = new EventEmitter <any>(); \n   @Output() duplicateOp = new EventEmitter <any>(); \n   @Output() onInputAdded = new EventEmitter <any> ();\n   @Output() onInputVisibilityChange = new EventEmitter <any> ();\n   @Output() onInletLoaded = new EventEmitter <any> ();\n   @Output() onOpLoaded = new EventEmitter <any> ();\n\n\n   params_visible: boolean = true;\n    /**\n    * reference to top, left positioin as absolute interlacement\n    */\n   interlacement:Interlacement;\n\n    /**\n    * reference to the height of this element in units of the base cell \n    */\n    base_height:number;\n\n    /**\n    * flag to tell if this is being from a loaded from a saved file\n    */\n    loaded: boolean = false;\n\n    /**\n      * flag to tell if this has been duplicated from another operation\n      */\n    duplicated: boolean = false;\n\n    description: string; \n    application: string; \n    displayname: string; \n\n   tooltip: string = \"select drafts to input to this operation\"\n\n   disable_drag: boolean = false;\n \n   topleft: Point = {x: 0, y:0};\n\n\n  //  bounds: Bounds = {\n  //    topleft: {x: 0, y:0},\n  //    width: 200,\n  //    height: 100\n  //  };\n   \n   op:Operation | DynamicOperation;\n\n   opnode: OpNode;\n\n   //for input params form control\n   loaded_inputs: Array<number> = [];\n\n   has_image_preview: boolean = false;\n\n  // has_connections_in: boolean = false;\n   subdraft_visible: boolean = true;\n\n   is_dynamic_op: boolean = false;\n   \n   dynamic_type: string = 'main';\n\n   filewarning: string = \"\";\n\n   all_system_codes: Array<string> = [];\n\n   viewInit: boolean = false;\n\n\n   hasInlets: boolean = false;\n\n  constructor(\n    private operations: OperationService, \n    private dialog: MatDialog,\n    private viewport: ViewportService,\n    public tree: TreeService,\n    public dm: DesignmodesService,\n    private imageService: ImageService,\n    public systems: SystemsService,\n    public multiselect: MultiselectService,\n    public opdescriptions: OperationDescriptionsService) { \n     \n\n  }\n\n  ngOnInit() {\n\n    this.op = this.operations.getOp(this.name);\n    this.is_dynamic_op = this.operations.isDynamic(this.name);\n    this.description = this.opdescriptions.getOpDescription(this.name);\n    this.displayname = this.opdescriptions.getDisplayName(this.name);\n    this.application = this.opdescriptions.getOpApplication(this.name);\n\n\n    // const tl: Point = this.viewport.getTopLeft();\n    // const tl_offset = {x: tl.x, y: tl.y};\n    // console.log(\"setting position to \", tl)\n\n    //  if(this.topleft.x == 0 && this.topleft.y == 0){\n    //   this.setPosition(tl_offset);\n    //  } \n     this.interlacement = utilInstance.resolvePointToAbsoluteNdx(this.topleft, this.scale);\n\n\n    this.opnode = <OpNode> this.tree.getNode(this.id);\n    if(this.is_dynamic_op) this.dynamic_type = (<DynamicOperation>this.op).dynamic_param_type;\n\n  }\n\n  ngAfterViewInit(){\n    this.rescale();\n   // this.onOperationParamChange.emit({id: this.id});\n    if(this.name == 'imagemap' || this.name == 'bwimagemap'){\n      \n      this.drawImagePreview();\n    }\n\n    // const children = this.tree.getDraftNodes().filter(node => this.tree.getSubdraftParent(node.id) === this.id);\n    // if(children.length > 0) this.updatePositionFromChild(<SubdraftComponent>this.tree.getComponent(children[0].id));\n   \n    this.viewInit = true;\n    this.hasInlets = this.op.inlets.length > 0 || this.opnode.inlets.length > 0;\n\n\n    this.onOpLoaded.emit({id: this.id})\n\n  }\n\n\n\n  // setBounds(bounds:Bounds){\n  //   this.bounds.topleft = {x: bounds.topleft.x, y: bounds.topleft.y},\n  //   this.bounds.width = bounds.width;\n  //   this.bounds.height = bounds.height;\n  //   this.interlacement = utilInstance.resolvePointToAbsoluteNdx(bounds.topleft, this.scale);\n  // }\n\n  setPosition(pos: Point){\n    this.topleft =  {x: pos.x, y:pos.y};\n    this.interlacement = utilInstance.resolvePointToAbsoluteNdx(pos, this.scale);\n  }\n\n  // refreshInlets(){\n  //   this.opnode.inlets\n  // }\n\n\n\n  rescale(){\n\n    const zoom_factor = this.scale / this.default_cell;\n    const container: HTMLElement = document.getElementById('scale-'+this.id);\n    if(container === null) return;\n\n    container.style.transformOrigin = 'top left';\n    container.style.transform = 'scale(' + zoom_factor + ')';\n\n    this.topleft = {\n      x: this.interlacement.j * this.scale,\n      y: this.interlacement.i * this.scale\n    };\n\n    // this.bounds.height = this.base_height * zoom_factor;\n\n \n  \n\n\n  }\n\n  drawForPrint(canvas, cx, scale){\n    if(canvas === undefined) return;\n    const bounds = document.getElementById('scale-'+this.id);\n\n    cx.fillStyle = \"#ffffff\";\n    cx.fillRect(this.topleft.x, this.topleft.y, bounds.offsetWidth, bounds.offsetHeight); \n\n    cx.fillStyle = \"#666666\";\n    cx.font = this.scale*2+\"px Verdana\";\n\n    let datastring: string = this.name+\" // \";\n    let opnode = this.tree.getOpNode(this.id);\n\n    this.op.params.forEach((p, ndx) => {\n      datastring = datastring + p.name +\": \"+ opnode.params[ndx] + \", \";\n    });\n\n    cx.fillText(datastring,this.topleft.x + 5, this.topleft.y+25 );\n\n\n  }\n\n   /**\n   * updates this components position based on the child component's position\n   * */\n    updatePositionFromChild(child: SubdraftComponent){\n\n      if(child == undefined) return;\n       const container = <HTMLElement> document.getElementById(\"scale-\"+this.id);\n       if(container !== null) this.setPosition({x: child.topleft.x, y: child.topleft.y - (container.offsetHeight * this.scale/this.default_cell) });\n  \n    }\n\n  /**\n   * set's the width to at least 200, but w if its large\n   */\n  // setWidth(w:number){\n  //   this.bounds.width = (w > 200) ? w : 200;\n  // }\n\n  // addOutput(dm: DraftMap){\n  //   this.outputs.push(dm);\n  // }\n\n  disableDrag(){\n    console.log(\"DIABLE DRAG CALLED ON \", this.id)\n    this.disable_drag = true;\n  }\n\n  enableDrag(){\n    this.disable_drag = false;\n  }\n\n  toggleParamsVisible(){\n    this.params_visible = !this.params_visible;\n  }\n\n  toggleSelection(e: any){\n\n\n      if(e.shiftKey == true){\n        this.multiselect.toggleSelection(this.id, this.topleft);\n      }else{\n        this.multiselect.clearSelections();\n      }\n\n  }\n\n  \n\n  /**\n   * prevents hits on the operation to register as a palette click, thereby voiding the selection\n   * @param e \n   */\n  mousedown(e: any){\n    e.stopPropagation();\n\n\n  }\n\n  drop(){\n    console.log(\"dropped\");\n  }\n\n\n  inputSelected(obj: any){\n    let input_id = obj.inletid;\n    this.onInputAdded.emit({id: this.id, ndx: input_id});\n  }\n\n  visibilityChange(obj: any){\n    this.onInputVisibilityChange.emit({id: this.id, ndx:  obj.inletid, ndx_in_inlets: obj.ndx_in_inlets, show: obj.show});\n  }\n\n  /**\n   * resets the visibility on any inlet in the attached list\n   * @param inlets \n   */\n  resetVisibliity(inlets: Array<number>){\n\n    inlets.forEach(id => {\n      const ilet = this.inletComps.find(el => el.inletid == id);\n      if(ilet !== undefined) ilet.show_connection_name = -1;\n    })\n  }\n\n\n\n\n  removeConnectionTo(obj:any){\n    this.onConnectionRemoved.emit(obj);\n\n    // const inlets = this.tree.getInputs(this.id);\n    // inlets.forEach(id => {\n    //   const comp = <ConnectionComponent> this.tree.getComponent(id);\n    //   comp.updateToPosition(this);\n\n    // })\n\n  }\n\n  openHelpDialog() {\n    const dialogRef = this.dialog.open(OpHelpModal, {\n      data: {\n        name: this.op.name,\n        op: this.op\n      }\n    });\n\n  }\n\n\n\n  /**\n   * called from the child parameter when a value has changed, this functin then updates the inlets\n   * @param id an object containing the id of hte parameter that has changed\n   * @param value \n   */\n  onParamChange(obj: any){\n\n\n\n\n    if(this.is_dynamic_op){\n\n      const opnode = <OpNode> this.tree.getNode(this.id);\n      const op = <DynamicOperation> this.operations.getOp(opnode.name);\n      //this is a hack to use an input draft to generate inlets\n      \n      if(op.dynamic_param_id == obj.id || obj.type ==\"notation_toggle\"){\n\n        if(op.params[obj.id].type == 'draft'){\n          const inputs:Array<IOTuple> = this.tree.getInputsAtNdx(this.id, 0);\n          if(inputs.length === 0) obj.value = -1;\n          else {\n            const draft_node_in_id = inputs[0].tn.inputs[0].tn.node.id;\n            obj.value = draft_node_in_id;\n          }\n          \n        }\n\n        this.opnode.inlets = this.tree.onDynanmicOperationParamChange(this.id, this.name, opnode.inlets, obj.id, obj.value)\n        this.hasInlets = opnode.inlets.length > 0;\n\n        if(opnode.name == 'imagemap' || opnode.name == 'bwimagemap'){\n\n\n          this.drawImagePreview();\n\n          //update the width and height\n          let image_param = opnode.params[op.dynamic_param_id];\n          opnode.params[1] = image_param.data.width;\n          opnode.params[2] = image_param.data.height;\n\n\n        }\n      }\n\n    }\n    \n    this.onOperationParamChange.emit({id: this.id});\n  }\n\n  drawImagePreview(){\n    let param = this.paramsComps.get( (<DynamicOperation>this.op).dynamic_param_id)\n    param.drawImagePreview();\n  }\n\n  //returned from a file upload event\n  /**\n   * get the data type and process it here\n   * @param obj \n   */\n  handleFile(obj: any){\n\n\n    const image_div =  document.getElementById('param-image-'+this.id);\n    image_div.style.display = 'none';\n\n    switch(obj.data.type){\n      case 'image':\n\n        if(this.operations.isDynamic(this.name) && (<DynamicOperation> this.op).dynamic_param_type !== 'color') return;\n\n        if(obj.data.warning !== ''){\n          image_div.style.display = 'flex';\n          this.filewarning = obj.warning;\n        }else{\n\n          const opnode = this.tree.getOpNode(this.id);\n          \n          obj.inlets.forEach(hex => {\n\n            //add any new colors\n            const ndx = opnode.inlets.findIndex(el => el.value === hex);\n            if(ndx === -1){\n              opnode.inlets.push(hex);\n            }\n          });\n\n          const remove = [];\n          //now remove any inlets that no longer have values\n          opnode.inlets.forEach((inlet, ndx) => {\n            if(inlet === 0) return;\n            const found = obj.inlets.find(el => el === inlet);\n            if(found === undefined){\n              remove.push(ndx);\n            }\n          })\n          remove.forEach(removeid => {\n            opnode.inlets.splice(removeid, 1);\n          });\n\n        \n          //now update the default parameters to the original size \n          opnode.params[1] = obj.data.width;\n          opnode.params[2] = obj.data.height;\n\n\n        }\n        break;\n    }\n\n    this.onOperationParamChange.emit({id: this.id});  \n\n  }\n\n  inletLoaded(obj){\n    obj.opid = this.id;\n    this.onInletLoaded.emit(obj);\n  }\n\n  /**\n   * \n   * @param id \n   * @param value \n   */\n  onInletChange(obj: any){\n    this.onOperationParamChange.emit({id: this.id});  \n  }\n\n  delete(){\n    this.deleteOp.emit({id: this.id});\n  }\n\n  duplicate(){\n    this.duplicateOp.emit({id: this.id});\n  }\n\n\n\n  dragStart(e: any) {\n\n     if(this.multiselect.isSelected(this.id)){\n      this.multiselect.setRelativePosition(this.topleft);\n     }else{\n      this.multiselect.clearSelections();\n     }\n  }\n\n  dragMove($event: any) {\n       //position of pointer of the page\n\n\n\n       const pointer:Point = $event.pointerPosition;\n       const relative:Point = utilInstance.getAdjustedPointerPosition(pointer, this.viewport.getBounds());\n       const adj:Point = utilInstance.snapToGrid(relative, this.scale);\n       this.topleft = adj;  \n       this.interlacement = utilInstance.resolvePointToAbsoluteNdx(adj, this.scale);\n       this.onOperationMove.emit({id: this.id, point: adj});\n\n  }\n\n\n  dragEnd($event: any) {\n    this.multiselect.setRelativePosition(this.topleft);\n    this.onOperationMoveEnded.emit({id: this.id});\n\n  }\n \n\n}\n","<div class=\"operation-container no-text-select selectable-{{!disable_drag}}\"\ncdkDrag\n(mousedown)=\"mousedown($event)\"\n(click)='toggleSelection($event)' \n[style.z-index] = \"zndx\"\n[cdkDragDisabled] = \"disable_drag\"\n[cdkDragFreeDragPosition]=\"topleft\"\n(cdkDragMoved)=\"dragMove($event)\"\n(cdkDragEnded)=\"dragEnd($event)\"\n(cdkDragStarted)=\"dragStart($event)\"\n>\n\n  <div id='scale-{{id}}' class=\"operation-container\">\n\n        <div class=\"cxn-row\" >\n            <div  *ngFor=\"let input of opnode.inlets; let i = index\" class=\"input-group\">\n              \n              <app-inlet \n              [opid]='id'\n              [inletid]='i'\n              [dynamic]='is_dynamic_op'\n              (onInputSelected)=\"inputSelected($event)\"\n              (onInputVisibilityChange)=\"visibilityChange($event)\"\n              (onConnectionRemoved)=\"removeConnectionTo($event)\"\n              (onInletChange)=\"onInletChange($event)\"\n              (onInletLoaded)=\"inletLoaded($event)\"\n              ></app-inlet>\n            </div>\n          \n        </div>\n\n\n        <div class=\"top-row\" >\n\n\n\n        <div class=\"operation-details\">\n            <!-- <div class=\"name\">{{op.name}} // {{id}}</div> -->\n            <div class=\"name no-text-select\">{{displayname}}</div>\n          \n        </div>\n\n        <button \n        class=\"button is-small is-primary fas fa-question\"\n        (click)=\"openHelpDialog()\">\n    </button> \n\n        <button \n        matTooltip= \"Duplilcate\"\n        class=\"button is-small is-primary fa fa-clone\"\n        (click)=\"duplicate()\">\n        </button>\n        \n\n        <button \n        class=\"button is-small is-primary\"\n        (click)=\"delete()\">\n        <i class=\"fas fa-times\"></i>\n        </button>\n      </div>\n\n      <div class=\"params\">\n\n        \n          <ng-container *ngFor=\"let param of op.params; let i = index\">\n            \n            <app-parameter class=\"param\" \n            [param]='param' \n            [opid]='id' \n            [paramid]='i'\n            (onOperationParamChange) = onParamChange($event)\n            (onFileUpload) = handleFile($event)>\n          </app-parameter>\n\n          </ng-container>\n\n\n\n      <!-- \n        <button class=\"refresh\" \n        mat-icon-button\n          (click)=\"toggleParamsVisible()\"\n          matTooltip=\"update draft with input values\">\n          <i *ngIf=\"!params_visible\" class=\"fas fa-edit\"></i>\n          <i *ngIf=\"params_visible\" class=\"fas fa-eye-slash\"></i>\n      </button>   -->\n\n      </div>\n\n  </div>\n</div>  \n","import { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { AbstractControl, UntypedFormControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { BoolParam, FileParam, NotationTypeParam, NumParam, OpNode, SelectParam, StringParam } from '../../../../core/model/datatypes';\nimport { OperationDescriptionsService } from '../../../../core/provider/operation-descriptions.service';\nimport { OperationService } from '../../../../core/provider/operation.service';\nimport { TreeService } from '../../../../core/provider/tree.service';\nimport { ImageService } from '../../../../core/provider/image.service';\n\n\nexport function regexValidator(nameRe: RegExp): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const globalRegex = new RegExp(nameRe, 'g');\n    const valid =  globalRegex.test(control.value);\n    return !valid ? {forbiddenInput: {value: control.value}} : null;\n  };\n}\n\n\n\n@Component({\n  selector: 'app-parameter',\n  templateUrl: './parameter.component.html',\n  styleUrls: ['./parameter.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  // providers: [\n  //   {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'outline', subscriptSizing: 'dynamic' }}\n  // ]\n})\nexport class ParameterComponent implements OnInit {\n  \n  fc: UntypedFormControl;\n  opnode: OpNode;\n  name: any;\n\n  @Input() param:  NumParam | StringParam | SelectParam | BoolParam | FileParam;\n  @Input() opid:  number;\n  @Input() paramid:  number;\n  @Output() onOperationParamChange = new EventEmitter <any>(); \n  @Output() onFileUpload = new EventEmitter <any>(); \n\n  //you need these to access values unique to each type.\n  numparam: NumParam;\n  boolparam: BoolParam;\n  stringparam: StringParam;\n  selectparam: SelectParam;\n  fileparam: FileParam;\n  description: string;\n  has_image_preview: boolean = false;\n  filewarning: string = '';\n\n\n  constructor(\n    public tree: TreeService, \n    public ops: OperationService,\n    public op_desc: OperationDescriptionsService,\n    public imageService: ImageService) { \n  }\n\n  ngOnInit(): void {\n\n    this.opnode = this.tree.getOpNode(this.opid);\n    this.description = this.op_desc.getParamDescription(this.param.name);\n    if(this.description == undefined || this.description == null) this.description = this.param.dx;\n     //initalize the form controls for the parameters: \n\n      switch(this.param.type){\n        case 'number':\n          this.numparam = <NumParam> this.param;\n          this.fc = new UntypedFormControl(this.param.value);\n          break;\n\n        case 'boolean':\n          this.boolparam = <BoolParam> this.param;\n          this.fc = new UntypedFormControl(this.param.value);\n          break;\n\n        case 'select':\n          \n          this.selectparam = <SelectParam> this.param;\n          this.fc = new UntypedFormControl(this.param.value);\n          break;\n\n        case 'file':\n          this.fileparam = <FileParam> this.param;\n          this.fc = new UntypedFormControl(this.param.value);\n          break;\n\n        case 'string':\n          this.stringparam = <StringParam> this.param;\n          this.fc = new UntypedFormControl(this.stringparam.value, [Validators.required, regexValidator((<StringParam>this.param).regex)]);\n          break;\n\n        case 'notation_toggle':\n          this.boolparam = <NotationTypeParam> this.param;\n          this.fc = new UntypedFormControl(this.param.value);\n          break;\n\n        // case 'draft':\n        //   this.draftparam = <DraftParam> this.param;\n        //   this.fc = new FormControl(this.draftparam.value);\n        //   break;\n         \n       \n      }\n\n   \n  \n\n  }\n\n\n  /**\n   * changes the view and updates the tree with the new value\n   * @param value \n   */\n  onParamChange(value: any){\n\n    const opnode: OpNode = <OpNode> this.tree.getNode(this.opid);\n\n    switch(this.param.type){\n      case 'number': \n       if(value == null) value = 1;\n        opnode.params[this.paramid] = value;\n        this.fc.setValue(value);\n        this.onOperationParamChange.emit({id: this.paramid, value: value, type: this.param.type});\n        break;\n\n      case 'boolean':\n        if(value == null) value = false;\n        opnode.params[this.paramid] = (value) ? 1 : 0;\n        this.fc.setValue(value);\n        this.onOperationParamChange.emit({id: this.paramid, value: value, type: this.param.type});\n        break;\n\n      case 'notation_toggle':\n        if(value == null) value = false;\n        opnode.params[this.paramid] = (value) ? 1 : 0;\n        this.fc.setValue(value);\n        this.onOperationParamChange.emit({id: this.paramid, value: value, type: this.param.type});\n        break;\n\n      case 'string':\n        if(value == null) value = '';\n        opnode.params[this.paramid] = value;\n        this.fc.setValue(value);\n        if(!this.fc.hasError('forbiddenInput'))this.onOperationParamChange.emit({id: this.paramid, value: value, type: this.param.type});\n        break;\n\n      case 'select':\n        if(value == null) value = 0;\n        opnode.params[this.paramid] = value;\n        this.fc.setValue(value);\n        this.onOperationParamChange.emit({id: this.paramid, value: value, type: this.param.type});\n        break;\n\n      case 'draft':\n        opnode.params[this.paramid] = value;\n        this.fc.setValue(value);\n        this.onOperationParamChange.emit({id: this.paramid, value: value, type: this.param.type});\n        break;\n    }\n\n   \n  }\n\n  handleError(err: any){\n    console.log(\"CAUGHT ERROR\", err);\n    this.filewarning = err;\n    this.clearImagePreview();\n\n  }\n\n  /**\n   * this is called by the upload services \"On Data function\" which uploads and analyzes the image data in the image and returns it as a image data object\n   * @param obj \n   */\n  handleFile(obj: any){\n\n    this.filewarning = \"\";\n\n    this.opnode.params[this.paramid] = {id: obj[0].id, data: obj[0]};\n    \n    \n    this.onOperationParamChange.emit({id: this.paramid, value: this.opnode.params[this.paramid]});\n    \n    this.fc.setValue(obj[0].name);\n\n\n    switch(obj.type){\n      case 'image':\n\n        if(obj.data.warning !== ''){\n            this.filewarning = obj.warning;\n        }else{\n\n          const opnode = this.tree.getOpNode(this.opid);\n          //now update the default parameters to the original size \n          opnode.params[1] = obj.data.width;\n          opnode.params[2] = obj.data.height;\n          this.drawImagePreview();\n\n        }\n        break;\n    }\n\n\n\n\n  }\n\n  drawImagePreview(){\n\n    const opnode = this.tree.getOpNode(this.opid);\n    const obj = this.imageService.getImageData(opnode.params[this.paramid].id);\n\n    if(obj === undefined || obj.data == undefined || obj.data.image == null ) return;\n\n      const data = obj.data;\n\n      this.has_image_preview = true;\n      const image_div =  document.getElementById('param-image-'+this.opid);\n      image_div.style.display = 'flex';\n\n      const dims_div =  document.getElementById('param-image-dims-'+this.opid);\n      dims_div.innerHTML=data.width+\"px x \"+data.height+\"px\";\n\n      const canvas: HTMLCanvasElement =  <HTMLCanvasElement> document.getElementById('preview_canvas-'+this.opid);\n      const ctx = canvas.getContext('2d');\n\n      const max_dim = (data.width > data.height) ? data.width : data.height;\n      const use_width = (data.width > 100) ? data.width / max_dim * 100 : data.width;\n      const use_height = (data.height > 100) ? data.height / max_dim * 100 : data.height;\n\n      canvas.width = use_width;\n      canvas.height = use_height;\n\n\n      ctx.drawImage(data.image, 0, 0, use_width, use_height);\n  \n\n    \n\n  }\n  clearImagePreview(){\n\n      this.has_image_preview = false;\n\n      const opnode = this.tree.getOpNode(this.opid);\n      const obj = this.imageService.getImageData(opnode.params[this.paramid].id);\n  \n      if(obj === undefined) return;\n  \n        const data = obj.data;\n  \n        const image_div =  document.getElementById('param-image-'+this.opid);\n        image_div.style.display = 'none';\n  \n        const dims_div =  document.getElementById('param-image-dims-'+this.opid);\n        dims_div.innerHTML=\"\";\n  \n        const canvas: HTMLCanvasElement =  <HTMLCanvasElement> document.getElementById('preview_canvas-'+this.opid);\n  \n\n        canvas.width = 0;\n        canvas.height = 0;\n  \n  \n    \n  \n  }\n\n\n\n}\n","    \n\n    <ng-container  *ngIf=\"param.type === 'number'\">\n        \n      <div class=\"number_input\">\n          \n            <input \n            matInput\n            [ngModel] = \"opnode.params[paramid]\"\n            [formControl]=\"fc\"\n            [matTooltip]=\"description\"\n            type = \"number\"\n            [name]=param.name\n            [min]=param.min\n            [max]=param.max\n            step = 1\n            (change)= \"onParamChange(fc.value)\"\n        >\n\n        <div class=\"number-label\">\n          {{param.name}}\n        </div>\n      </div>\n\n\n      <!-- <div class=\"param-slider\">\n        <mat-slider \n        matInput\n        [ngModel] = \"opnode.params[paramid]\"\n        tickInterval=\"1\"\n        [formControl]=\"fc\"\n        [matTooltip]=param.dx\n        [min]=numparam.min\n        [max]=numparam.max\n        step=\"1\" \n        (change)= \"onParamChange(fc.value)\">\n    </mat-slider> \n   </div> -->\n  </ng-container>\n\n  <ng-container  *ngIf=\"param.type == 'select'\">\n    <div class=\"select-input\">\n    <!-- <mat-form-field> -->\n\n\n        <mat-select \n            [ngModel] = \"opnode.params[paramid]\"\n            [matTooltip]=\"description\"\n            [formControl]=\"fc\"\n            (selectionChange)='onParamChange(fc.value)'>\n          <mat-option *ngFor=\"let opt of selectparam.selectlist\" [value]=\"opt.value\">\n            {{opt.name}}\n          </mat-option>\n        </mat-select>\n     <!-- </mat-form-field> -->\n\n     <mat-label class=\"select-label\">{{param.name}}</mat-label>\n\n    </div>\n </ng-container>\n\n    <ng-container  *ngIf=\"param.type == 'boolean' || param.type == 'notation_toggle'\">\n      <!-- <mat-form-field> -->\n\n        <div class=\"boolean-input\">\n\n\n        <mat-slide-toggle\n            [ngModel] = \"opnode.params[paramid]\"\n            [formControl]=\"fc\"\n            [matTooltip]=\"description\"\n            (change)= \"onParamChange(fc.value)\"\n            > \n            <!-- <span *ngIf=\"fc.value==1\">{{boolparam.truestate}}</span>\n            <span *ngIf=\"fc.value==0\">{{boolparam.falsestate}}</span>  -->\n          </mat-slide-toggle>\n\n          <div class=\"boolean-label\">\n            <!-- {{param.name}}: -->\n\n            <span *ngIf=\"fc.value==1\">{{boolparam.truestate}}</span>\n            <span *ngIf=\"fc.value==0\">{{boolparam.falsestate}}</span> \n\n          </div>\n\n        </div>\n        <!-- </mat-form-field> -->\n    </ng-container>\n\n    <ng-container  *ngIf=\"param.type == 'string'\">\n\n      <div class=\"string-input\">\n\n        <div class=\"string-and-refresh\">\n         \n          <textarea matInput\n          class='param-text'\n          [(ngModel)] = \"opnode.params[paramid]\"\n          [matTooltip]=\"description\"\n          [formControl]=\"fc\"\n          [errorStateMatcher]=\"regexValidator\"\n          cdkTextareaAutosize\n          #autosize=\"cdkTextareaAutosize\"\n          cdkAutosizeMinRows=\"1\"\n          cdkAutosizeMaxRows=\"5\"\n          (change)= \"onParamChange(fc.value)\">\n        </textarea>\n\n            <!-- <input matInput class='param-text'\n            [(ngModel)] = \"opnode.params[paramid]\"\n            [formControl]=\"fc\"\n            [errorStateMatcher]=\"regexValidator\"\n            [matTooltip]=\"description\"\n            type = \"text\"\n            (change)= \"onParamChange(fc.value)\"\n          > -->\n\n          <button class=\"refresh\" \n          mat-icon-button\n          (click)= \"onParamChange(fc.value)\"\n          [disabled]=\"!fc.dirty || fc.hasError('required') || fc.hasError('forbiddenInput')\"\n          matTooltip=\"update draft with input values\">\n          <i class=\"fas fa-redo\"></i></button>\n         </div> \n\n        <div class=\"string-label\">{{param.name}} \n          <div class=\"text-err\" *ngIf=\"fc.hasError('required')\">\n            an input is required \n           </div>\n       \n         <div class=\"text-err\" *ngIf=\"fc.hasError('forbiddenInput')\">\n           the current input is not correctly formatted\n           </div>\n\n        </div>\n\n\n    </div>\n      \n  \n\n    </ng-container>\n\n\n    <ng-container  *ngIf=\"param.type == 'file'\">\n       \n      <div class='file-input-param'>\n        \n        <div class=\"form-and-image\">\n        <upload-form \n        type=\"init\" \n        multiple=\"false\"\n        accepts=\".jpg,.png,.bmp\"\n        type=\"single_image\"\n        (onData)=\"handleFile($event)\"\n        (onError)=\"handleError($event)\"\n         class=\"upload-form-box\">\n      </upload-form>\n\n           \n        <div class='param-image' [class.has_image]=\"has_image_preview\" [class.no_image]=\"!has_image_preview\" id=\"param-image-{{opid}}\" >\n          <div class=\"image_preview\" id=\"image_preview-{{opid}}\">\n            <canvas id=\"preview_canvas-{{opid}}\"></canvas>\n            <div id=\"param-image-dims-{{opid}}\"></div> \n          </div>\n        </div>\n      </div>\n\n     \n        \n      <div class=\"file-label\">\n        <div class=\"text-err\" *ngIf=\"filewarning !== ''\">{{filewarning}}</div>\n      </div>\n      \n    </div>\n\n\n\n   \n  </ng-container>\n\n\n\n\n","import { Component, ComponentFactoryResolver, EventEmitter, HostListener, OnInit, Output, ViewChild, ViewContainerRef, ViewRef } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { defaults } from '../../core/model/defaults';\nimport { createCell, getCellValue, setCellValue } from '../../core/model/cell';\nimport { Bounds, Draft, DraftNode, DraftNodeProxy, Interlacement, NodeComponentProxy, Note, Node, Point, Cell, OpNode, Operation} from '../../core/model/datatypes';\nimport { copyDraft, getDraftName, initDraftWithParams, warps, wefts } from '../../core/model/drafts';\nimport utilInstance from '../../core/model/util';\nimport { DesignmodesService } from '../../core/provider/designmodes.service';\nimport { NotesService } from '../../core/provider/notes.service';\nimport { StateService } from '../../core/provider/state.service';\nimport { TreeService } from '../../core/provider/tree.service';\nimport { InkService } from '../../mixer/provider/ink.service';\nimport { LayersService } from '../../mixer/provider/layers.service';\nimport { MultiselectService } from '../provider/multiselect.service';\nimport { ViewportService } from '../provider/viewport.service';\nimport { ZoomService } from '../provider/zoom.service';\nimport { FileService } from './../../core/provider/file.service';\nimport { ConnectionComponent } from './connection/connection.component';\nimport { MarqueeComponent } from './marquee/marquee.component';\nimport { NoteComponent } from './note/note.component';\nimport { OperationComponent } from './operation/operation.component';\nimport { SnackbarComponent } from './snackbar/snackbar.component';\nimport { SubdraftComponent } from './subdraft/subdraft.component';\nimport { child } from 'firebase/database';\n\n@Component({\n  selector: 'app-palette',\n  templateUrl: './palette.component.html',\n  styleUrls: ['./palette.component.scss']\n})\n\n\nexport class PaletteComponent implements OnInit{\n\n\n  @Output() onDesignModeChange: any = new EventEmitter();  \n  @Output() onRevealDraftDetails: any = new EventEmitter();  \n\n  /**\n   * A container that supports the automatic generation and removal of the components inside of it\n   */\n  @ViewChild('vc', {read: ViewContainerRef, static: true}) vc: ViewContainerRef;\n\n  subdraftSubscriptions: Array<Subscription> = [];\n  operationSubscriptions: Array<Subscription> = [];\n  connectionSubscriptions: Array<Subscription> = [];\n  noteSubscriptions: Array<Subscription> = [];\n\n\n/**\n * Subscribes to move event after a touch event is started.\n * @property {Subscription}\n */\n  moveSubscription: Subscription;\n\n  /**\n   * flag to determine how conneection should be drawn\n   */\n  selecting_connection: boolean = false;\n\n  /**\n   * holds a reference to the selection component\n   * @property {Selection}\n   */\n  selection = new MarqueeComponent();\n\n  /**\n   * holds the data of events drawn on this component (that are not associated with a subdraft)\n   * @property {Array<Array<Cell>>}\n   */\n  scratch_pad: Array<Array<Cell>> = [];\n\n  /**\n   * HTML Canvas element that draws the selection and currently cells drawn on this component\n   * @property {Canvas}\n   */\n  canvas: HTMLCanvasElement;\n  cx: any;\n\n  /**\n   * stores an i and j of the last user selected location within the component\n   * @property {Point}\n   */\n  last: Interlacement;\n\n\n    /**\n   * stores an i and j of the last user selected location within the component\n   * @property {Point}\n   */\n    last_point: Point;\n\n  /**\n   * triggers a class to handle disabling pointerevents when switching modes\n   * @property {boolean}\n   */\n   pointer_events: boolean;\n\n\n    /**\n   * a string to represent the current user defined scale for this component to be used in background grid css. \n   * @property {striing}\n   */\n\n  scale_string: string;\n\n  /**\n   * links to the z-index to push the canvas to the front or back of view when freehand drawing. \n   */\n   canvas_zndx:number = -1;\n  \n  \n  /**\n   * stores the bounds of the shape being drawn\n   */\n   shape_bounds:Bounds;\n  \n  /**\n   * stores the vtx for freehand shapes\n   */\n   shape_vtxs:Array<Point>;\n  \n\n  /**\n   * trackable inputs to snackbar\n   */\n   snack_message:string;\n   snack_bounds: Bounds;\n\n\n   /**\n    * a reference to the base size of each cell. Zoom in and out only modifies the view, not this base size.\n    */\n   default_cell_size: number = 5;\n\n   needs_init: boolean = true;\n\n   visible_op: number = -1;\n\n   visible_op_inlet: number = -1;\n  \n  /**\n   * Constructs a palette object. The palette supports drawing without components and dynamically\n   * creates components from shapes and scribbles on the canvas. \n   * @param dm  a reference to the service containing the current design modes and selections\n   * @param tree reference to the objects and relationships within this palette\n   * @param inks a reference to the service manaing the available inks\n   * @param layers a reference to the sercie managing the view layers (z-indexes) of components\n   * @param resolver a reference to the factory component for dynamically generating components\n   * @param fs file service for saving and loading files\n   * @param _snackBar _snackBar a reference to the snackbar component that shows data on move and select\n   * @param viewport reference to the window and palette variables and where the viewer is currently lookin\n   * @param notes reference the service that stores all the tagged comments\n   */\n  constructor(\n    public dm: DesignmodesService, \n    private tree: TreeService,\n    private inks: InkService, \n    private layers: LayersService, \n    private resolver: ComponentFactoryResolver, \n    private fs: FileService,\n    private _snackBar: MatSnackBar,\n    public viewport: ViewportService,\n    private notes: NotesService,\n    private ss: StateService,\n    private zs: ZoomService,\n    private multiselect: MultiselectService) { \n    this.shape_vtxs = [];\n    this.pointer_events = true;\n  }\n\n/**\n * Called when palette is initailized\n */\n  ngOnInit(){\n    this.scale_string = this.default_cell_size+\"px \"+this.default_cell_size+\"px\";\n    this.vc.clear();\n    this.default_cell_size = defaults.mixer_cell_size; \n\n\n    \n  }\n\n  /**\n   * Gets references to view items and adds to them after the view is initialized\n   */\n   ngAfterViewInit(){\n    \n    const div:HTMLElement = document.getElementById('scrollable-container');\n    this.viewport.set(div.offsetParent.scrollLeft, div.offsetParent.scrollTop,  div.offsetParent.clientWidth,  div.offsetParent.clientHeight);\n    \n    // const center:Point = this.viewport.setViewportCenter();\n    // div.offsetParent.scrollLeft = this.viewport.getTopLeft().x;\n    // div.offsetParent.scrollTop = this.viewport.getTopLeft().y;\n\n    this.canvas = <HTMLCanvasElement> document.getElementById(\"scratch\");\n    this.cx = this.canvas.getContext(\"2d\");\n    \n    this.canvas.width = this.viewport.getWidth();\n    this.canvas.height = this.viewport.getHeight();\n\n    // this.cx.beginPath();\n    // this.cx.rect(20, 20, this.viewport.width-40, this.viewport.height-40);\n    // this.cx.stroke();\n\n    this.selection.scale = this.zs.zoom;\n\n    this.selection.active = false;\n    \n    this.designModeChanged();\n\n    this.rescale(-1);\n\n  }\n\n  /**\n   * unsubscribes to all open subscriptions and clears the view component\n   */\n  ngOnDestroy(){\n\n    this.unsubscribeFromAll();\n    this.vc.clear();\n    \n  }\n\n  /**\n   * the only way to prevent memory leaks is to unsubscribe.\n   * since we lose access to tree when a new file is uploaded we must unsubscribe \n   * when any upload action is taking place. If no action takes place, then resubscribe\n   */\n  unsubscribeFromAll(){\n    \n    this.subdraftSubscriptions.forEach(element => element.unsubscribe());\n    this.operationSubscriptions.forEach(element => element.unsubscribe());\n    this.connectionSubscriptions.forEach(element => element.unsubscribe());\n    this.noteSubscriptions.forEach(element => element.unsubscribe());\n  }\n\n  /**\n   * resubscribes to each subscription\n   */\n  resubscribe(){\n\n    this.tree.getDrafts().forEach(element => {\n     this.setSubdraftSubscriptions(element);\n    });\n\n\n    this.tree.getOperations().forEach(element => {\n      this.setOperationSubscriptions(element)\n    });\n\n    this.tree.getConnections().forEach(element => {\n    });\n\n    this.tree.getConnections().forEach(element => {\n    });\n\n\n\n  }\n\n  /**\n   * called when a new file is loaded\n   */\n   clearComponents(){\n    this.unsubscribeFromAll();\n\n    this.notes.getRefs().forEach(ref => this.removeFromViewContainer(ref));\n\n    this.vc.clear();\n  }\n\n  \n/**\n * called when user moves position within viewer\n * @param data \n */\n  handleScroll(position: Point){\n    this.viewport.setTopLeft(position);\n    const div:HTMLElement = document.getElementById('scrollable-container');  \n     div.offsetParent.scrollLeft = this.viewport.getTopLeft().x;\n     div.offsetParent.scrollTop = this.viewport.getTopLeft().y;\n  }\n\n/**\n * called when user moves position within viewer\n * @param data \n */\nhandlePan(diff: Point){\n  const div:HTMLElement = document.getElementById('scrollable-container');  \n  console.log(\"Offset \", diff, div.offsetParent.scrollLeft)\n   div.offsetParent.scrollLeft += diff.x;\n   div.offsetParent.scrollTop += diff.y;\n}\n\n\n\n  /**\n * when someone zooms in or out, we'd like to keep the center point the same. We do this by scaling the entire palette and \n * elements and then manually scrolling to the new center point. \n * @param data \n */\n   handleScrollFromZoom(old_zoom: number){\n    // this.viewport.setTopLeft(position);\n    // console.log(old_center, this.viewport.getCenterPoint());\n    const div:HTMLElement = document.getElementById('scrollable-container');  \n    const past_scroll_x = div.offsetParent.scrollLeft / old_zoom;\n    const new_scroll_x = past_scroll_x * this.zs.zoom;\n\n    const past_scroll_y = div.offsetParent.scrollTop / old_zoom;\n    const new_scroll_y = past_scroll_y * this.zs.zoom;\n\n     div.offsetParent.scrollLeft = new_scroll_x;\n     div.offsetParent.scrollTop = new_scroll_y;\n  }\n\n\n  \n  /**\n * called when user scrolls the winidow\n * @param data \n */\n   handleWindowScroll(data: any){\n\n\n    const div:HTMLElement = document.getElementById('scrollable-container');\n    this.viewport.set(div.offsetParent.scrollLeft, div.offsetParent.scrollTop,  div.offsetParent.clientWidth,  div.offsetParent.clientHeight);\n    //update the canvas to this position\n  }\n\n  /**\n   * removes the view associate with this view ref\n   * @param ref \n   */\n  removeFromViewContainer(ref: ViewRef){\n    const ndx: number = this.vc.indexOf(ref);\n    if(ndx !== -1) this.vc.remove(ndx);\n    else console.log('Error: view ref not found for removal', ref);\n\n  }\n\n  /**\n   * adds a state to the timeline. This should be called \n   * each time a user performs an action that they should be able to undo/redo\n   */\n  addTimelineState(){\n\n    // version: string,\n    // workspace: any,\n    // type: string,\n    // nodes: Array<NodeComponentProxy>,\n    // tree: Array<TreeNodeProxy>,\n    // drafts: Array<Draft>,\n    // looms: Array<Loom>,\n    // loom_settings: Array<LoomSettings>\n    // ops: Array<any>,\n    // notes: Array<Note>,\n    // materials: Array<Shuttle>,\n    // scale: number\n\n\n   this.fs.saver.ada(\n      'mixer', \n      true,\n      this.zs.zoom)\n      .then(so => {\n        this.ss.addMixerHistoryState(so);\n      });\n  }\n\n  /**\n   * this cycles through all subdrafts and calls the download call on any subdrafts\n   * who are currently visible. \n   */\n  async downloadVisibleDraftsAsBmp() : Promise<any>{\n\n    const drafts: Array<SubdraftComponent> = this.tree.getDrafts();\n    const visible_drafts: Array<SubdraftComponent> = drafts.filter(el => el.draft_visible)\n    const functions: Array<Promise<any>> = visible_drafts.map(el => el.saveAsBmp());\n    return Promise.all(functions).then(el =>\n      console.log(\"Downloaded \"+functions.length+\" files\")\n    );\n\n  }\n  \n  /**\n   * this cycles through all subdrafts and calls the download call on any subdrafts\n   * who are currently visible. \n   */\n   async downloadVisibleDraftsAsWif() : Promise<any>{\n\n    const drafts: Array<SubdraftComponent> = this.tree.getDrafts();\n    const visible_drafts: Array<SubdraftComponent> = drafts.filter(el => el.draft_visible)\n    const functions: Array<Promise<any>> = visible_drafts.map(el => el.saveAsWif());\n    return Promise.all(functions)\n    .then(el =>\n      console.log(\"Downloaded \"+functions.length+\" files\")\n    );\n\n  }\n  \n\n\n  /**\n  //  * called anytime an operation is added. Adds the operation to the tree. \n  //  * @param name the name of the operation to add\n  //  */\n  addOperation(name:string) : number{\n      \n      const opcomp:OperationComponent = this.createOperation(name);\n      this.performAndUpdateDownstream(opcomp.id).then(el => {\n        this.addTimelineState();\n      });\n\n      return opcomp.id;\n      \n  }\n\n   /**\n  //  * called anytime an operation is added. Adds the operation to the tree. \n  //  * @param name the name of the operation to add\n  //  */\n  pasteOperation(opnode:OpNode) : Promise<number>{\n      \n    const opcomp:OperationComponent = this.createOperation(opnode.name);\n\n    const new_node = <OpNode> this.tree.getNode(opcomp.id);\n    new_node.inlets = opnode.inlets.slice();\n    new_node.params = opnode.params.slice();\n    new_node.component.topleft = {x: opnode.component.topleft.x+100, y:opnode.component.topleft.y+100};\n\n   \n    return this.performAndUpdateDownstream(opcomp.id).then(el => {\n\n      this.addTimelineState();\n      return Promise.resolve(new_node.id);\n    });\n    \n}\n\n\n\n\n  /**\n   * redraws each operation and subdraft at the new scale, then redraws each of their connections\n   * @param scale \n   */\n  rescale(prev_zoom: number){\n\n    //this.scale = scale;\n    const zoom_factor: number = this.zs.zoom / this.default_cell_size;\n   \n     const container: HTMLElement = document.getElementById('palette');\n     container.style.transformOrigin = 'top left';\n     container.style.transform = 'scale(' + zoom_factor + ')';\n  \n     \n\n    //these subdrafts are all rendered independely of the canvas and need to indivdiually rescalled. This \n    //essentially rerenders (but does not redraw them) and updates their top/lefts to scaled points\n    this.tree.nodes.forEach(node => {\n        if(node.type !== \"cxn\"){\n          node.component.scale = this.zs.zoom;\n        } \n      });\n\n\n    this.tree.getConnections().forEach(sd => {\n\n      sd.rescale(this.zs.zoom);\n    });\n\n    this.notes.getComponents().forEach(el => {\n      el.scale = this.zs.zoom;\n    });\n\n  \n\n     if(this.tree.getPreview() !== undefined) this.tree.getPreviewComponent().scale = this.zs.zoom;\n\n    this.handleScrollFromZoom(prev_zoom);\n\n  }\n\n  \n  /**\n   * loads the snackbar at the bottom of the screen\n   * @param message the message to show on the snack bar\n   * @param bounds the bounds of the element that we are showing info aboout\n   */\n  startSnackBar(message: string, bounds:Bounds){\n    this.updateSnackBar(message, bounds);\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      data: {\n        message: this.snack_message,\n        bounds: this.snack_bounds,\n        scale: this.zs.zoom\n      }\n    });\n  }\n\n  snackBarAlert(message: string){\n    this._snackBar.open(message, 'Undo', {\n      duration: 3000\n    });\n  }\n\n  /**\n   * updates data shown on the snackbar\n   * @param message \n   * @param bounds \n   */\n  updateSnackBar(message: string, bounds:Bounds){\n\n    this.snack_bounds = bounds;\n    this.snack_message = message;\n  }\n\n  /**\n   * called to close the snackbar\n   */\n  closeSnackBar(){\n    this._snackBar.dismiss();\n  }\n\n\n  /**\n   * called when the palette needs to change the design mode, emits output to parent\n   * @param name - the mode to switchh to\n   */\n  changeDesignmode(name: string) {\n    this.dm.selectDesignMode(name, 'design_modes');\n    const mode = this.dm.getDesignMode(name, 'design_modes');\n    this.onDesignModeChange.emit(name);\n  }\n\n  // disablePointerEvents(){\n  //   this.pointer_events = false;\n  // }\n\n  // enablePointerEvents(){\n  //   this.pointer_events = true;\n  // }\n\n  /**\n   * called when a new subdraft is created\n   * @param sd \n   */\n  setSubdraftSubscriptions(sd: SubdraftComponent){\n    this.subdraftSubscriptions.push(sd.onSubdraftDrop.subscribe(this.subdraftDropped.bind(this)));\n    this.subdraftSubscriptions.push(sd.onSubdraftMove.subscribe(this.subdraftMoved.bind(this)));\n    this.subdraftSubscriptions.push(sd.onSubdraftStart.subscribe(this.subdraftStarted.bind(this)));\n    this.subdraftSubscriptions.push(sd.onDeleteCalled.subscribe(this.onDeleteSubdraftCalled.bind(this)));\n    this.subdraftSubscriptions.push(sd.onDuplicateCalled.subscribe(this.onDuplicateSubdraftCalled.bind(this)));\n    this.subdraftSubscriptions.push(sd.onConnectionStarted.subscribe(this.onConnectionStarted.bind(this)));\n    this.subdraftSubscriptions.push(sd.onDesignAction.subscribe(this.onSubdraftAction.bind(this)));\n    this.subdraftSubscriptions.push(sd.onSubdraftViewChange.subscribe(this.onSubdraftViewChange.bind(this)));\n    this.subdraftSubscriptions.push(sd.onNameChange.subscribe(this.onSubdraftNameChange.bind(this)));\n    this.subdraftSubscriptions.push(sd.onShowDetails.subscribe(this.revealDraftDetails.bind(this)));\n  }\n\n\n\n  revealDraftDetails(id: number){\n    this.onRevealDraftDetails.emit(id);\n  }\n\n  /**\n   * dynamically creates a a note component\n   * @returns the created note instance\n   */\n   createNote(note: Note):NoteComponent{\n\n    let tl: Interlacement = null;\n\n    const factory = this.resolver.resolveComponentFactory(NoteComponent);\n    const notecomp = this.vc.createComponent<NoteComponent>(factory);\n    this.setNoteSubscriptions(notecomp.instance);\n\n    if(note === null || note.interlacement == null){\n      tl = utilInstance.resolvePointToAbsoluteNdx(this.viewport.getCenterPoint(), this.zs.zoom);\n    }else{\n      tl = note.interlacement\n    }\n    let id = this.notes.createNote(tl,  notecomp.instance, notecomp.hostView, note);\n\n    notecomp.instance.id = id;\n    notecomp.instance.scale = this.zs.zoom;\n    notecomp.instance.default_cell = this.default_cell_size;\n\n\n    this.changeDesignmode('move');\n    return notecomp.instance;\n  }\n\n\n  //   /**\n  //  * dynamically creates a a note component\n  //  * @returns the created note instance\n  //  */\n  //   loadNote(note: Note):NoteComponent{\n\n  //     console.log(\"LOADING NOTE\", note);\n  //     if(note.component === null || note.component === undefined){\n  //       const noteinstance  = this.createNote();\n       \n  \n  //     }else{\n\n  //     }\n      \n  //     const notecomp = this.vc.createComponent(NoteComponent);\n  //     this.setNoteSubscriptions(notecomp.instance);\n\n  //     note.component = notecomp.instance;\n  //     note.ref = notecomp.hostView;\n\n  //     notecomp.instance.id = note.id;\n  //     notecomp.instance.scale = this.zs.zoom;\n  //     notecomp.instance.default_cell = this.default_cell_size;\n  \n  //     return notecomp.instance;\n  //   }\n\n    \n    \n      /**\n   * called when a new operation is added\n   * @param op \n   */\n  setNoteSubscriptions(note: NoteComponent){\n    this.noteSubscriptions.push(note.deleteNote.subscribe(this.deleteNote.bind(this)));\n    this.noteSubscriptions.push(note.saveNoteText.subscribe(this.saveNote.bind(this)));\n  }\n\n  deleteNote(id: number){\n    const note = this.notes.get(id);\n    if(note === undefined) return;\n    this.removeFromViewContainer(note.ref);\n    this.notes.delete(id);\n  }\n\n  saveNote(){\n    this.changeDesignmode('move');\n    this.addTimelineState();\n  }\n\n\n\n  /**\n   * dynamically creates a subdraft component, adds its inputs and event listeners, pushes the subdraft to the list of references\n   * @param d a Draft object for this component to contain\n   * @returns the created subdraft instance\n   */\n  createSubDraft(d: Draft, parent: number) : Promise<SubdraftComponent>{\n    \n    const factory = this.resolver.resolveComponentFactory(SubdraftComponent);\n    const subdraft = this.vc.createComponent<SubdraftComponent>(factory);\n    const id = this.tree.createNode('draft', subdraft.instance, subdraft.hostView);\n    this.setSubdraftSubscriptions(subdraft.instance);\n   \n    subdraft.instance.id = id;\n    subdraft.instance.draft = d;\n    subdraft.instance.default_cell = this.default_cell_size;\n    subdraft.instance.scale = this.zs.zoom;\n    subdraft.instance.ink = this.inks.getSelected(); //default to the currently selected ink\n\n\n    return this.tree.loadDraftData({prev_id: -1, cur_id: id}, d, null, null, true)\n      .then(d => {\n        return Promise.resolve(subdraft.instance);\n        }\n      )\n  }\n\n  createSubDraftFromEditedDetail(id: number) : Promise<SubdraftComponent>{\n    \n    const node  = this.tree.getNode(id);\n    const factory = this.resolver.resolveComponentFactory(SubdraftComponent);\n    const subdraft = this.vc.createComponent<SubdraftComponent>(factory);\n    this.setSubdraftSubscriptions(subdraft.instance);\n\n    node.component = subdraft.instance;\n    node.ref = subdraft.hostView;\n\n    subdraft.instance.id = id;\n    subdraft.instance.draft = this.tree.getDraft(id);\n    subdraft.instance.default_cell = this.default_cell_size;\n    subdraft.instance.scale = this.zs.zoom;\n    subdraft.instance.ink = this.inks.getSelected(); //default to the currently selected ink\n\n    return Promise.resolve(subdraft.instance);\n\n  }\n\n\n  \n\n  /**\n   * loads a subdraft component from data\n   * @param id the node id assigned to this element on load\n   * @param d the draft object to load into this subdraft\n   * @param nodep the component proxy used to define\n   */\n   loadSubDraft(id: number, d: Draft, nodep: NodeComponentProxy, draftp: DraftNodeProxy,  saved_scale: number){\n\n    const factory = this.resolver.resolveComponentFactory(SubdraftComponent);\n    const subdraft = this.vc.createComponent<SubdraftComponent>(factory);\n    const node = this.tree.getNode(id)\n    node.component = subdraft.instance;\n    node.ref = subdraft.hostView;\n    this.setSubdraftSubscriptions(subdraft.instance);\n    subdraft.instance.id = id;\n    subdraft.instance.default_cell = this.default_cell_size;\n    subdraft.instance.scale = this.zs.zoom;\n    subdraft.instance.draft_visible = true;\n    subdraft.instance.use_colors = true;\n    subdraft.instance.ink = this.inks.getSelected(); //default to the currently selected ink\n    subdraft.instance.draft = d;\n    subdraft.instance.parent_id = this.tree.getSubdraftParent(id);\n\n    if(nodep !== null && nodep.topleft !== null){\n      \n      const topleft_ilace = {j: nodep.topleft.x/saved_scale, i: nodep.topleft.y/saved_scale};\n      const adj_topleft: Point = {x: topleft_ilace.j*this.zs.zoom, y: topleft_ilace.i*this.zs.zoom};\n      \n    \n      subdraft.instance.topleft = adj_topleft;\n\n      if(draftp !== null && draftp !== undefined){\n        subdraft.instance.draft_visible = draftp.draft_visible;\n      }\n\n      if(draftp !== null && draftp !== undefined && draftp.render_colors !== undefined){\n        subdraft.instance.use_colors = draftp.render_colors;\n      }\n    } \n\n  }\n\n  setConnectionSubscriptions(cxn: ConnectionComponent){\n    this.connectionSubscriptions.push(cxn.onConnectionRemoved.subscribe(this.removeConnection.bind(this)));\n\n  }\n\n  /**\n   * called when a new operation is added\n   * @param op \n   */\n  setOperationSubscriptions(op: OperationComponent){\n    this.operationSubscriptions.push(op.onOperationMove.subscribe(this.operationMoved.bind(this)));\n    this.operationSubscriptions.push(op.onOperationMoveEnded.subscribe(this.operationMoveEnded.bind(this)));\n    this.operationSubscriptions.push(op.onOperationParamChange.subscribe(this.operationParamChanged.bind(this)));\n    this.operationSubscriptions.push(op.deleteOp.subscribe(this.onDeleteOperationCalled.bind(this)));\n    this.operationSubscriptions.push(op.duplicateOp.subscribe(this.onDuplicateOpCalled.bind(this)));\n    this.operationSubscriptions.push(op.onConnectionRemoved.subscribe(this.removeConnection.bind(this)));\n    this.operationSubscriptions.push(op.onInputAdded.subscribe(this.connectionMade.bind(this)));\n    this.operationSubscriptions.push(op.onInputVisibilityChange.subscribe(this.updateVisibility.bind(this)));\n    this.operationSubscriptions.push(op.onInletLoaded.subscribe(this.inletLoaded.bind(this)));\n    this.operationSubscriptions.push(op.onOpLoaded.subscribe(this.opCompLoaded.bind(this)));\n  }\n\n\n  /**\n   * creates an operation component\n   * @param name the name of the operation this component will perform\n   * @returns the OperationComponent created\n   */\n    createOperation(name: string):OperationComponent{\n      const factory = this.resolver.resolveComponentFactory(OperationComponent);\n      const op = this.vc.createComponent<OperationComponent>(factory);\n      const id = this.tree.createNode('op', op.instance, op.hostView);\n\n\n\n\n      this.tree.loadOpData({prev_id: -1, cur_id: id}, name, undefined, undefined);\n      this.setOperationSubscriptions(op.instance);\n\n      op.instance.name = name;\n      op.instance.id = id;\n      op.instance.zndx = this.layers.createLayer();\n      op.instance.scale =this.zs.zoom ;\n      op.instance.default_cell = this.default_cell_size;\n\n      const tr =  this.viewport.getTopRight()\n      op.instance.topleft ={x: tr.x - 340, y: tr.y+120};\n\n     \n\n\n\n      return op.instance;\n    }\n\n    /**\n   * loads an operation with the information supplied. \n   * @param name the name of the operation this component will perform\n   * @params params the input data to be used in this operation\n   * @returns the id of the node this has been assigned to\n   */\n    loadOperation(id: number, name: string, params: Array<any>, inlets: Array<any>, topleft:Point, saved_scale: number){\n\n        const factory = this.resolver.resolveComponentFactory(OperationComponent);\n        const op = this.vc.createComponent<OperationComponent>(factory);\n        const node = this.tree.getNode(id)\n        node.component = op.instance;\n        node.ref = op.hostView;\n    \n        this.setOperationSubscriptions(op.instance);\n  \n        op.instance.name = name;\n        op.instance.id = id;\n        op.instance.zndx = this.layers.createLayer();\n        op.instance.scale = this.zs.zoom;\n        op.instance.default_cell = this.default_cell_size;\n        op.instance.loaded_inputs = params;\n        op.instance.topleft = {x: topleft.x, y: topleft.y};\n        op.instance.loaded = true;\n  \n        // if(bounds !== null){\n        \n        //   const topleft_ilace = {j: bounds.topleft.x/saved_scale, i: bounds.topleft.y/saved_scale};\n        //   const adj_topleft: Point = {x: topleft_ilace.j*this.zs.zoom, y: topleft_ilace.i*this.zs.zoom};\n          \n        //   const new_bounds: Bounds = {\n        //     topleft: adj_topleft,\n        //     width: bounds.width / saved_scale * this.zs.zoom,\n        //     height: bounds.height / saved_scale * this.zs.zoom,\n        //   }\n    \n        //   op.instance.bounds = new_bounds;\n          \n        // } \n  \n       \n      }\n\n   \n\n    /**\n     * duplicates an operation with the information supplied. \n     * @param name the name of the operation this component will perform\n     * @params params the input data to be used in this operation\n     * @returns the id of the node this has been assigned to\n     */\n     duplicateOperation(name: string, params: Array<number>, topleft:Point, inlets: Array<any>):number{\n\n      const op:OperationComponent = this.createOperation(name);\n          \n          this.tree.setOpParams(op.id, params.slice(), inlets.slice());\n          op.loaded_inputs = params.slice();\n          op.topleft = {x: topleft.x, y: topleft.y};\n          op.duplicated = true;\n    \n          return op.id;\n      }\n\n\n\n    /**\n     * creates a connection and draws it to screen\n     * @param id - the id of this node\n     */\n     loadConnection(id: number){\n      const factory = this.resolver.resolveComponentFactory(ConnectionComponent);\n      const cxn = this.vc.createComponent<ConnectionComponent>(factory);\n      const node = this.tree.getNode(id);\n\n      node.component = cxn.instance;\n      this.setConnectionSubscriptions(cxn.instance);\n      node.ref = cxn.hostView;\n        \n      cxn.instance.id = id;\n      cxn.instance.scale = this.zs.zoom;\n      cxn.instance.default_cell_size = this.default_cell_size;\n\n    }\n\n\n\n    /**\n     * creates a connection component and registers it with the tree\n     * @returns the list of all id's connected to the \"to\" node \n     */\n     createConnection(id_from: number, id_to:number, to_ndx: number):{input_ids: Array<number>, id: number}{\n\n      const factory = this.resolver.resolveComponentFactory(ConnectionComponent);\n      const cxn = this.vc.createComponent<ConnectionComponent>(factory);\n      const id = this.tree.createNode('cxn', cxn.instance, cxn.hostView);\n      const to_input_ids: Array<number> =  this.tree.addConnection(id_from, 0, id_to, to_ndx, id);\n      \n      cxn.instance.id = id;\n      cxn.instance.scale = this.zs.zoom;\n      cxn.instance.default_cell_size = this.default_cell_size;\n\n      this.setConnectionSubscriptions(cxn.instance);\n\n\n      this.connectionSubscriptions.push()\n      return {input_ids: to_input_ids, id: id};\n    }\n\n\n\n\n  /**\n   * called from upload or import events\n   * @param d \n   */\n  addSubdraftFromDraft(d: Draft){\n    this.createSubDraft(d, -1).then(sd => {\n      sd.setPosition({x: this.viewport.getTopLeft().x + 60, y: this.viewport.getTopLeft().y + 60});\n      // const interlacement = utilInstance.resolvePointToAbsoluteNdx(sd.bounds.topleft, this.scale); \n      // this.viewport.addObj(sd.id, interlacement);\n      this.addTimelineState();\n    });\n    \n  }\n\n  /**\n  //  * called anytime an operation is added. Adds the operation to the tree. \n  //  * @param name the name of the operation to add\n  //  */\n  pasteSubdraft(draftnode:DraftNode): Promise<number>{\n    //create a new idea for this draft node: \n\n    \n    let d = copyDraft(draftnode.draft);\n    d.id = utilInstance.generateId(8);\n\n\n    return this.createSubDraft(d, -1).then(sd => {\n      sd.setPosition({x: this.viewport.getTopLeft().x + 60, y: this.viewport.getTopLeft().y + 60});\n      sd.topleft = {x: draftnode.component.topleft.x+100, y:draftnode.component.topleft.y+100};\n\n      this.addTimelineState();\n      return Promise.resolve(sd.id);\n    });\n    \n}\n\n  /**\n   * a subdraft can only have an operation for a parent\n   * removes the subdraft sent to the function\n   * updates the tree view_id's in response\n   * @param id {number}  \n\n   */\n  removeSubdraft(id: number){\n\n\n    if(id === undefined) return;\n\n    const outputs = this.tree.getNonCxnOutputs(id);\n    const delted_nodes = this.tree.removeSubdraftNode(id);\n\n    delted_nodes.forEach(node => {\n      this.removeFromViewContainer(node.ref);\n      this.viewport.removeObj(node.id);\n    })\n\n    outputs.forEach(out => {\n      this.performAndUpdateDownstream(out);\n    })\n\n  }\n\n  /**\n   * this calls the tree to delete the operation.\n   * the tree returns a list of all nodes deleted and this function updates the view to remove those elements\n   * @param id \n   */\n  removeOperation(id:number){\n\n\n    if(id === undefined) return;\n\n    const drafts_out = this.tree.getNonCxnOutputs(id);\n\n    const outputs:Array<number> = drafts_out.reduce((acc, el) => {\n      return acc.concat(this.tree.getNonCxnOutputs(el));\n    }, []);\n\n\n    const delted_nodes = this.tree.removeOperationNode(id);\n    delted_nodes.forEach(node => {\n      this.removeFromViewContainer(node.ref);\n      this.viewport.removeObj(node.id);\n    });\n\n    outputs.forEach(out => {\n      this.performAndUpdateDownstream(out);\n    })\n\n  }\n\n    /**\n   * dynamically creates a subdraft component with specific requirements of the intersection, adds its inputs and event listeners, pushes the subdraft to the list of references\n   * @param d a Draft object for this component to contain\n   * @returns the created subdraft instance\n   */\n  createAndSetPreview(d: Draft) : Promise<DraftNode> {\n\n      const factory = this.resolver.resolveComponentFactory(SubdraftComponent);\n      const subdraft = this.vc.createComponent<SubdraftComponent>(factory);\n\n      return this.tree.setPreview(subdraft, d).then( dn=> {\n          //note, the preview is not added to the tree, as it will only be added if it eventually accepted by droppings\n          const sd: SubdraftComponent = <SubdraftComponent> dn.component;\n         \n          sd.id = -1;\n          sd.default_cell = this.default_cell_size;\n          sd.scale = this.zs.zoom;\n          sd.draft = d;\n          sd.ink = this.inks.getSelected(); //default to the currently selected ink\n          sd.setAsPreview();\n          // sd.disableDrag();\n          \n          return dn;\n\n      });\n\n\n    }\n\n\n  /**\n   * destorys the preview component\n   */\n  removePreview(){\n\n      const preview = this.tree.getPreview();\n\n      const ndx = this.vc.indexOf(this.tree.getPreview().ref);\n      this.vc.remove(ndx);\n\n      this.tree.unsetPreview();\n   \n  }\n\n  /**\n   * Called from mixer when it receives a change from the design mode tool or keyboard press\n   * triggers view mode changes required for this mode\n   */\n  public designModeChanged(){\n\n    if(this.dm.getDesignMode('move', 'design_modes').selected){\n      this.unfreezePaletteObjects();\n\n    }else{\n      console.log(\"DESIGN MODE CHANGED\")\n      this.freezePaletteObjects();\n    }\n\n    // if(this.dm.getDesignMode('draw', 'design_modes').selected || this.dm.getDesignMode('shape',  'design_modes').selected){\n    //   const old_zoom = this.zs.zoom;\n    //   this.zs.setZoom(Math.ceil(this.zs.zoom))\n    //   this.rescale(old_zoom);\n    // }\n\n  }\n\n  /**\n   * specifically removes the subscription from the move event\n   */\n   private removeSubscription() {    \n    if (this.moveSubscription) {\n      this.moveSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * draws the selection atop the view\n   * todo: update this to account for scroll\n   * @param ndx \n   */\n  private drawSelection(ndx: Interlacement){\n\n\n    this.cx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    const bounds ={\n      left: this.selection.start.j*this.zs.zoom,\n      top: this.selection.start.i*this.zs.zoom,\n      right: ndx.j *this.zs.zoom,\n      bottom: ndx.i*this.zs.zoom\n    };\n\n    //will draw on outside of selection\n    this.cx.beginPath();\n    this.cx.strokeStyle = \"#ff4081\";\n    this.cx.lineWidth = 1;\n    this.cx.setLineDash([this.zs.zoom, 2]);\n    this.cx.strokeRect(bounds.left - this.viewport.getTopLeft().x, bounds.top  - this.viewport.getTopLeft().y, bounds.right-bounds.left, bounds.bottom-bounds.top);\n    this.cx.fillStyle = \"#ff4081\";\n    this.cx.font = \"12px Arial\";\n    const w = Math.round(this.selection.bounds.width /this.zs.zoom);\n    const h = Math.round(this.selection.bounds.height / this.zs.zoom);\n    this.cx.fillText(w.toString()+\"x\"+h.toString(),  bounds.left- this.viewport.getTopLeft().x, bounds.bottom+16-this.viewport.getTopLeft().y);\n\n  }\n\n  /**\n   * Takes an absolute index and returns it to an index relative to the viewport. \n   * @param abs \n   * @returns \n   */\n  private getRelativeInterlacement(abs: Interlacement) : Interlacement {\n    const i_offset: number = Math.floor(this.viewport.getTopLeft().y / this.zs.zoom);\n    const j_offset: number = Math.floor(this.viewport.getTopLeft().x / this.zs.zoom);\n    const rel: Interlacement = {\n      i: abs.i - i_offset,\n      j: abs.j - j_offset,\n      si: -1\n    }\n\n    return rel;\n  }\n\n\n  /**\n   * sets the value of the scratchpad cell at ndx\n   * checks for self interselcting \n   * @param ndx (i,j)\n   */\n  private setCell(ndx: Interlacement){\n\n    const rel: Interlacement = this.getRelativeInterlacement(ndx);\n    let c: Cell = this.scratch_pad[rel.i][rel.j];\n\n    const selected: string = this.dm.getSelectedDesignMode('draw_modes').value;\n\n    switch(selected){\n      case 'toggle':\n        const cur: boolean = getCellValue(c);\n        if(cur == null)  c = setCellValue(c, true);\n        else c = setCellValue(c, !cur)\n        break;\n      case 'down':\n        c = setCellValue(c, false)\n        break;\n      case 'up':\n        c = setCellValue(c, true)\n      break;\n      case 'unset':\n        c = setCellValue(c, null);\n      break;\n    }\n\n\n    //use the code below to use past scratchpad values, but this seems wrong\n    // console.log(c);\n    // const val: boolean = c.isSet(); //check for a previous value\n    // c.setHeddle(true);\n\n    // if(val){\n    //   const newval:boolean = this.computeCellValue(this.inks.getSelected(), c, val);\n    //   console.log(\"setting to\", newval);\n    //   c.setHeddle(newval);\n    // } \n  }\n\n  /**\n   * called by drawcell. Draws on screen based on the current ink\n   * @param ink \n   * @param over \n   * @param under \n   * @returns \n   */\n  private computeCellColor(ink: string, over: Cell, under: boolean): string{\n\n    const res: boolean = this.computeCellValue(ink, over, under);\n    if(ink === 'unset' && res == true) return \"#cccccc\"; \n    if(res ===null) return \"#fafafa\";\n    if(res) return \"#000000\";\n    return \"#ffffff\";      \n  }\n\n  /**\n   * applies the filter betetween over and under and returns the result\n   * @param ink the ink with which to compute the transition\n   * @param over the value of the primary (top) cell\n   * @param under the value of the intersecting (bottom) cell \n   * @returns \n   */\n  private computeCellValue(ink: string, over: Cell, under: boolean): boolean{\n    \n    let res: boolean = utilInstance.computeFilter(ink, getCellValue(over), under);\n    return res;   \n  }\n\n  /**\n   * called when creating a subdraft from the drawing on the screen. Computes the resulting value based on\n   * all intersections with the drawing\n   * @param ndx the i,j location of the cell we are checking\n   * @param ink the currently selected ink\n   * @param over the Cell we are checking against\n   * @returns true/false or null\n   */\n  private getScratchpadProduct(ndx: Interlacement, ink: string, over: Cell): boolean{\n    \n    switch(ink){\n      case 'neq':\n      case 'and':\n      case 'or':\n\n        const p = {x: ndx.j *this.zs.zoom, y: ndx.i * this.zs.zoom};\n        // const isect = this.getIntersectingSubdraftsForPoint(p);\n  \n        // if(isect.length > 0){\n        //   const prev: boolean = isect[0].resolveToValue(p);\n        //   return this.computeCellValue(ink, over, prev);\n        // }else{\n        //   return this.computeCellValue(ink, over, null);\n        // }\n      break;\n\n      default: \n        return this.computeCellValue(ink, over, null);\n      break;\n    }\n   return null; \n  }\n \n\n  /**\n   * draw the cell at position ndx\n   * @param ndx (i,j)\n   */\n  private drawCell(ndx: Interlacement){\n\n    const rel: Interlacement = this.getRelativeInterlacement(ndx);\n    const c: Cell = this.scratch_pad[rel.i][rel.j];\n    this.cx.fillStyle = \"#cccccc\";\n  \n    const selected_ink:string = this.inks.getSelected();\n\n    switch(selected_ink){\n      case 'neq':\n      case 'and':\n      case 'or':\n\n        const p = {x: ndx.j * this.zs.zoom, y: ndx.i * this.zs.zoom};\n        // const isect = this.getIntersectingSubdraftsForPoint(p);\n\n        // if(isect.length > 0){\n        //   const prev: boolean = isect[0].resolveToValue(p);\n        //   this.cx.fillStyle = this.computeCellColor(selected_ink, c, prev);\n        // }else{\n        //   this.cx.fillStyle =  this.computeCellColor(selected_ink, c, null);;\n        // }\n      break;\n\n      default: \n        this.cx.fillStyle = this.computeCellColor(selected_ink, c, null);\n      break;\n\n    }\n\n      this.cx.fillRect(rel.j*this.zs.zoom, rel.i*this.zs.zoom, this.zs.zoom, this.zs.zoom);      \n  }\n\n  /**\n   * Deletes the subdraft that called this function.\n   */\n    onDeleteSubdraftCalled(obj: any){\n      \n      if(obj === null) return;\n      this.removeSubdraft(obj.id);\n      this.addTimelineState();\n   }\n\n     /**\n   * Deletes the subdraft that called this function.\n   */\n      onDeleteOperationCalled(obj: any){\n      \n        if(obj === null) return;\n        this.removeOperation(obj.id);\n        this.addTimelineState();\n     }\n\n   /**\n   * Duplicates the operation that called this function.\n   */\n    onDuplicateOpCalled(obj: any){\n      if(obj === null) return;\n\n      const op = this.tree.getOpNode(obj.id);\n      const op_comp = <OperationComponent> this.tree.getComponent(obj.id);\n\n\n      let new_tl: Point = null;\n\n\n      if(this.tree.hasSingleChild(obj.id) && this.tree.opHasHiddenChild(obj.id)){\n          new_tl = {x: op_comp.topleft.x + 200, y: op_comp.topleft.y}\n      }else{\n        let container = document.getElementById('scale-'+obj.id);\n          new_tl =  {x: op_comp.topleft.x + 10 + container.offsetWidth*this.zs.zoom/this.default_cell_size, y: op_comp.topleft.y}\n      }\n\n\n      const id: number = this.duplicateOperation(op.name, op.params, new_tl, op.inlets);\n      const new_op = <OperationComponent> this.tree.getComponent(id);\n\n      //duplicate the connections as well\n      const cxns = this.tree.getInputsWithNdx(op.id);\n      cxns.forEach(cxn => {\n        if(cxn.tn.inputs.length > 0){\n        const from = cxn.tn.inputs[0].tn.node.id;\n        this.createConnection(from, new_op.id, cxn.ndx);\n        }\n      })\n\n\n\n      this.operationParamChanged({id: id});\n      this.addTimelineState();\n }\n\n /**\n  This is called when the finetune mode is closed and we need to create a new subdraft to hold the changes. \n  * @param obj {parent_id, new_id}\n  * @returns \n  */\n  // createNewSubdraftFromEdits(obj: any){\n  //   this.changeDesignmode('move')\n\n  //   if(obj === null) return;\n\n  //   const sd = <SubdraftComponent> this.tree.getComponent(obj.parent_id);\n  //   const new_draft = this.tree.getDraft(obj.new_id);\n  //   const new_loom = this.tree.getLoom(obj.new_id);\n  //   const new_ls = this.tree.getLoomSettings(obj.new_id);\n  //   const new_topleft = {\n  //       x: sd.topleft.x + 40 + this.zs.zoom *2, \n  //       y: sd.topleft.y}\n\n    \n\n\n  //   this.loadSubDraft(\n  //     obj.new_id, \n  //     new_draft, \n  //     {\n  //       node_id: obj.new_id,\n  //       type: 'draft',\n  //       topleft: sd.topleft\n  //     },\n  //     {\n  //       node_id: obj.new_id,\n  //       draft_id: new_draft.id,\n  //       draft_name: new_draft.ud_name,\n  //       draft: new_draft,\n  //       draft_visible: true,\n  //       loom: new_loom,\n  //       loom_settings:new_ls,\n  //       render_colors: true\n  //     },\n  //     this.zs.zoom);\n  //     this.addTimelineState();\n\n   \n  //  }\n\n\n    onDuplicateSubdraftCalled(obj: any){\n        if(obj === null) return;\n\n        const sd = <SubdraftComponent> this.tree.getComponent(obj.id);\n        const sd_draft = <Draft> this.tree.getDraft(obj.id);\n        \n\n      this.createSubDraft(initDraftWithParams(\n        {wefts: wefts(sd_draft.drawdown), \n          warps: warps(sd_draft.drawdown), \n          drawdown: sd_draft.drawdown.slice(), \n          rowShuttleMapping: sd_draft.rowShuttleMapping.slice(),\n          colShuttleMapping: sd_draft.colShuttleMapping.slice(),\n          rowSystemMapping: sd_draft.rowSystemMapping.slice(),\n          colSystemMapping: sd_draft.colSystemMapping.slice(),\n          gen_name: getDraftName(sd_draft)+\" copy\"\n        }), -1)\n        .then(new_sd => {\n\n          const orig_size = document.getElementById('scale-'+obj.id);\n\n          new_sd.setPosition({\n            x: sd.topleft.x + orig_size.offsetWidth*(this.zs.zoom/this.default_cell_size) + this.zs.zoom *2, \n            y: sd.topleft.y});  \n          //const interlacement = utilInstance.resolvePointToAbsoluteNdx(new_sd.bounds.topleft, this.scale); \n          //this.viewport.addObj(new_sd.id, interlacement);\n          this.addTimelineState();\n        }).catch(console.error);\n       \n   }\n\n  /**\n   * A mouse event, originated in a subdraft, has been started\n   * checkes the design mode and handles the event as required\n   * @param obj contains the id of the moving subdraft\n   */\n  subdraftStarted(obj: any){\n    if(obj === null) return;\n\n    if(this.dm.isSelected(\"move\",  'design_modes')){\n  \n      //get the reference to the draft that's moving\n      const moving = <SubdraftComponent> this.tree.getComponent(obj.id);\n      \n      if(moving === null) return; \n\n\n      // // this.startSnackBar(\"Using Ink: \"+moving.ink, null);\n      \n      // const isect:Array<SubdraftComponent> = this.getIntersectingSubdrafts(moving);\n      // const seed_drafts = isect.filter(el => !this.tree.hasParent(el.id)); //filter out drafts that were generated\n\n      // if(seed_drafts.length === 0) return;\n      \n      // const bounds: any = utilInstance.getCombinedBounds(moving, seed_drafts);\n      // const temp: Draft = this.getCombinedDraft(bounds, moving, seed_drafts);\n\n\n\n      // this.createAndSetPreview(temp).then(dn => {\n      //   this.tree.getPreviewComponent().setPosition(bounds.topleft);\n      // }).catch(console.error);\n      \n    }else if(this.dm.isSelected(\"marquee\",  'design_modes')){\n      this.selectionStarted();\n    }else if(this.dm.isSelected(\"draw\",  'design_modes')){\n      this.drawStarted();\n    }\n\n }\n\n /**\n  * triggers a mode that allows mouse-mouse to be followed by a line.\n  * todo; add code that holds the point on scroll\n  * @param obj - contains event, id of component who called\n  */\n onConnectionStarted(obj: any){\n\n  if(obj.type == 'stop'){\n    this.selecting_connection = false;\n    this.tree.unsetOpenConnection();\n    this.processConnectionEnd();\n    return;\n  }\n\n\n  const valid = this.tree.setOpenConnection(obj.id);\n  if(!valid) return;\n\n  this.changeDesignmode('operation');\n  this.selecting_connection = true;\n\n  //make sure to unselect anything else that had previously been selected\n  const all_drafts = this.tree.getDraftNodes();\n  const not_selected = all_drafts.filter(el => el.id !== obj.id);\n  not_selected.forEach(node => {\n    let comp = <SubdraftComponent>node.component;\n    comp.selecting_connection = false;\n  })\n\n\n\n  const sd: SubdraftComponent = <SubdraftComponent> this.tree.getComponent(obj.id);\n\n  let adj: Point;\n\n  if(sd.draft_visible){\n    const from = document.getElementById('scale-'+obj.id);\n   adj = {\n    x: sd.topleft.x - this.viewport.getTopLeft().x + 8, \n    y: (sd.topleft.y+from.offsetHeight*(this.zs.zoom/this.default_cell_size)) - this.viewport.getTopLeft().y}\n   }else{\n   adj = {\n    x: sd.topleft.x - this.viewport.getTopLeft().x + 10, \n    y: (sd.topleft.y) - this.viewport.getTopLeft().y}\n   }\n\n  this.unfreezePaletteObjects();\n\n  this.shape_bounds = {\n    topleft: adj,\n    width: this.zs.zoom,\n    height: this.zs.zoom\n  };\n\n  this.startSnackBar(\"select an input or click an empty space to stop selecting\", null);\n\n }\n\n\n\n\n\n\n /**\n * adds a connector flag to any subdrafts that we are allowed to connect to from this operation\n */\n  // setDraftsConnectable(op_id: number){\n  //   const nodes: Array<SubdraftComponent> = this.tree.getDrafts();\n  //   const op: OperationComponent = <OperationComponent> this.tree.getComponent(op_id);\n  //   const inputs: Array<number> = this.tree.getInputs(op_id);\n  //   if(inputs.length >= op.maxInputs()){\n  //     nodes.forEach(el => {\n  //       el.unsetConnectable();\n\n  //       //now unset the ones that are already assigned to other ops\n  //       const connections: Array<number> = this.tree.getNonCxnOutputs(el.id);\n  //       const op_ndx: number = connections.findIndex(id => (id === op_id));\n  //       //if it had connections and the connection was not this operation, unset it\n  //       if(op_ndx !== -1){\n  //         el.setConnectable();\n  //       }    \n  //     });\n  //   }else{\n\n  //     nodes.forEach(el => {\n\n  //       //look upstream to see if this operation is linked in any way to this op\n  //       const upstream: Array<number> = this.tree.getUpstreamOperations(el.id);\n  //       const ndx: number = upstream.findIndex(i => i === op_id);\n  //       if(ndx === -1) el.setConnectable();\n  \n  //       //now unset the ones that are already assigned to other ops\n  //       const connections: Array<number> = this.tree.getOutputs(el.id);\n  //       const ops: Array<number> = connections.map(cxn => this.tree.getConnectionOutput(cxn));\n  //       const op_ndx: number = ops.findIndex(op => (op === op_id));\n  //       //if it had connections and the connection was not this operation, unset it\n  //       if(ops.length > 0 && op_ndx === -1){\n  //         el.unsetConnectable();\n  //       }    \n  \n  //     });\n  //   }\n\n  //   const ops: Array<OperationComponent> = this.tree.getOperations();\n  //   ops.forEach(op => {\n  //     if(op.id != op_id) op.active_connection = true;\n  //   });\n   \n  //  }\n\n    /**\n * disables selection and pointer events on all\n */\n  // unsetDraftsConnectable(){\n  //   const nodes: Array<SubdraftComponent> = this.tree.getDrafts();\n  //   nodes.forEach(el => {\n  //     el.unsetConnectable();\n  //   });\n\n  //   const ops: Array<OperationComponent> = this.tree.getOperations();\n  //   ops.forEach(op => {\n  //     op.active_connection = false;\n  //   });\n\n  //  }\n\n/**\n * disables selection and pointer events on all\n */\n freezePaletteObjects(){\n  const nodes: Array<any> = this.tree.getComponents();\n  nodes.forEach(el => {\n    el.disableDrag();\n  });\n\n  const notes: Array<any> = this.notes.getComponents();\n  notes.forEach(el => {\n    el.disableDrag();\n  });\n }\n\n /**\n * unfreezes all palette objects (except connections)\n */\n  unfreezePaletteObjects(){\n    const nodes: Array<any> = this.tree.getComponents();\n    nodes.forEach(el => {\n      if(el != null){\n        el.enableDrag();\n      } \n    });\n\n    const notes: Array<any> = this.notes.getComponents();\n    notes.forEach(el => {\n      el.enableDrag();\n    });\n   }\n  \n\n   /**\n    * this is called when an subdraft updates its show/hide value\n    */\n   onSubdraftViewChange(id: number){\n\n    this.updateAttachedComponents(id, false);\n\n   }\n\n      /**\n    * this is called when an subdraft updates its show/hide value\n    */\n    onSubdraftNameChange(id: number){\n\n      const outs = this.tree.getNonCxnOutputs(id);\n      const to_perform = outs.map(el => this.performAndUpdateDownstream(el));\n      return Promise.all(to_perform) \n      .then(el => \n        {\n          this.addTimelineState(); \n        })\n        .catch(console.error);;\n\n       \n    }\n    \n\n\n /**\n   * draws when a user is using the mouse to identify an input to a component\n   * @param mouse the absolute position of the mouse on screen\n   * @param shift boolean representing if shift is pressed as well \n   */\nconnectionDragged(mouse: Point, shift: boolean){\n\n  //get the mouse position relative to the view frame\n  const adj: Point = {x: mouse.x - this.viewport.getTopLeft().x, y: mouse.y - this.viewport.getTopLeft().y}\n  this.shape_bounds.width =  (adj.x - this.shape_bounds.topleft.x);\n  this.shape_bounds.height =  (adj.y - this.shape_bounds.topleft.y);\n\n\n  const svg = document.getElementById('scratch_svg');\n  svg.style.top = (this.viewport.getTopLeft().y+this.shape_bounds.topleft.y)+\"px\";\n  svg.style.left = (this.viewport.getTopLeft().x+this.shape_bounds.topleft.x)+\"px\"\n\n \n  svg.innerHTML = ' <path d=\"M 0 0 C 0 50,'\n  +(this.shape_bounds.width)+' '\n  +(this.shape_bounds.height-50)+', '\n  +(this.shape_bounds.width)+' '\n  +(this.shape_bounds.height)\n  +'\" fill=\"transparent\" stroke=\"#ff4081\"  stroke-dasharray=\"4 2\"  stroke-width=\"2\"/> ' ;\n\n \n\n}\n\n\n/**\n * resets the view when a connection event ends\n */\n processConnectionEnd(){\n  this.closeSnackBar();\n  this.selecting_connection = false;\n  const svg = document.getElementById('scratch_svg');\n  svg.innerHTML = ' ' ;\n\n  this.cx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  this.changeDesignmode('move');\n\n  if(!this.tree.hasOpenConnection()) return;\n\n  \n  const sd: SubdraftComponent = this.tree.getOpenConnection();\n  if(sd !== null) sd.connectionEnded();\n  this.tree.unsetOpenConnection();\n} \n\n\n/**\n * calculates the default topleft position for this node based on the width and size of its parent and/or neighbors\n * @param id the id of the component to position\n * @returns a promise for the updated point\n */\ncalculateInitialLocaiton(id: number) : Point {\n  \n  console.log(\"CALC INIT LOCATION\")\n\n  let new_tl =  this.viewport.getTopLeft(); \n  \n\n  //if it has a parent, align it to the bottom edge\n  if(this.tree.hasParent(id)){\n\n    const parent_id = this.tree.getSubdraftParent(id);\n    const opnode = this.tree.getNode(parent_id);\n    const topleft = opnode.component.topleft;\n\n    const container: HTMLElement = document.getElementById('scale-'+parent_id);\n\n    //this component was just generated and needs a postion\n    if(container == null){\n      new_tl = {x: topleft.x, y: topleft.y};\n\n\n      // //component is not yet initalized on this calculation so we do it manually\n      const default_height =  100 * this.zs.zoom/this.default_cell_size;\n      new_tl = {x: topleft.x, y: topleft.y+default_height};\n\n    }else{\n\n      const container: HTMLElement = document.getElementById('scale-'+parent_id);\n      console.log(\"scale-\", parent_id, container)\n      const parent_height = container.offsetHeight * (this.zs.zoom/this.default_cell_size);  \n      new_tl = {x: topleft.x, y: topleft.y + parent_height};\n    }\n\n    const outs = this.tree.getNonCxnOutputs(parent_id);\n    if(outs.length > 1){\n      const this_child = outs.findIndex(el => el === id);\n      if(this_child === -1){ console.error(\"subdraft not found in parent output list\")};\n      \n      const updated_point: Point = outs\n      .filter((el, ndx) => (ndx < this_child))\n      .reduce((acc, el, ndx) => {\n        const el_draft = this.tree.getDraft(el);\n         acc.x = acc.x + (warps(el_draft.drawdown) + 2)*this.default_cell_size;\n         return acc;\n      }, topleft);\n      \n      new_tl = updated_point;\n\n    }\n\n  }\n  return new_tl;\n}\n\n\n\n\n/**\n * this calls a function for an operation to perform and then subsequently calls all children \n * to recalculate. After each calculation, it redraws and or creates any new subdrafts\n * @param op_id \n * @returns \n */\nperformAndUpdateDownstream(op_id:number) : Promise<any>{\n\n  this.tree.getOpNode(op_id).dirty = true;\n  this.tree.getDownstreamOperations(op_id).forEach(el => this.tree.getNode(el).dirty = true);\n\n  return this.tree.performGenerationOps([op_id])\n  .then(draft_ids => {\n\n    const fns = this.tree.getDraftNodes()\n      .filter(el => el.component !== null && el.dirty)\n      .map(el => (<SubdraftComponent> el.component).drawDraft((<DraftNode>el).draft));\n\n\n\n    //create any new subdrafts nodes\n    const new_drafts = this.tree.getDraftNodes()\n      .filter(el => el.component === null)\n      .map(el => {\n        //console.log(\"loading new subdraft\", (<DraftNode>el).draft);\n        return this.loadSubDraft(\n          el.id, \n          (<DraftNode>el).draft, \n          {\n            node_id: el.id,\n            type: el.type,\n            topleft: this.calculateInitialLocaiton(el.id),\n          }, null,this.zs.zoom);\n        });\n      \n\n        return  Promise.all([Promise.all(fns), Promise.all(new_drafts)]);\n        \n       \n  }).then(el => {\n    const loads =[];\n    const new_cxns = this.tree.nodes.filter(el => el.type === 'cxn' && el.component === null);   \n    new_cxns.forEach(cxn => {\n      const from_node:Array<number> = this.tree.getInputs(cxn.id);\n      const to_node:Array<number> = this.tree.getOutputs(cxn.id);\n      if(from_node.length !== 1 || to_node.length !== 1) Promise.reject(\"connection has zero or more than one input or output\");\n      loads.push(this.loadConnection(cxn.id));\n    })\n\n    //update the positions of the connections\n    let all_cxns = this.tree.getConnections();\n    all_cxns.forEach(cxn => {\n      let to = this.tree.getOutputs(cxn.id);\n      to.forEach(id => {\n        cxn.updateToPosition(id, this.zs.zoom)\n      })\n    })\n\n    return Promise.all(loads);\n\n    }\n  );\n\n}\n\n/**\n * when a subdraft is closed, it has no operation to run before updaing downstream, instead it ONLY needs to update the downstream values\n * @param subdraft_id \n */\nupdateDownstream(subdraft_id: number) {\n\n  let out = this.tree.getNonCxnOutputs(subdraft_id);\n  console.log(\"out \", out)\n  \n  out.forEach(op_id => {\n    this.tree.getOpNode(op_id).dirty = true;\n    this.tree.getDownstreamOperations(op_id).forEach(el => this.tree.getNode(el).dirty = true);  \n  })\n\n \n  return this.tree.performGenerationOps(out)\n  .then(draft_ids => {\n\n    const fns = this.tree.getDraftNodes()\n      .filter(el => el.component !== null && el.dirty)\n      .map(el => (<SubdraftComponent> el.component).drawDraft((<DraftNode>el).draft));\n\n\n\n    //create any new subdrafts nodes\n    const new_drafts = this.tree.getDraftNodes()\n      .filter(el => el.component === null)\n      .map(el => {\n        //console.log(\"loading new subdraft\", (<DraftNode>el).draft);\n        return this.loadSubDraft(\n          el.id, \n          (<DraftNode>el).draft, \n          {\n            node_id: el.id,\n            type: el.type,\n            topleft: this.calculateInitialLocaiton(el.id),\n          }, null,this.zs.zoom);\n        });\n      \n\n        return  Promise.all([Promise.all(fns), Promise.all(new_drafts)]);\n        \n       \n  }).then(el => {\n    const loads =[];\n    const new_cxns = this.tree.nodes.filter(el => el.type === 'cxn' && el.component === null);   \n    new_cxns.forEach(cxn => {\n      const from_node:Array<number> = this.tree.getInputs(cxn.id);\n      const to_node:Array<number> = this.tree.getOutputs(cxn.id);\n      if(from_node.length !== 1 || to_node.length !== 1) Promise.reject(\"connection has zero or more than one input or output\");\n      loads.push(this.loadConnection(cxn.id));\n    })\n\n    return Promise.all(loads);\n\n    }\n  );\n\n}\n\n \n/**\n * when an inlet is pressed on an operation, highlight all things contributed to this inlet\n * @param op_id \n * @param inlet_id \n * @param ndx_in_inlets - if there aremultiple inputs at a single inlet, give the number in that list\n */\nhighlightPathToInlet(op_id: number, inlet_id: number, ndx_in_inlets: number){\n\nconst cxns = this.tree.getInputsAtNdx(op_id, inlet_id);\nconst upstream_ops = this.tree.getUpstreamOperations(cxns[ndx_in_inlets].tn.node.id); \nconst upstream_drafts = this.tree.getUpstreamDrafts(cxns[ndx_in_inlets].tn.node.id); \n\n// const upstream_ops = cxns.reduce((acc, val)=>{\n//    const ids = this.tree.getUpstreamOperations(val.tn.node.id);\n//    return acc.concat(ids);\n//  }, []); \n\n// const upstream_drafts = cxns.reduce((acc, val)=>{\n//   const ids = this.tree.getUpstreamDrafts(val.tn.node.id);\n//   return acc.concat(ids);\n// }, []); \n\nconst upstream_cxn = upstream_drafts.reduce((acc, draft)=>{\n  return acc.concat(this.tree.getOutputs(draft));\n}, []); \n\n\n\n//  const upstream_drafts = this.tree.getUpstreamDrafts(op_id);\nconst op_children = this.tree.getNonCxnOutputs(op_id);\n\n const all_ops = this.tree.getOpNodes();\n all_ops.forEach(op => {\n  if(upstream_ops.find(el => el === op.id) === undefined){\n    if(op.id !== op_id){\n      const div = document.getElementById(\"scale-\"+op.id);\n      if(div !== null) div.style.opacity = \".2\";\n    } \n  }\n })\n\n const all_drafts = this.tree.getDraftNodes();\n all_drafts.forEach(draft => {\n  if(upstream_drafts.find(el => el === draft.id) === undefined){\n    if(op_children.find(del => del === draft.id) === undefined){\n      const div = document.getElementById(\"scale-\"+draft.id);\n      if(div !== null) div.style.opacity = \".2\";\n    } \n  }\n })\n\n const all_cxns = this.tree.getConnections();\n all_cxns.forEach(cxn => {\n  if(upstream_cxn.find(el => el === cxn.id) === undefined){\n    const div = document.getElementById(\"scale-\"+cxn.id);\n    if(div !== null) div.style.opacity = \".2\";\n  }else{\n    cxn.show_path_text = true;\n    cxn.drawConnection(this.zs.zoom);\n  }\n })\n\n}\n\nresetOpacity(){\n  const ops = this.tree.getOpNodes();\n  ops.forEach(op => {\n    const div = document.getElementById(\"scale-\"+op.id);\n    if(div !== null) div.style.opacity = \"1\"\n  });\n\n  const drafts = this.tree.getDraftNodes();\n  drafts.forEach(draft => {\n    const div = document.getElementById(\"scale-\"+draft.id);\n    if(div !== null) div.style.opacity = \"1\"\n  });\n\n  const cxns = this.tree.getConnections();\n  cxns.forEach(cxn => {\n    const div = document.getElementById(\"scale-\"+cxn.id);\n    if(div !== null)  div.style.opacity = \"1\"\n    cxn.show_path_text = false;\n    cxn.drawConnection(this.zs.zoom);\n\n  });\n\n  \n}\n\n\n\n/**\n * called from an operation or inlet to allow for the inlighting of all upstream operations and drafts\n * @param obj \n */\nupdateVisibility(obj: any){\n  {\n\n    this.resetOpacity();\n    if(obj.show == true){\n\n      //unset any no longer selected inlets\n      const ops:Array<OpNode> = this.tree.getOpNodes();\n      const not_selected = ops.filter(el => el.id !== obj.id);\n\n\n      not_selected.forEach((op, ndx) => {\n        const inlets = op.inlets.map((val, ndx)=> ndx);\n        (<OperationComponent>op.component).resetVisibliity(inlets);\n      })\n\n      let selected = ops.filter(el => el.id == obj.id);\n      if(selected.length > 0){\n        const inlets = selected[0].inlets.map((val, ndx)=> ndx).filter(el => el !== obj.ndx);\n        (<OperationComponent>selected[0].component).resetVisibliity(inlets);\n      }\n\n\n      this.highlightPathToInlet(obj.id, obj.ndx, obj.ndx_in_inlets);\n\n\n    }else{\n      this.visible_op = -1;\n      this.visible_op_inlet = -1;\n    }\n\n  } \n}\n\n/**\n * called from an operation or inlet to allow for the inlighting of all upstream operations and drafts\n * @param obj \n */\ninletLoaded(obj: any){\n  //redraw the inlet\n  // let opid = obj.opid;\n  // let ndx = obj.ndx;\n\n  // const opnode = this.tree.getOpNode(opid);\n  // const cxns = this.tree.getInputsAtNdx(opnode.id, ndx);\n  // // console.log(\"CXNS \", cxns);\n  // cxns.forEach(io => {\n  //   const cxn = <ConnectionComponent> this.tree.getComponent(io.tn.node.id);\n  //   // console.log(\"ATTEMPTING TO UPDATE TO POSITION \")\n  //   cxn.updateToPosition(opnode.id, this.zs.zoom)\n  // })\n}\n\n/**\n * called from an operation or inlet to allow for the inlighting of all upstream operations and drafts\n * @param obj \n */\nopCompLoaded(obj: any){\n  //redraw the inlet\n  let opid = obj.id;\n\n  const cxns = this.tree.getInputsWithNdx(opid);\n\n  cxns.forEach((cxn, input_ndx) => {\n    const cxn_comp = <ConnectionComponent>this.tree.getComponent(cxn.tn.node.id)\n    cxn_comp.updateToPosition(opid,this.zs.zoom)\n  })\n\n\n\n\n\n}\n\n\n\n\n/**\n * emitted from operation when it receives a hit on its connection button, the id refers to the operation id\n */\nconnectionMade(obj: any){\n\n\n  if(!this.tree.hasOpenConnection()) return;\n\n\n  //this is defined in the order that the line was drawn\n  const op:OperationComponent = <OperationComponent>this.tree.getComponent(obj.id);\n  const sd: SubdraftComponent = <SubdraftComponent> this.tree.getOpenConnection();\n  \n  this.createConnection(sd.id, obj.id, obj.ndx);\n  \n  this.performAndUpdateDownstream(obj.id).then(el => {\n    this.addTimelineState();\n  });\n\n  this.processConnectionEnd();\n\n}\n\npasteConnection(from: number, to: number, inlet: number){\n\n  this.createConnection(from, to, inlet);\n\n  this.performAndUpdateDownstream(to).then(el => {\n    this.addTimelineState();\n  });\n\n}\n\n/**\n * Called when a connection is explicitly deleted\n*/\n removeConnection(obj: {id: number}){\n\n  let to = this.tree.getConnectionOutput(obj.id)\n\n  const to_delete = this.tree.removeConnectionNodeById(obj.id);  \n  to_delete.forEach(node => this.removeFromViewContainer(node.ref));\n\n \n // if(to_delete.length > 0) console.log(\"Error: Removing Connection triggered other deletions\");\n\n   this.processConnectionEnd();\n  \n   if(this.tree.getType(to)===\"op\"){\n     this.performAndUpdateDownstream(to);\n   }\n  \n  this.addTimelineState();\n\n\n}\n\n \n\n selectionStarted(){\n\n  this.selection.start = this.last;\n  this.selection.active = true;\n }\n\n panStarted(mouse_pos: Point){\n  console.log(\"PAN STARTED\")\n  this.last_point = mouse_pos;\n  this.freezePaletteObjects();\n\n }\n\n /**\n * brings the base canvas to view and begins to render the\n * @param mouse the absolute position of the mouse on screen\n */\nshapeStarted(mouse: Point){\n\n  const rel:Point = {\n    x: mouse.x - this.viewport.getTopLeft().x,\n    y: mouse.y - this.viewport.getTopLeft().y\n  }\n  \n  this.shape_bounds = {\n    topleft: rel,\n    width: this.zs.zoom,\n    height: this.zs.zoom\n  };\n\n\n  this.shape_vtxs = [];\n  this.canvas_zndx = this.layers.createLayer(); //bring this canvas forward\n  this.cx.fillStyle = \"#ff4081\";\n  this.cx.fillRect( this.shape_bounds.topleft.x, this.shape_bounds.topleft.y, this.shape_bounds.width,this.shape_bounds.height);\n  \n  if(this.dm.isSelected('free', 'shapes')){\n    this.startSnackBar(\"CTRL+Click to end drawing\", this.shape_bounds);\n  }else{\n    this.startSnackBar(\"Press SHIFT while dragging to constrain shape\", this.shape_bounds);\n  }\n \n\n}\n\n  /**\n   * resizes and redraws the shape between the the current mouse and where the shape started\n   * @param mouse the absolute position of the mouse on screen\n   */\nshapeDragged(mouse: Point, shift: boolean){\n\n  const rel:Point = {\n    x: mouse.x - this.viewport.getTopLeft().x,\n    y: mouse.y - this.viewport.getTopLeft().y\n  }\n\n  this.shape_bounds.width =  (rel.x - this.shape_bounds.topleft.x);\n  this.shape_bounds.height =  (rel.y - this.shape_bounds.topleft.y);\n\n  if(shift){\n    const max: number = Math.max(this.shape_bounds.width, this.shape_bounds.height);\n    \n    //allow lines to snap to coords\n    if(this.dm.isSelected('line', 'shapes')){\n        if(Math.abs(this.shape_bounds.width) < Math.abs(this.shape_bounds.height/2)){\n          this.shape_bounds.height = max;\n          this.shape_bounds.width = this.zs.zoom;\n        }else if(Math.abs(this.shape_bounds.height) < Math.abs(this.shape_bounds.width/2)){\n          this.shape_bounds.width = max;\n          this.shape_bounds.height = this.zs.zoom;\n        }else{\n          this.shape_bounds.width = max;\n          this.shape_bounds.height = max;  \n        }\n        \n    }else{\n      this.shape_bounds.width = max;\n      this.shape_bounds.height = max;    \n  \n    }\n  }\n\n  this.cx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  this.cx.beginPath();\n  this.cx.fillStyle = \"#ff4081\";\n  this.cx.strokeStyle = \"#ff4081\";\n  this.cx.setLineDash([]);\n  this.cx.lineWidth = this.zs.zoom;\n\n  if(this.dm.isSelected('line', 'shapes')){\n    this.cx.moveTo(this.shape_bounds.topleft.x+this.zs.zoom, this.shape_bounds.topleft.y+this.zs.zoom);\n    this.cx.lineTo(this.shape_bounds.topleft.x + this.shape_bounds.width, this.shape_bounds.topleft.y + this.shape_bounds.height);\n    this.cx.stroke();\n  }else if(this.dm.isSelected('fill_circle','shapes')){\n    this.shape_bounds.width = Math.abs(this.shape_bounds.width);\n    this.shape_bounds.height = Math.abs(this.shape_bounds.height);\n    this.cx.ellipse(this.shape_bounds.topleft.x, this.shape_bounds.topleft.y, this.shape_bounds.width, this.shape_bounds.height, 2 * Math.PI, 0,  this.shape_bounds.height/2);\n    this.cx.fill();\n  }else if(this.dm.isSelected('stroke_circle','shapes')){\n    this.cx.ellipse(this.shape_bounds.topleft.x, this.shape_bounds.topleft.y, this.shape_bounds.width, this.shape_bounds.height, 2 * Math.PI, 0,  this.shape_bounds.height/2);\n    this.cx.stroke();\n  }else if(this.dm.isSelected('fill_rect','shapes')){\n    this.cx.fillRect(this.shape_bounds.topleft.x, this.shape_bounds.topleft.y,this.shape_bounds.width,this.shape_bounds.height);\n  \n  }else if(this.dm.isSelected('stroke_rect','shapes')){\n    this.cx.strokeRect(this.shape_bounds.topleft.x + this.zs.zoom, this.shape_bounds.topleft.y+ this.zs.zoom,this.shape_bounds.width-this.zs.zoom,this.shape_bounds.height-this.zs.zoom);\n\n  }else{\n\n    if(this.shape_vtxs.length > 1){\n      this.cx.moveTo(this.shape_vtxs[0].x, this.shape_vtxs[0].y);\n\n      for(let i = 1; i < this.shape_vtxs.length; i++){\n        this.cx.lineTo(this.shape_vtxs[i].x, this.shape_vtxs[i].y);\n        //this.cx.moveTo(this.shape_vtxs[i].x, this.shape_vtxs[i].y);\n      }\n\n    }else{\n      this.cx.moveTo(this.shape_bounds.topleft.x, this.shape_bounds.topleft.y);\n    }\n\n    this.cx.lineTo(this.shape_bounds.topleft.x + this.shape_bounds.width, this.shape_bounds.topleft.y + this.shape_bounds.height);\n    this.cx.stroke();\n    this.cx.fill();\n    \n  }\n\n  if(this.dm.isSelected('free', 'shapes')){\n    this.updateSnackBar(\"CTRL+click to end drawing\", this.shape_bounds);\n  }else{\n    this.updateSnackBar(\"Press SHIFT to contstrain shape\", this.shape_bounds);\n  }\n}\n\n\n/**\n * clears the scratchpad for the new drawing event\n */\ndrawStarted(){\n\n\n  this.canvas_zndx = this.layers.createLayer(); //bring this canvas forward\n  \n  this.scratch_pad = [];\n  for(let i = 0; i < this.canvas.height; i+=this.zs.zoom ){\n      const row = [];\n      for(let j = 0; j< this.canvas.width; j+=this.zs.zoom ){\n          row.push(createCell(null));\n      }\n    this.scratch_pad.push(row);\n    }\n\n    this.startSnackBar(\"Drag to Draw\", null);\n  }\n\n\n  /**\n   * gets the bounds of a drawing on the scratchpad, a drawing is represented by set cells\n   * @returns an object representing the bounds in the format of i, j (the row, column index of the pad)\n   */\n  getScratchPadBounds(): Array<Interlacement>{\n    let bottom: number = 0;\n    let right: number = 0;\n    let top: number = this.scratch_pad.length-1;\n    let left: number = this.scratch_pad[0].length-1;\n\n    for(let i = 0; i < this.scratch_pad.length; i++ ){\n      for(let j = 0; j<  this.scratch_pad[0].length; j++){\n        if((this.scratch_pad[i][j].is_set)){\n          if(i < top) top = i;\n          if(j < left) left = j;\n          if(i > bottom) bottom = i;\n          if(j > right) right = j;\n        } \n      }\n    }\n\n    return [{i: top, j: left, si: -1}, {i: bottom, j: right, si: -1}];\n\n  }\n\n  /**\n   * handles checks and actions to take when drawing event ends\n   * gets the boudary of drawn segment and creates a subdraft containing that drawing\n   * if the drawing sits on top of an existing subdraft, merge the drawing into that subdraft (extending the original if neccessary)\n   * @returns \n   */\n  processDrawingEnd (): Promise<any> {\n\n\n    this.canvas_zndx = -1;\n\n    if(this.scratch_pad === undefined) return;\n    if(this.scratch_pad[0] === undefined) return;\n    \n    const corners: Array<Interlacement> = this.getScratchPadBounds();\n    const warps = corners[1].j - corners[0].j + 1;\n    const wefts = corners[1].i - corners[0].i + 1;\n\n\n    //there must be at least one cell selected\n    if(warps < 1 || wefts < 1){\n      this.scratch_pad = undefined;\n      return;\n    } \n\n\n    const pattern: Array<Array<Cell>> = [];\n    for(let i = 0; i < wefts; i++ ){\n      pattern.push([]);\n      for(let j = 0; j< warps; j++){\n        const c = this.scratch_pad[corners[0].i+i][corners[0].j+j];\n        const b = this.getScratchpadProduct({i:i, j:j, si:-1}, this.inks.getSelected(),c);\n        pattern[i].push(createCell(b));\n      }\n    }\n\n    //if this drawing does not intersect with any existing subdrafts, \n    return this.createSubDraft(initDraftWithParams({wefts: wefts,  warps: warps, pattern: pattern}), -1)\n    .then(sd => {\n      const pos = {\n        topleft: {x: this.viewport.getTopLeft().x + (corners[0].j * this.zs.zoom), y: this.viewport.getTopLeft().y + (corners[0].i * this.zs.zoom)},\n        width: warps * this.zs.zoom,\n        height: wefts * this.zs.zoom\n      }\n  \n      sd.setPosition(pos.topleft);\n      //sd.setComponentSize(pos.width, pos.height);\n      sd.disableDrag();\n\n  \n    //  const had_merge = this.mergeSubdrafts(sd);\n      this.addTimelineState();\n    });\n   \n\n  }\n\n  /**\n   * update the viewport when the window is resized\n   * @param event \n   */\n  @HostListener('window:resize', ['$event'])\n    onResize(event) {\n\n      this.viewport.setWidth(event.target.innerWidth);\n      this.viewport.setHeight(event.target.innerHeight);\n\n      this.canvas.width = this.viewport.getWidth();\n      this.canvas.height = this.viewport.getHeight();\n    }\n\n\n /**\n  * handles actions to take when the mouse is down inside of the palette\n  * @param event the mousedown event\n  */\n  @HostListener('mousedown', ['$event'])\n    private onStart(event) {\n\n      if(this.selecting_connection == true){\n        this.processConnectionEnd();\n      }\n\n      if(this.needs_init){\n      //this is a hack to update the screen posiitons because not all inforamtion is ready when onload and onview init completes\n        let ops = this.tree.getOpNodes();\n        ops.forEach(op => {\n          this.opCompLoaded(op);\n  \n          let drafts = this.tree.getDraftOutputs(op.id);\n          drafts.forEach((draft, ndx) => {\n            let draftcomp = <SubdraftComponent> this.tree.getComponent(draft);\n            draftcomp.updatePositionFromParent(<OperationComponent>op.component, ndx)\n          })\n  \n          }\n        );\n        this.needs_init = false;\n      }\n\n      const ctrl: boolean = event.ctrlKey;\n      const mouse:Point = {x: this.viewport.getTopLeft().x + event.clientX, y:this.viewport.getTopLeft().y+event.clientY};\n      const ndx:any = utilInstance.resolveCoordsToNdx(mouse, this.zs.zoom);\n\n      //use this to snap the mouse to the nearest coord\n      mouse.x = ndx.j * this.zs.zoom;\n      mouse.y = ndx.i * this.zs.zoom;\n\n      \n      this.last = ndx;\n      this.selection.start = this.last;\n      this.removeSubscription();    \n      \n     \n\n      if(this.dm.getDesignMode(\"marquee\",'design_modes').selected){\n          this.selectionStarted();\n          this.moveSubscription = \n          fromEvent(event.target, 'mousemove').subscribe(e => this.onDrag(e)); \n    \n      // }else if(this.dm.isSelected(\"draw\",'design_modes')){\n      //   this.moveSubscription = \n      //   fromEvent(event.target, 'mousemove').subscribe(e => this.onDrag(e)); \n  \n      //     this.drawStarted();    \n      //     this.setCell(ndx);\n      //     this.drawCell(ndx); \n      // }else if(this.dm.isSelected(\"shape\",'design_modes')){\n      //   this.moveSubscription = \n      //   fromEvent(event.target, 'mousemove').subscribe(e => this.onDrag(e)); \n  \n\n      //   if(this.dm.isSelected('free','shapes')){\n      //     if(ctrl){\n      //       this.processShapeEnd().then(el => {\n      //         this.changeDesignmode('move');\n      //         this.cx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      //       });\n      //     }else{\n      //       if(this.shape_vtxs.length == 0) this.shapeStarted(mouse);\n      //       this.shape_vtxs.push(mouse);\n      //     }\n            \n          \n      //   }else{\n      //     this.shapeStarted(mouse);\n      //   }\n      // }else if(this.dm.isSelected(\"operation\",'design_modes')){\n        // this.processConnectionEnd();\n        // this.changeDesignmode('move');\n      }else if(this.dm.isSelected(\"move\", \"design_modes\")){\n\n       if(event.shiftKey) return;\n        this.multiselect.clearSelections();\n\n      }else if(this.dm.isSelected(\"pan\", 'design_modes')){\n\n        this.panStarted({x: event.clientX, y: event.clientY});\n        this.moveSubscription = \n        fromEvent(event.target, 'mousemove').subscribe(e => this.onDrag(e)); \n\n      }\n  }\n\n\n  @HostListener('mousemove', ['$event'])\n  private onMove(event) {\n\n\n\n\n\n    const shift: boolean = event.shiftKey;\n    const mouse:Point = {x: this.viewport.getTopLeft().x + event.clientX, y:this.viewport.getTopLeft().y+event.clientY};\n    const ndx:any = utilInstance.resolveCoordsToNdx(mouse, this.zs.zoom);\n    mouse.x = ndx.j * this.zs.zoom;\n    mouse.y = ndx.i *this.zs.zoom;\n\n    if(this.dm.isSelected('free','shapes') && this.shape_vtxs.length > 0){\n     this.shapeDragged(mouse, shift);\n    }else if(this.selecting_connection){\n      this.connectionDragged(mouse, shift);\n    }\n  }\n  \n /**\n  * called when the operation input is selected and used to draw\n   * @param event the event object\n   */\n  mouseSelectingDraft(event: any, id: number){\n\n    const shift: boolean = event.shiftKey;\n    const mouse: Point = {x: this.viewport.getTopLeft().x + event.clientX, y:this.viewport.getTopLeft().y+event.clientY};\n    const ndx:Interlacement = utilInstance.resolveCoordsToNdx(mouse, this.zs.zoom);\n    //use this to snap the mouse to the nearest coord\n    mouse.x = ndx.j * this.zs.zoom;\n    mouse.y = ndx.i * this.zs.zoom;\n\n    if(utilInstance.isSameNdx(this.last, ndx)) return;\n\n    // if(this.dm.getDesignMode(\"operation\",'design_modes').selected){\n\n     \n    \n    // }\n    \n    this.last = ndx;\n  }\n\n  /**\n   * called form the subscription created on start, checks the index of the location and returns null if its the same\n   * @param event the event object\n   */\n  onDrag(event){\n\n\n    const shift: boolean = event.shiftKey;\n    const mouse: Point = {x: this.viewport.getTopLeft().x + event.clientX, y:this.viewport.getTopLeft().y+event.clientY};\n    const ndx:Interlacement = utilInstance.resolveCoordsToNdx(mouse, this.zs.zoom);\n\n    //use this to snap the mouse to the nearest coord\n    mouse.x = ndx.j *this.zs.zoom;\n    mouse.y = ndx.i * this.zs.zoom;\n\n    if(utilInstance.isSameNdx(this.last, ndx)) return;\n\n    if(this.dm.getDesignMode(\"marquee\",'design_modes').selected){\n\n     this.drawSelection(ndx);\n     const bounds:Bounds = this.getSelectionBounds(this.selection.start,  this.last);    \n     this.selection.setPositionAndSize(bounds);\n    }else if(this.dm.getDesignMode(\"pan\",'design_modes').selected){\n      \n      const diff = {\n        x:  (this.last_point.x-event.clientX), \n        y: (this.last_point.y-event.clientY)}\n\n      this.handlePan(diff);\n\n    }\n    \n    // }else if(this.dm.getDesignMode(\"draw\", 'design_modes').selected){\n    //   this.setCell(ndx);\n    //   this.drawCell(ndx);\n    // }else if(this.dm.getDesignMode(\"shape\",'design_modes').selected){\n    //   this.shapeDragged(mouse, shift);\n    // }\n    \n    this.last = ndx;\n    this.last_point = {x: event.clientX, y: event.clientY};\n  }\n\n  \n\n/**\n * Called when the mouse is up or leaves the boundary of the view\n * @param event \n * @returns \n */\n  @HostListener('mouseleave', ['$event'])\n  @HostListener('mouseup', ['$event'])\n     private onEnd(event) {\n\n      //if this.last is null, we have a mouseleave with no mousestart\n      if(this.last === undefined) return;\n    \n      const mouse: Point = {x: this.viewport.getTopLeft().x + event.clientX, y:this.viewport.getTopLeft().y+event.clientY};\n      const ndx:Interlacement = utilInstance.resolveCoordsToNdx(mouse, this.zs.zoom);\n      //use this to snap the mouse to the nearest coord\n      mouse.x = ndx.j * this.zs.zoom;\n      mouse.y = ndx.i * this.zs.zoom;\n\n      this.removeSubscription();   \n\n      if(this.dm.getDesignMode(\"marquee\",'design_modes').selected){\n        if(this.selection.active) this.processSelection();\n        this.closeSnackBar();\n        this.cx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.changeDesignmode('move');\n        this.unfreezePaletteObjects();\n      }else if(this.dm.isSelected('pan', 'design_modes')){\n        const div:HTMLElement = document.getElementById('scrollable-container');\n        this.viewport.set(div.offsetParent.scrollLeft, div.offsetParent.scrollTop,  div.offsetParent.clientWidth,  div.offsetParent.clientHeight);\n\n      }\n\n\n      // }else if(this.dm.isSelected(\"draw\",'design_modes')){\n       \n      //   this.processDrawingEnd().then(el => {\n      //     this.closeSnackBar();\n      //     this.cx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      //     this.changeDesignmode('move');\n      //     this.scratch_pad = undefined;\n      //   }).catch(console.error);\n      \n\n\n\n      // }else if(this.dm.isSelected(\"shape\",'design_modes')){\n      //   if(!this.dm.isSelected('free','shapes')){\n          \n      //     this.processShapeEnd().then(el => {\n      //       this.cx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      //       this.changeDesignmode('move');\n           \n      //    });\n      //   }\n          \n      // }\n\n      //unset vars that would have been created on press\n      this.last = undefined;\n      this.last_point = undefined;\n      this.selection.active = false;\n      this.canvas_zndx = -1; \n  }\n  \n \n  /**\n   * Called when a selection operation ends. Checks to see if this selection intersects with any subdrafts and \n   * merges and or splits as required. \n   */\n  processSelection(){\n\n    this.closeSnackBar();\n\n    //create the selection as subdraft\n    const bounds:Bounds = this.getSelectionBounds(this.selection.start,  this.last);    \n    \n    \n    this.createSubDraft(initDraftWithParams({wefts: bounds.height/this.zs.zoom, warps: bounds.width/this.zs.zoom}), -1)\n    .then(sc => {\n      sc.setPosition(bounds.topleft);\n      //const isect:Array<SubdraftComponent> = this.getIntersectingSubdrafts(sc);\n      const isect = [];\n      if(isect.length === 0){\n        this.addTimelineState();\n        return;\n      } \n\n       //get a draft that reflects only the poitns in the selection view\n      // const new_draft: Draft = this.getCombinedDraft(bounds, sc, isect);\n      // this.tree.setDraftOnly(sc.id, new_draft)\n    \n\n    // isect.forEach(el => {\n    //   const ibound = utilInstance.getIntersectionBounds(sc, el);\n\n    //   if(el.isSameBoundsAs(ibound)){\n    //      console.log(\"Component had same Bounds as Intersection, Consumed\");\n    //      this.removeSubdraft(el.id);\n    //   }\n\n    // });\n    })\n    .catch(console.error);\n   \n    \n    \n   \n\n  }\n\n\n  /**\n   * this function will update any components that should move when the compoment passed by obj moves\n   * moves all compoments returned from tree.getNodesToUpdate(). All changes to what updates should be \n   * handled by getNodesToUpdateOnMove\n   * @param obj \n   */\n  updateAttachedComponents(id: number, follow: boolean){\n\n    //start by moving the original object than ripple out;\n    const moving : any = this.tree.getComponent(id);\n\n    this.tree.getInputs(id).forEach(cxn => {\n       const comp: ConnectionComponent = <ConnectionComponent>this.tree.getComponent(cxn);\n       comp.updateToPosition(id, this.zs.zoom);\n    });\n\n    this.tree.getOutputs(id).forEach(cxn => {\n      const comp: ConnectionComponent = <ConnectionComponent>this.tree.getComponent(cxn);\n      comp.updateFromPosition(id, this.zs.zoom);\n   });\n\n   if(!follow) return;\n\n   const outs: Array<number> = this.tree.getNonCxnOutputs(id);\n\n   //if this an operation with one child, move the child. \n   if(this.tree.getType(moving.id) === \"op\" ){\n\n      outs.forEach((out, ndx) => {\n        const out_comp = <SubdraftComponent> this.tree.getComponent(out);\n        if(this.tree.getType(out_comp.id) === 'draft') out_comp.updatePositionFromParent(moving, ndx);\n        this.updateAttachedComponents(out_comp.id, false);\n      })\n\n    \n    }\n\n    const ins = this.tree.getNonCxnInputs(id);\n    //if this is a draft with a parent, move the parent as well \n    if(this.tree.getType(moving.id) === \"draft\" && !this.tree.isSibling(moving.id)){\n      ins.forEach(input => {\n        const in_comp: OperationComponent = <OperationComponent> this.tree.getComponent(input);\n        in_comp.updatePositionFromChild(moving);\n        this.updateAttachedComponents(in_comp.id, false);\n      });\n    }\n      \n   \n  }\n\n\n  /**\n   * emitted from a subdraft when an internal action has changeded its value \n   * checks for a child subdraft, recomputes, redraws. \n   * @param obj with attribute id describing the subdraft that called this\n   * @returns \n   */\n  onSubdraftAction(obj: any){\n\n    if(obj === null) return;\n\n    const outputs = this.tree.getNonCxnOutputs(obj.id);\n    const fns = outputs.map(out => this.performAndUpdateDownstream(out));\n    Promise.all(fns).then(el => {\n      this.addTimelineState();\n      this.changeDesignmode('move')\n    })\n\n\n\n  }\n\n  /**\n   * emitted from an operatioin when its param has changed. This is automatically called on load \n   * which is annoying because it recomputes everything!\n   * checks for a child subdraft, recomputes, redraws. \n   * @param obj with attribute id describing the operation that called this\n   * @returns \n   */\n   async operationParamChanged(obj: any){\n\n    if(obj === null) return;\n\n    return this.tree.sweepInlets(obj.id)\n      .then(viewRefs => {\n        viewRefs.forEach(el => {\n          this.removeFromViewContainer(el)\n        });\n        this.performAndUpdateDownstream(obj.id)\n      } )\n      .then(el => {\n        this.addTimelineState();\n      })\n      .catch(console.error);\n   \n    \n\n  }\n\n  paletteClicked(){\n  }\n\n/**\n * called from an operation component when it is dragged\n * @param obj (id, point of toplleft)\n */\n  operationMoved(obj: any){\n    if(obj === null) return;\n  \n    this.updateAttachedComponents(obj.id, true);\n    this.moveAllSelections(obj.id);\n\n\n  }\n\n  /**\n * called from an operation component when it is done moving \n * this allows us to not write postioin continuously, but just once on end\n * @param obj (id, point of toplleft)\n */\n   operationMoveEnded(obj: any){\n    if(obj === null) return;\n\n    this.updateSelectionPositions(obj.id);\n\n    this.addTimelineState();\n\n  }\n\n  updateSelectionPositions(moving_id: number){\n    const selections = this.multiselect.getSelections();\n    selections.forEach(sel => {\n      if(this.tree.getType(sel) != 'cxn' && sel !== moving_id){\n        const comp = this.tree.getComponent(sel);\n        this.multiselect.setPosition(sel, comp.topleft)\n      }\n\n     \n    })\n\n  }\n\n  /**\n   * this is called when a multi-selected block of items is moved. \n   * Sometimes its called if you paste one set of items to a new space, in which case the nodes do\n   * not yet exist. \n   * @param moving_id \n   * @returns \n   */\n  moveAllSelections(moving_id: number){\n    const selections = this.multiselect.getSelections();\n    if(selections.length == 0) return;\n\n    const rel_pos = this.multiselect.getRelativePosition();\n    const cur_pos = this.tree.getComponent(moving_id).topleft;\n    const diff:Point = {x: cur_pos.x - rel_pos.x, y: cur_pos.y - rel_pos.y};\n\n    selections.forEach(sel => {\n      if(this.tree.getNode(sel) == null) return;\n\n      if(this.tree.getType(sel) == 'op' && sel !== moving_id){\n        const comp = this.tree.getComponent(sel);\n        comp.topleft = this.multiselect.getNewPosition(sel, diff);\n        this.updateAttachedComponents(sel, true);\n      }\n      if(this.tree.getType(sel)=='draft' && sel !== moving_id){\n        const comp = <SubdraftComponent> this.tree.getComponent(sel);\n        if(comp.parent_id == -1) comp.setPosition( this.multiselect.getNewPosition(sel, diff));\n      }\n    });\n  }\n\n\n\n\n  /**\n   * called when subdraft component says its moving\n   * @param obj the subdraft that called this\n   * @returns \n   */\n  subdraftMoved(obj: any){\n\n\n      if(obj === null) return;\n  \n      //get the reference to the draft that's moving\n      const moving = <SubdraftComponent> this.tree.getComponent(obj.id);\n      \n      if(moving === null) return; \n\n      this.moveAllSelections(obj.id);\n  \n    \n\n\n      // // this.updateSnackBar(\"Using Ink: \"+moving.ink,null);\n       this.updateAttachedComponents(moving.id, true);\n\n\n      // const isect:Array<SubdraftComponent> = this.getIntersectingSubdrafts(moving);\n      // const seed_drafts = isect.filter(el => !this.tree.hasParent(el.id)); //filter out drafts that were generated\n\n      // if(seed_drafts.length === 0){\n      //   if(this.tree.hasPreview()) this.removePreview();\n      //   return;\n      // } \n\n      // const bounds: Bounds = utilInstance.getCombinedBounds(moving, seed_drafts);\n      // const temp: Draft = this.getCombinedDraft(bounds, moving, seed_drafts);\n      \n\n\n      // if(this.tree.hasPreview()) {\n       \n      //   this.tree.setPreviewDraft(temp).then(dn => {\n      //     dn.component.bounds = bounds;\n      //    (<SubdraftComponent> dn.component).setPosition(bounds.topleft)\n      //   });\n      // }else{\n      //   this.createAndSetPreview(temp).then(dn => {\n      //     dn.component.bounds = bounds;\n      //     (<SubdraftComponent> dn.component).setPosition(bounds.topleft)\n      //   }).catch(console.error);\n      // } \n    \n    }\n\n\n   /**\n    * checks if this subdraft has been dropped onto of another and merges them accordingly \n    * @param obj \n    * @returns \n    */\n  subdraftDropped(obj: any){\n\n    this.closeSnackBar();\n\n     if(obj === null) return;\n     this.updateSelectionPositions(obj.id);\n\n  \n      //creaet a subdraft of this intersection\n      if(this.tree.hasPreview()){\n\n        const preview_node = this.tree.getPreview();\n        const preview_draft = preview_node.draft;\n        let to_right = (<SubdraftComponent> preview_node.component).getTopleft();\n\n        this.createSubDraft(initDraftWithParams({wefts: wefts(preview_draft.drawdown), warps: warps(preview_draft.drawdown)}), -1)\n        .then(component => {\n          this.tree.setDraftPattern(component.id, preview_draft.drawdown);\n          //this.redrawDirtyDrafts();\n          // to_right.x += preview_node.component.bounds.width + this.zs.zoom *4;\n          // component.setPosition(to_right);\n          component.zndx = this.layers.createLayer();\n          this.removePreview();\n          const interlacement = utilInstance.resolvePointToAbsoluteNdx(component.topleft, this.zs.zoom);\n          this.viewport.addObj(component.id, interlacement);\n          this.addTimelineState();\n          this.tree.unsetPreview();\n        })\n        .catch(console.error);\n\n      } else{\n        this.addTimelineState();\n        this.tree.unsetPreview();\n      \n        //get the reference to the draft that's moving\n        const moving = this.tree.getComponent(obj.id);\n        const interlacement = utilInstance.resolvePointToAbsoluteNdx(moving.topleft, this.zs.zoom);\n        this.viewport.updatePoint(moving.id, interlacement);\n      }\n\n\n  }\n\n  /**\n   * merges a collection of subdraft components into the primary component, deletes the merged components\n   * @param primary the draft to merge into\n   * @returns true or false to describe if a merge took place. \n   */\n  // mergeSubdrafts(primary: SubdraftComponent): boolean{\n\n  //   const isect:Array<SubdraftComponent> = this.getIntersectingSubdrafts(primary);\n\n  //     if(isect.length == 0){\n  //       return false;\n  //     }   \n\n  //     const bounds: Bounds = utilInstance.getCombinedBounds(primary, isect);\n  //     const temp: Draft = this.getCombinedDraft(bounds, primary, isect);\n\n  //     this.tree.setDraftOnly(primary.id, temp);\n  //     primary.setPosition(bounds.topleft);\n  //     //primary.drawDraft();\n  //     const interlacement = utilInstance.resolvePointToAbsoluteNdx(primary.bounds.topleft, this.zs.zoom);\n\n  //     this.viewport.updatePoint(primary.id, interlacement);\n\n\n  //   //remove the intersecting drafts from the view containier and from subrefts\n  //   isect.forEach(element => {\n  //     this.removeSubdraft(element.id);\n  //   });\n  //   return true;\n  // }\n\n  computeHeddleValue(p:Point, main: SubdraftComponent, isect: Array<SubdraftComponent>):boolean{\n    const a:boolean = main.resolveToValue(p);\n    //this may return an empty array, because the intersection might not have the point\n    const b_array:Array<SubdraftComponent> = isect.filter(el => el.hasPoint(p));\n\n    //should never have more than one value in barray\n    // if(b_array.length > 1) console.log(\"WARNING: Intersecting with Two Elements\");\n\n    const val:boolean = b_array.reduce((acc:boolean, arr) => arr.resolveToValue(p), null);   \n    \n    return utilInstance.computeFilter(main.ink, a, val);\n  }\n\n\n\n  // getSubdraftsIntersectingSelection(selection: MarqueeComponent){\n\n  //   //find intersections between main and the others\n  //   const drafts: Array<SubdraftComponent> = this.tree.getDrafts();\n  //   const isect:Array<SubdraftComponent> = drafts.filter(sr => (utilInstance.doOverlap(\n  //     selection.bounds.topleft, \n  //     {x:  selection.bounds.topleft.x + selection.bounds.width, y: selection.bounds.topleft.y + selection.bounds.height}, \n  //     sr.getTopleft(), \n  //     {x: sr.getTopleft().x + sr.bounds.width, y: sr.getTopleft().y + sr.bounds.height}\n  //     ) ? sr : null));\n\n  //   return isect;\n  \n  // }\n\n\n /**\n   * get any subdrafts that intersect a given screen position\n   * @param p the x, y position of this cell \n   * @returns \n   */\n  // getIntersectingSubdraftsForPoint(p: any){\n\n  //   const primary_topleft = {x:  p.x, y: p.y };\n  //   const primary_bottomright = {x:  p.x + this.zs.zoom, y: p.y + this.zs.zoom};\n\n  //   const isect:Array<SubdraftComponent> = [];\n  //   const drafts: Array<SubdraftComponent> = this.tree.getDrafts();\n  //   drafts.forEach(sr => {\n  //     let sr_bottomright = {x: sr.getTopleft().x + sr.bounds.width, y: sr.getTopleft().y + sr.bounds.height};\n  //     const b: boolean = utilInstance.doOverlap(primary_topleft, primary_bottomright, sr.getTopleft(), sr_bottomright);\n  //     if(b) isect.push(sr);\n  //    });\n\n  //   return isect;\n  // }\n\n  /**\n   * get any subdrafts that intersect primary based on checks on their boundaries\n   * @param primary \n   * @returns \n   */\n  // getIntersectingSubdrafts(primary: SubdraftComponent){\n\n  //   const primary_draft = this.tree.getDraft(primary.id);\n  //   const drafts:Array<DraftNode> =  this.tree.getDraftNodes(); \n  //   const to_check:Array<DraftNode> =  drafts.filter(sr => (sr.draft.id.toString() !== primary_draft.id.toString()));\n  //   const primary_bottomright = {x:  primary.getTopleft().x + primary.bounds.width, y: primary.getTopleft().y + primary.bounds.height};\n\n\n  //    const isect:Array<SubdraftComponent> = [];\n  //    to_check\n  //    .map(el => <SubdraftComponent> this.tree.getComponent(el.id))\n  //    .forEach(sr => {\n  //     let sr_bottomright = {x: sr.getTopleft().x + sr.bounds.width, y: sr.getTopleft().y + sr.bounds.height};\n  //     const b: boolean = utilInstance.doOverlap(primary.getTopleft(), primary_bottomright, sr.getTopleft(), sr_bottomright);\n  //     if(b) isect.push(sr);\n  //    });\n\n  //   return isect;\n  // }\n\n  getSelectionBounds(c1: any, c2: any): Bounds{\n      let bottomright = {x: 0, y:0};\n      let bounds:Bounds = {\n        topleft:{x: 0, y:0},\n        width: 0,\n        height: 0\n      }\n      if(c1.i < c2.i){\n        bounds.topleft.y = c1.i * this.zs.zoom;\n        bottomright.y = c2.i * this.zs.zoom;\n      }else{\n        bounds.topleft.y = c2.i * this.zs.zoom;\n        bottomright.y = c1.i * this.zs.zoom;\n      }\n\n      if(c1.j < c2.j){\n        bounds.topleft.x = c1.j * this.zs.zoom;\n        bottomright.x = c2.j * this.zs.zoom;\n      }else{\n        bounds.topleft.x = c1.j * this.zs.zoom;\n        bottomright.x = c2.j * this.zs.zoom;\n      }\n\n      bounds.width = bottomright.x - bounds.topleft.x;\n      bounds.height = bottomright.y - bounds.topleft.y;\n\n      return bounds;\n  }\n\n      /**\n     * creates a draft in size bounds that contains all of the computed points of its intersections\n     * @param bounds the boundary of all the intersections\n     * @param primary the primary draft that we are checking for intersections\n     * @param isect an Array of the intersecting components\n     * @returns \n     */\n       getCombinedDraft(bounds: Bounds, primary: SubdraftComponent, isect: Array<SubdraftComponent>):Draft{\n  \n        const primary_draft = this.tree.getDraft(primary.id);\n\n        const temp: Draft = initDraftWithParams({\n          id: primary_draft.id, \n          gen_name: getDraftName(primary_draft), \n          warps: Math.floor(bounds.width / this.zs.zoom), \n          wefts: Math.floor(bounds.height / this.zs.zoom)});\n    \n        for(var i = 0; i < wefts(temp.drawdown); i++){\n          const top: number = bounds.topleft.y + (i * this.zs.zoom);\n          for(var j = 0; j < warps(temp.drawdown); j++){\n            const left: number = bounds.topleft.x + (j * this.zs.zoom);\n    \n            const p = {x: left, y: top};\n            const val = this.computeHeddleValue(p, primary, isect);\n            if(val != null) temp.drawdown[i][j] = setCellValue(temp.drawdown[i][j], val);\n            else setCellValue(temp.drawdown[i][j], null);\n          }\n        }\n        return temp;\n      }\n\n\n\n      /**\n       * TODO: Update this to get bounds and print all items, not just what's visible\n       * @param obj \n       * @returns \n       */\n  getPrintableCanvas(obj): HTMLCanvasElement{\n\n    this.cx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    const drafts: Array<SubdraftComponent> = this.tree.getDrafts();\n    drafts.forEach(sd => {\n      sd.drawForPrint(this.canvas, this.cx, this.zs.zoom);\n    });\n\n    const ops: Array<OperationComponent> = this.tree.getOperations();\n    ops.forEach(op => {\n      op.drawForPrint(this.canvas, this.cx, this.zs.zoom);\n    });\n\n    const cxns: Array<ConnectionComponent> = this.tree.getConnections();\n    cxns.forEach(cxn => {\n      cxn.drawForPrint(this.canvas, this.cx, this.zs.zoom);\n    });\n\n    // this.note_components.forEach(note =>{\n    //   note.drawForPrint(this.canvas, this.cx, this.scale);\n    // })\n\n    return this.canvas;\n\n  }\n\n  clearCanvas(){\n    this.cx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  // redrawOpenModals(){\n  //   const comps = this.tree.getDrafts();\n  //   comps.forEach(sd => {\n  //     if(sd.modal !== undefined && sd.modal.componentInstance !== null){\n  //       sd.modal.componentInstance.redraw();\n  //     }\n  //   })\n  // }\n    \n  redrawAllSubdrafts(){\n      const comps = this.tree.getDrafts();\n      comps.forEach(sd => {\n        sd.redrawExistingDraft();\n      })\n    }\n  }"," <!--render each of the subdrafts as an SVG Element to take advantage of intersection-->\n\n<ng-container #vc>\n<div id=\"palette\"  \nclass=\"palette-container\"\n[class.no-pointer]=\"!pointer_events\" \n[style.width.px]=\"viewport.getAbsoluteWidth()\"  \n[style.height.px]=\"viewport.getAbsoluteHeight()\">\n</div>\n\n<svg id=\"scratch_svg\">\n    \n</svg>\n\n<canvas id=\"scratch\" [style.z-index]=\"canvas_zndx\" [class.no-pointer]=\"!pointer_events\" [style.left.px]=\"viewport.vp.topleft.x\" [style.top.px]=\"viewport.vp.topleft.y\"></canvas>\n</ng-container>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { Bounds } from '../../../core/model/datatypes';\n\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.scss']\n})\nexport class SnackbarComponent implements OnInit {\n\n  bounds: Bounds;\n  message: string;\n  scale: number;\n\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { \n    this.bounds = data.bounds;\n    this.message = data.message;\n    this.scale = data.scale;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"snackbar\">\n\n    <!-- <ng-container *ngIf=\"bounds !== null\">\n        <div>dims:({{bounds.width}}, {{bounds.height}})</div>\n   </ng-container> -->\n    <ng-container *ngIf=\"message !== null\"> \n        <div class=\"pink\">{{message}}</div>\n    </ng-container>\n\n\n</div>","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { SystemsService } from '../../../core/provider/systems.service';\nimport { Bounds, Draft, DraftNode, Interlacement, LoomSettings, Point } from '../../../core/model/datatypes';\nimport { getDraftName, isSet, isUp, warps, wefts } from '../../../core/model/drafts';\nimport utilInstance from '../../../core/model/util';\nimport { FileService } from '../../../core/provider/file.service';\nimport { MaterialsService } from '../../../core/provider/materials.service';\nimport { TreeService } from '../../../core/provider/tree.service';\nimport { WorkspaceService } from '../../../core/provider/workspace.service';\nimport { InkService } from '../../provider/ink.service';\nimport { LayersService } from '../../provider/layers.service';\nimport { MultiselectService } from '../../provider/multiselect.service';\nimport { ViewportService } from '../../provider/viewport.service';\nimport { OperationComponent } from '../operation/operation.component';\n\n\n\n\ninterface DesignActions{\n  value: string;\n  viewValue: string;\n  icon: string;\n}\n\n@Component({\n  selector: 'app-subdraft',\n  templateUrl: './subdraft.component.html',\n  styleUrls: ['./subdraft.component.scss']\n})\n\n\n\nexport class SubdraftComponent implements OnInit {\n\n  @Input()  id: number; //generated by the tree service\n  @Input()  default_cell: number;\n\n\n  @Input()\n  get scale(): number { return this._scale; }\n  set scale(value: number) {\n    this._scale = value;\n    this.rescale().catch(e => console.log(e))\n  }\n  private _scale:number = 5;\n\n  @Input()\n  get draft(): Draft { return this._draft; }\n  set draft(value: Draft) {\n    this._draft = value;\n    this.drawDraft(value);\n  }\n\n  private _draft:Draft = null;\n\n  @Input()\n  get topleft(): Point { return this._topleft; }\n  set topleft(value: Point) {\n    this.updateViewport(value);\n    this._topleft = value;\n    ;\n  }\n\n  private _topleft:Point =  {x: 0, y: 0};\n\n  \n\n  @Output() onSubdraftMove = new EventEmitter <any>(); \n  @Output() onSubdraftDrop = new EventEmitter <any>(); \n  @Output() onSubdraftStart = new EventEmitter <any>(); \n  @Output() onDeleteCalled = new EventEmitter <any>(); \n  @Output() onDuplicateCalled = new EventEmitter <any>(); \n  @Output() onConnectionMade = new EventEmitter <any>(); \n  @Output() onConnectionRemoved = new EventEmitter <any>(); \n  @Output() onDesignAction = new  EventEmitter <any>();\n  @Output() onConnectionStarted:any = new EventEmitter<any>();\n  @Output() onSubdraftViewChange:any = new EventEmitter<any>();\n  @Output() createNewSubdraftFromEdits:any = new EventEmitter<any>();\n  @Output() onNameChange:any = new EventEmitter<any>();\n  @Output() onShowDetails:any = new EventEmitter<any>();\n\n  @ViewChild('bitmapImage') bitmap: any;\n\n\n\n  draft_canvas: HTMLCanvasElement;\n  draft_cx: any;\n\n  warp_data_canvas: HTMLCanvasElement;\n  warp_data_cx: any;\n\n  parent_id: number = -1;\n\n  /**\n  * flag to tell if this is in a mode where it is looking foor a connectino\n  */\n  selecting_connection: boolean = false;\n\n\n  /**\n   * hold the top left point as an interlacement, independent of scale\n   */\n  interlacement: Interlacement;\n\n  // private _scale: number; \n\n  ink = 'neq'; //can be or, and, neq, not, splice\n\n  counter:number  =  0; // keeps track of how frequently to call the move functions\n \n  counter_limit: number = 50;  //this sets the threshold for move calls, lower number == more calls\n \n  last_ndx:Interlacement = {i: -1, j:-1, si: -1}; //used to check if we should recalculate a move operation\n\n  moving: boolean  = false;\n \n  disable_drag: boolean = false;\n\n  is_preview: boolean = false;\n \n  zndx = 0;\n\n  has_active_connection: boolean = false;\n\n  set_connectable:boolean = false;\n\n\n  draft_visible: boolean = true;\n\n  loom_settings: LoomSettings;\n\n  ud_name: string;\n\n  use_colors: boolean = false;\n\n  draft_zoom: number = 1;\n\n  draft_cell_size: number = 8;\n\n\n  constructor(private inks: InkService, \n    private layer: LayersService, \n    private ms: MaterialsService, \n    private ss: SystemsService, \n    public tree: TreeService,\n    private fs: FileService,\n    private viewport: ViewportService,\n    private dialog: MatDialog,\n    public ws: WorkspaceService,\n    private multiselect: MultiselectService) { \n\n      this.zndx = layer.createLayer();\n\n  }\n\n  ngOnInit(){\n\n    if(!this.is_preview) this.parent_id = this.tree.getSubdraftParent(this.id);\n    const tl: Point = this.viewport.getTopRight();\n    const tl_offset = {x: tl.x - 250, y: tl.y + 200};\n\n    if(this.topleft.x === 0 && this.topleft.y === 0) this.setPosition(tl_offset);\n    this.interlacement = utilInstance.resolvePointToAbsoluteNdx(this.topleft, this.scale);\n\n    if(!this.is_preview) this.viewport.addObj(this.id, this.interlacement);\n\n    const draft = this.tree.getDraft(this.id);\n    this.loom_settings = this.tree.getLoomSettings(this.id);\n    this.ud_name = draft.ud_name;\n\n    const dn:DraftNode = <DraftNode> this.tree.getNode(this.id);\n    this.use_colors = dn.render_colors;\n\n\n    this.draft_cell_size = this.calculateDefaultCellSize(this.draft);\n\n    if(this.tree.isSibling(this.id)) this.disableDrag();\n\n\n  }\n\n\n\n  ngAfterViewInit() {\n\n\n    this.draft_canvas = <HTMLCanvasElement> document.getElementById(this.id.toString());\n    this.draft_cx = this.draft_canvas.getContext(\"2d\");\n\n    this.warp_data_canvas = <HTMLCanvasElement> document.getElementById('warp-data-'+this.id.toString());\n    this.warp_data_cx = this.draft_canvas.getContext(\"2d\");\n\n\n    /**\n     * when loading a draft from a file, the connections won't match if the connection is drawn before this\n     * function executes. For this reason, I made these sequential function and then they manually call updates\n     */\n    this.drawDraft(this.draft).then(out => {\n      return this.rescale();\n\n    }).then(after => {\n      this.updateViewport(this.topleft);\n  \n      //this must be called to trigger redrawing on any outgoing connections\n      this.onSubdraftMove.emit({id: this.id, point: this.topleft});\n\n  \n      \n    });\n\n  }\n\n\n  nameFocusOut(){\n    this.onNameChange.emit(this.id);\n    const scale = document.getElementById('scale-'+this.id);\n  }\n\n\n/**\n * this is called when the global workspace is rescaled. \n * @returns \n */\n  rescale() : Promise<boolean>{\n\n\n    if(this.draft === null){\n      return Promise.reject(\"draft is null on draft rescale\");\n    } \n\n    const zoom_factor:number = this.scale/this.default_cell;\n\n    //redraw at scale\n    const container: HTMLElement = document.getElementById('scale-'+this.id.toString());\n   \n    if(container === null) return Promise.reject(\"no container initialized on draft rescale\");\n\n\n    container.style.transformOrigin = 'top left';\n    container.style.transform = 'scale(' + zoom_factor + ')';\n\n   \n    this.topleft = {\n      x: this.interlacement.j * this.scale,\n      y: this.interlacement.i * this.scale\n    };\n\n    return Promise.resolve(true)\n\n\n\n  }\n\n  /**called when bounds change, updates the global view port */\n  updateViewport(topleft: Point){\n    this.interlacement = utilInstance.resolvePointToAbsoluteNdx(topleft, this.scale);\n    this.viewport.updatePoint(this.id, this.interlacement);\n\n  }\n\n  zoomChange(event: any){\n    this.draft_cell_size = event;\n    this.drawDraft(this.draft);\n    this.onSubdraftMove.emit({id: this.id, point: this.topleft});\n    // console.log(this.draft_zoom, event);\n    // const zoom_container = document.getElementById('local-zoom-'+this.id);\n    // zoom_container.style.transform = 'scale('+this.draft_zoom+')';\n    // zoom_container.style.width = (warps(this.draft.drawdown) * cell_size * event)+\"px\";\n    // zoom_container.style.height = (wefts(this.draft.drawdown) * cell_size * event)+\"px\";\n    // console.log(wefts(this.draft.drawdown), cell_size, event, this.scale);\n    \n\n  }\n\n  /**\n   * updates this components position based on the input component's position\n   * */\n  updatePositionFromParent(parent: OperationComponent, ndx: number){\n\n\n    if(this.parent_id !== parent.id){\n      console.error(\"attempitng to update subdraft position from non-parent operation\",  this.parent_id, parent.id);\n      return;\n    }\n\n    let container = <HTMLElement> document.getElementById(\"scale-\"+this.parent_id);\n    let outs = this.tree.getNonCxnOutputs(this.parent_id);\n\n\n    if(outs.length == 1 ){\n      if(container !== null) this.setPosition({x: parent.topleft.x, y: parent.topleft.y + (container.offsetHeight * this.scale/this.default_cell) });\n      else {console.error(\"no element named scale-\"+this.parent_id+\"found\")}\n    }else{\n\n      let offlet_left = parent.topleft.x;\n      let total_width = 0;\n      outs.forEach((out, i) => {\n\n        let child_container = <HTMLElement> document.getElementById(\"scale-\"+out);\n        if(i < ndx) offlet_left += (child_container.offsetWidth * this.scale/this.default_cell + 10);\n        total_width += (child_container.offsetWidth  * this.scale/this.default_cell + 10);\n\n      });\n\n      let rel_size = total_width - (container.offsetWidth * this.scale/this.default_cell)\n      let margin = rel_size/2;\n      offlet_left -= margin;\n\n      outs.forEach((out, i) => {\n\n        if(i == ndx){\n          if(container !== null) this.setPosition({x: offlet_left, y: parent.topleft.y +20 + (container.offsetHeight * this.scale/this.default_cell) });\n          else {console.error(\"no element named scale-\"+this.parent_id+\"found\")}\n        } \n       });\n\n\n    }\n\n  }\n\n  // updateVisibility(){\n\n\n  //   const cxns = this.tree.getOutputs(this.id);\n\n  //   if(cxns.length == 0){\n  //     this.render_materials = true;\n  //     this.render_drawdown = true;\n  //   }\n\n  //   /**this subdraft might have multiple outputs so you want to show the relevant information for each.  */\n  //   cxns.forEach(cxn => {\n  //     const op_id = this.tree.getOutputs(cxn);\n  //     if(op_id.length > 0 && this.tree.getType(op_id[0]) == 'op'){\n  //       const op_data = this.tree.getOpNode(op_id[0]);\n  //       const inlet = this.tree.getInletOfCxn(op_data.id, cxn);\n  //       const op = this.ops.getOp(op_data.name);\n  //       if(op.inlets[inlet].uses == 'draft'){\n  //         this.render_drawdown = true;\n  //       }else{\n  //         this.render_materials = true;\n  //       }\n  //     }\n  //   })\n\n  // }\n\n\n  updateName(){\n    const draft = this.tree.getDraft(this.id);\n    draft.ud_name = this.ud_name;\n\n  }\n\n\n  updateSize(parent: OperationComponent){\n\n    const draft = this.tree.getDraft(this.id);\n\n    if(this.parent_id !== parent.id){\n      console.error(\"attempitng to update subdraft position from non-parent operation\", this.parent_id, parent.id);\n      console.log(\"attempitng to update subdraft position from non-parent operation\", this.parent_id, parent.id);\n      return;\n    }\n\n  }\n\n  toggleMultiSelection(e: any){\n    if(e.shiftKey){\n      this.multiselect.toggleSelection(this.id, this.topleft);\n    }else{\n      this.multiselect.clearSelections();\n    }\n  }\n  \n\n\n\n   rescaleForBitmap(){\n\n\n    \n    if(this.draft_canvas === undefined) return;\n    \n    \n    const draft = this.tree.getDraft(this.id);\n\n\n    this.draft_canvas.width = warps(draft.drawdown) ;\n    this.draft_canvas.height = wefts(draft.drawdown) ;\n\n    for (let i = 0; i < wefts(draft.drawdown); i++) {\n      for (let j = 0; j < warps(draft.drawdown); j++) {\n        this.drawCell(draft, 1, i, j, false, true);\n      }\n    }\n  }\n\n  connectionEnded(){\n    this.selecting_connection = false;\n    this.enableDrag();\n  }\n\n  connectionStarted(event: any){\n\n    if(this.selecting_connection == true){\n      this.selecting_connection = false;\n      this.onConnectionStarted.emit({\n        type: 'stop',\n        event: event,\n        id: this.id\n      });\n    }else{ \n      this.selecting_connection = true;\n      \n      this.disableDrag();\n\n      this.onConnectionStarted.emit({\n        type: 'start',\n        event: event,\n        id: this.id\n      });\n    }\n\n  }\n\n\n\n  /**\n   * called on create to position the element on screen\n   * @param pos \n   */\n  setPosition(pos: Point){\n    this.enableDrag();\n    this.topleft = pos;\n    this.updateViewport(this.topleft);\n  }\n\n\n\n  public inkActionChange(name: any){\n    this.ink = name;\n    this.inks.select(name);\n    //this.drawDraft();\n  }\n\n  /**\n   * gets the next z-ndx to place this in front\n   */\n  public setAsPreview(){\n    this.is_preview = true;\n     this.zndx = this.layer.createLayer();\n  }\n\n \n\n  /**\n   * does this subdraft exist at this point?\n   * @param p the absolute position of the coordinate (based on the screen)\n   * @returns true/false for yes or no\n   */\n  public hasPoint(p:Point) : boolean{\n    const size = document.getElementById('scale'+this.id)\n\n\n      const endPosition = {\n        x: this.topleft.x + size.offsetWidth,\n        y: this.topleft.y + size.offsetHeight,\n      };\n\n      if(p.x < this.topleft.x || p.x > endPosition.x) return false;\n      if(p.y < this.topleft.y || p.y > endPosition.y) return false;\n\n    \n    return true;\n\n  }\n\n\n/**\n * Takes row/column position in this subdraft and translates it to an absolution position  \n * @param ndx the index\n * @returns the absolute position as nxy\n */\n public resolveNdxToPoint(ndx:Interlacement) : Point{\n  \n  let y = this.topleft.y + ndx.i * this.scale;\n  let x = this.topleft.x + ndx.j * this.scale;\n  return {x: x, y:y};\n\n}\n\n/**\n * Takes an absolute coordinate and translates it to the row/column position Relative to this subdraft\n * @param p the screen coordinate\n * @returns the row and column within the draft (i = row, j=col), returns -1 if out of bounds\n */\n  public resolvePointToNdx(p:Point) : Interlacement{\n    const draft = this.tree.getDraft(this.id);\n\n    let i = Math.floor((p.y -this.topleft.y) / this.scale);\n    let j = Math.floor((p.x - this.topleft.x) / this.scale);\n\n    if(i < 0 || i >= wefts(draft.drawdown)) i = -1;\n    if(j < 0 || j >= warps(draft.drawdown)) j = -1;\n\n    return {i: i, j:j, si: i};\n\n  }\n\n\n\n/**\n * takes an absolute reference and returns the value at that cell boolean or null if its unset\n * @param p a point of the absolute poistion of coordinate in question\n * @returns true/false/or null representing the eddle value at this point\n */\n  public resolveToValue(p:Point) : boolean{\n\n    const coords = this.resolvePointToNdx(p);\n\n    if(coords.i < 0 || coords.j < 0) return null; //this out of range\n    \n    const draft = this.tree.getDraft(this.id);\n\n    if(!draft.drawdown[coords.i][coords.j].is_set) return null;\n    \n    return isUp(draft.drawdown, coords.i, coords.j);\n  \n  }\n\n\n  // /**\n  //  * sets a new draft\n  //  * @param temp the draft to set this component to\n  //  */\n  // setNewDraft(temp: Draft) {\n\n  //   this.bounds.width = temp.warps * this.scale;\n  //   this.bounds.height = temp.wefts * this.scale;\n  //   this.draft.reload(temp);\n  //   this.drawDraft();\n\n  // }\n\n  // setComponentPosition(point: Point){\n  //   this.bounds.topleft = point;\n  // }\n\n\n  // setComponentBounds(bounds: Bounds){\n  //   this.setPosition(bounds.topleft);\n  //   this.bounds = bounds;\n  // }\n  /**\n   * manually sets the component size. While such an operation should be handled on init but there is a bug where this value is checked before the \n   * component runds its init sequence. Manually adding the data makes it possible for check for intersections on selection and drawing end.\n   * @param width \n   * @param height \n   */\n  // setComponentSize(width: number, height: number){\n  //   this.bounds.width = width;\n  //   this.bounds.height = height;\n  // }\n\n  async drawCell(draft:Draft, cell_size:number, i:number, j:number, usecolor:boolean, forprint:boolean){\n\n    let is_up = isUp(draft.drawdown, i,j);\n    let is_set = isSet(draft.drawdown, i, j);\n    let color = \"#ffffff\"\n    if(is_set){\n      if(this.ink === 'unset' && is_up){\n        this.draft_cx.fillStyle = \"#999999\"; \n      }else{\n        if(is_up){\n          color = usecolor ? this.ms.getColor(draft.colShuttleMapping[j]) : '#000000';\n        }else{\n          color = usecolor ? this.ms.getColor(draft.rowShuttleMapping[i]) : '#ffffff';\n        }\n        this.draft_cx.fillStyle = color;\n      }\n    } else{\n      if(forprint) this.draft_cx.fillStyle =  '#ffffff'\n      else this.draft_cx.fillStyle =  '#ADD8E6';\n    // this.cx.fillStyle =  '#ff0000';\n\n    }\n\n    this.draft_cx.strokeStyle = \"#666666\"\n    this.draft_cx.lineWidth = 1;\n\n    if(!forprint && cell_size > 1 && usecolor === false) this.draft_cx.strokeRect(j*cell_size, i*cell_size, cell_size, cell_size);\n    this.draft_cx.fillRect(j*cell_size, i*cell_size, cell_size, cell_size);\n  }\n\n  redrawExistingDraft(){\n    this.drawDraft(this.draft);\n  }\n\n\n  drawWeftData(draft: Draft) : Promise<boolean>{\n    let cell_size = this.calculateCellSize(draft);\n\n\n    draft =  this.tree.getDraft(this.id);\n    const weft_systems_canvas =  <HTMLCanvasElement> document.getElementById('weft-systems-'+this.id.toString());\n    const weft_mats_canvas =  <HTMLCanvasElement> document.getElementById('weft-materials-'+this.id.toString());\n    if(weft_systems_canvas === undefined) return;\n    const weft_systems_cx = weft_systems_canvas.getContext(\"2d\");\n    const weft_mats_cx = weft_mats_canvas.getContext(\"2d\");\n\n    weft_systems_canvas.height = wefts(draft.drawdown) * cell_size;\n    weft_systems_canvas.width = cell_size;\n    weft_mats_canvas.height = wefts(draft.drawdown) * cell_size;\n    weft_mats_canvas.width =  cell_size;\n\n\n      for (let j = 0; j < draft.rowShuttleMapping.length; j++) {\n        let color = this.ms.getColor(draft.rowShuttleMapping[j]);\n        let system = this.ss.getWeftSystemCode(draft.rowSystemMapping[j]);\n        weft_mats_cx.fillStyle = color;\n        weft_mats_cx.fillRect(1, j* cell_size+1,  cell_size-2,  cell_size-2);\n        \n        weft_systems_cx.fillStyle = \"#666666\";\n        weft_systems_cx.fillText(system, 0, (j+1)*cell_size - 1)\n\n\n      }\n    \n    \n\n  }\n\n  drawWarpData(draft: Draft) : Promise<boolean>{\n    draft =  this.tree.getDraft(this.id);\n    let cell_size = this.calculateCellSize(draft);\n\n    const warp_systems_canvas =  <HTMLCanvasElement> document.getElementById('warp-systems-'+this.id.toString());\n    const warp_mats_canvas =  <HTMLCanvasElement> document.getElementById('warp-materials-'+this.id.toString());\n\n    if(this.warp_data_canvas === undefined) return;\n    const warp_mats_cx = warp_mats_canvas.getContext(\"2d\");\n    const warp_systems_cx = warp_systems_canvas.getContext(\"2d\");\n\n    warp_mats_canvas.width = warps(draft.drawdown) * cell_size;\n    warp_mats_canvas.height =  cell_size;\n\n    warp_systems_canvas.width = warps(draft.drawdown) * cell_size;\n    warp_systems_canvas.height =  cell_size;\n\n\n      for (let j = 0; j < draft.colShuttleMapping.length; j++) {\n        let color = this.ms.getColor(draft.colShuttleMapping[j]);\n        let system = this.ss.getWarpSystemCode(draft.colSystemMapping[j]);\n      \n        warp_mats_cx.fillStyle = color;\n        warp_mats_cx.fillRect(j* cell_size+1, 1,  cell_size-2,  cell_size-2);\n        \n        warp_systems_cx.fillStyle = \"#666666\";\n        warp_systems_cx.fillText(system, j*cell_size+2, cell_size)\n\n      \n      }\n    \n\n  }\n\n  calculateDefaultCellSize(draft: Draft): number {\n    const num_cells = wefts(draft.drawdown) * warps(draft.drawdown);\n    if(num_cells < 1000) return 10;\n    if(num_cells < 10000) return 8;\n    if(num_cells < 100000)return  5;\n    if(num_cells < 1000000) return  2;\n    return 1;\n  }\n\n\n  /**\n   * the canvas object is limited in how many pixels it can render. Adjust the draft cell size based on the number of cells in the draft\n   * @param draft \n   */\n  calculateCellSize(draft: Draft): number{\n    return this.draft_cell_size;\n  }\n\n  /**\n   * draw whetever is stored in the draft object to the screen\n   * @returns \n   */\n  async drawDraft(draft: Draft) : Promise<any> {\n\n\n    let cell_size = this.calculateCellSize(draft);\n\n    draft =  this.tree.getDraft(this.id);\n    const use_colors =(<DraftNode>this.tree.getNode(this.id)).render_colors;\n\n    if(this.parent_id !== -1){\n      const container = document.getElementById('scale-'+this.parent_id);\n      if(container === undefined || container === null) return;\n      const w = (container !== undefined && container !== null) ? container.offsetWidth : 300;\n      \n      const thiscontainer = document.getElementById('scale-'+this.id);\n      thiscontainer.style.minWidth = w+\"px\";\n      \n    }\n\n    if(this.draft_canvas === undefined) return;\n    this.draft_cx = this.draft_canvas.getContext(\"2d\");\n   \n    if(draft === null){\n      this.draft_canvas.width = 0;\n      this.draft_canvas.height = 0;\n      this.tree.setDraftClean(this.id);\n      return Promise.resolve(\"complete\");\n\n    }else{\n\n      const fns = [this.drawWarpData(draft), this.drawWeftData(draft)];\n\n      return Promise.all(fns).then(el => {\n        this.draft_canvas.width = warps(draft.drawdown) * cell_size;\n        this.draft_canvas.height = wefts(draft.drawdown) * cell_size;\n          for (let i = 0; i <  wefts(draft.drawdown); i++) {\n            for (let j = 0; j < warps(draft.drawdown); j++) {\n              this.drawCell(draft, cell_size, i, j, use_colors, false);\n            }\n          }\n        \n        this.tree.setDraftClean(this.id);\n        return Promise.resolve(\"complete\");\n      })\n\n     \n    }\n    \n  }\n\n\n  /**\n   * draw onto the supplied canvas, to be used when printing\n   * @returns \n   */\n   drawForPrint(canvas, cx, scale: number) {\n\n    // if(canvas === undefined) return;\n    // const draft = this.tree.getDraft(this.id);\n\n    // for (let i = 0; i < draft.wefts; i++) {\n    //   for (let j = 0; j < draft.warps; j++) {\n    //     let is_up = draft.isUp(i,j);\n    //     let is_set = draft.isSet(i, j);\n    //     if(is_set){\n    //       if(this.ink === 'unset' && is_up){\n    //         cx.fillStyle = \"#999999\"; \n    //       }else{\n    //         cx.fillStyle = (is_up) ?  '#000000' :  '#ffffff';\n    //       }\n    //     } else{\n    //       cx.fillStyle =  '#0000000d';\n    //     }\n    //     cx.fillRect(j*scale+this.bounds.topleft.x, i*scale+this.bounds.topleft.y, scale, scale);\n    //   }\n    // }\n\n    // //draw the supplemental info like size\n    // cx.fillStyle = \"#666666\";\n    // cx.font = \"20px Verdana\";\n\n    // let datastring: string =  draft.warps + \" x \" + draft.wefts;\n    // cx.fillText(datastring,this.bounds.topleft.x + 5, this.bounds.topleft.y+this.bounds.height + 20 );\n\n  }\n\n\n\n\n\n  /**\n   * gets the position of this elment on the canvas. Dyanic top left might be bigger due to scolling intersection\n   * previews. Use static for all calculating of intersections, etc. \n   * @returns \n   */\n  getTopleft(): Point{\n    return this.topleft;\n  }\n\n    /**\n   * prevents hits on the operation to register as a palette click, thereby voiding the selection\n   * @param e \n   */\n     mousedown(e: any){\n      e.stopPropagation();\n  \n  \n    }\n\n\n  \n  // isSameBoundsAs(bounds: Bounds) : boolean {   \n  //   if(bounds.topleft.x != this.bounds.topleft.x) return false;\n  //   if(bounds.topleft.y != this.bounds.topleft.y) return false;\n  //   if(bounds.width != this.bounds.width) return false;\n  //   if(bounds.height != this.bounds.height) return false;\n  //   return true;\n  // }\n  \n\n  dragEnd($event: any) {\n    this.moving = false;\n    this.counter = 0;  \n    this.last_ndx = {i: -1, j:-1, si: -1};\n    this.multiselect.setRelativePosition(this.topleft);\n    this.onSubdraftDrop.emit({id: this.id});\n  }\n\n  dragStart($event: any) {\n\n    this.moving = true;\n    this.counter = 0;  \n      //set the relative position of this operation if its the one that's dragging\n     if(this.multiselect.isSelected(this.id)){\n      this.multiselect.setRelativePosition(this.topleft);\n     }else{\n      this.multiselect.clearSelections();\n     }\n    this.onSubdraftStart.emit({id: this.id});\n \n\n  }\n\n  dragMove($event: any) {\n\n    //position of pointer of the page\n    const pointer:Point = $event.pointerPosition;\n\n    const relative:Point = utilInstance.getAdjustedPointerPosition(pointer, this.viewport.getBounds());\n    const adj:Point = utilInstance.snapToGrid(relative, this.scale);\n\n\n    this.topleft = adj;\n\n    // this.bounds.topleft = adj;\n\n     const ndx = utilInstance.resolvePointToAbsoluteNdx(adj, this.scale);\n    this.interlacement = ndx;\n    \n    if(this.counter%this.counter_limit === 0 || !utilInstance.isSameNdx(this.last_ndx, ndx)){\n      this.onSubdraftMove.emit({id: this.id, point: adj});\n      this.counter = 0;\n    } \n\n    this.counter++;\n    this.last_ndx = ndx;\n\n  }\n\n  disableDrag(){\n    this.disable_drag = true;\n  }\n\n  enableDrag(){\n    this.disable_drag = false;\n  }\n\n  showhide(){\n    this.draft_visible = !this.draft_visible;\n    this.onSubdraftViewChange.emit(this.id);\n  }\n\n  connectionClicked(id:number){\n    this.has_active_connection  = true;\n    // if(this.active_connection_order === 0){\n    //   this.onConnectionMade.emit(id);\n    // }else{\n    //   this.onConnectionRemoved.emit(id);\n    // }\n\n\n  }\n\n  resetConnections(){\n    this.has_active_connection = false;\n  }\n\n  toggleDraftRendering(){\n    const dn = <DraftNode> this.tree.getNode(this.id);\n    dn.render_colors = !dn.render_colors;\n    this.use_colors = dn.render_colors;\n    this.redrawExistingDraft();\n  }\n\n\n\n  async designActionChange(e){\n    const draft = this.tree.getDraft(this.id);\n\n    switch(e){\n      case 'duplicate':   \n      this.onDuplicateCalled.emit({id: this.id});\n      break;\n\n      case 'delete': \n        this.onDeleteCalled.emit({id: this.id});\n      break;\n\n      default: \n        this.onDesignAction.emit({id: this.id});\n      break;\n\n    }\n  }\n\n\n  /**\n   * Draws to hidden bitmap canvas a file in which each draft cell is represented as a single pixel. \n   * @returns \n   */\n  async saveAsBmp() : Promise<any> {\n\n    this.rescaleForBitmap();\n\n    let b = this.bitmap.nativeElement;\n    let context = b.getContext('2d');\n    const draft = this.tree.getDraft(this.id);\n\n    b.width = (warps(draft.drawdown));\n    b.height = (wefts(draft.drawdown));\n    \n    context.fillStyle = \"white\";\n    context.fillRect(0,0,b.width,b.height);\n    context.drawImage(this.draft_canvas, 0, 0);\n\n    const a = document.createElement('a')\n    return this.fs.saver.bmp(b)\n    .then(href => {\n      a.href =  href;\n      a.download = getDraftName(draft) + \"_bitmap.jpg\";\n      a.click();\n      this.drawDraft(draft);\n\n    });\n    \n\n\n      \n  }\n  \n    async saveAsAda() : Promise<any>{\n      const draft = this.tree.getDraft(this.id);\n\n      const a = document.createElement('a');\n      return this.fs.saver.ada('draft', false, this.scale).then(out => {\n        a.href = \"data:application/json;charset=UTF-8,\" + encodeURIComponent(out.json);\n        a.download = getDraftName(draft) + \".ada\";\n        a.click();\n      }); \n    }\n  \n    async saveAsWif() {\n\n      // const draft = this.tree.getDraft(this.id);\n      // const loom = this.tree.getLoom(this.id);\n\n      \n      \n\n      // const a = document.createElement('a');\n      // return this.fs.saver.wif(draft, loom)\n      // .then(href => {\n      //   a.href = href;\n      //   a.download  = getDraftName(draft) +\".wif\";\n      //   a.click();\n      // });\n    \n    }\n  \n    async saveAsPrint() {\n     \n      // let dims = this.default_cell;\n      // let b = this.bitmap.nativeElement;\n      // let context = b.getContext('2d');\n\n      // console.log(dims)\n       const draft = this.tree.getDraft(this.id);\n\n\n      // b.width = warps(draft.drawdown) * dims;\n      // b.height = wefts(draft.drawdown) * dims;\n      \n      // context.fillStyle = \"white\";\n      // context.fillRect(0,0,b.width,b.height);\n      \n\n      // context.drawImage(this.draft_canvas, 0, 0);\n\n      const a = document.createElement('a')\n      return this.fs.saver.jpg(this.draft_canvas)\n        .then(href => {\n          a.href =  href;\n          a.download = getDraftName(draft) + \".jpg\";\n          a.click();\n      \n        });\n    }\n\n    warps(){\n      return warps(this.draft.drawdown);\n    }\n\n    wefts(){\n      return wefts(this.draft.drawdown);\n    }\n\n\n    /**\n     * Open this when \n     * @returns \n     */\n    finetune(){\n\n      this.onShowDetails.emit(this.id);\n\n\n      //if this is already open, don't reopen it\n      // if(this.modal != undefined && this.modal.componentInstance != null) return;\n     \n      // const draft = this.tree.getDraft(this.id);\n      // const loom = this.tree.getLoom(this.id);\n      // const loom_settings = this.tree.getLoomSettings(this.id);\n      // let use_id = this.id;\n\n      // /** if this was a generated draft, create a temp node to hold a copy of this draft*/\n      // if(this.tree.hasParent(this.id)){\n      //   const new_id = this.tree.createNode('draft', null, null);\n      //   draft.id = new_id;\n      //   this.tree.loadDraftData( {prev_id: null, cur_id: new_id}, draft, loom, loom_settings,false);\n      //   use_id = new_id;\n      // }\n\n\n      // this.modal = this.dialog.open(DraftdetailComponent,\n      //   {disableClose: true,\n      //     hasBackdrop: false,\n      //     data: {\n      //       id: use_id,\n      //       ink: this.inks.getInk(this.ink).viewValue\n      //     }\n      //   });\n\n\n\n      //   this.modal.afterClosed().subscribe(result => {\n      //     console.log(\"FINE TUNE CLOSED\", this.id, result)\n\n      //     if(result === null) return;\n\n      //       if(this.parent_id == -1){\n      //         this.draft = this.tree.getDraft(this.id);\n      //         this.onDesignAction.emit({id: this.id});\n      //       }else{\n      //         const cur_draft = this.tree.getDraft(this.id);\n      //         const new_draft = this.tree.getDraft(result);\n\n      //         const cur_loom = this.tree.getLoom(this.id);\n      //         const new_loom = this.tree.getLoom(result);\n\n      //         if(!utilInstance.areDraftsTheSame(cur_draft, new_draft)){\n      //           this.createNewSubdraftFromEdits.emit({parent_id: this.parent_id, new_id: result});\n      //           return;\n      //         }\n\n      //         if(!utilInstance.areLoomsTheSame(cur_loom, new_loom)){\n      //           this.createNewSubdraftFromEdits.emit({parent_id: this.parent_id, new_id: result});\n      //           return;\n      //         }\n\n      //         //if you get here, then we can remove the temp node\n      //         console.log(\"NODE REMOVED\", result)\n      //         this.tree.removeNode(result);\n      //       }\n      //   })   \n       }\n\n \n\n\n}\n","\n<div \n*ngIf=\"tree.getDraft(id) !== null\" \nid=\"con-{{id}}\" \nclass=\"subdraft-parent-container selectable-{{!disable_drag}}\" \n[class.is_preview] = \"is_preview\"\n\tcdkDrag\n\t(mousedown)=\"mousedown($event)\"\n\t (click)=\"toggleMultiSelection($event)\"\n\t[style.z-index] = \"zndx\"\n\t[class.drawing] = \"disable_drag && !is_preview\"\n\t[class.no-pointer] = \"disable_drag\"\n\t[cdkDragDisabled] = \"disable_drag\"\n\t[cdkDragFreeDragPosition]=\"topleft\"\n\t(cdkDragMoved)=\"dragMove($event)\"\n\t(cdkDragEnded)=\"dragEnd($event)\"\n\t(cdkDragStarted)=\"dragStart($event)\">\n\n\n\t<div id=\"scale-{{id}}\" class=\"subdraft-container\" >\n\n\t\t<div class=\"bottom-opts\">\n\n\t\t\t<div id=\"subdraft-details\"> \n\n\n\t\t\t\t<button mat-icon-button\n\t\t\t\tclass=\"fa-solid fa-magnifying-glass\"\n\t\t\t\tmatTooltip =\"View Draft Details\"\n\t\t\t\t(click)=\"finetune()\">\n\t\t\t\t</button>\n\n\t\t\t\t<button mat-icon-button\n\t\t\t\tclass=\"is-small fa-solid\"\n\t\t\t\t[class.fa-chess-board] = 'use_colors'\n\t\t\t\t[class.fa-rug] = '!use_colors'\n\t\t\t\tmatTooltip =\"Toggle Material View\"\n\t\t\t\t(click)=\"toggleDraftRendering()\">\n\t\t\t\t</button>\n\n\t\t\t\n\n\t\t\t\t\t\t\t<button mat-icon-button\n\t\t\t\t[matMenuTriggerFor]=\"subdraftOptions\"\n\t\t\t\tclass=\"is-small fa-solid fa-ellipsis\"\n\t\t\t\tmatTooltip =\"View Options\">\n\t\t\t\t</button>\n\n\t\t\t\t<mat-menu #subdraftOptions>\n\t\t\t\t\n\t\t\n\t\t\t\t<button mat-icon-button *ngIf='parent_id !== -1'\n\t\t\t\tmatTooltip= \"Show/Hide Draft\"\n\t\t\t\tclass=\"fas\"\n\t\t\t\t[class.fa-eye-slash] = 'draft_visible'\n\t\t\t\t[class.fa-eye] = '!draft_visible'\n\t\t\t\t(click)=\"showhide()\">\n\t\t\t\t</button>\n\t\t\n\t\t\n\t\t\t\t<button mat-icon-button\n\t\t\t\tmatTooltip= \"Duplilcate\"\n\t\t\t\tclass=\"fa fa-clone\"\n\t\t\t\t[style.color]=\"button_color\" \n\t\t\t\t[name]=\"duplicate\"\n\t\t\t\t(click)=\"designActionChange('duplicate')\">\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t\t<button mat-icon-button\n\t\t\t\tclass=\"fas fa-download\"\n\t\t\t\t(click)=\"saveAsBmp()\"\n\t\t\t\tmatTooltip =\"Download as Bitmap\">\n\n\t\t\t\t</button>\n\t\t\t\t<button mat-icon-button\n\t\t\t\t(click)=\"saveAsPrint()\"\n\t\t\t\tclass=\"fa-solid fa-file-image\"\n\t\t\t\tmatTooltip =\"Download as Printable Image\">\n\t\t\t\t</button>\n\n\t\t\n\t\t\t\n\t\t\t\t<button mat-icon-button *ngIf='parent_id === -1'\n\t\t\t\tmatTooltip= \"Delete\"\n\t\t\t\tclass=\"fas fa-times\"\n\t\t\t\t[name]=\"delete\"\n\t\t\t\t(click)=\"designActionChange('delete')\">\n\t\t\t\t</button>\n\n\t\t\t\t\n\t\t\t</mat-menu>\n\n\t\n\n\t\t\t</div>\n\n\t\t\t<div id=\"slider\">\n\t\t\t\t<mat-slider \n\t\t\t\t[(ngModel)]=\"draft_cell_size\"\n\t\t\t\tmin=\"1\" \n\t\t\t\tmax=\"10\" \n\t\t\t\tstep=\"0.05\" \n\t\t\t\t(valueChange)=\"zoomChange($event)\"\n\t\t\t\t>\n\t\t\t\t<input matSliderThumb [(ngModel)]=\"draft_cell_size\">\n\t\t\t\t  </mat-slider>\n\t\t\t</div>\n\n\t\t\t<button mat-icon-button *ngIf='parent_id === -1'\n\t\t\tmatTooltip= \"Delete\"\n\t\t\tclass=\"fas fa-times\"\n\t\t\t[name]=\"delete\"\n\t\t\t(click)=\"designActionChange('delete')\">\n\t\t\t</button>\n\t\t</div>\n\n\n\n\t\t<div [class.hidden]=\"!draft_visible\" class=\"subdraft-contents origin{{ws.selected_origin_option}}\" >\n\n\t\t\t<div id=\"local-zoom-{{id}}\" class=\"local_zoom origin{{ws.selected_origin_option}}\">\n\n\t\t\t<div class=\"warp-systems-container origin{{ws.selected_origin_option}} \">\n\n\t\t\t\t<div class=\"warp-systems-text origin{{ws.selected_origin_option}}\" id=\"warp-systems-text\">\n\t\t\t\t \n\t\t\t\t   <div class=\"warp-system-col origin{{ws.selected_origin_option}}\" \n\t\t\t\t  *ngFor=\"let i of colShuttleMapping; let j = index;\" >\n\t\t\t\t  </div>\n\t\t\n\t\t\t\t</div>  \n\t\t\n\t\t\t\t<canvas id=\"warp-systems-{{id}}\">  </canvas>\n\t\t\t\t<canvas id =\"warp-materials-{{id}}\" class=\"warp-materials\">  </canvas>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"drawdown-container origin{{ws.selected_origin_option}}\" >\n\t\t\t\t<canvas class=\"maindraft\" id=\"{{id}}\" >  </canvas>\n\t\t\t\n\t\t\t\t\n\t\t\t\t<div class=\"weft-systems-container origin{{ws.selected_origin_option}}\">\n\t\t\t\t  <canvas id=\"weft-materials-{{id}}\">  </canvas>\n\t\t\t\t  <canvas id=\"weft-systems-{{id}}\" >  </canvas>\n\t\t\t\t</div>\n\t\t\t  </div>\n\n\t\t\t</div>\n\n\n\n\n\n\n\t\t\t<!-- <canvas id=\"warp-data-{{id}}\" class=\"warp-materials\" [class.hidden] = '!draft_visible'>  \n\t\t\t</canvas> -->\n\n\t\t\t<!-- <canvas id=\"{{id}}\" class=\"maindraft\" [class.hidden] = '!draft_visible'>  \n\t\t\t</canvas> -->\n\t\t</div>\n\n\n\t\t<div class=\"outlet_row\">\n\n\n\t\t\t<button \n\t\t\tid = \"{{id}}-out\" \n\t\t\tclass=\"output\"\n\t\t\t[class.active]=\"selecting_connection\"\n\t\t\tmatTooltip = \"connect this draft to an operation\"\n\t\t\t(click)=\"connectionStarted(id)\">\n\t\t\t<i class=\"fa-sharp fa-solid fa-circle-down\"></i>\n\t\t\t</button>\n\n\t\t\t<div class=\"single_line\">\n\t\t\t\t<div class=\"dims\">{{warps()}} x {{wefts()}},&nbsp;</div>\n\t\t\t\t<div >\n\t\t\t\t\t<input matInput  [(ngModel)]=\"ud_name\" \n\t\t\t\t\t[placeholder]=\"tree.getDraft(id).gen_name\"  \n\t\t\t\t\t(focusout)=\"nameFocusOut($event)\"\n\t\t\t\t\t(change)=\"updateName()\">\n\t\t\t\t </div>\n\n\t\t\t</div>\n\n\n\t\n\n\t\n\n\t\t</div>\n\n\n\n\t\t\n\n\t\t\n\t\t\n\n\t\t\n\n\n\n\n\n   <canvas #bitmapImage hidden></canvas>\n\n</div>\n\t\n\n","import { Injectable } from '@angular/core';\n\n\n\ninterface Ink{\n  value: string;\n  viewValue: string;\n  dx: string;\n  icon: string;\n  selected: boolean;\n  uses_mask: boolean;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InkService {\n  private inks: Array<Ink>;\n  private selected: Ink;\n\n\n  constructor() { \n\n\n    this.inks = [\n      {value: 'neq', viewValue: 'Reversing Ink', dx: \"REVERSING INK compares this pattern with what is underneight and draws black square when they are not equal\", icon: \"fas fa-adjust\", selected: false, uses_mask:false},\n      {value: 'up', viewValue: 'Setting Ink', dx: \"SETTING INK sets this pattern within the draft no matter what is under it\", icon: \"fas fa-square\",  selected: false, uses_mask:false},\n      {value: 'down', viewValue: 'Erasing Ink', dx: \"ERASING INK places all the heddle downs atop the draft underneith it\", icon: \"far fa-square\",  selected: false, uses_mask:false},\n      {value: 'unset', viewValue: 'Removing Ink', dx: \"REMOVING INK removes the use of this heddle in the draft (for shape and inlay weaving)\", icon: \"fas fa-times\", selected: false, uses_mask:false},\n      {value: 'and', viewValue: 'Masking Ink', dx: \"MASKING INK only reveals bottom pattern in areas where this pattern is black\", icon: \"fas fa-mask\", selected: false, uses_mask:true},\n     {value: 'or', viewValue: 'Overlaying Ink', dx: \"OVERLAYING INK copies all black pattern cells atop the draft\", icon: \"fas fa-plus\", selected: false, uses_mask:false}\n    ];\n  \n    this.select('neq');\n\n    \n  \n  }\n\n  getInks():Array<Ink>{\n    return this.inks;\n  }\n\n  selectedHasMask():boolean{\n    const mode:Ink = this.getInk(this.getSelected());\n    return mode.uses_mask;\n  }\n\n  /**\n   * A function to retreive an ink by name. \n   * @param name the name of the ink we're looking to retreive\n   * @returns the Ink associated with that name, or null if nothing was found\n   */\n\n   getInk(name: string): Ink {\n    let found: Ink = null;\n \n    this.inks.forEach( ink => {\n       if(ink.value === name) found =  ink;\n    });\n    return found;\n   }\n \n   /**\n    * sets false to the selection parameter on all the modes. \n    */\n   clearSelection(){\n     this.selected = null\n   }\n \n /**\n  * clears previous selections and selects ink associated with name\n  * @param name a string corresponding to the name of this ink\n  * @returns boolean cooresponding to whether or not a selection was made \n  */\n   select(name: string): boolean{\n \n     let found: boolean = false;\n     this.clearSelection();\n \n     this.inks.forEach(ink => {\n       if(ink.value === name){\n         ink.selected = true;\n         found = true;\n         this.selected = ink;\n       } else{\n         ink.selected = false;\n       }\n    });\n \n    return found;\n   }\n \n \n   /**\n    * Get the current ink name that is selected\n    * @returns returns the selected ink name\n    */\n   getSelected():string{\n     return this.selected.value;\n   }\n \n   /**\n    * checks if a user specified ink is selected\n    * @param name the name of the mode we are asking about\n    * @returns boolean describing if it was selected or not\n    */\n   isSelected(name:string):boolean{\n     return(name == this.selected.value);\n   }\n}\n","import { Injectable } from '@angular/core';\n\n\n/**\n * a service that keeps track of how many elements are on the screen so that new \n * layers can always be drawn in front\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayersService {\n\n  count: number;\n\n  constructor() {\n    this.count = 0;\n   }\n\n   createLayer(): number{\n     this.count++;\n     return this.count;\n   }\n\n   clearLayers(){\n     this.count = 0;\n   }\n\n  getFrontLayer():number{\n    return this.count;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FileService } from '../../core/provider/file.service';\nimport { ZoomService } from './zoom.service';\nimport { Node, Point, SaveObj, TreeNode } from '../../core/model/datatypes';\nimport { TreeService } from '../../core/provider/tree.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MultiselectService {\n\n  selected: Array<{id: number, topleft: Point}> = [];\n  relative_position: Point = {x: 0, y: 0}; \n  copy: any;\n\n\n  constructor(private tree: TreeService, private fs: FileService, private zs: ZoomService) { \n\n  }\n\n  updateSelectedStyles(comp_id: number){\n  \n  }\n\n  setRelativePosition(point: Point){\n    this.relative_position = point;\n  }\n\n  getRelativePosition(): Point{\n    return {x: this.relative_position.x, y: this.relative_position.y};\n  }\n\n  setPosition(id: number, tl: Point){\n    const el = this.selected.find(el => el.id === id);\n    if(el !== undefined){\n      el.topleft = {x: tl.x, y: tl.y};\n    }\n  }\n\n  /**\n   * toggle selection will add a selected element, and if its an op, all the child subdrafts, to the selected list\n   * @param id the id of the element you are toggling\n   * @param topleft the topleft point of this element, used to update position if one selected element moves\n   */\n  toggleSelection(id: number, topleft: Point) : boolean{\n\n    console.log(\"TOGGLING SELECTION ON \", id)\n    const type = this.tree.getType(id);\n    let container: HTMLElement;\n\n    if(this.selected.find(el => el.id == id) !== undefined){\n       \n      this.selected = this.selected.filter(el => el.id != id);\n       \n      container = <HTMLElement> document.getElementById(\"scale-\"+id);\n      container.classList.remove('multiselected');\n\n      //remove the children as well \n      if(type === 'op'){\n        const cxn_outs = this.tree.getOutputs(id);\n        cxn_outs.forEach(o => {\n        this.selected = this.selected.filter(el => el.id != o);\n         const child = this.tree.getConnectionOutput(o);\n         container = <HTMLElement> document.getElementById(\"scale-\"+child);\n         if(container !== null) container.classList.remove('multiselected');\n         this.selected = this.selected.filter(el => el.id != child);\n      } );\n     }\n\n      return false;\n    }else{\n\n      this.selected.push({id, topleft});\n      container = <HTMLElement> document.getElementById(\"scale-\"+id);\n      container.classList.add('multiselected');\n        //remove the children as well \n        if(type == 'op'){\n          const cxn_outs = this.tree.getOutputs(id);\n          cxn_outs.forEach(o => {\n          let tl = this.tree.getComponent(o).topleft;\n          this.selected.push({id: o, topleft: tl });\n          const child = this.tree.getConnectionOutput(o);\n          tl = this.tree.getComponent(child).topleft;\n          this.selected.push({id: child, topleft: tl });\n          container = <HTMLElement> document.getElementById(\"scale-\"+child);\n          if(container !== null)  container.classList.add('multiselected');\n          } );\n        }else if(type == 'draft'){\n          const parent = this.tree.getSubdraftParent(id);\n          if(parent !== -1){\n            let tl = this.tree.getComponent(parent).topleft;\n            this.selected.push({id: parent, topleft: tl });\n            container = <HTMLElement> document.getElementById(\"scale-\"+parent);\n            if(container !== null)  container.classList.add('multiselected');\n\n          }\n        }\n      return true;\n    }\n  }\n\n  clearAllStyles(){\n    this.selected.forEach(sel => {\n      const container = <HTMLElement> document.getElementById(\"scale-\"+sel.id);\n      if(container !== null)container.classList.remove('multiselected');\n    })\n  }\n\n\n\n  clearSelections(){\n    //clear all styles\n    this.clearAllStyles();\n    this.selected = [];\n  }\n\n  isSelected(id: number):boolean {\n    const f = this.selected.find(el => el.id == id);\n    if(f === undefined) return false;\n    else return true;\n  }\n\n  getSelections() : Array<number> {\n    return this.selected.map(el => el.id);\n  }\n\n  getNewPosition(id: number, diff: Point){\n    const f = this.selected.find(el => el.id == id);\n    return {x: f.topleft.x + diff.x, y: f.topleft.y + diff.y}\n  }\n\n  /**\n   * creates a copy of each of the elements (and their positions, for pasting into this file or another file)\n   * @returns \n   */\n  copySelections()  {\n\n    let selected_nodes:Array<Node> = this.selected\n    .map(el => this.tree.getNode(el.id))\n    .filter(el => el.type !== 'cxn') //filter out connections because we will add these in later\n   \n    let node_mirror:Array<Node> =selected_nodes.slice();\n\n    let relevant_connection_ids = [];\n    let relevant_connection_nodes = [];\n\n    selected_nodes.forEach(node => {\n\n      node_mirror = node_mirror.filter( el => el.id !== node.id);\n\n      node_mirror.forEach(mirror => {\n        let cxn = this.tree.getConnection(node.id, mirror.id);\n        if(cxn !== -1 && relevant_connection_ids.find(el => el == cxn) === undefined) relevant_connection_ids.push(cxn);\n      });\n\n    });\n\n    relevant_connection_nodes = relevant_connection_ids.map(el => this.tree.getNode(el));\n    let all_nodes = selected_nodes.concat(relevant_connection_nodes);\n\n    this.copy = this.fs.saver.copy(all_nodes.map(el => el.id), this.zs.zoom);\n     \n\n\n  }\n\n\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Bounds, Interlacement, Point } from '../../core/model/datatypes';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewportService {\n\n  vpchanged$ = new Subject<any>();\n\n\n\n  /**\n   * the total size of scrollable space\n   */\n  absolute: Bounds;\n\n  /**\n   * the bounds of the viewport within that space\n   */\n  vp: Bounds;\n\n  /**\n   * a reference to the topleft interlalcement of objects being rendered\n   * number references the unique id of this element \n   */\n  objs: Array<{id:number, i:Interlacement}>;\n\n  constructor(){\n\n    this.vp = {\n      topleft: {x:0, y:0}, \n      width: 0, \n      height:0\n    };\n\n    this.absolute = {\n      topleft: {x:0, y:0}, \n      width: 0, \n      height:0\n    };\n\n    this.objs = [];\n\n   }\n\n   clear(){\n     this.objs = [];\n   }\n\n  /**\n   * called when a new subdraft is added\n   * @param id the id of the subdraft\n   * @param i the topleft corner as interlacement\n   */   \n   addObj(id: number, i: Interlacement){\n     this.objs.push({id: id, i:i});\n   }\n\n   /**\n    * calledd when subdraft is deleted\n    * @param id - the subdraft id\n    */\n   removeObj(id: number){\n     this.objs  = this.objs.filter(el => el.id != id);\n   }\n\n   /**\n    * called when a subdraft is moved and we need to update its location\n    * @param id - the subdraft id to move\n    * @param i - the new position to set to\n    */\n   updatePoint(id:number, i:Interlacement){\n     this.objs = this.objs.map(el => {\n      if(el.id === id) el.i = i;\n      return el;\n    });\n   }\n\n   setAbsolute(w: number, h: number){\n    this.absolute.width = w;\n    this.absolute.height = h;\n   }\n\n   /**\n    * called when the local view is scrolled to a new part of the page\n    * @param x \n    * @param y \n    */\n  move(x: number, y:number){\n\n    if(x === undefined || y == undefined) return;\n\n    const bleh = {\n      x: this.vp.topleft.x + x,\n      y: this.vp.topleft.y + y\n    }\n\n    this.set(bleh.x, bleh.y, this.vp.width, this.vp.height);\n\n\n\n  }\n\n  set(x: number, y: number, width: number, height: number){\n    this.vp.topleft = {x: x, y:y};\n    this.vp.width = width;\n    this.vp.height = height;\n    this.vpchanged$.next(this.vp.topleft);\n\n  }\n\n  setWidth(w: number){\n    this.vp.width = w;\n  }\n\n  getWidth(): number{\n    return this.vp.width;\n  }\n\n  getAbsoluteWidth(): number{\n    return this.absolute.width;\n  }\n\n  setHeight(h: number){\n    this.vp.height = h;\n  }\n\n  getHeight(): number{\n    return this.vp.height;\n  }\n\n  getAbsoluteHeight(): number{\n    return this.absolute.height;\n  }\n\n  setTopLeft(p: Point){\n    this.vp.topleft = {x: p.x, y:p.y};\n\n  }\n\n  getTopLeft(): Point{\n    return this.vp.topleft;\n  }\n\n  getTopRight() : Point{\n    return {x: this.vp.topleft.x + this.vp.width, y: this.vp.topleft.y}\n  }\n\n  getBounds(): Bounds {\n    return this.vp;\n  }\n\n  /**\n   * this gets the center point of the current viewport in screen terms. \n   * @returns \n   */\n  getCenterPoint(): Point{\n    const center: Point = {\n      x: this.vp.topleft.x + this.vp.width/2,\n      y: this.vp.topleft.y + this.vp.height/2\n    }\n    return center;\n  }\n\n  /**\n  * set the viewport in the center of the screen\n  * @returns the point for referencing\n   */\n  setViewportCenter(): Point{\n\n    const abs_topleft: Point = {\n      x: this.absolute.width/2 - this.vp.width/2,\n      y: this.absolute.height/2 - this.vp.height/2\n    }\n\n    this.vp.topleft = abs_topleft;\n    return abs_topleft;\n\n  }\n\n\n  \n\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZoomService {\n  //current zoom scale\n  zoom: number; //this is the default\n  num_steps: number = 15;\n  zoom_min: number = .1;\n  zoom_step: number = .05;\n  zoom_table: Array<number> = [];\n  zoom_table_ndx: number;\n\n\n  constructor() { \n\n    //create a table that stores each zoom value, which increments exponentally as it gets larger\n    this.zoom_table_ndx = Math.floor(this.num_steps/2);\n    \n    for(let i = 0; i < this.num_steps; i++){\n      const raw = this.zoom_min + this.zoom_step*(i*i);\n      this.zoom_table.push(this.manageZoomRounding(raw));\n    }\n    this.zoom = this.zoom_table[this.zoom_table_ndx];\n\n  }\n\n  getZoomMax(): number{\n    return this.zoom_table[this.zoom_table.length -1];\n  }\n\n  manageZoomRounding(val: number) : number {\n    // if(val >= 1) return Math.floor(val);\n    return Math.round(val * 1000) / 1000; \n  }\n\n\n  zoomIn(){\n      this.zoom_table_ndx++;\n      if(this.zoom_table_ndx < this.zoom_table.length){\n       this.zoom =  this.zoom_table[this.zoom_table_ndx];\n      }else{\n        this.zoom_table_ndx = this.zoom_table.length;\n      }\n    }\n  \n  \n    zoomOut(){\n      this.zoom_table_ndx--;\n      if(this.zoom_table_ndx >= 0){\n       this.zoom = this.zoom_table[this.zoom_table_ndx];\n      }else{\n        this.zoom_table_ndx = 0;\n      }\n     }\n   \n  \n  setZoom(val: number){\n    if(val >= this.zoom_min && val <= this.zoom_table.length){\n       this.zoom_table_ndx = val;\n       this.zoom =  this.zoom_table[this.zoom_table_ndx];\n    }\n\n  }\n  \n\n\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { OperationClassification } from '../../core/model/datatypes';\nimport { OperationDescriptionsService } from '../../core/provider/operation-descriptions.service';\nimport { OperationService } from '../../core/provider/operation.service';\nimport { ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-quickop',\n  templateUrl: './quickop.component.html',\n  styleUrls: ['./quickop.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class QuickopComponent {\n\n  @Output() onOperationAdded:any = new EventEmitter();\n\n\n  opnames:Array<string> = [];\n  displaynames:Array<string> = [];\n  myControl = new UntypedFormControl();\n  filteredOptions: Observable<string[]>;\n  searchOnly: boolean = false;\n  classifications: Array<OperationClassification>;\n  \n  \n  constructor(\n    public ops: OperationService, \n    public op_desc: OperationDescriptionsService ) { }\n\n\n  ngOnInit(){\n    const allops = this.ops.ops.concat(this.ops.dynamic_ops).filter(el => this.op_desc.hasDisplayName(el.name));\n    this.classifications = this.op_desc.getOpClassifications();\n    this.opnames = allops.map(el => el.name)  \n    this.displaynames = allops.map(el => this.op_desc.getDisplayName(el.name));\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.displaynames.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  addOpFromSearch(event: any){\n    //need to convert display name toname here\n    const ndx = this.displaynames.findIndex(el => el === event.option.value);\n    if(ndx !== -1){\n      this.onOperationAdded.emit(this.opnames[ndx]);\n    }\n  }\n\n}\n","<form class=\"quickop\" id=\"quickop\" autocomplete=\"off\">\n\n  <mat-form-field matNativeControl class=\"quickop_form is-fullwidth\" appearance=\"fill\" width='100%'  color=\"primary\">\n    <mat-label><i class=\"fas fa-project-diagram\"></i> add operation</mat-label>\n    <input type=\"text\"\n           placeholder=\"\"\n           matInput\n           [formControl]=\"myControl\"\n           [matAutocomplete]=\"auto\"\n           >\n      \n           <mat-autocomplete \n           autoActiveFirstOption \n           #auto=\"matAutocomplete\"\n           (optionSelected) = addOpFromSearch($event)>\n            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n              {{option}}\n            </mat-option>\n    </mat-autocomplete>\n    </mat-form-field>\n  </form>","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  firebase: {\n    apiKey: \"AIzaSyDeFrip7Pbp_3qxAuTgflhS-EH6ZbZhPrg\",\n    authDomain: \"adacad-beta-fa4dc.firebaseapp.com\",\n    databaseURL: \"https://adacad-beta-fa4dc-default-rtdb.firebaseio.com\",\n    projectId: \"adacad-beta-fa4dc\",\n    storageBucket: \"adacad-beta-fa4dc.appspot.com\",\n    messagingSenderId: \"256364414107\",\n    appId: \"1:256364414107:web:bd7439b027c997eb1c723e\",\n    measurementId: \"G-CM8RPB246D\"\n  },\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","/* (ignored) */"],"names":["RouterModule","MixerComponent","routes","path","component","children","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","template","i0","HttpClientModule","getAnalytics","provideAnalytics","initializeApp","provideFirebaseApp","getAuth","provideAuth","getDatabase","provideDatabase","getFirestore","provideFirestore","getFunctions","provideFunctions","getMessaging","provideMessaging","getPerformance","providePerformance","getRemoteConfig","provideRemoteConfig","getStorage","provideStorage","BrowserModule","HammerGestureConfig","HAMMER_GESTURE_CONFIG","BrowserAnimationsModule","environment","CoreModule","MixerModule","DraftDetailModule","AppModule","bootstrap","provide","useClass","firebase","declarations","DragDropModule","ScrollingModule","CommonModule","FormsModule","ReactiveFormsModule","MatAutocompleteModule","MatBadgeModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatFormFieldModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatProgressBarModule","MatRadioModule","MatSelectModule","MatSidenavModule","MatSlideToggleModule","MatSliderModule","MatSnackBarModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","ColorPickerModule","LoginComponent","AboutModal","InitModal","LoomModal","MaterialModal","ProfileComponent","AuthService","FileService","PatternfinderService","VaeService","SignupComponent","TopbarComponent","UploadFormComponent","UploadService","BlankdraftModal","ExamplesComponent","LoadfileComponent","FilebrowserComponent","KeycodesDirective","EventEmitter","FilesystemService","MatDialog","WorkspaceService","files","auth","ws","dialog","filelist","file_tree","file_tree_change$","subscribe","data","updateFileData","file_saved_change$","last_saved_time","Date","toUTCString","ngOnInit","compareFn","a","b","meta","timestamp","timesorted","sort","openFile","id","onLoadFromDB","emit","toggleFavorite","duplicate","rename","rename_mode","renameFile","current_file_id","current_file_name","updateDescription","current_file_desc","remove","fileid","removeFile","onCurrentFileDeleted","saveAsBmp","obj","type","console","log","onSave","saveAsAda","saveAsWif","saveAsPrint","openNewFileDialog","dialogRef","open","multiple","accepts","title","afterClosed","loadResponse","undefined","onLoadNewFile","openLoginDialog","width","onNewWorkspace","onClearScreen","outputs","consts","ctx","RenderService","ZoomService","StateService","zs","fs","ss","render","onMouseDown","event","target","mixer_has_focus","keyEventDetected","e","key","metaKey","zoomIn","updateDetailView","old_zoom","zoom","updateMixerView","zoomOut","saver","ada","then","so","addMixerHistoryState","preventDefault","onUndo","onRedo","onCopySelections","onPasteSelections","hostBindings","MatDialogRef","MAT_DIALOG_DATA","Router","UntypedFormControl","Validators","MyErrorStateMatcher","isErrorState","control","form","isSubmitted","submitted","invalid","dirty","touched","router","required","email","onEmailLogin","emailFormControl","value","passwordFormControl","emailSignIn","res","close","error","onEmailSignUp","emailSignUp","loginGoogle","login","logged_in","not_logged_in","Error","openEmailLogin","navigateByUrl","createNewEmailUser","VersionService","vs","version","currentVersion","initDraftWithParams","DesignmodesService","fls","dm","loom_types","getOptionSet","units","createDraftAndClose","onNoClick","draft","wefts","warps","loom","loomtype","threading","treadling","tieup","loom_settings","treadles","treadle_num","frames","frame_num","epi","selected_unit","save","f","onNewDraftCreated","HttpClient","logEvent","ExampleserviceService","http","examples","local_examples","getExamples","loadExample","filename","analytics","items","uid","name","get","observe","loader","body","onLoadExample","catch","viewValue","mixeronly","source","import_opts","opts","filter","el","new_draft","selectionMade","selection","status","newDraftCreated","viewQuery","handleError","errorstring","handleFile","drafts","deleteDrawdownCol","deleteDrawdownRow","deleteMappingCol","deleteMappingRow","flipDraft","insertDrawdownCol","insertDrawdownRow","insertMappingCol","insertMappingRow","flipLoom","generateDirectTieup","getLoomUtilByType","isFrame","TreeService","utilInstance","tree","selected_origin","selected_origin_option","getDraft","getLoomSettings","drawdown","origin_options","getOriginOptions","min_frames","min_treadles","loomtypes","density_units","updateMinTreadles","getLoom","Math","ceil","setLoom","setLoomSettings","localLoomNeedsRedraw","updateMinFrames","selectDesignMode","originChange","flips","getFlips","dn","getDraftNodes","map","node","horiz","vert","draft_fns","Promise","all","i","length","gen_name","ud_name","rowShuttleMapping","rowSystemMapping","colShuttleMapping","colSystemMapping","loom_fns","slice","onGlobalLoomChange","loomChange","utils","new_settings","max","computeLoomFromDrawdown","computeDrawdownFromLoom","setDraftOnly","getSelectedDesignMode","recomputeLoomFromThreadingAndDrawdown","unitChange","widthChange","warp_locked","new_epi","new_warps","warpNumChange","diff","ndx","insertIntoThreading","deleteFromThreading","setDraftAndRecomputeLoom","setLoomAndRecomputeDrawdown","warpChange","weftChange","weftNumChange","insertIntoTreadling","deleteFromTreadling","epiChange","MaterialsService","DraftNode","Material","createMaterial","setMaterialID","ms","getShuttles","forEach","replacements","push","types","material_types","change","onMaterialChange","addMaterial","delete","index","deleteShuttle","updateMaterialIds","addNewShuttle","newshuttle","addShuttle","createCell","setting","c","is_set","is_up","toggleHeddle","createCellFromSequenceVal","val","setCellValue","getCellValue","defaults","draft_detail_cell_size","draft_detail_zoom","draft_name","row_shuttle","row_system","col_shuttle","col_system","mixer_cell_size","mixer_canvas_width","mixer_canvas_height","inlet_button_width","weft_system_codes","initDraft","d","generateId","copyDraft","copy_draft","params","pattern","j","row","cell","initDraftFromDrawdown","createDraft","loadDraftFromFile","sameOrNewerVersion","parseSavedDrawdown","flipped","parseSavedPattern","dd","hasCell","isUp","isSet","setHeddle","bool","getHeddle","pasteIntoDrawdown","fill_pattern","start_i","start_j","height","rows","cols","createBlankDrawdown","applyMask","mask","set_to","invertDrawdown","inverted","shiftDrawdown","up","inc","shifted","flipDrawdown","flip","generateMappingFromPattern","origin","mapping","reverse","updateWeftSystemsAndShuttles","to","from","updateWarpSystemsAndShuttles","splice","m","col","w","getCol","reduce","acc","getDraftName","flipped_i","flipped_j","resolve","copyLoom","l","copy_loom","copyLoomSettings","ls","copy_loomsettings","convertEPItoMM","jacquard_utils","displayname","dx","updateThreading","updateTieup","updateTreadling","pasteThreading","pasteTreadling","pasteTieup","direct_utils","generateThreading","active_ts","i_pattern","frame_assignment","filterToUniqueValues","num_frames","numFrames","num_treadles","numTreadles","dim","computeDrawdown","new_loom","find","pasteDirectAndFrameThreading","pasteDirectAndFrameTreadling","frame_utils","generateTreadlingforFrameLoom","active_treadle_id","active_frame_id","pattern_ndx","column_vals","frame","findIndex","treadle_list","flipAndComputeDrawdown","active_treadles","treadle","k","blank","colIsBlank","match","hasMatchingColumn","num","has_up","hasMatchingRow","size","flipPattern","d_flip","refs","fns","flipTreadling","flipThreading","t_flip","flipTieUp","max_in_list","sub_acc","sub_el","isInThreadingRange","isInUserThreadingRange","isInTreadlingRange","isInUserTreadlingRange","isInTieupRange","isInUserTieupRange","loadLoomFromFile","treadle_id","matDict","insert","visible","color","thickness","diameter","notes","standardizeMaterialLists","shuttles","standard","max_length","len","sys","makeWarpSystemsUnique","makeWeftSystemsUnique","operationHasInputs","op_inputs","getInputDraft","getAllDraftsAtInlet","inlet_id","req_inputs","concat","returnDefaultValue","p","param","reduceToStaticInputs","inlets","inlet_vals","static_inputs","getOpParamValById","getOpParamValByName","item","parseDraftNames","flat_names","substring","transferSystemsAndShuttles","rowSystems","colSystems","uniqueSystemRows","uniqueSystemCols","rowShuttles","colShuttles","standardShuttleRows","standardShuttleCols","input_to_use","select_array","select_row","floor","select_col","Sequence","OneD","initSequence","state","unshift","pushMultiple","push_val","unshiftMultiple","resize","n","remainder","padTo","invert","start","end","import","pushRow","deleteAndDrawIn","deleted","matchSize","seq","computeFilter","bool_a","bool_b","shift","shift_ndx","repeat","set","insert_val","TwoD","deleteWeft","deleteWarp","mapToSystems","weftsys","warpsys","weft_system_map","warp_system_map","total_wefts","lcm","total_warps","mapped_seq","setBlank","fill","within_sequence_i","within_sequence_j","active_weft_system","active_warp_system","overlay","consider_heddle_down_as_unset","setUnsetOnWeft","weft","getWeft","setUnsetOnWarp","warp","getWarp","layerSystems","warp_system_to_layers","before_layering","copy","layers","layer","warp_systems","first_set","interlacing_ws","warp_syst","can_overwrite_set","pushWarpSequence","difference","col_seq","unshiftWarpSequence","pushWeftSequence","unshiftWeftSequence","h","export","cell_val","createSystem","systemDict","in_use","setSystemId","getSystemChar","String","fromCharCode","getSystemCharFromId","makeSystemsUnique","systems","max_in_systems","getArrayMax","last_max","unique_systems","unique","Util","arr","Uint8Array","window","crypto","getRandomValues","parseInt","join","equals","array1","array2","unmatch","j_comp","i_comp","countOccurrences","v","countOnes","array","counter","xor","returnedList","maxOfPositiveList","minOfList","min","findSmallestElmtBiggerThan","minElmtBiggerThanN","findSmallestGap","smallestElmtBiggerThan","getLeftMost","main","isects","isect","getTopleft","x","getTopMost","y","resolveCoordsToNdx","scale","si","isSameNdx","p1","p2","ink","doOverlap","l1","r1","l2","r2","computeHeddleValue","resolveToValue","b_array","hasPoint","getAdjustedPointerPosition","viewport","topleft","snapToGrid","resolvePointToAbsoluteNdx","getMaxWefts","inputs","max_wefts","getMaxWarps","max_warps","getMostCommon","vals","freq","acc_el","count","common","getInt","search","endOfLineChar","endIndex","indexOf","getBool","getString","getSubstringAfter","getTreadling","indexOfLabel","startIndex","line","getThreading","getTieups","tieups","firstFrame","restOfFrames","currentFrame","getColorTable","color_table","originalShuttle","redNum","greenAndBlue","greenNum","blueNum","hex","hexr","toString","hexg","hexb","shuttle","getColToShuttleMapping","colToShuttleMapping","reversedMapping","getRowToShuttleMapping","rowToShuttleMapping","material_mapping","index_map","replacement_ndx","new_map","old_id","new_id","hasOnlyUnset","cells","hasValue","patternToSize","warpSize","weftSize","idx","areLoomSettingsTheSame","ls1","ls2","areLoomsTheSame","loom1","loom2","q","areDraftsTheSame","d1","d2","interlace","factor_in_repeats","warp_patterns","all_wefts","all_warps","interlace_warps","weft_patterns","gcd","original","mult","lcd","uel","parseRegex","input","regex","global_regex","RegExp","matches","getInletsToUpdate","newInlets","currentInlets","toadd","inlet","toremove","a_spl","split","b_spl","flag_end","return_val","printDraft","Object","freeze","areInterlacement","getOrientation","getWarpInterlacementTuples","ilace_list","i_top","i_bot","ilace","orientation","getWeftInterlacementTuples","j_left","j_right","hasBarrier","ilaces","last","barrier_found","containsWeftEdge","hasWeftBarrierInRange","adj_start","adj_end","all_relevant_interlacements","hasWarpBarrierInRange","positionFloatingWefts","i_active","i_check","j_start","j_end","weft_vtxs","check_mat","getDiameter","active_mat","getInterlacementsBetweenWefts","are_interlacements","getInterlacementsBetweenWarps","j_active","j_check","i_start","i_end","setLayerZ","layer_spacing","warp_vtxs","z","layerWarpsInZBetweenInterlacements","range","has_barrier","getNonInterlacingWarpSegment","remaining","ref_orientation","barrier_cell","distance","abs","dist","getNonInterlacingWeftSegment","getClosestWarpValue","warp_vtx","bot","top","getWeftOffsetFromWarp","warp_diam","weft_diam","getMidpoint","float","getTuplesWithinRange","tuples","tuple","extractInterlacementsFromTuples","simvars","topo","max_interlacement_width","z_pos","optimal_topo","vtx","reduced","reduceInterlacement","inner_tuples","right_side_orientation","closest","new_vtx","getInterlacements","closeness_to_edge","float_groups","splitRangeByVerticies","next_row_tuple","getFloatRanges","ranges","last_ndx","last_value","cur_value","verticies","groups","sortInterlacementsOnWeft","correctInterlacementLayers","layer_threshold","hard_overlaps","to_check","check","compressed_weft","els","mark_for_removal","shares_layer","topo_vtx","getDraftTopology","sim","warp_tuples","topology","corrected","warpLayerValueInRange","layer_map","i_min","i_max","has_value","weftLayerValueInRange","j_min","j_max","addWarpLayerInterlacementsToMap","interlacements","max_ilace_width","max_ilace_height","addWeftLayerInterlacementsToMap","bottom_left","top_left","bottom_right","top_right","createLayerMaps","layer_maps","active_layers","has_elem","max_layer","createWarpLayerMap","createWeftLayerMap","max_height","layer_ilace","max_interlacement_height","found","prior_pattern","count_null","layers_to_check","layer_id","updateY","interlacement_j","interlacement_y","cur","mm_per_warp","displacement_factor","y_dist","new_y","setBaselineYForWeft","prior_wefts","updated_weft","this_layer","layer_ndx_map","prev_wefts_on_layer","prev_weft","layer_y","pop","prev_weft_vtx","non_layer_map","max_y","max_in_weft","subacc","use_y","radiateInterlacementForce","deflections","strength","max_displacement","in_range","radius","dy","calcStrength","calcMaxDisplacement","sett_width","max_warp_thickness","getPrevWarpOnLayer","layermaps","getNextWarpOnLayer","calcFloatDistance","left_warp_id","right_warp_id","start_x","warp_spacing","end_x","half_width","jx","distance_from_center","closeness_ratio","max_dx","pcent","sin","PI","positioned_dx","heddle","getFirstWarpAssociatedWithLayer","layerid","getWeftAsFloat","start_id","floats","last_float","packWeft","ilace_coords","dz","current_left_ndx","current_left","current_right_ndx","current_right","center_x","left_warp_diam","right_warp_diam","between_yarns_width","deflection_id","translateTopologyToPoints","weft_vtx","insertWeft","insertWarp","sortInterlacementsOnWarp","unsorted","sorted","bottommost","arr_removed","leftmost","getWeftOrientationVector","unsorted_ilaces","diam","processWarpInterlacement","processWeftInterlacements","calcClothHeightOffsetFactor","offset","addWeftInterlacement","orient","addWarpInterlacement","indexs_added","last_layer","drawn_positions","last_id","just_added","old_names","shift_warp_mat","shift_weft_mats","shift_warp_systems","shift_weft_systems","uses","num_drafts","materials","perform","op_params","base_drafts","materials_drafts","weft_mat_shift","warp_mat_shift","warp_sys_shift","weft_sys_shift","active_draft","materials_draft","warp_mats","weft_systems","weft_materials","generateName","param_vals","r","name_list","apply_mats","weft_pattern","warp_system","assign_to_weft","assign_to_warp","draft_inlet","weft_system_string","warp_system_string","weft_assignment_string","warp_assignment_string","weft_system_string_split","warp_system_string_split","weft_assignment_string_split","warp_assignment_string_split","weft_sys_seq","charCodeAt","warp_sys_seq","weft_assn","warp_assn","assignsystems","shift_ends","shift_pics","draft_a","draft_b","input_draft_a","input_draft_b","pattern_b","pattern_a","seq_a","seq_b","amt","atop","max_float","input_draft","float_len","bindwarpfloats","bindweftfloats","dynamic_param_id","dynamic_param_type","file","file_param","res_w","res_h","color_to_drafts","colors_to_bw","black","i_ratio","j_ratio","map_i","map_j","color_ndx","image_map","color_draft","draft_i","draft_j","onParamChange","changed_param_id","param_val","new_inlets","bwimagemap","warp_repeats","weft_repeats","input_drafts","warp_rep","weft_rep","num_inputs","draft_indexing_fns","random","x_flip","y_flip","all_flips","di","drafts_on_row","draft_on_row","expanded","chaos","clear","ends","download","falsestate","truestate","divisor","pow","getSet","alldrafts","set_id","cc","set_data","getDrafts","document","createElement","context","getContext","fillStyle","fillRect","left","font","fillText","strokeRect","drawCell","href","toDataURL","click","combinatorics","cur_set","all_possible_drafts","min_interlacements","cx","cell_size","strokeStyle","filterForSeq","valid","filtered","printTree","printNodes","nodes","traceSequenceViaParents","parent","createTreeFromValidSet","valid_set","combo_node","initSet","getAllPossible","possible","makeValid","getOptions","opt","its","expandDrafts","set_size","begin","stop","all_drafts","addRow","addCol","expanded_drafts","all_possible","all_valid","all_combos","addBit","expanded_set","string_input","sz","input_string","input_array","first_row","under","shift_dir","complextwill","starting_ends","staring_pics","adj_i","crop","cutout","split_by","factor","patterns","selected_draft_id","deinterlace","liftplan","lift_plan","threading_draft","lift_draft","threading_list","treadling_list","edited_row","directdrawdown","tieup_draft","treadling_draft","tieup_list","weft_sys","weft_mats","erase_blank","black_cells","white_cells","to_fills","black_cell","white_cell","to_fill","next_pattern","flipx","flipy","colors","child_of_color","id_and_data","imagemap","repeats","weft_shuttles","within_draft_i","selected_draft","modulated_id","warp_shuttles","within_draft_j","interlacewarps","weft_data","weftdata","warp_sys","joinleft","warp_data","warpdata","jointop","sys_seq","composite","system_layer_map","original_string","original_string_split","system_map","weft_shuttle_map","warp_shuttle_map","layer_draft_map","unit","wesy","parseWeftSystem","wasy","parseWarpSystem","sdm","param_regex","notation","treadle_row","makedirectloom","makeloom","corner","selectlist","remove_center","sym_mode","rev","rev_warp_sys","rev_warp_mats","makesymmetric","starting_pics","ending_pics","ending_ends","selvedge_draft","margin_drafts","complete","margin_draft","left_margin","center","shift_i","right_margin","margin","overlay_multi","pics","rand","rect","weft_factor","warp_factor","adj_j","rotate_materials","num_rots","rotate_mats","warp_materials","rotate","system_data","profile_draft_map","string_id","label","charAt","qty","pdm_item","sample_length","sample_width","facing","dir","satin","satinish","amplitude","segments","warpnum","peaks","run","slope","sawtooth","right_shift","sel","sel_draft","sel_draft_warps","sel_draft_wefts","row_seq","selvedge","liftlower","set_up","warps_raised","warps_lowered","raised","lowered","shaded_satin","amt_x","amt_y","shiftx","shifty","amp","sinewave","end_shift","pic_shift","draft_input","row_shift","ends_btwn","style","receiving","splicing","receiving_drafts","splicing_drafts","receiving_draft","splicing_draft","factors","array_a_ndx","array_b_ndx","cycle","cur_warp_num","cur_weft_num","s","spliceinwarps","pics_btwn","splicein","bindings","packing_factor","max_binding","center_point","pad","square_waffle","stretch","layer_parsing_regex","layer_units","includes","sub_match","notation_system","base_pics","alt_pics","rep","alt_rep","tabby_der","tile","right","bottom","trim","twill","shift_pattern","force_fit","undulating_string","forcefit","regex_matches","undulating_array","und_val","undulatewarps","undulatewefts","shiftval","undulatingtwill","unset","border","mid_warp","mid_weft","warps_to_wefts_ratio","row_offset","tabby_range_size","range_size","inside","increment","left_j","right_j","waffleish","warp_profile","weft_profile","authService","signOut","logout","EMPTY","ref","fbref","fbget","Auth","authState","createUserWithEmailAndPassword","GoogleAuthProvider","signInAnonymously","signInWithEmailAndPassword","signInWithPopup","userDisposable","user","showLoginButton","showLogoutButton","isLoggedIn","firstLoad","username","displayName","password","userCredential","errorCode","code","errorMessage","message","loginAnonymously","isFirstSession","getAccount","db","userdata","exists","getMostRecentFileIdFromUser","last_opened","getMostRecentAdaFromUser","ngOnDestroy","unsubscribe","userData","factory","providedIn","icon","selected","view_modes","shapes","draw_modes","drawdown_editing_style","design_modes","design_actions","modes","mode","getDesignMode","isSelected","example_set","ext","desc","NotesService","SystemsService","ns","success","dloader","generateFileId","draft_nodes","ops","clearAll","reject","workspace","loadWorkspace","initDefaultWorkspace","overloadShuttles","flips_required","loom_elements","draft_elements","bounds","looms","draft_id","node_id","draft_visible","render_colors","getWeftSystem","addWeftSystemFromId","getWarpSystem","addWarpSystemFromId","op","envt","treenodes","paste","inferData","loomutils","proxies","getNewDraftProxies","draft_node","exportWorkspace","treenode","dsaver","include","current_scale","out","exportNodesForSaving","exportTreeForSaving","exportDraftNodeProxiesForSaving","exportOpMetaForSaving","exportForSaving","tn","for_timeline","theJSON","JSON","stringify","json","bmp","canvas","jpg","reset","query","onChildAdded","onChildChanged","onChildRemoved","onDisconnect","onValue","update","Observable","Subject","presenceRef","connectedRef","snap","connected","userFiles","childsnapshot","addToTree","next","removedItem","removedId","changeObserver","observer","handler","clearTree","dateFormat","date","toLocaleDateString","setCurrentFileInfo","stamp","now","currentUser","newname","convertAdaToFile","writeFileData","writeNewFileMetaData","getFile","filedata","getFileMeta","cur_state","err","renameFolder","old_loc","new_name","deleteFile","ImageService","upSvc","httpClient","loadFiles","ids","loadFile","url","images","getDownloadData","processImage","image","warning","Image","src","crossOrigin","decode","naturalWidth","naturalHeight","drawImage","imgdata","getImageData","pixels","all_colors","r_val","g","g_val","b_val","is_black","o","just_hex","filewarning","seen_vals","unique_count","color_to_bw","ell","image_map_flat","cur_i","cur_j","imageobj","getDownloadMetaData","metadata","customMetadata","setImageData","entry","responseType","toPromise","addShuttles","getColor","getShuttle","new_list","getNextShuttle","getFirstShuttle","standardizeLists","ViewRef","createNote","note","gennote","interlacement","text","imageurl","createBlankNode","getComponents","getRefs","setColor","descriptions","classifications","OperationDescriptionsService","getOpClassifications","getCatDescription","cat","category_name","description","getCatName","getOpDescription","opname","operation","hasDisplayName","getDisplayName","getOpYoutube","youtube","getOpApplication","application","getYoutube","getParamDescription","paramname","getDyanmicText","dynamic_description","OperationService","dynamic_ops","isDynamic","parent_ndx","getOp","op_ndx","hasOldName","getOpByOldName","allops","old_name","getThreadingFromArr","marked_strings","marked_strings_frame_tracker","frame_count","max_idx","elmt","allZero","toRetThreading","getTreadlingFromArr","marked_strings_col_tracker","treadle_count","toRetTreadling","findBasePatternString","subsection","str","currentChar","findBasePatternArray","strPattern","toArray","arrayPattern","temp","countOccurances","findPatterns","sequence","allEmpty","singles","element","keys","findDraftPatterns","treadlingPatterns","threadingPatterns","treadlingString","threadingString","treadlingRanges","threadingRanges","idxTreadling","idxThreading","draftPatterns","idxWeft","idxWarp","transformedDraftPatterns","computePatterns","THREE","OrbitControls","Lut","Draft","SimulationData","SimulationVars","YarnVertex","SimulationService","endSimulation","scene","childMesh","geometry","dispose","texture","material","hasSimulation","tileDraft","boundary","from_end","extended_pattern","ending_row","expanded_draft","generateSimulationData","currentSim","vtxs","expandeddraft","lm","setupSimulation","renderer","camera","warp_range","PerspectiveCamera","controls","domElement","animate","requestAnimationFrame","background","Color","position","lookAt","simdata","recalcSimData","renderSimdata","warp_layer","weft_layers","show_draft","light","DirectionalLight","back_light","add","boundary_vtx","getBoundaryVtxs","drawAxis","drawYarns","drawEndCaps","drawWarpLayerMap","drawWeftLayerMap","drawTopology","drawDraft","hideWefts","hideWarps","hideWarpLayerMap","hideWeftLayerMap","hideTopo","hideDraft","axis_scene","Group","LineBasicMaterial","points","Vector3","min_x","min_y","max_x","BufferGeometry","setFromPoints","Line","y_points","y_geometry","y_line","z_points","z_geometry","z_line","applyOrientationConversion","in_bound_wefts","min_in_row","max_in_row","getClosestVtx","closest_ndx","warp_scene","weft_scene","pts","material_id","in_bounds_vxts","start_vtx","end_vtx","curve","CatmullRomCurve3","TubeGeometry","MeshPhysicalMaterial","depthTest","emissive","metalness","roughness","clearcoat","clearcoatRoughness","reflectivity","curveObject","Mesh","weft_vtx_list","in_bound_vtxs","draft_scene","yarn_height","alldata","positions","normals","indicies","pos","norm","starting_index","vertex","setIndex","setAttribute","Float32BufferAttribute","MeshBasicMaterial","side","DoubleSide","vertexColors","mesh","showDraft","showWarps","showWefts","warp_layer_map_scene","showWarpLayerMap","weft_layer_map_scene","showWeftLayerMap","topo_scene","showTopo","lut","setColorMap","transparent","opacity","wireframe","object","trans","Matrix4","makeTranslation","applyMatrix4","quaternion","Quaternion","setFromAxisAngle","applyQuaternion","in_bounds_warps","top_geometry","CircleGeometry","rotateX","translate","end_circle","bot_geometry","top_circle","in_bounds_wefts","rotateY","active_id","timeline","clearTimeline","undo_disabled","redo_disabled","printValue","validateWriteData","addHistoryState","max_size","restoreNextHistoryState","restoreNextMixerHistoryState","restorePreviousHistoryState","restorePreviousMixerHistoryState","getFirstWarpSystem","getFirstWeftSystem","weftSystemIsVisible","warpSystemIsVisible","getNextWarpSystemFrom","getNextWeftSystemFrom","getNextWarpSystem","system_id","getNextWeftSystem","getWeftSystemCode","system","getWarpSystemCode","DraftNodeProxy","Drawdown","DynamicOperation","IOTuple","Loom","LoomSettings","Node","NodeComponentProxy","OpComponentProxy","Operation","OpInput","OpNode","OpParamVal","TreeNode","TreeNodeProxy","imageservice","systemsservice","getUniqueId","replaceOutdatedOps","correctedNodes","validateNodes","err_ops","removeOperationNode","cxns","getUnusuedConnections","removeNode","setOpParams","getOpNode","onDynanmicOperationParamChange","opid","param_id","param_type","opnode","op_name","loadOpData","cur_id","param_types","formatted_params","default_param_values","params_out","default_inlet_values","dynamic_inlets","on","updateLooms","loom_utils","setPreview","sd","preview","hostView","instance","setPreviewDraft","unsetPreview","hasPreview","getPreview","getPreviewComponent","getDirtyDrafts","loadDraftData","loadNode","prev_id","getConnectionsInvolving","getTreeNode","getInletOfCxn","op_id","cxn_id","getInputsWithNdx","sweepInlets","inputs_to_op","num_constant_inlets","missing_inlets","viewRefs","removeConnectionNode","setOpenConnection","getType","open_connection","hasOpenConnection","getOpenConnection","getComponent","unsetOpenConnection","setNodeComponent","getNode","setNodeViewRef","loadTreeNodeData","id_map","parent_id","output","createNode","getNodeIndex","getNodeIdList","getViewRef","getSubdraftParent","sd_id","hasParent","getNodeConnections","out_node","out_cxn","in_node","in_cxn","getNodesToUpdateOnMove","isMultipleParent","isSibling","getNonCxnOutputs","has_parents","is_child","canAcceptConnections","parent_op","is_already_connected","getInputsAtNdx","getInputs","has_room","upstream","getUpstreamOperations","no_circles","isParent","isSeedDraft","hasSingleChild","opHasHiddenChild","outs","child_id","areSiblings","a_id","b_id","atn","btn","getDownstreamOperations","getUpstreamDrafts","removeSubdraftNode","ops_in","getNonCxnInputs","cxns_in","cxns_out","getOutputs","ops_out","op_in_cxns","sds_in","sds_out","sds_out_cxns","inletid","getConnectionAtInlet","removeConnectionNodeById","removeNodeTreeAssociations","getNodesWithDependenciesSatisfied","dependency_nodes","ready","depends_on","needs","find_true","updateDraftsFromResults","cxn","addConnection","drafts_loaded","performTopLevelOps","top_level_nodes","performGenerationOps","op_node_list","needs_computing","op_fn_list","performOp","flat","needs_performing","isValidIOTuple","io","draft_tn","cxn_tn","all_inputs","flip_fns","draft_id_to_ndx","flipped_drafts","paraminputs","cleaned_inputs","draft_comps","getLooms","dns","getConnections","getOperations","getOpNodes","comps","to_delete","null_inputs","null_outputs","from_ndx","to_ndx","from_tn","to_tn","setSubdraftParent","sd_tn","op_tn","cxn_ndx_output","cxn_ndx_input","getConnectionComponentFromSubdraft","sd_node","cxn_node","connection","connectionAtInlet","non_cnx_inputs","match_from","getConnection","set_a","treenode_id","ip","set_b","combined","hasInput","id_list","getConnectionInput","hasNdx","stored_input","input_to_function","getOpComponentInputs","getOpInputs","node_list","getDraftInputs","getConnectionOutput","getDraftOutputs","input_ids","child","inlet_ndx","output_ids","getTopLevelOps","getTopLevelDrafts","getGenerationChildren","parents","print","gens","convertTreeToGenerations","subel","objs","savable","adjustTreadlingForSaving","tread","adjusted","loom_export","flip_fs","preloaded","setNodesClear","setDirty","setDraftClean","setDraftPattern","op_node","cleaned_params","param_template","HttpHeaders","deleteObject","getDownloadURL","uploadBytes","getMetadata","uploadBytesResumable","httpOptions","headers","createImageFromBlob","reader","FileReader","addEventListener","imageToShow","result","readAsDataURL","getHash","upload","onload","ret","uintArBuff","subtle","digest","base64","btoa","byte","readAsArrayBuffer","uploadData","storage","storageRef","uploadTask","snapshot","progress","bytesTransferred","totalBytes","pushUpload","hash","alreadyLoaded","already_loaded","xhr","XMLHttpRequest","blob","response","send","deleteUpload","desertRef","mean","std","getModel","models","printDecoder","collection","decoder","cleanDraft","std_dev","mean_val","thresholded_draft","parse","view","show_errors","show_materials","black_cell_up","number_threading","use_colors_on_mixer","file_favorites","origin_option_list","isFavorite","onSubmit","formData","Location","location","ngAfterViewInit","openAboutDialog","collapse","collapsed","onCollapseSidebar","drawer","ElementRef","Upload","imageService","detectFiles","selectedFiles","uploadAda","onData","uploading","uploadImage","uploaded","onError","uploadBitmap","fileType","fileName","$key","createdAt","uploadBitmaps","uploads","upload_arr","twod","bw_ndx","oned","functions","COMMA","ENTER","MatAutocomplete","ActionsComponent","getWarpSystems","idFromString","shuttleIdFromName","s_name","toLowerCase","localeCompare","shuttle_id","warp_sys_id","warpSystemCtrl","setValue","warpShuttleCtrl","weft_sys_id","weftSystemCtrl","weftShuttleCtrl","caller","sendUpdates","onUpdateWarpSystems","onUpdateWarpShuttles","onUpdateWeftSystems","onUpdateWeftShuttles","option","warp_id","weft_id","CrosssectionComponent","onLeaveTab","updateSelection","onDraftUpdated","initScene","isInit","redraw","ScrollDispatcher","DraftviewerComponent","SidebarComponent","SimulationComponent","DraftDetailComponent","scroll","scrollingSubscription","scrolled","onWindowScroll","scrollTop","measureScrollOffset","scrollLeft","weaveRef","reposition","tabChange","expandSimulation","sim_expanded","sbdiv","getElementById","display","dvdiv","expandViewer","viewer_expanded","loadDraft","clone_id","viewonly","loadNewDraft","onNewDraftLoaded","simRef","drawSimulation","newid","windowClosed","unsubscribe$","closeAllModals","sidebar","closeWeaverModals","viewChange","setCurrentView","onCloseDrawer","closeDrawer","is_dirty","designModeChange","unsetSelection","redrawSimulation","updateSimulation","onScroll","onMask","materialChange","shuttleColorChange","updateWarpSystems","updateWeftSystems","updateWarpShuttles","updateWeftShuttles","createShuttle","hideWarpSystem","showWarpSystem","hideWeftSystem","updateVisible","showWeftSystem","redrawLoomAndDraft","is_frame","globalLoomChange","notesChanged","renderChange","setZoom","rescale","getZoom","setFront","checked","toggleCollapsed","layerThresholdChange","changeLayerThreshold","warpThresholdChange","warp_threshold","changeWarpThreshold","WeaverViewComponent","SelectionComponent","fromEvent","DesignMode","Interlacement","LoomUtil","Cell","flag_recompute","flag_history","system_codes","canvasEl","draftContainer","divWesy","divWasy","divViewFrames","threadingCanvas","tieupsCanvas","treadlingCanvas","cxThreading","cxTreadling","cxTieups","getFlippedWarpNum","getFlippedWeftNum","weftnum","expand","onViewerExpanded","warp_num","weft_num","dims","getCellDims","clearSelection","unsetParameters","removeSubscription","setPosAndDraw","currentPos","editing_style","visibleRows","drawOnTreadling","drawOnTieups","drawOnThreading","drawOnDrawdown","onStart","screen_row","offsetY","screen_col","offsetX","localName","moveSubscription","onMove","tempPattern","shiftKey","onSelectDrag","onSelectStop","onSelectStart","lastPos","isSame","onEnd","onSelectionEnd","hold_copy_for_paste","copyArea","onNewSelection","getStartingRowScreenIndex","getStartingColIndex","getEndingRowScreenIndex","getEndingColIndex","screen_i","getWidth","getHeight","temp_copy","getTargetId","draft_row","temp_dd","drawWarpMaterialCell","lineWidth","drawWarpSelectorCell","drawWarpSystems","drawBlank","drawGrid","lineCap","beginPath","moveTo","lineTo","stroke","incrementWeftSystem","newSystem","incrementWeftMaterial","newShuttle","onDrawdownUpdated","incrementWarpSystem","incrementWarpMaterial","updates","base_dims","base_fill","beyond","isFront","drawCrossingCell","i_next","right_edge","right_bot_to_top","bottom_edge","bottom_bot_to_top","redrawRow","sys_id","scroll_top","scroll_left","container","transformOrigin","view_front","transform","redrawLoom","front","clearRect","recomputeLoom","drawDrawdown","getCurrentView","redrawDraft","redrawCrossings","flags","drawWarps","schematic","t","shadowColor","shadowOffsetX","shadowOffsetY","getNextVisibleRow","printPattern","translateThreadingRowForView","translateDrawdownRowForView","translateDrawdownColForView","insertRow","cloneRow","deleteRow","insertCol","cloneCol","deleteCol","isLastCol","isLastRow","onClear","pasteViaOperation","adj_start_i","adj_end_i","flipped_draft","finalres","onPaste","loom_util","assigned_to","onCopy","swapEditingStyle","frameChange","treadleChange","hide_options","hide_parent","hide_actions","force_height","force_width","screen_height","screen_width","selectionEl","designActionChange","action","clearEvent","copyEvent","pasteEvent","fillEvent","onFill","recalculateSize","onSelectCancel","getStartingRowIndex","setEnd","setStart","hasSelection","getTop","getLeft","setTarget","getTarget","top_ndx","left_ndx","in_div_top","in_div_left","abs_top","offsetTop","abs_left","offsetLeft","current_view","getTextInterval","isYarnBasedView","InkService","is","select","onDesignModeChange","createNewDraft","closeDetailView","actions_modal","componentInstance","weaver_view_modal","shapeChange","drawModeChange","drawWithMaterial","zoomChange","onZoomChange","viewFront","onViewFront","onViewChange","visibleButton","onShowWeftSystem","systemId","onHideWeftSystem","onShowWarpSystem","onHideWarpSystem","openWeaverView","disableClose","maxWidth","hasBackdrop","openActions","undoClicked","redoClicked","inkChanged","addNote","onNoteCreate","onLocalLoomNeedsRedraw","onOperationAdded","onImport","onViewPortMove","onMLChange","simulation","onResize","onWindowResize","div","WebGLRenderer","Scene","setSize","offsetWidth","offsetHeight","appendChild","calcDefaultLayerSpacing","max_weft","max_warp","current_simdata","showing_warps","showing_wefts","showing_warp_layer_map","showing_weft_layer_map","showing_topo","showing_draft","toggleWefts","toggleDraft","toggleWarps","toggleTopo","toggleWeftLayerView","toggleWarpLayerView","changeRadius","changeLayerSpacing","changeILaceWidth","changeILaceHeight","pageClose","onExpanded","ex_div","aspect","small_div","updateProjectionMatrix","toggleCrossingView","showOnly","OpsComponent","DesignComponent","op_desc","openBitmaps","onLoadDrafts","openOps","op_modal","addOperation","enableProdMode","MAT_TOOLTIP_DEFAULT_OPTIONS","FileObj","LoadResponse","SaveObj","PaletteComponent","MultiselectService","ViewportService","myCustomTooltipDefaults","showDelay","hideDelay","touchendHideDelay","disableTooltipInteractivity","vp","multiselect","fbauth","setAbsolute","initLoginLogoutSequence","manual_scroll","palette","handleWindowScroll","setScroll","delta","handleScroll","closeDetailViewer","show_details","details","comp","redrawExistingDraft","updateDownstream","addTimelineState","createSubDraftFromEditedDetail","new_topleft","setPosition","detailViewChange","addOp","isBlankWorkspace","searchParams","URLSearchParams","has","loadExampleAtURL","loadBlankFile","prepAndLoadFile","adafile","saveFile","insertPasteFile","processFileData","changeDesignmode","loadNewFile","loadFromDB","deleteCurrentFile","importNewFile","printTreeStatus","loadNodes","loadTreeNodes","tns","updated_tnp","input_list","input_in_map","output_list","output_map","new_tn","loading","entry_mapping","updateOrigin","images_to_load","internal_op","correctedOps","seednodes","seeds","sn","located_draft","seed_fns","seed","op_fns","loadSubDraft","loadOperation","loadConnection","np","loadDrafts","getTopLeft","max_h","cur_h","cur_w","zoom_factor","x_margin","y_margin","view_width","approx_w","loadresponse","lr","clearView","clearComponents","undo","redo","selections","copySelections","selected_nodes_copy","clearSelections","togglePanMode","designModeChanged","toggleSelectMode","operationAdded","link","getPrintableCanvas","clearCanvas","downloadVisibleDraftsAsWif","encodeURIComponent","downloadVisibleDraftsAsBmp","zoomChangeExternal","redrawAllSubdrafts","showDraftDetails","useValue","MixerViewComponent","SubdraftComponent","SnackbarComponent","MarqueeComponent","OperationComponent","ConnectionComponent","OpHelpModal","ImageComponent","NoteComponent","ParameterComponent","InletComponent","QuickopComponent","Bounds","Point","default_cell_size","vpchanged$","updateLocalDims","local_view","viewwindow","getAbsoluteWidth","cell_factor","getCx","offsetParent","updateViewPort","updateViewPortFromZoom","dragEnd","$event","dragStart","getMatrix","values","text_vals","numbers","dragMove","local","pointerOffsetInGlobal","op_description","op_application","is_dynamic_op","param_descriptions","dynamic_type","dynamic_param_name","startWith","DomSanitizer","sanatizer","opnames","displaynames","filteredOptions","myControl","valueChanges","pipe","_filter","searchOnly","filterValue","showDesc","app","createYoutubeEmbedLink","showCatDesc","embedcode","prefix","bypassSecurityTrustResourceUrl","addOpFromSearch","from_io","to_io","no_draw","show_disconnect","updatePathText","svg","connector","updateFromPosition","updateToPosition","drawConnection","disconnect","onConnectionRemoved","op_info","path_text","disableDrag","disable_drag","enableDrag","to_comp","b_to","ndx_in_list","left_offset","calculateBounds","from_comp","fromOpUpdate","fromDraftUpdate","op_comp","b_from","draft_comp","bottomright","orientation_x","orientation_y","stublength","connector_opening","connector_font_size","text_path_font_size","button_margin_left","button_margin_top","stroke_width","getZoomMax","innerHTML","show_path_text","fontSize","drawForPrint","getDraftId","setPositionAndSize","_scale","onDrag","default_cell","pointer","clientX","clientY","deleteNote","pointerPosition","relative","getBounds","adj","saveNoteText","show_url","enterUrl","colorChange","hidePreview","getContent","all_system_codes","number_opts","dynamic","parseDefaultInletValue","fc","inlet_desc","inlet_for_drafts","inlet_name","onInletLoaded","checkIfInletIsOpen","inlet_open","toggleVisibility","input_ndx","show_connection_name","onInputVisibilityChange","ndx_in_inlets","show","inputSelected","onInputSelected","removeConnectionTo","getInputName","inletChange","onInletChange","QueryList","operations","opdescriptions","drawImagePreview","viewInit","hasInlets","onOpLoaded","datastring","updatePositionFromChild","toggleParamsVisible","params_visible","toggleSelection","mousedown","stopPropagation","drop","input_id","onInputAdded","visibilityChange","resetVisibliity","ilet","inletComps","openHelpDialog","draft_node_in_id","image_param","onOperationParamChange","paramsComps","image_div","removeid","inletLoaded","deleteOp","duplicateOp","setRelativePosition","onOperationMove","point","onOperationMoveEnded","regexValidator","nameRe","globalRegex","test","forbiddenInput","numparam","boolparam","selectparam","fileparam","stringparam","paramid","hasError","clearImagePreview","has_image_preview","dims_div","max_dim","use_width","use_height","onFileUpload","ComponentFactoryResolver","ViewContainerRef","MatSnackBar","Note","LayersService","inks","resolver","_snackBar","shape_vtxs","pointer_events","scale_string","vc","clientWidth","clientHeight","active","unsubscribeFromAll","subdraftSubscriptions","operationSubscriptions","connectionSubscriptions","noteSubscriptions","resubscribe","setSubdraftSubscriptions","setOperationSubscriptions","removeFromViewContainer","setTopLeft","handlePan","handleScrollFromZoom","past_scroll_x","new_scroll_x","past_scroll_y","new_scroll_y","visible_drafts","opcomp","createOperation","performAndUpdateDownstream","pasteOperation","new_node","prev_zoom","startSnackBar","updateSnackBar","openFromComponent","snack_message","snack_bounds","snackBarAlert","duration","closeSnackBar","dismiss","onSubdraftDrop","subdraftDropped","bind","onSubdraftMove","subdraftMoved","onSubdraftStart","subdraftStarted","onDeleteCalled","onDeleteSubdraftCalled","onDuplicateCalled","onDuplicateSubdraftCalled","onConnectionStarted","onDesignAction","onSubdraftAction","onSubdraftViewChange","onNameChange","onSubdraftNameChange","onShowDetails","revealDraftDetails","onRevealDraftDetails","tl","resolveComponentFactory","notecomp","createComponent","setNoteSubscriptions","getCenterPoint","saveNote","createSubDraft","subdraft","getSelected","nodep","draftp","saved_scale","use_colors","topleft_ilace","adj_topleft","setConnectionSubscriptions","removeConnection","operationMoved","operationMoveEnded","operationParamChanged","onDeleteOperationCalled","onDuplicateOpCalled","connectionMade","updateVisibility","opCompLoaded","zndx","createLayer","tr","getTopRight","loaded_inputs","loaded","duplicateOperation","duplicated","createConnection","id_from","id_to","to_input_ids","addSubdraftFromDraft","pasteSubdraft","draftnode","removeSubdraft","delted_nodes","removeObj","removeOperation","drafts_out","createAndSetPreview","setAsPreview","removePreview","unfreezePaletteObjects","freezePaletteObjects","drawSelection","setLineDash","round","getRelativeInterlacement","i_offset","j_offset","rel","setCell","scratch_pad","computeCellColor","over","computeCellValue","getScratchpadProduct","selected_ink","new_tl","new_op","sd_draft","new_sd","orig_size","moving","selectionStarted","drawStarted","selecting_connection","processConnectionEnd","not_selected","shape_bounds","updateAttachedComponents","to_perform","connectionDragged","mouse","connectionEnded","calculateInitialLocaiton","default_height","parent_height","this_child","updated_point","el_draft","draft_ids","new_drafts","loads","new_cxns","from_node","to_node","all_cxns","subdraft_id","highlightPathToInlet","upstream_ops","upstream_drafts","upstream_cxn","op_children","all_ops","del","resetOpacity","visible_op","visible_op_inlet","cxn_comp","pasteConnection","panStarted","mouse_pos","last_point","shapeStarted","canvas_zndx","shapeDragged","ellipse","getScratchPadBounds","processDrawingEnd","corners","setWidth","innerWidth","setHeight","innerHeight","needs_init","draftcomp","updatePositionFromParent","ctrl","ctrlKey","mouseSelectingDraft","getSelectionBounds","processSelection","sc","follow","out_comp","ins","in_comp","paletteClicked","moveAllSelections","updateSelectionPositions","moving_id","getSelections","rel_pos","getRelativePosition","cur_pos","getNewPosition","preview_node","preview_draft","to_right","addObj","updatePoint","c1","c2","getCombinedDraft","primary","primary_draft","MAT_SNACK_BAR_DATA","_draft","_topleft","updateViewport","is_preview","tl_offset","draft_cell_size","calculateDefaultCellSize","draft_canvas","draft_cx","warp_data_canvas","warp_data_cx","after","nameFocusOut","offlet_left","total_width","child_container","rel_size","updateName","updateSize","toggleMultiSelection","rescaleForBitmap","connectionStarted","inkActionChange","endPosition","resolveNdxToPoint","resolvePointToNdx","coords","usecolor","forprint","drawWeftData","calculateCellSize","weft_systems_canvas","weft_mats_canvas","weft_systems_cx","weft_mats_cx","drawWarpData","warp_systems_canvas","warp_mats_canvas","warp_mats_cx","warp_systems_cx","num_cells","thiscontainer","minWidth","counter_limit","showhide","connectionClicked","has_active_connection","resetConnections","toggleDraftRendering","bitmap","nativeElement","finetune","uses_mask","getInks","selectedHasMask","getInk","clearLayers","getFrontLayer","updateSelectedStyles","comp_id","relative_position","classList","cxn_outs","clearAllStyles","selected_nodes","node_mirror","relevant_connection_ids","relevant_connection_nodes","mirror","all_nodes","absolute","move","bleh","getAbsoluteHeight","setViewportCenter","abs_topleft","zoom_table_ndx","num_steps","raw","zoom_min","zoom_step","zoom_table","manageZoomRounding","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","production","__NgCli_bootstrap_1","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[187]}